{
  "project": "eslint",
  "repo": "https://github.com/eslint/eslint.git",
  "type": "code analysis tool",
  "stars": "26k",
  "stableVersion": "v9.30.1",
  "description": "JavaScript linter",
  "category": "large",
  "emblematicFiles": {
    "coreFiles": [
      "lib/linter/linter.js",
      "lib/eslint/eslint.js",
      "lib/cli-engine/cli-engine.js"
    ],
    "architecturalFiles": [
      "lib/config/config-array-factory.js",
      "lib/rule-tester/rule-tester.js"
    ],
    "performanceCriticalFiles": [
      "lib/source-code/source-code.js",
      "lib/linter/node-event-generator.js"
    ],
    "complexAlgorithmFiles": [
      "lib/linter/code-path-analysis/code-path-analyzer.js",
      "lib/config/flat-config-array.js"
    ]
  },
  "analysis": {
    "context": {
      "project": {
        "name": "eslint",
        "path": ".",
        "version": "9.30.1",
        "repository": "eslint/eslint"
      },
      "analysis": {
        "timestamp": "2025-07-11T16:14:18.808Z",
        "durationMs": 78521,
        "toolVersion": "0.6.0",
        "filesAnalyzed": 1448
      }
    },
    "overview": {
      "grade": "F",
      "statistics": {
        "totalFiles": 1448,
        "totalLOC": 444017,
        "avgComplexity": 12.1,
        "avgLOC": 307,
        "avgDuplicationRatio": 0
      },
      "scores": {
        "complexity": 40,
        "duplication": 100,
        "maintainability": 51,
        "overall": 58
      },
      "summary": "415 critical files found requiring attention"
    },
    "details": [
      {
        "file": "Makefile.js",
        "metrics": {
          "complexity": 66,
          "loc": 780,
          "functionCount": 79,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.3
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.6
          }
        ],
        "healthScore": 0
      },
      {
        "file": "cypress.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 48,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 124,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "webpack.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 49,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "conf/default-cli-options.js",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "conf/ecma-version.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "conf/globals.js",
        "metrics": {
          "complexity": 1,
          "loc": 137,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "bin/eslint.js",
        "metrics": {
          "complexity": 14,
          "loc": 89,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 86
      },
      {
        "file": "docs/.eleventy.js",
        "metrics": {
          "complexity": 25,
          "loc": 392,
          "functionCount": 37,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.29,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.31
          }
        ],
        "healthScore": 31
      },
      {
        "file": "docs/postcss.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/api.js",
        "metrics": {
          "complexity": 2,
          "loc": 18,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 6,
          "instability": 0.45,
          "cohesionScore": 0.31,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/cli.js",
        "metrics": {
          "complexity": 110,
          "loc": 550,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 2,
          "instability": 0.83,
          "cohesionScore": 0.35,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.5
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.83
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/config-api.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/options.js",
        "metrics": {
          "complexity": 15,
          "loc": 418,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.39
          }
        ],
        "healthScore": 57
      },
      {
        "file": "lib/universal.js",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.33,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/unsupported-api.js",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 3,
          "instability": 0.57,
          "cohesionScore": 0.33,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/all-files-ignored.js",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/all-matched-files-ignored.js",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/config-file-missing.js",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/config-plugin-missing.js",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/config-serialize-function.js",
        "metrics": {
          "complexity": 4,
          "loc": 24,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/eslintrc-incompat.js",
        "metrics": {
          "complexity": 1,
          "loc": 78,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/eslintrc-plugins.js",
        "metrics": {
          "complexity": 4,
          "loc": 20,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/extend-config-missing.js",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/failed-to-read-json.js",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/file-not-found.js",
        "metrics": {
          "complexity": 2,
          "loc": 8,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/invalid-rule-options.js",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/invalid-rule-severity.js",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/no-config-found.js",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/plugin-conflict.js",
        "metrics": {
          "complexity": 2,
          "loc": 15,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/plugin-invalid.js",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/plugin-missing.js",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/print-config-with-directory-path.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/shared.js",
        "metrics": {
          "complexity": 2,
          "loc": 10,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "messages/whitespace-found.js",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tools/check-emfile-handling.js",
        "metrics": {
          "complexity": 8,
          "loc": 76,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tools/check-rule-examples.js",
        "metrics": {
          "complexity": 31,
          "loc": 235,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 1.24
          }
        ],
        "healthScore": 46
      },
      {
        "file": "tools/code-sample-minimizer.js",
        "metrics": {
          "complexity": 30,
          "loc": 155,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 50
      },
      {
        "file": "tools/config-rule.js",
        "metrics": {
          "complexity": 20,
          "loc": 146,
          "functionCount": 25,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 18,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tools/eslint-fuzzer.js",
        "metrics": {
          "complexity": 25,
          "loc": 177,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.33,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 18,
            "excessRatio": 1.39
          }
        ],
        "healthScore": 64
      },
      {
        "file": "tools/fetch-docs-links.js",
        "metrics": {
          "complexity": 7,
          "loc": 54,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tools/fuzzer-runner.js",
        "metrics": {
          "complexity": 2,
          "loc": 43,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.25,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tools/update-eslint-all.js",
        "metrics": {
          "complexity": 3,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tools/update-readme.js",
        "metrics": {
          "complexity": 2,
          "loc": 73,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tools/update-rule-type-headers.js",
        "metrics": {
          "complexity": 36,
          "loc": 224,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 1.44
          }
        ],
        "healthScore": 40
      },
      {
        "file": ".trunk/configs/svgo.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 15,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/tools/code-block-utils.js",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/tools/markdown-it-rule-example.js",
        "metrics": {
          "complexity": 6,
          "loc": 34,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/tools/prism-eslint-hook.js",
        "metrics": {
          "complexity": 53,
          "loc": 331,
          "functionCount": 21,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.22,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 2.12
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 250,
            "excessRatio": 1.32
          }
        ],
        "healthScore": 0
      },
      {
        "file": "docs/tools/validate-links.js",
        "metrics": {
          "complexity": 3,
          "loc": 47,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/base.js",
        "metrics": {
          "complexity": 1,
          "loc": 287,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.44
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/eslint-config-eslint/cjs.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/formatting.js",
        "metrics": {
          "complexity": 1,
          "loc": 133,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/nodejs.js",
        "metrics": {
          "complexity": 1,
          "loc": 35,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/cli-engine/cli-engine.js",
        "metrics": {
          "complexity": 106,
          "loc": 619,
          "functionCount": 40,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 3,
          "instability": 0.7,
          "cohesionScore": 0.48,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.3
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.06
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/cli-engine/file-enumerator.js",
        "metrics": {
          "complexity": 46,
          "loc": 278,
          "functionCount": 18,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.3
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.39
          }
        ],
        "healthScore": 14
      },
      {
        "file": "lib/cli-engine/hash.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 6,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/cli-engine/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.67,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/cli-engine/lint-result-cache.js",
        "metrics": {
          "complexity": 13,
          "loc": 92,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 88
      },
      {
        "file": "lib/cli-engine/load-rules.js",
        "metrics": {
          "complexity": 3,
          "loc": 19,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/config/config-loader.js",
        "metrics": {
          "complexity": 43,
          "loc": 369,
          "functionCount": 27,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.5,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.15
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.23
          }
        ],
        "healthScore": 7
      },
      {
        "file": "lib/config/config.js",
        "metrics": {
          "complexity": 73,
          "loc": 373,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 6,
          "instability": 0.33,
          "cohesionScore": 0.44,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.65
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.24
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/config/default-config.js",
        "metrics": {
          "complexity": 1,
          "loc": 48,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 4,
          "instability": 0.33,
          "cohesionScore": 0.29,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/config/flat-config-array.js",
        "metrics": {
          "complexity": 11,
          "loc": 90,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 5,
          "instability": 0.38,
          "cohesionScore": 0.67,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 92
      },
      {
        "file": "lib/config/flat-config-schema.js",
        "metrics": {
          "complexity": 57,
          "loc": 335,
          "functionCount": 28,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.33,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.85
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.12
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/eslint/eslint-helpers.js",
        "metrics": {
          "complexity": 104,
          "loc": 580,
          "functionCount": 41,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.33,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.2
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.93
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/eslint/eslint.js",
        "metrics": {
          "complexity": 101,
          "loc": 681,
          "functionCount": 43,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 5,
          "instability": 0.64,
          "cohesionScore": 0.37,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.05
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.27
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/eslint/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.67,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/eslint/legacy-eslint.js",
        "metrics": {
          "complexity": 99,
          "loc": 471,
          "functionCount": 31,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 5,
          "instability": 0.29,
          "cohesionScore": 0.33,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.95
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.57
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/linter/apply-disable-directives.js",
        "metrics": {
          "complexity": 52,
          "loc": 361,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.33,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.6
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/linter/esquery.js",
        "metrics": {
          "complexity": 30,
          "loc": 165,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 50
      },
      {
        "file": "lib/linter/file-context.js",
        "metrics": {
          "complexity": 1,
          "loc": 47,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/linter/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 11,
          "instability": 0.15,
          "cohesionScore": 0.67,
          "percentileUsageRank": 100,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/linter/interpolate.js",
        "metrics": {
          "complexity": 3,
          "loc": 21,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/linter/linter.js",
        "metrics": {
          "complexity": 261,
          "loc": 1812,
          "functionCount": 92,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 24,
          "incomingDependencies": 2,
          "instability": 0.92,
          "cohesionScore": 0.44,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 13.05
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.81
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/linter/report-translator.js",
        "metrics": {
          "complexity": 47,
          "loc": 237,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.56,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.35
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.19
          }
        ],
        "healthScore": 15
      },
      {
        "file": "lib/linter/rule-fixer.js",
        "metrics": {
          "complexity": 1,
          "loc": 48,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/linter/rules.js",
        "metrics": {
          "complexity": 5,
          "loc": 29,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.33,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/linter/source-code-fixer.js",
        "metrics": {
          "complexity": 18,
          "loc": 80,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 72
      },
      {
        "file": "lib/linter/source-code-traverser.js",
        "metrics": {
          "complexity": 24,
          "loc": 156,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 57
      },
      {
        "file": "lib/linter/source-code-visitor.js",
        "metrics": {
          "complexity": 4,
          "loc": 29,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/linter/timing.js",
        "metrics": {
          "complexity": 15,
          "loc": 92,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.33,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 84
      },
      {
        "file": "lib/linter/vfile.js",
        "metrics": {
          "complexity": 6,
          "loc": 30,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rule-tester/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 5,
          "instability": 0.17,
          "cohesionScore": 0.67,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rule-tester/rule-tester.js",
        "metrics": {
          "complexity": 127,
          "loc": 1069,
          "functionCount": 69,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 292,
          "instability": 0.03,
          "cohesionScore": 0.31,
          "percentileUsageRank": 100,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.35
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/services/parser-service.js",
        "metrics": {
          "complexity": 3,
          "loc": 31,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/services/processor-service.js",
        "metrics": {
          "complexity": 4,
          "loc": 48,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/services/suppressions-service.js",
        "metrics": {
          "complexity": 26,
          "loc": 163,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 55
      },
      {
        "file": "lib/services/warning-service.js",
        "metrics": {
          "complexity": 1,
          "loc": 36,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 9,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 100,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/accessor-pairs.js",
        "metrics": {
          "complexity": 48,
          "loc": 230,
          "functionCount": 19,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.4
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 13
      },
      {
        "file": "lib/rules/array-bracket-newline.js",
        "metrics": {
          "complexity": 23,
          "loc": 200,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 58
      },
      {
        "file": "lib/rules/array-bracket-spacing.js",
        "metrics": {
          "complexity": 32,
          "loc": 214,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 40
      },
      {
        "file": "lib/rules/array-callback-return.js",
        "metrics": {
          "complexity": 52,
          "loc": 340,
          "functionCount": 21,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.6
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/array-element-newline.js",
        "metrics": {
          "complexity": 34,
          "loc": 263,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.31
          }
        ],
        "healthScore": 34
      },
      {
        "file": "lib/rules/arrow-body-style.js",
        "metrics": {
          "complexity": 47,
          "loc": 336,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.35
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.12
          }
        ],
        "healthScore": 2
      },
      {
        "file": "lib/rules/arrow-parens.js",
        "metrics": {
          "complexity": 23,
          "loc": 163,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 58
      },
      {
        "file": "lib/rules/arrow-spacing.js",
        "metrics": {
          "complexity": 7,
          "loc": 134,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/block-scoped-var.js",
        "metrics": {
          "complexity": 4,
          "loc": 79,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/block-spacing.js",
        "metrics": {
          "complexity": 19,
          "loc": 144,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 70
      },
      {
        "file": "lib/rules/brace-style.js",
        "metrics": {
          "complexity": 26,
          "loc": 218,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.09
          }
        ],
        "healthScore": 48
      },
      {
        "file": "lib/rules/callback-return.js",
        "metrics": {
          "complexity": 27,
          "loc": 138,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          }
        ],
        "healthScore": 54
      },
      {
        "file": "lib/rules/camelcase.js",
        "metrics": {
          "complexity": 57,
          "loc": 271,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.85
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.35
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/capitalized-comments.js",
        "metrics": {
          "complexity": 25,
          "loc": 167,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 56
      },
      {
        "file": "lib/rules/class-methods-use-this.js",
        "metrics": {
          "complexity": 26,
          "loc": 158,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 55
      },
      {
        "file": "lib/rules/comma-dangle.js",
        "metrics": {
          "complexity": 42,
          "loc": 280,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.1
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 20
      },
      {
        "file": "lib/rules/comma-spacing.js",
        "metrics": {
          "complexity": 24,
          "loc": 144,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 57
      },
      {
        "file": "lib/rules/comma-style.js",
        "metrics": {
          "complexity": 42,
          "loc": 288,
          "functionCount": 18,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.1
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.44
          }
        ],
        "healthScore": 20
      },
      {
        "file": "lib/rules/complexity.js",
        "metrics": {
          "complexity": 18,
          "loc": 133,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.42,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 72
      },
      {
        "file": "lib/rules/computed-property-spacing.js",
        "metrics": {
          "complexity": 14,
          "loc": 181,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 86
      },
      {
        "file": "lib/rules/consistent-return.js",
        "metrics": {
          "complexity": 24,
          "loc": 151,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.42,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 57
      },
      {
        "file": "lib/rules/consistent-this.js",
        "metrics": {
          "complexity": 20,
          "loc": 115,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 68
      },
      {
        "file": "lib/rules/constructor-super.js",
        "metrics": {
          "complexity": 57,
          "loc": 256,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.85
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.28
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/curly.js",
        "metrics": {
          "complexity": 41,
          "loc": 295,
          "functionCount": 18,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.05
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.48
          }
        ],
        "healthScore": 21
      },
      {
        "file": "lib/rules/default-case-last.js",
        "metrics": {
          "complexity": 3,
          "loc": 34,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/default-case.js",
        "metrics": {
          "complexity": 7,
          "loc": 62,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/default-param-last.js",
        "metrics": {
          "complexity": 7,
          "loc": 52,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/dot-location.js",
        "metrics": {
          "complexity": 8,
          "loc": 101,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/dot-notation.js",
        "metrics": {
          "complexity": 29,
          "loc": 169,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.45
          }
        ],
        "healthScore": 51
      },
      {
        "file": "lib/rules/eol-last.js",
        "metrics": {
          "complexity": 10,
          "loc": 103,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/eqeqeq.js",
        "metrics": {
          "complexity": 22,
          "loc": 146,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 59
      },
      {
        "file": "lib/rules/for-direction.js",
        "metrics": {
          "complexity": 26,
          "loc": 111,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 55
      },
      {
        "file": "lib/rules/func-call-spacing.js",
        "metrics": {
          "complexity": 22,
          "loc": 202,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.01
          }
        ],
        "healthScore": 53
      },
      {
        "file": "lib/rules/func-name-matching.js",
        "metrics": {
          "complexity": 61,
          "loc": 253,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.05
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.26
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/func-names.js",
        "metrics": {
          "complexity": 32,
          "loc": 119,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 47
      },
      {
        "file": "lib/rules/func-style.js",
        "metrics": {
          "complexity": 40,
          "loc": 185,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2
          }
        ],
        "healthScore": 35
      },
      {
        "file": "lib/rules/function-call-argument-newline.js",
        "metrics": {
          "complexity": 10,
          "loc": 126,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/function-paren-newline.js",
        "metrics": {
          "complexity": 43,
          "loc": 286,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.15
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.43
          }
        ],
        "healthScore": 18
      },
      {
        "file": "lib/rules/generator-star-spacing.js",
        "metrics": {
          "complexity": 19,
          "loc": 174,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 70
      },
      {
        "file": "lib/rules/getter-return.js",
        "metrics": {
          "complexity": 22,
          "loc": 173,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 59
      },
      {
        "file": "lib/rules/global-require.js",
        "metrics": {
          "complexity": 8,
          "loc": 83,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/grouped-accessor-pairs.js",
        "metrics": {
          "complexity": 33,
          "loc": 141,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          }
        ],
        "healthScore": 46
      },
      {
        "file": "lib/rules/guard-for-in.js",
        "metrics": {
          "complexity": 15,
          "loc": 56,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 84
      },
      {
        "file": "lib/rules/handle-callback-err.js",
        "metrics": {
          "complexity": 7,
          "loc": 78,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/id-blacklist.js",
        "metrics": {
          "complexity": 34,
          "loc": 136,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          }
        ],
        "healthScore": 44
      },
      {
        "file": "lib/rules/id-denylist.js",
        "metrics": {
          "complexity": 32,
          "loc": 118,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 47
      },
      {
        "file": "lib/rules/id-length.js",
        "metrics": {
          "complexity": 27,
          "loc": 167,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.42,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          }
        ],
        "healthScore": 54
      },
      {
        "file": "lib/rules/id-match.js",
        "metrics": {
          "complexity": 62,
          "loc": 247,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.1
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.24
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/implicit-arrow-linebreak.js",
        "metrics": {
          "complexity": 8,
          "loc": 97,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/indent-legacy.js",
        "metrics": {
          "complexity": 185,
          "loc": 985,
          "functionCount": 44,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 9.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 3.28
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/indent.js",
        "metrics": {
          "complexity": 187,
          "loc": 1646,
          "functionCount": 91,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 9.35
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.65
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 320,
          "functionCount": 291,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 292,
          "incomingDependencies": 14,
          "instability": 0.95,
          "cohesionScore": 0.67,
          "percentileUsageRank": 100,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 80
      },
      {
        "file": "lib/rules/init-declarations.js",
        "metrics": {
          "complexity": 21,
          "loc": 125,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 59
      },
      {
        "file": "lib/rules/jsx-quotes.js",
        "metrics": {
          "complexity": 6,
          "loc": 93,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/key-spacing.js",
        "metrics": {
          "complexity": 65,
          "loc": 594,
          "functionCount": 28,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.42,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.98
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/keyword-spacing.js",
        "metrics": {
          "complexity": 77,
          "loc": 428,
          "functionCount": 35,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.85
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.43
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/line-comment-position.js",
        "metrics": {
          "complexity": 15,
          "loc": 129,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 84
      },
      {
        "file": "lib/rules/linebreak-style.js",
        "metrics": {
          "complexity": 6,
          "loc": 85,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/lines-around-comment.js",
        "metrics": {
          "complexity": 78,
          "loc": 397,
          "functionCount": 25,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.32
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/lines-around-directive.js",
        "metrics": {
          "complexity": 28,
          "loc": 167,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 52
      },
      {
        "file": "lib/rules/lines-between-class-members.js",
        "metrics": {
          "complexity": 23,
          "loc": 247,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.24
          }
        ],
        "healthScore": 49
      },
      {
        "file": "lib/rules/logical-assignment-operators.js",
        "metrics": {
          "complexity": 101,
          "loc": 508,
          "functionCount": 23,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.05
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.69
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/max-classes-per-file.js",
        "metrics": {
          "complexity": 6,
          "loc": 71,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/max-depth.js",
        "metrics": {
          "complexity": 8,
          "loc": 106,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/max-len.js",
        "metrics": {
          "complexity": 56,
          "loc": 321,
          "functionCount": 19,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.8
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/max-lines-per-function.js",
        "metrics": {
          "complexity": 31,
          "loc": 160,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.42,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          }
        ],
        "healthScore": 49
      },
      {
        "file": "lib/rules/max-lines.js",
        "metrics": {
          "complexity": 20,
          "loc": 127,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 68
      },
      {
        "file": "lib/rules/max-nested-callbacks.js",
        "metrics": {
          "complexity": 8,
          "loc": 70,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/max-params.js",
        "metrics": {
          "complexity": 12,
          "loc": 99,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.42,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 90
      },
      {
        "file": "lib/rules/max-statements-per-line.js",
        "metrics": {
          "complexity": 11,
          "loc": 157,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 92
      },
      {
        "file": "lib/rules/max-statements.js",
        "metrics": {
          "complexity": 13,
          "loc": 118,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.42,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 88
      },
      {
        "file": "lib/rules/multiline-comment-style.js",
        "metrics": {
          "complexity": 58,
          "loc": 498,
          "functionCount": 47,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.5,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.66
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/multiline-ternary.js",
        "metrics": {
          "complexity": 16,
          "loc": 223,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 68
      },
      {
        "file": "lib/rules/new-cap.js",
        "metrics": {
          "complexity": 24,
          "loc": 178,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 57
      },
      {
        "file": "lib/rules/new-parens.js",
        "metrics": {
          "complexity": 8,
          "loc": 90,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/newline-after-var.js",
        "metrics": {
          "complexity": 31,
          "loc": 174,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          }
        ],
        "healthScore": 49
      },
      {
        "file": "lib/rules/newline-before-return.js",
        "metrics": {
          "complexity": 18,
          "loc": 136,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 72
      },
      {
        "file": "lib/rules/newline-per-chained-call.js",
        "metrics": {
          "complexity": 13,
          "loc": 118,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 88
      },
      {
        "file": "lib/rules/no-alert.js",
        "metrics": {
          "complexity": 17,
          "loc": 91,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 74
      },
      {
        "file": "lib/rules/no-array-constructor.js",
        "metrics": {
          "complexity": 22,
          "loc": 128,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 59
      },
      {
        "file": "lib/rules/no-async-promise-executor.js",
        "metrics": {
          "complexity": 1,
          "loc": 32,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-await-in-loop.js",
        "metrics": {
          "complexity": 19,
          "loc": 66,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 70
      },
      {
        "file": "lib/rules/no-bitwise.js",
        "metrics": {
          "complexity": 8,
          "loc": 92,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-buffer-constructor.js",
        "metrics": {
          "complexity": 2,
          "loc": 54,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-caller.js",
        "metrics": {
          "complexity": 5,
          "loc": 36,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-case-declarations.js",
        "metrics": {
          "complexity": 7,
          "loc": 58,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-catch-shadow.js",
        "metrics": {
          "complexity": 3,
          "loc": 53,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-class-assign.js",
        "metrics": {
          "complexity": 1,
          "loc": 37,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-compare-neg-zero.js",
        "metrics": {
          "complexity": 7,
          "loc": 50,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-cond-assign.js",
        "metrics": {
          "complexity": 18,
          "loc": 110,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 72
      },
      {
        "file": "lib/rules/no-confusing-arrow.js",
        "metrics": {
          "complexity": 11,
          "loc": 89,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 92
      },
      {
        "file": "lib/rules/no-console.js",
        "metrics": {
          "complexity": 20,
          "loc": 123,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 68
      },
      {
        "file": "lib/rules/no-const-assign.js",
        "metrics": {
          "complexity": 2,
          "loc": 39,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-constant-binary-expression.js",
        "metrics": {
          "complexity": 145,
          "loc": 401,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 7.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.34
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-constant-condition.js",
        "metrics": {
          "complexity": 13,
          "loc": 103,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 88
      },
      {
        "file": "lib/rules/no-constructor-return.js",
        "metrics": {
          "complexity": 5,
          "loc": 43,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-continue.js",
        "metrics": {
          "complexity": 1,
          "loc": 23,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-control-regex.js",
        "metrics": {
          "complexity": 21,
          "loc": 98,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 59
      },
      {
        "file": "lib/rules/no-debugger.js",
        "metrics": {
          "complexity": 1,
          "loc": 26,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-delete-var.js",
        "metrics": {
          "complexity": 3,
          "loc": 27,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-div-regex.js",
        "metrics": {
          "complexity": 3,
          "loc": 42,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-dupe-args.js",
        "metrics": {
          "complexity": 3,
          "loc": 40,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-dupe-class-members.js",
        "metrics": {
          "complexity": 15,
          "loc": 76,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 84
      },
      {
        "file": "lib/rules/no-dupe-else-if.js",
        "metrics": {
          "complexity": 17,
          "loc": 89,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 74
      },
      {
        "file": "lib/rules/no-dupe-keys.js",
        "metrics": {
          "complexity": 15,
          "loc": 86,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 84
      },
      {
        "file": "lib/rules/no-duplicate-case.js",
        "metrics": {
          "complexity": 5,
          "loc": 47,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-duplicate-imports.js",
        "metrics": {
          "complexity": 47,
          "loc": 266,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.35
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 13
      },
      {
        "file": "lib/rules/no-else-return.js",
        "metrics": {
          "complexity": 45,
          "loc": 239,
          "functionCount": 24,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.25
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 18
      },
      {
        "file": "lib/rules/no-empty-character-class.js",
        "metrics": {
          "complexity": 5,
          "loc": 53,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-empty-function.js",
        "metrics": {
          "complexity": 28,
          "loc": 144,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 52
      },
      {
        "file": "lib/rules/no-empty-pattern.js",
        "metrics": {
          "complexity": 9,
          "loc": 65,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-empty-static-block.js",
        "metrics": {
          "complexity": 3,
          "loc": 33,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-empty.js",
        "metrics": {
          "complexity": 8,
          "loc": 86,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-eq-null.js",
        "metrics": {
          "complexity": 8,
          "loc": 34,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-eval.js",
        "metrics": {
          "complexity": 27,
          "loc": 176,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          }
        ],
        "healthScore": 54
      },
      {
        "file": "lib/rules/no-ex-assign.js",
        "metrics": {
          "complexity": 1,
          "loc": 34,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-extend-native.js",
        "metrics": {
          "complexity": 16,
          "loc": 106,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 76
      },
      {
        "file": "lib/rules/no-extra-bind.js",
        "metrics": {
          "complexity": 13,
          "loc": 122,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 88
      },
      {
        "file": "lib/rules/no-extra-boolean-cast.js",
        "metrics": {
          "complexity": 66,
          "loc": 290,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.3
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.45
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-extra-label.js",
        "metrics": {
          "complexity": 13,
          "loc": 108,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 88
      },
      {
        "file": "lib/rules/no-extra-parens.js",
        "metrics": {
          "complexity": 298,
          "loc": 1210,
          "functionCount": 85,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 14.9
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.21
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-extra-semi.js",
        "metrics": {
          "complexity": 8,
          "loc": 100,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-fallthrough.js",
        "metrics": {
          "complexity": 23,
          "loc": 175,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.33,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 58
      },
      {
        "file": "lib/rules/no-floating-decimal.js",
        "metrics": {
          "complexity": 7,
          "loc": 77,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-func-assign.js",
        "metrics": {
          "complexity": 2,
          "loc": 42,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-global-assign.js",
        "metrics": {
          "complexity": 7,
          "loc": 64,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-implicit-coercion.js",
        "metrics": {
          "complexity": 83,
          "loc": 307,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.15
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.02
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-implicit-globals.js",
        "metrics": {
          "complexity": 21,
          "loc": 146,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 59
      },
      {
        "file": "lib/rules/no-implied-eval.js",
        "metrics": {
          "complexity": 18,
          "loc": 110,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 72
      },
      {
        "file": "lib/rules/no-import-assign.js",
        "metrics": {
          "complexity": 41,
          "loc": 139,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.05
          }
        ],
        "healthScore": 33
      },
      {
        "file": "lib/rules/no-inline-comments.js",
        "metrics": {
          "complexity": 13,
          "loc": 77,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 88
      },
      {
        "file": "lib/rules/no-inner-declarations.js",
        "metrics": {
          "complexity": 13,
          "loc": 102,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 88
      },
      {
        "file": "lib/rules/no-invalid-regexp.js",
        "metrics": {
          "complexity": 26,
          "loc": 157,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 55
      },
      {
        "file": "lib/rules/no-invalid-this.js",
        "metrics": {
          "complexity": 13,
          "loc": 112,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 88
      },
      {
        "file": "lib/rules/no-irregular-whitespace.js",
        "metrics": {
          "complexity": 22,
          "loc": 182,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 59
      },
      {
        "file": "lib/rules/no-iterator.js",
        "metrics": {
          "complexity": 2,
          "loc": 28,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-label-var.js",
        "metrics": {
          "complexity": 2,
          "loc": 35,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-labels.js",
        "metrics": {
          "complexity": 13,
          "loc": 106,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 88
      },
      {
        "file": "lib/rules/no-lone-blocks.js",
        "metrics": {
          "complexity": 20,
          "loc": 93,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 68
      },
      {
        "file": "lib/rules/no-lonely-if.js",
        "metrics": {
          "complexity": 18,
          "loc": 97,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 72
      },
      {
        "file": "lib/rules/no-loop-func.js",
        "metrics": {
          "complexity": 42,
          "loc": 157,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.1
          }
        ],
        "healthScore": 32
      },
      {
        "file": "lib/rules/no-loss-of-precision.js",
        "metrics": {
          "complexity": 17,
          "loc": 136,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 74
      },
      {
        "file": "lib/rules/no-magic-numbers.js",
        "metrics": {
          "complexity": 47,
          "loc": 233,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.35
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.17
          }
        ],
        "healthScore": 15
      },
      {
        "file": "lib/rules/no-misleading-character-class.js",
        "metrics": {
          "complexity": 86,
          "loc": 426,
          "functionCount": 22,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.47,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.3
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.42
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-mixed-operators.js",
        "metrics": {
          "complexity": 16,
          "loc": 161,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 76
      },
      {
        "file": "lib/rules/no-mixed-requires.js",
        "metrics": {
          "complexity": 22,
          "loc": 187,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 59
      },
      {
        "file": "lib/rules/no-mixed-spaces-and-tabs.js",
        "metrics": {
          "complexity": 10,
          "loc": 108,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-multi-assign.js",
        "metrics": {
          "complexity": 2,
          "loc": 48,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-multi-spaces.js",
        "metrics": {
          "complexity": 16,
          "loc": 138,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 76
      },
      {
        "file": "lib/rules/no-multi-str.js",
        "metrics": {
          "complexity": 3,
          "loc": 36,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-multiple-empty-lines.js",
        "metrics": {
          "complexity": 13,
          "loc": 166,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 88
      },
      {
        "file": "lib/rules/no-native-reassign.js",
        "metrics": {
          "complexity": 9,
          "loc": 76,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-negated-condition.js",
        "metrics": {
          "complexity": 9,
          "loc": 57,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-negated-in-lhs.js",
        "metrics": {
          "complexity": 4,
          "loc": 43,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-nested-ternary.js",
        "metrics": {
          "complexity": 3,
          "loc": 31,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-new-func.js",
        "metrics": {
          "complexity": 14,
          "loc": 66,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 86
      },
      {
        "file": "lib/rules/no-new-native-nonconstructor.js",
        "metrics": {
          "complexity": 7,
          "loc": 46,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-new-object.js",
        "metrics": {
          "complexity": 4,
          "loc": 51,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-new-require.js",
        "metrics": {
          "complexity": 3,
          "loc": 50,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-new-symbol.js",
        "metrics": {
          "complexity": 6,
          "loc": 54,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-new-wrappers.js",
        "metrics": {
          "complexity": 4,
          "loc": 39,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-new.js",
        "metrics": {
          "complexity": 1,
          "loc": 26,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-nonoctal-decimal-escape.js",
        "metrics": {
          "complexity": 5,
          "loc": 114,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-obj-calls.js",
        "metrics": {
          "complexity": 6,
          "loc": 64,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-object-constructor.js",
        "metrics": {
          "complexity": 11,
          "loc": 83,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 92
      },
      {
        "file": "lib/rules/no-octal-escape.js",
        "metrics": {
          "complexity": 3,
          "loc": 35,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-octal.js",
        "metrics": {
          "complexity": 3,
          "loc": 30,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-param-reassign.js",
        "metrics": {
          "complexity": 36,
          "loc": 167,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.8
          }
        ],
        "healthScore": 41
      },
      {
        "file": "lib/rules/no-path-concat.js",
        "metrics": {
          "complexity": 6,
          "loc": 57,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-plusplus.js",
        "metrics": {
          "complexity": 5,
          "loc": 59,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-process-env.js",
        "metrics": {
          "complexity": 5,
          "loc": 51,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-process-exit.js",
        "metrics": {
          "complexity": 1,
          "loc": 47,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-promise-executor-return.js",
        "metrics": {
          "complexity": 26,
          "loc": 176,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 55
      },
      {
        "file": "lib/rules/no-proto.js",
        "metrics": {
          "complexity": 2,
          "loc": 25,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-prototype-builtins.js",
        "metrics": {
          "complexity": 14,
          "loc": 115,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 86
      },
      {
        "file": "lib/rules/no-redeclare.js",
        "metrics": {
          "complexity": 16,
          "loc": 107,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 76
      },
      {
        "file": "lib/rules/no-regex-spaces.js",
        "metrics": {
          "complexity": 17,
          "loc": 143,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 74
      },
      {
        "file": "lib/rules/no-restricted-exports.js",
        "metrics": {
          "complexity": 28,
          "loc": 180,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 52
      },
      {
        "file": "lib/rules/no-restricted-globals.js",
        "metrics": {
          "complexity": 9,
          "loc": 104,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-restricted-imports.js",
        "metrics": {
          "complexity": 71,
          "loc": 570,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.55
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.9
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-restricted-modules.js",
        "metrics": {
          "complexity": 23,
          "loc": 176,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 58
      },
      {
        "file": "lib/rules/no-restricted-properties.js",
        "metrics": {
          "complexity": 23,
          "loc": 188,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 58
      },
      {
        "file": "lib/rules/no-restricted-syntax.js",
        "metrics": {
          "complexity": 4,
          "loc": 57,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-return-assign.js",
        "metrics": {
          "complexity": 10,
          "loc": 56,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-return-await.js",
        "metrics": {
          "complexity": 20,
          "loc": 114,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 68
      },
      {
        "file": "lib/rules/no-script-url.js",
        "metrics": {
          "complexity": 7,
          "loc": 44,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-self-assign.js",
        "metrics": {
          "complexity": 35,
          "loc": 127,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          }
        ],
        "healthScore": 43
      },
      {
        "file": "lib/rules/no-self-compare.js",
        "metrics": {
          "complexity": 5,
          "loc": 51,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-sequences.js",
        "metrics": {
          "complexity": 16,
          "loc": 96,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 76
      },
      {
        "file": "lib/rules/no-setter-return.js",
        "metrics": {
          "complexity": 25,
          "loc": 135,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 56
      },
      {
        "file": "lib/rules/no-shadow-restricted-names.js",
        "metrics": {
          "complexity": 11,
          "loc": 83,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 92
      },
      {
        "file": "lib/rules/no-shadow.js",
        "metrics": {
          "complexity": 97,
          "loc": 405,
          "functionCount": 28,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.85
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.35
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-spaced-func.js",
        "metrics": {
          "complexity": 7,
          "loc": 76,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-sparse-arrays.js",
        "metrics": {
          "complexity": 6,
          "loc": 44,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-sync.js",
        "metrics": {
          "complexity": 3,
          "loc": 63,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-tabs.js",
        "metrics": {
          "complexity": 6,
          "loc": 87,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-template-curly-in-string.js",
        "metrics": {
          "complexity": 3,
          "loc": 30,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-ternary.js",
        "metrics": {
          "complexity": 1,
          "loc": 23,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-this-before-super.js",
        "metrics": {
          "complexity": 30,
          "loc": 187,
          "functionCount": 22,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 50
      },
      {
        "file": "lib/rules/no-throw-literal.js",
        "metrics": {
          "complexity": 4,
          "loc": 30,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-trailing-spaces.js",
        "metrics": {
          "complexity": 18,
          "loc": 142,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 72
      },
      {
        "file": "lib/rules/no-unassigned-vars.js",
        "metrics": {
          "complexity": 11,
          "loc": 64,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 92
      },
      {
        "file": "lib/rules/no-undef-init.js",
        "metrics": {
          "complexity": 10,
          "loc": 69,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-undef.js",
        "metrics": {
          "complexity": 4,
          "loc": 55,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-undefined.js",
        "metrics": {
          "complexity": 3,
          "loc": 48,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-underscore-dangle.js",
        "metrics": {
          "complexity": 47,
          "loc": 270,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.35
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.35
          }
        ],
        "healthScore": 12
      },
      {
        "file": "lib/rules/no-unexpected-multiline.js",
        "metrics": {
          "complexity": 10,
          "loc": 89,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-unmodified-loop-condition.js",
        "metrics": {
          "complexity": 35,
          "loc": 187,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.42,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          }
        ],
        "healthScore": 43
      },
      {
        "file": "lib/rules/no-unneeded-ternary.js",
        "metrics": {
          "complexity": 21,
          "loc": 175,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 59
      },
      {
        "file": "lib/rules/no-unreachable-loop.js",
        "metrics": {
          "complexity": 16,
          "loc": 116,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 76
      },
      {
        "file": "lib/rules/no-unreachable.js",
        "metrics": {
          "complexity": 21,
          "loc": 176,
          "functionCount": 22,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 59
      },
      {
        "file": "lib/rules/no-unsafe-finally.js",
        "metrics": {
          "complexity": 14,
          "loc": 79,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 86
      },
      {
        "file": "lib/rules/no-unsafe-negation.js",
        "metrics": {
          "complexity": 11,
          "loc": 104,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 92
      },
      {
        "file": "lib/rules/no-unsafe-optional-chaining.js",
        "metrics": {
          "complexity": 25,
          "loc": 172,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 56
      },
      {
        "file": "lib/rules/no-unused-expressions.js",
        "metrics": {
          "complexity": 15,
          "loc": 162,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 84
      },
      {
        "file": "lib/rules/no-unused-labels.js",
        "metrics": {
          "complexity": 15,
          "loc": 95,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 84
      },
      {
        "file": "lib/rules/no-unused-private-class-members.js",
        "metrics": {
          "complexity": 29,
          "loc": 133,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.45
          }
        ],
        "healthScore": 51
      },
      {
        "file": "lib/rules/no-unused-vars.js",
        "metrics": {
          "complexity": 241,
          "loc": 1078,
          "functionCount": 52,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 12.05
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.08
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-use-before-define.js",
        "metrics": {
          "complexity": 63,
          "loc": 255,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.15
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-useless-assignment.js",
        "metrics": {
          "complexity": 73,
          "loc": 390,
          "functionCount": 27,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.65
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-useless-backreference.js",
        "metrics": {
          "complexity": 23,
          "loc": 180,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 58
      },
      {
        "file": "lib/rules/no-useless-call.js",
        "metrics": {
          "complexity": 12,
          "loc": 57,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 90
      },
      {
        "file": "lib/rules/no-useless-catch.js",
        "metrics": {
          "complexity": 8,
          "loc": 42,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-useless-computed-key.js",
        "metrics": {
          "complexity": 19,
          "loc": 123,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 70
      },
      {
        "file": "lib/rules/no-useless-concat.js",
        "metrics": {
          "complexity": 9,
          "loc": 66,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-useless-constructor.js",
        "metrics": {
          "complexity": 34,
          "loc": 146,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          }
        ],
        "healthScore": 44
      },
      {
        "file": "lib/rules/no-useless-escape.js",
        "metrics": {
          "complexity": 43,
          "loc": 282,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.15
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.41
          }
        ],
        "healthScore": 19
      },
      {
        "file": "lib/rules/no-useless-rename.js",
        "metrics": {
          "complexity": 22,
          "loc": 131,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 59
      },
      {
        "file": "lib/rules/no-useless-return.js",
        "metrics": {
          "complexity": 31,
          "loc": 244,
          "functionCount": 24,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.22
          }
        ],
        "healthScore": 40
      },
      {
        "file": "lib/rules/no-var.js",
        "metrics": {
          "complexity": 39,
          "loc": 175,
          "functionCount": 23,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.5,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.95
          }
        ],
        "healthScore": 37
      },
      {
        "file": "lib/rules/no-void.js",
        "metrics": {
          "complexity": 4,
          "loc": 49,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-warning-comments.js",
        "metrics": {
          "complexity": 12,
          "loc": 123,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 90
      },
      {
        "file": "lib/rules/no-whitespace-before-property.js",
        "metrics": {
          "complexity": 11,
          "loc": 100,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 92
      },
      {
        "file": "lib/rules/no-with.js",
        "metrics": {
          "complexity": 1,
          "loc": 22,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/nonblock-statement-body-position.js",
        "metrics": {
          "complexity": 14,
          "loc": 120,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 86
      },
      {
        "file": "lib/rules/object-curly-newline.js",
        "metrics": {
          "complexity": 37,
          "loc": 280,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.85
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 28
      },
      {
        "file": "lib/rules/object-curly-spacing.js",
        "metrics": {
          "complexity": 27,
          "loc": 249,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 44
      },
      {
        "file": "lib/rules/object-property-newline.js",
        "metrics": {
          "complexity": 10,
          "loc": 124,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/object-shorthand.js",
        "metrics": {
          "complexity": 81,
          "loc": 452,
          "functionCount": 31,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.05
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.51
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/one-var-declaration-per-line.js",
        "metrics": {
          "complexity": 9,
          "loc": 76,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/one-var.js",
        "metrics": {
          "complexity": 92,
          "loc": 511,
          "functionCount": 19,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.6
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.7
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/operator-assignment.js",
        "metrics": {
          "complexity": 25,
          "loc": 186,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 56
      },
      {
        "file": "lib/rules/operator-linebreak.js",
        "metrics": {
          "complexity": 35,
          "loc": 232,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.16
          }
        ],
        "healthScore": 35
      },
      {
        "file": "lib/rules/padded-blocks.js",
        "metrics": {
          "complexity": 33,
          "loc": 279,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 34
      },
      {
        "file": "lib/rules/padding-line-between-statements.js",
        "metrics": {
          "complexity": 46,
          "loc": 362,
          "functionCount": 33,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.3
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.21
          }
        ],
        "healthScore": 2
      },
      {
        "file": "lib/rules/prefer-arrow-callback.js",
        "metrics": {
          "complexity": 60,
          "loc": 276,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.38
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/prefer-const.js",
        "metrics": {
          "complexity": 75,
          "loc": 328,
          "functionCount": 27,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.75
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.09
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/prefer-destructuring.js",
        "metrics": {
          "complexity": 31,
          "loc": 201,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1
          }
        ],
        "healthScore": 42
      },
      {
        "file": "lib/rules/prefer-exponentiation-operator.js",
        "metrics": {
          "complexity": 32,
          "loc": 164,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 47
      },
      {
        "file": "lib/rules/prefer-named-capture-group.js",
        "metrics": {
          "complexity": 16,
          "loc": 137,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 76
      },
      {
        "file": "lib/rules/prefer-numeric-literals.js",
        "metrics": {
          "complexity": 16,
          "loc": 96,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 76
      },
      {
        "file": "lib/rules/prefer-object-has-own.js",
        "metrics": {
          "complexity": 18,
          "loc": 105,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 72
      },
      {
        "file": "lib/rules/prefer-object-spread.js",
        "metrics": {
          "complexity": 41,
          "loc": 204,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.05
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.02
          }
        ],
        "healthScore": 27
      },
      {
        "file": "lib/rules/prefer-promise-reject-errors.js",
        "metrics": {
          "complexity": 15,
          "loc": 93,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 84
      },
      {
        "file": "lib/rules/prefer-reflect.js",
        "metrics": {
          "complexity": 11,
          "loc": 121,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 92
      },
      {
        "file": "lib/rules/prefer-regex-literals.js",
        "metrics": {
          "complexity": 68,
          "loc": 448,
          "functionCount": 22,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.4
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.49
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/prefer-rest-params.js",
        "metrics": {
          "complexity": 7,
          "loc": 58,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/prefer-spread.js",
        "metrics": {
          "complexity": 8,
          "loc": 54,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/prefer-template.js",
        "metrics": {
          "complexity": 36,
          "loc": 218,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.8
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.09
          }
        ],
        "healthScore": 34
      },
      {
        "file": "lib/rules/quote-props.js",
        "metrics": {
          "complexity": 65,
          "loc": 309,
          "functionCount": 21,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.03
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/quotes.js",
        "metrics": {
          "complexity": 58,
          "loc": 281,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.9
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.41
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/radix.js",
        "metrics": {
          "complexity": 25,
          "loc": 140,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 56
      },
      {
        "file": "lib/rules/require-atomic-updates.js",
        "metrics": {
          "complexity": 43,
          "loc": 245,
          "functionCount": 19,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.15
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.23
          }
        ],
        "healthScore": 21
      },
      {
        "file": "lib/rules/require-await.js",
        "metrics": {
          "complexity": 19,
          "loc": 114,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 70
      },
      {
        "file": "lib/rules/require-unicode-regexp.js",
        "metrics": {
          "complexity": 33,
          "loc": 261,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 36
      },
      {
        "file": "lib/rules/require-yield.js",
        "metrics": {
          "complexity": 6,
          "loc": 43,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/rest-spread-spacing.js",
        "metrics": {
          "complexity": 12,
          "loc": 119,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 90
      },
      {
        "file": "lib/rules/semi-spacing.js",
        "metrics": {
          "complexity": 22,
          "loc": 210,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 52
      },
      {
        "file": "lib/rules/semi-style.js",
        "metrics": {
          "complexity": 32,
          "loc": 161,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 47
      },
      {
        "file": "lib/rules/semi.js",
        "metrics": {
          "complexity": 64,
          "loc": 315,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.2
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/sort-imports.js",
        "metrics": {
          "complexity": 25,
          "loc": 246,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.23
          }
        ],
        "healthScore": 47
      },
      {
        "file": "lib/rules/sort-keys.js",
        "metrics": {
          "complexity": 26,
          "loc": 198,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 55
      },
      {
        "file": "lib/rules/sort-vars.js",
        "metrics": {
          "complexity": 8,
          "loc": 112,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/space-before-blocks.js",
        "metrics": {
          "complexity": 21,
          "loc": 170,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 59
      },
      {
        "file": "lib/rules/space-before-function-paren.js",
        "metrics": {
          "complexity": 22,
          "loc": 154,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 59
      },
      {
        "file": "lib/rules/space-in-parens.js",
        "metrics": {
          "complexity": 33,
          "loc": 275,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.38
          }
        ],
        "healthScore": 35
      },
      {
        "file": "lib/rules/space-infix-ops.js",
        "metrics": {
          "complexity": 19,
          "loc": 174,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 70
      },
      {
        "file": "lib/rules/space-unary-ops.js",
        "metrics": {
          "complexity": 33,
          "loc": 285,
          "functionCount": 18,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.43
          }
        ],
        "healthScore": 34
      },
      {
        "file": "lib/rules/spaced-comment.js",
        "metrics": {
          "complexity": 36,
          "loc": 140,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.8
          }
        ],
        "healthScore": 41
      },
      {
        "file": "lib/rules/strict.js",
        "metrics": {
          "complexity": 33,
          "loc": 195,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          }
        ],
        "healthScore": 46
      },
      {
        "file": "lib/rules/switch-colon-spacing.js",
        "metrics": {
          "complexity": 10,
          "loc": 112,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/symbol-description.js",
        "metrics": {
          "complexity": 5,
          "loc": 42,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/template-curly-spacing.js",
        "metrics": {
          "complexity": 13,
          "loc": 125,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 88
      },
      {
        "file": "lib/rules/template-tag-spacing.js",
        "metrics": {
          "complexity": 6,
          "loc": 93,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/unicode-bom.js",
        "metrics": {
          "complexity": 5,
          "loc": 53,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/use-isnan.js",
        "metrics": {
          "complexity": 28,
          "loc": 187,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 52
      },
      {
        "file": "lib/rules/valid-typeof.js",
        "metrics": {
          "complexity": 18,
          "loc": 127,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 72
      },
      {
        "file": "lib/rules/vars-on-top.js",
        "metrics": {
          "complexity": 24,
          "loc": 98,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 57
      },
      {
        "file": "lib/rules/wrap-iife.js",
        "metrics": {
          "complexity": 21,
          "loc": 154,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 59
      },
      {
        "file": "lib/rules/wrap-regex.js",
        "metrics": {
          "complexity": 8,
          "loc": 72,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/yield-star-spacing.js",
        "metrics": {
          "complexity": 12,
          "loc": 121,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 90
      },
      {
        "file": "lib/rules/yoda.js",
        "metrics": {
          "complexity": 47,
          "loc": 234,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.35
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.17
          }
        ],
        "healthScore": 15
      },
      {
        "file": "lib/shared/ajv.js",
        "metrics": {
          "complexity": 1,
          "loc": 17,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/shared/assert.js",
        "metrics": {
          "complexity": 2,
          "loc": 7,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/shared/ast-utils.js",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 6,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/shared/deep-merge-arrays.js",
        "metrics": {
          "complexity": 13,
          "loc": 31,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 88
      },
      {
        "file": "lib/shared/directives.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/shared/flags.js",
        "metrics": {
          "complexity": 3,
          "loc": 67,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/shared/logging.js",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/shared/naming.js",
        "metrics": {
          "complexity": 11,
          "loc": 57,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 92
      },
      {
        "file": "lib/shared/option-utils.js",
        "metrics": {
          "complexity": 11,
          "loc": 42,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 92
      },
      {
        "file": "lib/shared/relative-module-resolver.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/shared/runtime-info.js",
        "metrics": {
          "complexity": 15,
          "loc": 93,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 84
      },
      {
        "file": "lib/shared/serialization.js",
        "metrics": {
          "complexity": 17,
          "loc": 45,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 74
      },
      {
        "file": "lib/shared/severity.js",
        "metrics": {
          "complexity": 7,
          "loc": 29,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/shared/stats.js",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/shared/string-utils.js",
        "metrics": {
          "complexity": 4,
          "loc": 24,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 8,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/shared/text-table.js",
        "metrics": {
          "complexity": 5,
          "loc": 30,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/shared/traverser.js",
        "metrics": {
          "complexity": 17,
          "loc": 96,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 74
      },
      {
        "file": "lib/types/config-api.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/types/index.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1577,
          "functionCount": 55,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.58
          }
        ],
        "healthScore": 51
      },
      {
        "file": "lib/types/rules.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1839,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.84
          }
        ],
        "healthScore": 48
      },
      {
        "file": "lib/types/universal.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/types/use-at-your-own-risk.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 40,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/bench/large.js",
        "metrics": {
          "complexity": 2110,
          "loc": 16970,
          "functionCount": 558,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 84.4
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 11.31
          }
        ],
        "healthScore": 0
      },
      {
        "file": "tests/bin/eslint.js",
        "metrics": {
          "complexity": 5,
          "loc": 1094,
          "functionCount": 148,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.19
          }
        ],
        "healthScore": 64
      },
      {
        "file": "tests/conf/eslint-all.js",
        "metrics": {
          "complexity": 1,
          "loc": 24,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/conf/eslint-recommended.js",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/_utils/index.js",
        "metrics": {
          "complexity": 2,
          "loc": 29,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 14,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 100,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/_utils/test-lazy-loading-rules.js",
        "metrics": {
          "complexity": 3,
          "loc": 37,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/api.js",
        "metrics": {
          "complexity": 1,
          "loc": 58,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/cli.js",
        "metrics": {
          "complexity": 42,
          "loc": 2163,
          "functionCount": 324,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 1.68
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.44
          }
        ],
        "healthScore": 0
      },
      {
        "file": "tests/lib/options.js",
        "metrics": {
          "complexity": 1,
          "loc": 371,
          "functionCount": 91,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.24
          }
        ],
        "healthScore": 83
      },
      {
        "file": "tests/lib/universal.js",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/unsupported-api.js",
        "metrics": {
          "complexity": 1,
          "loc": 29,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/tools/check-rule-examples.js",
        "metrics": {
          "complexity": 1,
          "loc": 81,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/tools/code-sample-minimizer.js",
        "metrics": {
          "complexity": 2,
          "loc": 66,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/tools/config-rule.js",
        "metrics": {
          "complexity": 2,
          "loc": 268,
          "functionCount": 66,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 95
      },
      {
        "file": "tests/tools/eslint-fuzzer.js",
        "metrics": {
          "complexity": 12,
          "loc": 280,
          "functionCount": 45,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 91
      },
      {
        "file": "tools/internal-rules/index.js",
        "metrics": {
          "complexity": 2,
          "loc": 18,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tools/internal-rules/multiline-comment-style.js",
        "metrics": {
          "complexity": 3,
          "loc": 20,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tools/internal-rules/no-invalid-meta.js",
        "metrics": {
          "complexity": 14,
          "loc": 84,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 12,
            "excessRatio": 1.17
          }
        ],
        "healthScore": 86
      },
      {
        "file": "docs/_examples/integration-tutorial-code/example-eslint-integration.js",
        "metrics": {
          "complexity": 2,
          "loc": 42,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/_examples/integration-tutorial-code/example-eslint-integration.test.js",
        "metrics": {
          "complexity": 4,
          "loc": 23,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/_examples/custom-rule-tutorial-code/enforce-foo-bar.js",
        "metrics": {
          "complexity": 7,
          "loc": 45,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/_examples/custom-rule-tutorial-code/enforce-foo-bar.test.js",
        "metrics": {
          "complexity": 1,
          "loc": 25,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/_examples/custom-rule-tutorial-code/eslint-plugin-example.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/_examples/custom-rule-tutorial-code/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 15,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/_examples/custom-rule-tutorial-code/example.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/types/base.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/types/cjs.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/types/formatting.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/types/index.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/types/nodejs.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/performance/jshint.js",
        "metrics": {
          "complexity": 2199,
          "loc": 12553,
          "functionCount": 614,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 87.96
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 8.37
          }
        ],
        "healthScore": 0
      },
      {
        "file": "tests/fixtures/disable-inline-config.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/eslint.config-rule-throws.js",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/eslint.config-with-ignores.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/eslint.config-with-ignores2.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/eslint.config-with-ignores3.js",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/eslint.config-with-rules.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/fixture-parser.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 15,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 100,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/globals-browser.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/globals-nashorn.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/globals-node.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/globals-webextensions.js",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/missing-semicolon.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/passing-es7.js",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/passing.js",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/process-exit.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/shebang.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.33,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/single-quoted.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/syntax-error.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/undef.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/utf8-bom.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/cli-engine/formatters/html.js",
        "metrics": {
          "complexity": 17,
          "loc": 255,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 64
      },
      {
        "file": "lib/cli-engine/formatters/json-with-metadata.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/cli-engine/formatters/json.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/cli-engine/formatters/stylish.js",
        "metrics": {
          "complexity": 12,
          "loc": 89,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.25,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 90
      },
      {
        "file": "docs/src/_data/eslintVersions.js",
        "metrics": {
          "complexity": 7,
          "loc": 45,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/src/_data/flags.js",
        "metrics": {
          "complexity": 1,
          "loc": 28,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/src/_data/helpers.js",
        "metrics": {
          "complexity": 5,
          "loc": 22,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/src/_data/layout.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/src/_data/rules_categories.js",
        "metrics": {
          "complexity": 1,
          "loc": 27,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/src/_data/site.js",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/src/_plugins/md-syntax-highlighter.js",
        "metrics": {
          "complexity": 3,
          "loc": 46,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.25,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/src/_plugins/pre-wrapper.js",
        "metrics": {
          "complexity": 2,
          "loc": 20,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/src/static/serviceworker.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/js/src/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 4,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/js/types/index.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/index.js",
        "metrics": {
          "complexity": 36,
          "loc": 180,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 8,
          "instability": 0.33,
          "cohesionScore": 0.4,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.8
          }
        ],
        "healthScore": 41
      },
      {
        "file": "lib/languages/js/validate-language-options.js",
        "metrics": {
          "complexity": 25,
          "loc": 111,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 56
      },
      {
        "file": "lib/linter/code-path-analysis/code-path-analyzer.js",
        "metrics": {
          "complexity": 167,
          "loc": 492,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.58,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 8.35
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.64
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/linter/code-path-analysis/code-path-segment.js",
        "metrics": {
          "complexity": 11,
          "loc": 91,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.75,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 92
      },
      {
        "file": "lib/linter/code-path-analysis/code-path-state.js",
        "metrics": {
          "complexity": 113,
          "loc": 872,
          "functionCount": 63,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.65
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.91
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/linter/code-path-analysis/code-path.js",
        "metrics": {
          "complexity": 20,
          "loc": 120,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 68
      },
      {
        "file": "lib/linter/code-path-analysis/debug-helpers.js",
        "metrics": {
          "complexity": 26,
          "loc": 132,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 55
      },
      {
        "file": "lib/linter/code-path-analysis/fork-context.js",
        "metrics": {
          "complexity": 10,
          "loc": 122,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.5,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/linter/code-path-analysis/id-generator.js",
        "metrics": {
          "complexity": 2,
          "loc": 15,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/config/config-loader.js",
        "metrics": {
          "complexity": 4,
          "loc": 241,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 97
      },
      {
        "file": "tests/lib/config/config.js",
        "metrics": {
          "complexity": 2,
          "loc": 818,
          "functionCount": 100,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.64
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/lib/config/flat-config-array.js",
        "metrics": {
          "complexity": 9,
          "loc": 2796,
          "functionCount": 205,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.86
          }
        ],
        "healthScore": 36
      },
      {
        "file": "tests/lib/config/flat-config-schema.js",
        "metrics": {
          "complexity": 1,
          "loc": 256,
          "functionCount": 28,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 96
      },
      {
        "file": "tests/lib/cli-engine/cli-engine.js",
        "metrics": {
          "complexity": 20,
          "loc": 5948,
          "functionCount": 539,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.13,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 3.97
          }
        ],
        "healthScore": 0
      },
      {
        "file": "tests/lib/cli-engine/file-enumerator.js",
        "metrics": {
          "complexity": 3,
          "loc": 417,
          "functionCount": 78,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.13,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.39
          }
        ],
        "healthScore": 80
      },
      {
        "file": "tests/lib/cli-engine/lint-result-cache.js",
        "metrics": {
          "complexity": 3,
          "loc": 337,
          "functionCount": 57,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.12
          }
        ],
        "healthScore": 85
      },
      {
        "file": "tests/lib/cli-engine/load-rules.js",
        "metrics": {
          "complexity": 1,
          "loc": 19,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/utils/ast-utils.js",
        "metrics": {
          "complexity": 441,
          "loc": 1381,
          "functionCount": 93,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 186,
          "instability": 0.02,
          "cohesionScore": 0.08,
          "percentileUsageRank": 100,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 17.64
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1200,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 0
      },
      {
        "file": "lib/rules/utils/char-source.js",
        "metrics": {
          "complexity": 32,
          "loc": 153,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 1.28
          }
        ],
        "healthScore": 47
      },
      {
        "file": "lib/rules/utils/fix-tracker.js",
        "metrics": {
          "complexity": 5,
          "loc": 47,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 6,
          "instability": 0.14,
          "cohesionScore": 0.75,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/utils/keywords.js",
        "metrics": {
          "complexity": 1,
          "loc": 62,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/utils/lazy-loading-rule-map.js",
        "metrics": {
          "complexity": 7,
          "loc": 61,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/utils/regular-expressions.js",
        "metrics": {
          "complexity": 7,
          "loc": 35,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/eslint/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/eslint/eslint.js",
        "metrics": {
          "complexity": 37,
          "loc": 8869,
          "functionCount": 792,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 12,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 1.48
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 5.91
          }
        ],
        "healthScore": 0
      },
      {
        "file": "tests/lib/eslint/legacy-eslint.js",
        "metrics": {
          "complexity": 34,
          "loc": 6979,
          "functionCount": 616,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.11,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 1.36
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 4.65
          }
        ],
        "healthScore": 0
      },
      {
        "file": "tests/lib/rule-tester/no-test-runners.js",
        "metrics": {
          "complexity": 1,
          "loc": 36,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rule-tester/rule-tester.js",
        "metrics": {
          "complexity": 4,
          "loc": 4904,
          "functionCount": 520,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 16,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.19,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 3.27
          }
        ],
        "healthScore": 5
      },
      {
        "file": "tests/lib/linter/apply-disable-directives.js",
        "metrics": {
          "complexity": 1,
          "loc": 4108,
          "functionCount": 105,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 2.74
          }
        ],
        "healthScore": 18
      },
      {
        "file": "tests/lib/linter/esquery.js",
        "metrics": {
          "complexity": 1,
          "loc": 262,
          "functionCount": 28,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 96
      },
      {
        "file": "tests/lib/linter/file-context.js",
        "metrics": {
          "complexity": 1,
          "loc": 136,
          "functionCount": 19,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/linter/interpolate.js",
        "metrics": {
          "complexity": 1,
          "loc": 44,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/linter/linter.js",
        "metrics": {
          "complexity": 91,
          "loc": 15215,
          "functionCount": 1430,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.03,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 3.64
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 10.14
          }
        ],
        "healthScore": 0
      },
      {
        "file": "tests/lib/linter/report-translator.js",
        "metrics": {
          "complexity": 2,
          "loc": 1270,
          "functionCount": 142,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.54
          }
        ],
        "healthScore": 62
      },
      {
        "file": "tests/lib/linter/rule-fixer.js",
        "metrics": {
          "complexity": 1,
          "loc": 118,
          "functionCount": 24,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/linter/rules.js",
        "metrics": {
          "complexity": 1,
          "loc": 53,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/linter/source-code-fixer.js",
        "metrics": {
          "complexity": 1,
          "loc": 761,
          "functionCount": 80,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.52
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/linter/source-code-traverser.js",
        "metrics": {
          "complexity": 12,
          "loc": 648,
          "functionCount": 68,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 63
      },
      {
        "file": "tests/lib/linter/source-code-visitor.js",
        "metrics": {
          "complexity": 1,
          "loc": 112,
          "functionCount": 23,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/linter/timing.js",
        "metrics": {
          "complexity": 1,
          "loc": 38,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/linter/vfile.js",
        "metrics": {
          "complexity": 1,
          "loc": 53,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/services/warning-service.js",
        "metrics": {
          "complexity": 3,
          "loc": 94,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/shared/deep-merge-arrays.js",
        "metrics": {
          "complexity": 3,
          "loc": 106,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/shared/naming.js",
        "metrics": {
          "complexity": 1,
          "loc": 47,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/shared/option-utils.js",
        "metrics": {
          "complexity": 1,
          "loc": 75,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/shared/relative-module-resolver.js",
        "metrics": {
          "complexity": 1,
          "loc": 21,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/shared/runtime-info.js",
        "metrics": {
          "complexity": 3,
          "loc": 201,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/shared/serialization.js",
        "metrics": {
          "complexity": 1,
          "loc": 110,
          "functionCount": 30,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/shared/string-utils.js",
        "metrics": {
          "complexity": 1,
          "loc": 61,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/shared/traverser.js",
        "metrics": {
          "complexity": 1,
          "loc": 90,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/types/types.test.ts",
        "metrics": {
          "complexity": 13,
          "loc": 1887,
          "functionCount": 179,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.26
          }
        ],
        "healthScore": 42
      },
      {
        "file": "tests/lib/rules/accessor-pairs.js",
        "metrics": {
          "complexity": 1,
          "loc": 3497,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 2.33
          }
        ],
        "healthScore": 27
      },
      {
        "file": "tests/lib/rules/array-bracket-newline.js",
        "metrics": {
          "complexity": 1,
          "loc": 1897,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.26
          }
        ],
        "healthScore": 48
      },
      {
        "file": "tests/lib/rules/array-bracket-spacing.js",
        "metrics": {
          "complexity": 1,
          "loc": 1334,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.67
          }
        ],
        "healthScore": 62
      },
      {
        "file": "tests/lib/rules/array-callback-return.js",
        "metrics": {
          "complexity": 1,
          "loc": 2058,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.37
          }
        ],
        "healthScore": 46
      },
      {
        "file": "tests/lib/rules/array-element-newline.js",
        "metrics": {
          "complexity": 1,
          "loc": 981,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.96
          }
        ],
        "healthScore": 65
      },
      {
        "file": "tests/lib/rules/arrow-body-style.js",
        "metrics": {
          "complexity": 1,
          "loc": 854,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.71
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/lib/rules/arrow-parens.js",
        "metrics": {
          "complexity": 1,
          "loc": 641,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.28
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/arrow-spacing.js",
        "metrics": {
          "complexity": 1,
          "loc": 507,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.01
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/block-scoped-var.js",
        "metrics": {
          "complexity": 1,
          "loc": 579,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.16
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/block-spacing.js",
        "metrics": {
          "complexity": 1,
          "loc": 1374,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.75
          }
        ],
        "healthScore": 61
      },
      {
        "file": "tests/lib/rules/brace-style.js",
        "metrics": {
          "complexity": 1,
          "loc": 1149,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.3
          }
        ],
        "healthScore": 63
      },
      {
        "file": "tests/lib/rules/callback-return.js",
        "metrics": {
          "complexity": 1,
          "loc": 477,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.59
          }
        ],
        "healthScore": 76
      },
      {
        "file": "tests/lib/rules/camelcase.js",
        "metrics": {
          "complexity": 1,
          "loc": 1696,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 50
      },
      {
        "file": "tests/lib/rules/capitalized-comments.js",
        "metrics": {
          "complexity": 1,
          "loc": 621,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.24
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/class-methods-use-this.js",
        "metrics": {
          "complexity": 1,
          "loc": 1344,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.69
          }
        ],
        "healthScore": 62
      },
      {
        "file": "tests/lib/rules/comma-dangle.js",
        "metrics": {
          "complexity": 2,
          "loc": 1982,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.32
          }
        ],
        "healthScore": 47
      },
      {
        "file": "tests/lib/rules/comma-spacing.js",
        "metrics": {
          "complexity": 1,
          "loc": 710,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.42
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/comma-style.js",
        "metrics": {
          "complexity": 1,
          "loc": 815,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.63
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/lib/rules/complexity.js",
        "metrics": {
          "complexity": 2,
          "loc": 843,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.69
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/lib/rules/computed-property-spacing.js",
        "metrics": {
          "complexity": 1,
          "loc": 2059,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.37
          }
        ],
        "healthScore": 46
      },
      {
        "file": "tests/lib/rules/consistent-return.js",
        "metrics": {
          "complexity": 1,
          "loc": 382,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 82
      },
      {
        "file": "tests/lib/rules/consistent-this.js",
        "metrics": {
          "complexity": 1,
          "loc": 173,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/constructor-super.js",
        "metrics": {
          "complexity": 1,
          "loc": 343,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.14
          }
        ],
        "healthScore": 84
      },
      {
        "file": "tests/lib/rules/curly.js",
        "metrics": {
          "complexity": 1,
          "loc": 2049,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.37
          }
        ],
        "healthScore": 46
      },
      {
        "file": "tests/lib/rules/default-case-last.js",
        "metrics": {
          "complexity": 2,
          "loc": 99,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/default-case.js",
        "metrics": {
          "complexity": 1,
          "loc": 124,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/default-param-last.js",
        "metrics": {
          "complexity": 1,
          "loc": 632,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.26
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/dot-location.js",
        "metrics": {
          "complexity": 1,
          "loc": 582,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.16
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/dot-notation.js",
        "metrics": {
          "complexity": 1,
          "loc": 303,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.01
          }
        ],
        "healthScore": 87
      },
      {
        "file": "tests/lib/rules/eol-last.js",
        "metrics": {
          "complexity": 1,
          "loc": 211,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 99
      },
      {
        "file": "tests/lib/rules/eqeqeq.js",
        "metrics": {
          "complexity": 1,
          "loc": 735,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.47
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/for-direction.js",
        "metrics": {
          "complexity": 1,
          "loc": 146,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/func-call-spacing.js",
        "metrics": {
          "complexity": 1,
          "loc": 989,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.98
          }
        ],
        "healthScore": 65
      },
      {
        "file": "tests/lib/rules/func-name-matching.js",
        "metrics": {
          "complexity": 1,
          "loc": 1052,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.1
          }
        ],
        "healthScore": 64
      },
      {
        "file": "tests/lib/rules/func-names.js",
        "metrics": {
          "complexity": 1,
          "loc": 959,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.92
          }
        ],
        "healthScore": 65
      },
      {
        "file": "tests/lib/rules/func-style.js",
        "metrics": {
          "complexity": 1,
          "loc": 989,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.98
          }
        ],
        "healthScore": 65
      },
      {
        "file": "tests/lib/rules/function-call-argument-newline.js",
        "metrics": {
          "complexity": 1,
          "loc": 556,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/function-paren-newline.js",
        "metrics": {
          "complexity": 1,
          "loc": 1470,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.13,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.94
          }
        ],
        "healthScore": 60
      },
      {
        "file": "tests/lib/rules/generator-star-spacing.js",
        "metrics": {
          "complexity": 1,
          "loc": 963,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.93
          }
        ],
        "healthScore": 65
      },
      {
        "file": "tests/lib/rules/getter-return.js",
        "metrics": {
          "complexity": 1,
          "loc": 349,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.16
          }
        ],
        "healthScore": 84
      },
      {
        "file": "tests/lib/rules/global-require.js",
        "metrics": {
          "complexity": 1,
          "loc": 73,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/grouped-accessor-pairs.js",
        "metrics": {
          "complexity": 1,
          "loc": 993,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.99
          }
        ],
        "healthScore": 65
      },
      {
        "file": "tests/lib/rules/guard-for-in.js",
        "metrics": {
          "complexity": 1,
          "loc": 29,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/handle-callback-err.js",
        "metrics": {
          "complexity": 1,
          "loc": 159,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/id-blacklist.js",
        "metrics": {
          "complexity": 1,
          "loc": 1323,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.65
          }
        ],
        "healthScore": 62
      },
      {
        "file": "tests/lib/rules/id-denylist.js",
        "metrics": {
          "complexity": 1,
          "loc": 1423,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.85
          }
        ],
        "healthScore": 61
      },
      {
        "file": "tests/lib/rules/id-length.js",
        "metrics": {
          "complexity": 1,
          "loc": 986,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.97
          }
        ],
        "healthScore": 65
      },
      {
        "file": "tests/lib/rules/id-match.js",
        "metrics": {
          "complexity": 1,
          "loc": 1183,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.37
          }
        ],
        "healthScore": 63
      },
      {
        "file": "tests/lib/rules/implicit-arrow-linebreak.js",
        "metrics": {
          "complexity": 1,
          "loc": 467,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.56
          }
        ],
        "healthScore": 76
      },
      {
        "file": "tests/lib/rules/indent-legacy.js",
        "metrics": {
          "complexity": 7,
          "loc": 845,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.69
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/lib/rules/indent.js",
        "metrics": {
          "complexity": 7,
          "loc": 12875,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.16,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 8.58
          }
        ],
        "healthScore": 0
      },
      {
        "file": "tests/lib/rules/init-declarations.js",
        "metrics": {
          "complexity": 1,
          "loc": 674,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.35
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/jsx-quotes.js",
        "metrics": {
          "complexity": 1,
          "loc": 103,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/key-spacing.js",
        "metrics": {
          "complexity": 1,
          "loc": 3578,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 2.39
          }
        ],
        "healthScore": 25
      },
      {
        "file": "tests/lib/rules/keyword-spacing.js",
        "metrics": {
          "complexity": 1,
          "loc": 4299,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 2.87
          }
        ],
        "healthScore": 15
      },
      {
        "file": "tests/lib/rules/line-comment-position.js",
        "metrics": {
          "complexity": 1,
          "loc": 188,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/linebreak-style.js",
        "metrics": {
          "complexity": 1,
          "loc": 144,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/lines-around-comment.js",
        "metrics": {
          "complexity": 1,
          "loc": 2290,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.53
          }
        ],
        "healthScore": 43
      },
      {
        "file": "tests/lib/rules/lines-around-directive.js",
        "metrics": {
          "complexity": 1,
          "loc": 1269,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.54
          }
        ],
        "healthScore": 62
      },
      {
        "file": "tests/lib/rules/lines-between-class-members.js",
        "metrics": {
          "complexity": 1,
          "loc": 2336,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.56
          }
        ],
        "healthScore": 42
      },
      {
        "file": "tests/lib/rules/logical-assignment-operators.js",
        "metrics": {
          "complexity": 1,
          "loc": 2826,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.88
          }
        ],
        "healthScore": 36
      },
      {
        "file": "tests/lib/rules/max-classes-per-file.js",
        "metrics": {
          "complexity": 1,
          "loc": 91,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/max-depth.js",
        "metrics": {
          "complexity": 1,
          "loc": 218,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 99
      },
      {
        "file": "tests/lib/rules/max-len.js",
        "metrics": {
          "complexity": 1,
          "loc": 1254,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.51
          }
        ],
        "healthScore": 62
      },
      {
        "file": "tests/lib/rules/max-lines-per-function.js",
        "metrics": {
          "complexity": 1,
          "loc": 562,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.12
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/max-lines.js",
        "metrics": {
          "complexity": 1,
          "loc": 582,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.16
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/max-nested-callbacks.js",
        "metrics": {
          "complexity": 2,
          "loc": 123,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/max-params.js",
        "metrics": {
          "complexity": 1,
          "loc": 291,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 94
      },
      {
        "file": "tests/lib/rules/max-statements-per-line.js",
        "metrics": {
          "complexity": 1,
          "loc": 613,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.23
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/max-statements.js",
        "metrics": {
          "complexity": 1,
          "loc": 340,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 85
      },
      {
        "file": "tests/lib/rules/multiline-comment-style.js",
        "metrics": {
          "complexity": 1,
          "loc": 760,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.52
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/multiline-ternary.js",
        "metrics": {
          "complexity": 1,
          "loc": 1146,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.29
          }
        ],
        "healthScore": 63
      },
      {
        "file": "tests/lib/rules/new-cap.js",
        "metrics": {
          "complexity": 1,
          "loc": 384,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.28
          }
        ],
        "healthScore": 82
      },
      {
        "file": "tests/lib/rules/new-parens.js",
        "metrics": {
          "complexity": 1,
          "loc": 157,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/newline-after-var.js",
        "metrics": {
          "complexity": 1,
          "loc": 579,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.16
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/newline-before-return.js",
        "metrics": {
          "complexity": 1,
          "loc": 281,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 95
      },
      {
        "file": "tests/lib/rules/newline-per-chained-call.js",
        "metrics": {
          "complexity": 1,
          "loc": 472,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.57
          }
        ],
        "healthScore": 76
      },
      {
        "file": "tests/lib/rules/no-alert.js",
        "metrics": {
          "complexity": 1,
          "loc": 294,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 94
      },
      {
        "file": "tests/lib/rules/no-array-constructor.js",
        "metrics": {
          "complexity": 1,
          "loc": 1013,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.03
          }
        ],
        "healthScore": 65
      },
      {
        "file": "tests/lib/rules/no-async-promise-executor.js",
        "metrics": {
          "complexity": 1,
          "loc": 49,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-await-in-loop.js",
        "metrics": {
          "complexity": 1,
          "loc": 82,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-bitwise.js",
        "metrics": {
          "complexity": 1,
          "loc": 162,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-buffer-constructor.js",
        "metrics": {
          "complexity": 1,
          "loc": 55,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-caller.js",
        "metrics": {
          "complexity": 1,
          "loc": 34,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-case-declarations.js",
        "metrics": {
          "complexity": 1,
          "loc": 348,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.16
          }
        ],
        "healthScore": 84
      },
      {
        "file": "tests/lib/rules/no-catch-shadow.js",
        "metrics": {
          "complexity": 1,
          "loc": 72,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-class-assign.js",
        "metrics": {
          "complexity": 1,
          "loc": 76,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-compare-neg-zero.js",
        "metrics": {
          "complexity": 1,
          "loc": 157,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-cond-assign.js",
        "metrics": {
          "complexity": 1,
          "loc": 240,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 97
      },
      {
        "file": "tests/lib/rules/no-confusing-arrow.js",
        "metrics": {
          "complexity": 1,
          "loc": 127,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-console.js",
        "metrics": {
          "complexity": 1,
          "loc": 564,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/no-const-assign.js",
        "metrics": {
          "complexity": 1,
          "loc": 101,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-constant-binary-expression.js",
        "metrics": {
          "complexity": 1,
          "loc": 926,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.85
          }
        ],
        "healthScore": 65
      },
      {
        "file": "tests/lib/rules/no-constant-condition.js",
        "metrics": {
          "complexity": 1,
          "loc": 800,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/lib/rules/no-constructor-return.js",
        "metrics": {
          "complexity": 1,
          "loc": 44,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-continue.js",
        "metrics": {
          "complexity": 1,
          "loc": 48,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-control-regex.js",
        "metrics": {
          "complexity": 1,
          "loc": 238,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 97
      },
      {
        "file": "tests/lib/rules/no-debugger.js",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-delete-var.js",
        "metrics": {
          "complexity": 1,
          "loc": 18,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-div-regex.js",
        "metrics": {
          "complexity": 1,
          "loc": 17,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-dupe-args.js",
        "metrics": {
          "complexity": 1,
          "loc": 64,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-dupe-class-members.js",
        "metrics": {
          "complexity": 1,
          "loc": 634,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/no-dupe-else-if.js",
        "metrics": {
          "complexity": 1,
          "loc": 516,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.03
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/no-dupe-keys.js",
        "metrics": {
          "complexity": 1,
          "loc": 343,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.14
          }
        ],
        "healthScore": 84
      },
      {
        "file": "tests/lib/rules/no-duplicate-case.js",
        "metrics": {
          "complexity": 1,
          "loc": 207,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-duplicate-imports.js",
        "metrics": {
          "complexity": 1,
          "loc": 604,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.21
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/no-else-return.js",
        "metrics": {
          "complexity": 1,
          "loc": 509,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.02
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/no-empty-character-class.js",
        "metrics": {
          "complexity": 1,
          "loc": 134,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-empty-function.js",
        "metrics": {
          "complexity": 5,
          "loc": 955,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.91
          }
        ],
        "healthScore": 65
      },
      {
        "file": "tests/lib/rules/no-empty-pattern.js",
        "metrics": {
          "complexity": 1,
          "loc": 271,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 95
      },
      {
        "file": "tests/lib/rules/no-empty-static-block.js",
        "metrics": {
          "complexity": 1,
          "loc": 36,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-empty.js",
        "metrics": {
          "complexity": 1,
          "loc": 257,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 96
      },
      {
        "file": "tests/lib/rules/no-eq-null.js",
        "metrics": {
          "complexity": 1,
          "loc": 21,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-eval.js",
        "metrics": {
          "complexity": 1,
          "loc": 664,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/no-ex-assign.js",
        "metrics": {
          "complexity": 1,
          "loc": 39,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-extend-native.js",
        "metrics": {
          "complexity": 1,
          "loc": 227,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 98
      },
      {
        "file": "tests/lib/rules/no-extra-bind.js",
        "metrics": {
          "complexity": 1,
          "loc": 232,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 98
      },
      {
        "file": "tests/lib/rules/no-extra-boolean-cast.js",
        "metrics": {
          "complexity": 1,
          "loc": 4145,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 2.76
          }
        ],
        "healthScore": 17
      },
      {
        "file": "tests/lib/rules/no-extra-label.js",
        "metrics": {
          "complexity": 1,
          "loc": 145,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-extra-parens.js",
        "metrics": {
          "complexity": 6,
          "loc": 3986,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 2.66
          }
        ],
        "healthScore": 19
      },
      {
        "file": "tests/lib/rules/no-extra-semi.js",
        "metrics": {
          "complexity": 1,
          "loc": 261,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 96
      },
      {
        "file": "tests/lib/rules/no-fallthrough.js",
        "metrics": {
          "complexity": 1,
          "loc": 535,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/no-floating-decimal.js",
        "metrics": {
          "complexity": 1,
          "loc": 42,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-func-assign.js",
        "metrics": {
          "complexity": 1,
          "loc": 107,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-global-assign.js",
        "metrics": {
          "complexity": 1,
          "loc": 133,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-implicit-coercion.js",
        "metrics": {
          "complexity": 1,
          "loc": 853,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.71
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/lib/rules/no-implicit-globals.js",
        "metrics": {
          "complexity": 1,
          "loc": 1728,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 50
      },
      {
        "file": "tests/lib/rules/no-implied-eval.js",
        "metrics": {
          "complexity": 1,
          "loc": 471,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.57
          }
        ],
        "healthScore": 76
      },
      {
        "file": "tests/lib/rules/no-import-assign.js",
        "metrics": {
          "complexity": 1,
          "loc": 540,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.08
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/no-inline-comments.js",
        "metrics": {
          "complexity": 1,
          "loc": 344,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 84
      },
      {
        "file": "tests/lib/rules/no-inner-declarations.js",
        "metrics": {
          "complexity": 1,
          "loc": 572,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.14
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/no-invalid-regexp.js",
        "metrics": {
          "complexity": 1,
          "loc": 660,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.32
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/no-invalid-this.js",
        "metrics": {
          "complexity": 5,
          "loc": 1610,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 51
      },
      {
        "file": "tests/lib/rules/no-irregular-whitespace.js",
        "metrics": {
          "complexity": 1,
          "loc": 1579,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 51
      },
      {
        "file": "tests/lib/rules/no-iterator.js",
        "metrics": {
          "complexity": 1,
          "loc": 67,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-label-var.js",
        "metrics": {
          "complexity": 1,
          "loc": 39,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-labels.js",
        "metrics": {
          "complexity": 1,
          "loc": 300,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 93
      },
      {
        "file": "tests/lib/rules/no-lone-blocks.js",
        "metrics": {
          "complexity": 1,
          "loc": 541,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.08
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/no-lonely-if.js",
        "metrics": {
          "complexity": 1,
          "loc": 176,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-loop-func.js",
        "metrics": {
          "complexity": 1,
          "loc": 877,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.75
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/lib/rules/no-loss-of-precision.js",
        "metrics": {
          "complexity": 1,
          "loc": 331,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 85
      },
      {
        "file": "tests/lib/rules/no-magic-numbers.js",
        "metrics": {
          "complexity": 1,
          "loc": 2206,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.47
          }
        ],
        "healthScore": 44
      },
      {
        "file": "tests/lib/rules/no-misleading-character-class.js",
        "metrics": {
          "complexity": 1,
          "loc": 2081,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.39
          }
        ],
        "healthScore": 45
      },
      {
        "file": "tests/lib/rules/no-mixed-operators.js",
        "metrics": {
          "complexity": 1,
          "loc": 408,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.36
          }
        ],
        "healthScore": 80
      },
      {
        "file": "tests/lib/rules/no-mixed-requires.js",
        "metrics": {
          "complexity": 1,
          "loc": 156,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-mixed-spaces-and-tabs.js",
        "metrics": {
          "complexity": 1,
          "loc": 371,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.24
          }
        ],
        "healthScore": 83
      },
      {
        "file": "tests/lib/rules/no-multi-assign.js",
        "metrics": {
          "complexity": 1,
          "loc": 154,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-multi-spaces.js",
        "metrics": {
          "complexity": 1,
          "loc": 825,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.65
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/lib/rules/no-multi-str.js",
        "metrics": {
          "complexity": 1,
          "loc": 65,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-multiple-empty-lines.js",
        "metrics": {
          "complexity": 2,
          "loc": 306,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.02
          }
        ],
        "healthScore": 87
      },
      {
        "file": "tests/lib/rules/no-native-reassign.js",
        "metrics": {
          "complexity": 1,
          "loc": 128,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-negated-condition.js",
        "metrics": {
          "complexity": 1,
          "loc": 77,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-negated-in-lhs.js",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-nested-ternary.js",
        "metrics": {
          "complexity": 1,
          "loc": 27,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-new-func.js",
        "metrics": {
          "complexity": 1,
          "loc": 127,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-new-native-nonconstructor.js",
        "metrics": {
          "complexity": 1,
          "loc": 52,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-new-object.js",
        "metrics": {
          "complexity": 1,
          "loc": 52,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-new-require.js",
        "metrics": {
          "complexity": 1,
          "loc": 31,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-new-symbol.js",
        "metrics": {
          "complexity": 1,
          "loc": 23,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-new-wrappers.js",
        "metrics": {
          "complexity": 1,
          "loc": 98,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-new.js",
        "metrics": {
          "complexity": 1,
          "loc": 21,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-nonoctal-decimal-escape.js",
        "metrics": {
          "complexity": 1,
          "loc": 489,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.63
          }
        ],
        "healthScore": 75
      },
      {
        "file": "tests/lib/rules/no-obj-calls.js",
        "metrics": {
          "complexity": 1,
          "loc": 746,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.49
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/no-object-constructor.js",
        "metrics": {
          "complexity": 1,
          "loc": 389,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 81
      },
      {
        "file": "tests/lib/rules/no-octal-escape.js",
        "metrics": {
          "complexity": 1,
          "loc": 649,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/no-octal.js",
        "metrics": {
          "complexity": 1,
          "loc": 120,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-param-reassign.js",
        "metrics": {
          "complexity": 1,
          "loc": 564,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/no-path-concat.js",
        "metrics": {
          "complexity": 1,
          "loc": 50,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-plusplus.js",
        "metrics": {
          "complexity": 1,
          "loc": 203,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-process-env.js",
        "metrics": {
          "complexity": 1,
          "loc": 41,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-process-exit.js",
        "metrics": {
          "complexity": 1,
          "loc": 36,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-promise-executor-return.js",
        "metrics": {
          "complexity": 1,
          "loc": 1023,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.05
          }
        ],
        "healthScore": 65
      },
      {
        "file": "tests/lib/rules/no-proto.js",
        "metrics": {
          "complexity": 1,
          "loc": 47,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-prototype-builtins.js",
        "metrics": {
          "complexity": 1,
          "loc": 355,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.18
          }
        ],
        "healthScore": 84
      },
      {
        "file": "tests/lib/rules/no-redeclare.js",
        "metrics": {
          "complexity": 1,
          "loc": 694,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.39
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/no-regex-spaces.js",
        "metrics": {
          "complexity": 1,
          "loc": 380,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 82
      },
      {
        "file": "tests/lib/rules/no-restricted-exports.js",
        "metrics": {
          "complexity": 1,
          "loc": 1446,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.89
          }
        ],
        "healthScore": 61
      },
      {
        "file": "tests/lib/rules/no-restricted-globals.js",
        "metrics": {
          "complexity": 1,
          "loc": 742,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.48
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/no-restricted-imports.js",
        "metrics": {
          "complexity": 1,
          "loc": 1264,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.53
          }
        ],
        "healthScore": 62
      },
      {
        "file": "tests/lib/rules/no-restricted-modules.js",
        "metrics": {
          "complexity": 1,
          "loc": 27,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-restricted-properties.js",
        "metrics": {
          "complexity": 1,
          "loc": 1165,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.33
          }
        ],
        "healthScore": 63
      },
      {
        "file": "tests/lib/rules/no-restricted-syntax.js",
        "metrics": {
          "complexity": 1,
          "loc": 355,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.18
          }
        ],
        "healthScore": 84
      },
      {
        "file": "tests/lib/rules/no-return-assign.js",
        "metrics": {
          "complexity": 1,
          "loc": 188,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-return-await.js",
        "metrics": {
          "complexity": 2,
          "loc": 446,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.49
          }
        ],
        "healthScore": 78
      },
      {
        "file": "tests/lib/rules/no-script-url.js",
        "metrics": {
          "complexity": 1,
          "loc": 47,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-self-assign.js",
        "metrics": {
          "complexity": 1,
          "loc": 327,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.09
          }
        ],
        "healthScore": 86
      },
      {
        "file": "tests/lib/rules/no-self-compare.js",
        "metrics": {
          "complexity": 1,
          "loc": 113,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-sequences.js",
        "metrics": {
          "complexity": 1,
          "loc": 139,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-setter-return.js",
        "metrics": {
          "complexity": 2,
          "loc": 425,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.42
          }
        ],
        "healthScore": 79
      },
      {
        "file": "tests/lib/rules/no-shadow-restricted-names.js",
        "metrics": {
          "complexity": 1,
          "loc": 691,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.38
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/no-shadow.js",
        "metrics": {
          "complexity": 1,
          "loc": 3393,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 2.26
          }
        ],
        "healthScore": 28
      },
      {
        "file": "tests/lib/rules/no-spaced-func.js",
        "metrics": {
          "complexity": 1,
          "loc": 101,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-sparse-arrays.js",
        "metrics": {
          "complexity": 1,
          "loc": 98,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-sync.js",
        "metrics": {
          "complexity": 1,
          "loc": 92,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-tabs.js",
        "metrics": {
          "complexity": 1,
          "loc": 140,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-template-curly-in-string.js",
        "metrics": {
          "complexity": 1,
          "loc": 54,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-ternary.js",
        "metrics": {
          "complexity": 1,
          "loc": 36,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-this-before-super.js",
        "metrics": {
          "complexity": 1,
          "loc": 374,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 82
      },
      {
        "file": "tests/lib/rules/no-throw-literal.js",
        "metrics": {
          "complexity": 1,
          "loc": 204,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-trailing-spaces.js",
        "metrics": {
          "complexity": 1,
          "loc": 638,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.28
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/no-unassigned-vars.js",
        "metrics": {
          "complexity": 1,
          "loc": 185,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-undef-init.js",
        "metrics": {
          "complexity": 1,
          "loc": 265,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 96
      },
      {
        "file": "tests/lib/rules/no-undef.js",
        "metrics": {
          "complexity": 1,
          "loc": 402,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.34
          }
        ],
        "healthScore": 81
      },
      {
        "file": "tests/lib/rules/no-undefined.js",
        "metrics": {
          "complexity": 1,
          "loc": 109,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-underscore-dangle.js",
        "metrics": {
          "complexity": 1,
          "loc": 786,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.57
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/lib/rules/no-unexpected-multiline.js",
        "metrics": {
          "complexity": 1,
          "loc": 382,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.11,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 82
      },
      {
        "file": "tests/lib/rules/no-unmodified-loop-condition.js",
        "metrics": {
          "complexity": 1,
          "loc": 149,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-unneeded-ternary.js",
        "metrics": {
          "complexity": 1,
          "loc": 508,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.02
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/no-unreachable-loop.js",
        "metrics": {
          "complexity": 7,
          "loc": 346,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 84
      },
      {
        "file": "tests/lib/rules/no-unreachable.js",
        "metrics": {
          "complexity": 1,
          "loc": 468,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.56
          }
        ],
        "healthScore": 76
      },
      {
        "file": "tests/lib/rules/no-unsafe-finally.js",
        "metrics": {
          "complexity": 1,
          "loc": 219,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 99
      },
      {
        "file": "tests/lib/rules/no-unsafe-negation.js",
        "metrics": {
          "complexity": 1,
          "loc": 260,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 96
      },
      {
        "file": "tests/lib/rules/no-unsafe-optional-chaining.js",
        "metrics": {
          "complexity": 1,
          "loc": 353,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.18
          }
        ],
        "healthScore": 84
      },
      {
        "file": "tests/lib/rules/no-unused-expressions.js",
        "metrics": {
          "complexity": 1,
          "loc": 796,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.59
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/lib/rules/no-unused-labels.js",
        "metrics": {
          "complexity": 1,
          "loc": 128,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-unused-private-class-members.js",
        "metrics": {
          "complexity": 1,
          "loc": 344,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 84
      },
      {
        "file": "tests/lib/rules/no-unused-vars.js",
        "metrics": {
          "complexity": 1,
          "loc": 4440,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 2.96
          }
        ],
        "healthScore": 12
      },
      {
        "file": "tests/lib/rules/no-use-before-define.js",
        "metrics": {
          "complexity": 1,
          "loc": 3159,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 2.11
          }
        ],
        "healthScore": 31
      },
      {
        "file": "tests/lib/rules/no-useless-assignment.js",
        "metrics": {
          "complexity": 1,
          "loc": 1022,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.04
          }
        ],
        "healthScore": 65
      },
      {
        "file": "tests/lib/rules/no-useless-backreference.js",
        "metrics": {
          "complexity": 1,
          "loc": 1334,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.67
          }
        ],
        "healthScore": 62
      },
      {
        "file": "tests/lib/rules/no-useless-call.js",
        "metrics": {
          "complexity": 1,
          "loc": 277,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 95
      },
      {
        "file": "tests/lib/rules/no-useless-catch.js",
        "metrics": {
          "complexity": 1,
          "loc": 185,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-useless-computed-key.js",
        "metrics": {
          "complexity": 1,
          "loc": 821,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.64
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/lib/rules/no-useless-concat.js",
        "metrics": {
          "complexity": 1,
          "loc": 91,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-useless-constructor.js",
        "metrics": {
          "complexity": 1,
          "loc": 349,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.11,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.16
          }
        ],
        "healthScore": 84
      },
      {
        "file": "tests/lib/rules/no-useless-escape.js",
        "metrics": {
          "complexity": 1,
          "loc": 2538,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.69
          }
        ],
        "healthScore": 40
      },
      {
        "file": "tests/lib/rules/no-useless-rename.js",
        "metrics": {
          "complexity": 1,
          "loc": 1298,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.07,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.6
          }
        ],
        "healthScore": 62
      },
      {
        "file": "tests/lib/rules/no-useless-return.js",
        "metrics": {
          "complexity": 1,
          "loc": 570,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.14
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/no-var.js",
        "metrics": {
          "complexity": 1,
          "loc": 413,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.07,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.38
          }
        ],
        "healthScore": 80
      },
      {
        "file": "tests/lib/rules/no-void.js",
        "metrics": {
          "complexity": 1,
          "loc": 53,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/no-warning-comments.js",
        "metrics": {
          "complexity": 1,
          "loc": 605,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.21
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/no-whitespace-before-property.js",
        "metrics": {
          "complexity": 1,
          "loc": 1223,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.45
          }
        ],
        "healthScore": 63
      },
      {
        "file": "tests/lib/rules/no-with.js",
        "metrics": {
          "complexity": 1,
          "loc": 18,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/nonblock-statement-body-position.js",
        "metrics": {
          "complexity": 1,
          "loc": 318,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.06
          }
        ],
        "healthScore": 86
      },
      {
        "file": "tests/lib/rules/object-curly-newline.js",
        "metrics": {
          "complexity": 1,
          "loc": 1704,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.14
          }
        ],
        "healthScore": 50
      },
      {
        "file": "tests/lib/rules/object-curly-spacing.js",
        "metrics": {
          "complexity": 1,
          "loc": 1732,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 50
      },
      {
        "file": "tests/lib/rules/object-property-newline.js",
        "metrics": {
          "complexity": 1,
          "loc": 728,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.46
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/object-shorthand.js",
        "metrics": {
          "complexity": 1,
          "loc": 1275,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.13,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.55
          }
        ],
        "healthScore": 62
      },
      {
        "file": "tests/lib/rules/one-var-declaration-per-line.js",
        "metrics": {
          "complexity": 1,
          "loc": 202,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/one-var.js",
        "metrics": {
          "complexity": 1,
          "loc": 2623,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.75
          }
        ],
        "healthScore": 39
      },
      {
        "file": "tests/lib/rules/operator-assignment.js",
        "metrics": {
          "complexity": 1,
          "loc": 898,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.8
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/lib/rules/operator-linebreak.js",
        "metrics": {
          "complexity": 1,
          "loc": 1000,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2
          }
        ],
        "healthScore": 65
      },
      {
        "file": "tests/lib/rules/padded-blocks.js",
        "metrics": {
          "complexity": 1,
          "loc": 1091,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.18
          }
        ],
        "healthScore": 64
      },
      {
        "file": "tests/lib/rules/padding-line-between-statements.js",
        "metrics": {
          "complexity": 1,
          "loc": 5251,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 3.5
          }
        ],
        "healthScore": 0
      },
      {
        "file": "tests/lib/rules/prefer-arrow-callback.js",
        "metrics": {
          "complexity": 1,
          "loc": 474,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.58
          }
        ],
        "healthScore": 76
      },
      {
        "file": "tests/lib/rules/prefer-const.js",
        "metrics": {
          "complexity": 1,
          "loc": 1185,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.37
          }
        ],
        "healthScore": 63
      },
      {
        "file": "tests/lib/rules/prefer-destructuring.js",
        "metrics": {
          "complexity": 1,
          "loc": 808,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.62
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/lib/rules/prefer-exponentiation-operator.js",
        "metrics": {
          "complexity": 1,
          "loc": 375,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 82
      },
      {
        "file": "tests/lib/rules/prefer-named-capture-group.js",
        "metrics": {
          "complexity": 1,
          "loc": 653,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.31
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/prefer-numeric-literals.js",
        "metrics": {
          "complexity": 1,
          "loc": 466,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.55
          }
        ],
        "healthScore": 76
      },
      {
        "file": "tests/lib/rules/prefer-object-has-own.js",
        "metrics": {
          "complexity": 1,
          "loc": 505,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.01
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/prefer-object-spread.js",
        "metrics": {
          "complexity": 1,
          "loc": 939,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.88
          }
        ],
        "healthScore": 65
      },
      {
        "file": "tests/lib/rules/prefer-promise-reject-errors.js",
        "metrics": {
          "complexity": 2,
          "loc": 110,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/prefer-reflect.js",
        "metrics": {
          "complexity": 1,
          "loc": 368,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.23
          }
        ],
        "healthScore": 83
      },
      {
        "file": "tests/lib/rules/prefer-regex-literals.js",
        "metrics": {
          "complexity": 1,
          "loc": 3009,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 2.01
          }
        ],
        "healthScore": 34
      },
      {
        "file": "tests/lib/rules/prefer-rest-params.js",
        "metrics": {
          "complexity": 1,
          "loc": 35,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/prefer-spread.js",
        "metrics": {
          "complexity": 1,
          "loc": 98,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/prefer-template.js",
        "metrics": {
          "complexity": 1,
          "loc": 212,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 99
      },
      {
        "file": "tests/lib/rules/quote-props.js",
        "metrics": {
          "complexity": 1,
          "loc": 68,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/quotes.js",
        "metrics": {
          "complexity": 1,
          "loc": 1035,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.07
          }
        ],
        "healthScore": 64
      },
      {
        "file": "tests/lib/rules/radix.js",
        "metrics": {
          "complexity": 1,
          "loc": 360,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 83
      },
      {
        "file": "tests/lib/rules/require-atomic-updates.js",
        "metrics": {
          "complexity": 1,
          "loc": 428,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.43
          }
        ],
        "healthScore": 79
      },
      {
        "file": "tests/lib/rules/require-await.js",
        "metrics": {
          "complexity": 1,
          "loc": 315,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 86
      },
      {
        "file": "tests/lib/rules/require-unicode-regexp.js",
        "metrics": {
          "complexity": 1,
          "loc": 612,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.22
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/require-yield.js",
        "metrics": {
          "complexity": 1,
          "loc": 57,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/rest-spread-spacing.js",
        "metrics": {
          "complexity": 1,
          "loc": 902,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.8
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/lib/rules/semi-spacing.js",
        "metrics": {
          "complexity": 1,
          "loc": 605,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.21
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/semi-style.js",
        "metrics": {
          "complexity": 1,
          "loc": 713,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.43
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/semi.js",
        "metrics": {
          "complexity": 1,
          "loc": 3027,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 2.02
          }
        ],
        "healthScore": 33
      },
      {
        "file": "tests/lib/rules/sort-imports.js",
        "metrics": {
          "complexity": 1,
          "loc": 477,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.59
          }
        ],
        "healthScore": 76
      },
      {
        "file": "tests/lib/rules/sort-keys.js",
        "metrics": {
          "complexity": 1,
          "loc": 2397,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 42
      },
      {
        "file": "tests/lib/rules/sort-vars.js",
        "metrics": {
          "complexity": 1,
          "loc": 267,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 96
      },
      {
        "file": "tests/lib/rules/space-before-blocks.js",
        "metrics": {
          "complexity": 1,
          "loc": 707,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.41
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/space-before-function-paren.js",
        "metrics": {
          "complexity": 1,
          "loc": 650,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/space-in-parens.js",
        "metrics": {
          "complexity": 1,
          "loc": 708,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.42
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/space-infix-ops.js",
        "metrics": {
          "complexity": 1,
          "loc": 694,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.39
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/space-unary-ops.js",
        "metrics": {
          "complexity": 1,
          "loc": 910,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.82
          }
        ],
        "healthScore": 65
      },
      {
        "file": "tests/lib/rules/spaced-comment.js",
        "metrics": {
          "complexity": 1,
          "loc": 184,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/strict.js",
        "metrics": {
          "complexity": 1,
          "loc": 877,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.75
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/lib/rules/switch-colon-spacing.js",
        "metrics": {
          "complexity": 1,
          "loc": 192,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/symbol-description.js",
        "metrics": {
          "complexity": 1,
          "loc": 39,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/template-curly-spacing.js",
        "metrics": {
          "complexity": 1,
          "loc": 971,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.94
          }
        ],
        "healthScore": 65
      },
      {
        "file": "tests/lib/rules/template-tag-spacing.js",
        "metrics": {
          "complexity": 1,
          "loc": 519,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.04
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/unicode-bom.js",
        "metrics": {
          "complexity": 1,
          "loc": 79,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/use-isnan.js",
        "metrics": {
          "complexity": 1,
          "loc": 1538,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.03
          }
        ],
        "healthScore": 52
      },
      {
        "file": "tests/lib/rules/valid-typeof.js",
        "metrics": {
          "complexity": 1,
          "loc": 208,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 99
      },
      {
        "file": "tests/lib/rules/vars-on-top.js",
        "metrics": {
          "complexity": 1,
          "loc": 555,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/lib/rules/wrap-iife.js",
        "metrics": {
          "complexity": 1,
          "loc": 631,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.26
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/rules/wrap-regex.js",
        "metrics": {
          "complexity": 1,
          "loc": 30,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/yield-star-spacing.js",
        "metrics": {
          "complexity": 1,
          "loc": 239,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 97
      },
      {
        "file": "tests/lib/rules/yoda.js",
        "metrics": {
          "complexity": 1,
          "loc": 1344,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.69
          }
        ],
        "healthScore": 62
      },
      {
        "file": "tests/tools/internal-rules/multiline-comment-style.js",
        "metrics": {
          "complexity": 1,
          "loc": 28,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/tools/internal-rules/no-invalid-meta.js",
        "metrics": {
          "complexity": 1,
          "loc": 184,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/_examples/integration-tutorial-code/sample-data/test-file.js",
        "metrics": {
          "complexity": 2,
          "loc": 14,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/autofix/return-conflicting-fixes.expected.js",
        "metrics": {
          "complexity": 2,
          "loc": 6,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/autofix/return-conflicting-fixes.js",
        "metrics": {
          "complexity": 2,
          "loc": 7,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/autofix/semicolon-conflicting-fixes.expected.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/autofix/semicolon-conflicting-fixes.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/bin/empty.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/bin/eslint.config-invalid-key.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/bin/eslint.config-invalid.js",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/bin/eslint.config-promise-tick-throws.js",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/bin/eslint.config-tick-throws.js",
        "metrics": {
          "complexity": 1,
          "loc": 23,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/bin/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/autofix-integration/left-pad-expected-quiet.js",
        "metrics": {
          "complexity": 3,
          "loc": 11,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/autofix-integration/left-pad-expected.js",
        "metrics": {
          "complexity": 3,
          "loc": 11,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/autofix-integration/left-pad.js",
        "metrics": {
          "complexity": 3,
          "loc": 11,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/cjs-config/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/cli-engine/console.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/cli-engine/eslint.config-with-ignores2.js",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/cli-engine/node_modules_cleaner.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/cli/passing.js",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/cli/syntax-error.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-base-path/a.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-base-path/b.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-rule/schemas.js",
        "metrics": {
          "complexity": 1,
          "loc": 107,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--do-while-and.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--do-while-or.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--do-while-qq.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--for-and-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--for-and-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--for-or-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--for-or-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--for-qq-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--for-qq-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--if-and-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--if-and-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--if-and-3.js",
        "metrics": {
          "complexity": 4,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--if-or-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--if-or-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--if-or-3.js",
        "metrics": {
          "complexity": 4,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--if-qq-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--if-qq-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--logical-and-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--logical-and-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--logical-and-3.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--logical-or-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--logical-or-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--logical-or-3.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--logical-qq-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--logical-qq-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--logical-qq-3.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--multi-1.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--multi-10.js",
        "metrics": {
          "complexity": 3,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--multi-2.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--multi-3.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--multi-4.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--multi-5.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--multi-6.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--multi-7.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--multi-8.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--multi-9.js",
        "metrics": {
          "complexity": 3,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--nested-and-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--nested-and-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--nested-and-3.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--nested-or-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--nested-or-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--nested-or-3.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--nested-qq-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--nested-qq-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--nested-qq-3.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--simple-and-1.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--simple-and-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--simple-and-3.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--simple-bitand.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--simple-eq.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--simple-or-1.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--simple-or-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--simple-or-3.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--simple-plus.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--simple-qq-1.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--simple-qq-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--simple-qq-3.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--while-and.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--while-or.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/assignment--while-qq.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/block-and-break-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/block-and-break-2.js",
        "metrics": {
          "complexity": 3,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/block-and-break-3.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/block-and-break-4.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/class-fields-init--arrow-function.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/class-fields-init--call-expression.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/class-fields-init--conditional.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/class-fields-init--simple.js",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/class-static-blocks--between-fields.js",
        "metrics": {
          "complexity": 7,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/class-static-blocks--between-methods.js",
        "metrics": {
          "complexity": 7,
          "loc": 1,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/class-static-blocks--conditional.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/class-static-blocks--empty.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/class-static-blocks--function-inside.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/class-static-blocks--if-else.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/class-static-blocks--multiple-1.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/class-static-blocks--multiple-2.js",
        "metrics": {
          "complexity": 4,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/class-static-blocks--simple.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/default-params--nest.js",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/default-params--simple.js",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/do-while--break-always.js",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/do-while--break-label.js",
        "metrics": {
          "complexity": 5,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/do-while--break-nest.js",
        "metrics": {
          "complexity": 4,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/do-while--break-simple.js",
        "metrics": {
          "complexity": 3,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/do-while--continue-always.js",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/do-while--continue-label.js",
        "metrics": {
          "complexity": 5,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/do-while--continue-nest.js",
        "metrics": {
          "complexity": 4,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/do-while--continue-simple.js",
        "metrics": {
          "complexity": 3,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/do-while--empty.js",
        "metrics": {
          "complexity": 2,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/do-while--simple.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--break-always.js",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--break-label.js",
        "metrics": {
          "complexity": 5,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--break-nest.js",
        "metrics": {
          "complexity": 4,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--break-simple-no-test.js",
        "metrics": {
          "complexity": 3,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--break-simple-no-update.js",
        "metrics": {
          "complexity": 3,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--break-simple.js",
        "metrics": {
          "complexity": 3,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--continue-always.js",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--continue-label.js",
        "metrics": {
          "complexity": 5,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--continue-nest.js",
        "metrics": {
          "complexity": 4,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--continue-simple-no-test.js",
        "metrics": {
          "complexity": 3,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--continue-simple-no-update.js",
        "metrics": {
          "complexity": 3,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--continue-simple.js",
        "metrics": {
          "complexity": 3,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--direct-nest.js",
        "metrics": {
          "complexity": 3,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--empty.js",
        "metrics": {
          "complexity": 2,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--simple-fork-in-test-update.js",
        "metrics": {
          "complexity": 4,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--simple-no-test.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--simple-no-update.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--simple-test-true.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for--simple.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-in--break-always.js",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-in--break-label.js",
        "metrics": {
          "complexity": 5,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-in--break-nest.js",
        "metrics": {
          "complexity": 4,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-in--break-simple.js",
        "metrics": {
          "complexity": 3,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-in--continue-always.js",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-in--continue-label.js",
        "metrics": {
          "complexity": 5,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-in--continue-nest.js",
        "metrics": {
          "complexity": 4,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-in--continue-simple.js",
        "metrics": {
          "complexity": 3,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-in--direct-nest.js",
        "metrics": {
          "complexity": 3,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-in--empty.js",
        "metrics": {
          "complexity": 2,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-in--simple.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-of--break-always.js",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-of--break-label.js",
        "metrics": {
          "complexity": 5,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-of--break-nest.js",
        "metrics": {
          "complexity": 4,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-of--break-simple.js",
        "metrics": {
          "complexity": 3,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-of--continue-always.js",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-of--continue-label.js",
        "metrics": {
          "complexity": 5,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-of--continue-nest.js",
        "metrics": {
          "complexity": 4,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-of--continue-simple.js",
        "metrics": {
          "complexity": 3,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-of--direct-nest.js",
        "metrics": {
          "complexity": 3,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-of--empty.js",
        "metrics": {
          "complexity": 2,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/for-of--simple.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/function--in-condition-expr.js",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/function--in-logical-right.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/function--new.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/function--simple.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/if-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/if-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/if-3.js",
        "metrics": {
          "complexity": 4,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/if-4.js",
        "metrics": {
          "complexity": 2,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/if-5.js",
        "metrics": {
          "complexity": 2,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/if-6.js",
        "metrics": {
          "complexity": 4,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--and-qq.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--do-while-and-1.js",
        "metrics": {
          "complexity": 3,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--do-while-and-2.js",
        "metrics": {
          "complexity": 5,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--do-while-mix-1.js",
        "metrics": {
          "complexity": 4,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--do-while-mix-2.js",
        "metrics": {
          "complexity": 4,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--do-while-or-1.js",
        "metrics": {
          "complexity": 3,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--do-while-or-2.js",
        "metrics": {
          "complexity": 5,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--do-while-qq-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--do-while-qq-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--for-and-1.js",
        "metrics": {
          "complexity": 3,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--for-and-2.js",
        "metrics": {
          "complexity": 5,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--for-and-3.js",
        "metrics": {
          "complexity": 3,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--for-mix-1.js",
        "metrics": {
          "complexity": 4,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--for-mix-2.js",
        "metrics": {
          "complexity": 4,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--for-mix-3.js",
        "metrics": {
          "complexity": 4,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--for-or-1.js",
        "metrics": {
          "complexity": 3,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--for-or-2.js",
        "metrics": {
          "complexity": 5,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--for-or-3.js",
        "metrics": {
          "complexity": 3,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-and-1.js",
        "metrics": {
          "complexity": 3,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-and-2.js",
        "metrics": {
          "complexity": 3,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-and-3.js",
        "metrics": {
          "complexity": 5,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-and-4.js",
        "metrics": {
          "complexity": 5,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-and-5.js",
        "metrics": {
          "complexity": 5,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-mix-1.js",
        "metrics": {
          "complexity": 4,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-mix-2.js",
        "metrics": {
          "complexity": 4,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-mix-and-qq-1.js",
        "metrics": {
          "complexity": 3,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-mix-and-qq-2.js",
        "metrics": {
          "complexity": 3,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-mix-or-qq-1.js",
        "metrics": {
          "complexity": 3,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-mix-or-qq-2.js",
        "metrics": {
          "complexity": 3,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-or-1.js",
        "metrics": {
          "complexity": 3,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-or-2.js",
        "metrics": {
          "complexity": 3,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-or-3.js",
        "metrics": {
          "complexity": 5,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-or-4.js",
        "metrics": {
          "complexity": 5,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-or-5.js",
        "metrics": {
          "complexity": 5,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-qdot-1.js",
        "metrics": {
          "complexity": 3,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-qq-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-qq-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-qq-3.js",
        "metrics": {
          "complexity": 3,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-qq-4.js",
        "metrics": {
          "complexity": 2,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--if-qq-5.js",
        "metrics": {
          "complexity": 3,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--simple-1.js",
        "metrics": {
          "complexity": 4,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--simple-2.js",
        "metrics": {
          "complexity": 4,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--simple-3.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--while-and-1.js",
        "metrics": {
          "complexity": 3,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--while-and-2.js",
        "metrics": {
          "complexity": 5,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--while-mix-1.js",
        "metrics": {
          "complexity": 4,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--while-mix-2.js",
        "metrics": {
          "complexity": 4,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--while-or-1.js",
        "metrics": {
          "complexity": 3,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--while-or-2.js",
        "metrics": {
          "complexity": 5,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--while-qq-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/logical--while-qq-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/object-literal--conditional.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/optional-chaining--complex-1.js",
        "metrics": {
          "complexity": 4,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/optional-chaining--complex-2.js",
        "metrics": {
          "complexity": 4,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/optional-chaining--complex-3.js",
        "metrics": {
          "complexity": 4,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/optional-chaining--simple-1.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/optional-chaining--simple-2.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/optional-chaining--simple-3.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/optional-chaining--simple-4.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/switch--cases-1.js",
        "metrics": {
          "complexity": 7,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/switch--cases-2.js",
        "metrics": {
          "complexity": 7,
          "loc": 14,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/switch--cases-and-default-1.js",
        "metrics": {
          "complexity": 6,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/switch--cases-and-default-2.js",
        "metrics": {
          "complexity": 6,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/switch--cases-and-default-3.js",
        "metrics": {
          "complexity": 6,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/switch--default-only-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/switch--default-only-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/switch--empty.js",
        "metrics": {
          "complexity": 2,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/switch--precedence.js",
        "metrics": {
          "complexity": 39,
          "loc": 63,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 1.56
          }
        ],
        "healthScore": 37
      },
      {
        "file": "tests/fixtures/code-path-analysis/switch--single-case-1.js",
        "metrics": {
          "complexity": 3,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/switch--single-case-2.js",
        "metrics": {
          "complexity": 3,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/try--try-catch-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/try--try-catch-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/try--try-catch-3.js",
        "metrics": {
          "complexity": 3,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/try--try-catch-4.js",
        "metrics": {
          "complexity": 4,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/try--try-catch-finally-1.js",
        "metrics": {
          "complexity": 2,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/try--try-catch-finally-2.js",
        "metrics": {
          "complexity": 2,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/try--try-catch-finally-3.js",
        "metrics": {
          "complexity": 3,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/try--try-finally-1.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/try--try-finally-2.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/try--try-finally-3.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/try--try-finally-4.js",
        "metrics": {
          "complexity": 2,
          "loc": 14,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/try--try-finally-5.js",
        "metrics": {
          "complexity": 2,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/try--try-with-for-inof-1.js",
        "metrics": {
          "complexity": 3,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/try--try-with-for-inof-2.js",
        "metrics": {
          "complexity": 3,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/unreachable-controls.js",
        "metrics": {
          "complexity": 2,
          "loc": 9,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/while--break-always.js",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/while--break-label.js",
        "metrics": {
          "complexity": 5,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/while--break-nest-2.js",
        "metrics": {
          "complexity": 4,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/while--break-nest.js",
        "metrics": {
          "complexity": 4,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/while--break-simple.js",
        "metrics": {
          "complexity": 3,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/while--continue-always.js",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/while--continue-label.js",
        "metrics": {
          "complexity": 5,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/while--continue-nest.js",
        "metrics": {
          "complexity": 4,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/while--continue-simple.js",
        "metrics": {
          "complexity": 3,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/while--direct-nest.js",
        "metrics": {
          "complexity": 3,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/while--empty.js",
        "metrics": {
          "complexity": 2,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/code-path-analysis/while--simple.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/configurations/env-browser.js",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/configurations/env-node.js",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/configurations/es6.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/configurations/plugins-with-prefix.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/configurations/processors.js",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/configurations/quotes-error.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/configurations/semi-error.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/curly-files/a.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/curly-files/b.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/curly-files/{a,b}.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/dots-in-files/a..b.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/dots-in-files/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/dot-files/.a.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/dot-files/.c.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/dot-files/b.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/dot-files/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/emfile/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/eslintrc/quotes.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/example-app2/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/example-app/app.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/example-app/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/example-app3/.eslintrc.js",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/example-app3/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/exit-on-fatal-error/fatal-error.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/exit-on-fatal-error/no-fatal-error-rule-violation.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/exit-on-fatal-error/no-fatal-error.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/file-extensions/a.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/file-extensions/d.jsx",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/file-extensions/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/file-extensions/f.ts",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/file-extensions/g.tsx",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/files/.bar.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/files/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/fix-types/fix-both-semi-and-prefer-arrow-callback.expected.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/fix-types/fix-both-semi-and-prefer-arrow-callback.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/fix-types/fix-only-prefer-arrow-callback.expected.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/fix-types/fix-only-prefer-arrow-callback.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/fix-types/fix-only-semi.expected.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/fix-types/fix-only-semi.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/fix-types/ignore-missing-meta.expected.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/fix-types/ignore-missing-meta.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/fixmode/multipass.js",
        "metrics": {
          "complexity": 2,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/fixmode/ok.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/fixmode/quotes-semi-eqeqeq.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/fixmode/quotes.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/formatters/async.js",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/formatters/broken.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/formatters/cwd.js",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/formatters/simple.js",
        "metrics": {
          "complexity": 2,
          "loc": 10,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignores-relative/a.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignores-relative/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignores-directory/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignores-self/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignored-paths/undef.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignored-paths/unignored.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignores-subdirectory/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/js-mjs-cjs-config/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/js-mjs-cjs-config/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/lint-result-cache/test-with-errors.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/lazy-loading-rules/.eslintrc.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/lazy-loading-rules/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/lookup-from-file/code.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/lookup-from-file/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/max-warnings/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/max-warnings/six-warnings.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/mjs-cjs-config/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/mjs-config/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/packagejson/quotes.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/no-config-file/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/all-comments-parser.js",
        "metrics": {
          "complexity": 8,
          "loc": 23,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/empty-program-parser.js",
        "metrics": {
          "complexity": 1,
          "loc": 26,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/enhanced-parser.js",
        "metrics": {
          "complexity": 1,
          "loc": 16,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/enhanced-parser2.js",
        "metrics": {
          "complexity": 1,
          "loc": 19,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/enhanced-parser3.js",
        "metrics": {
          "complexity": 4,
          "loc": 48,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/line-error.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/linter-test-parsers.js",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 1,
          "instability": 0.91,
          "cohesionScore": 0.72,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/no-line-error.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/non-js-parser.js",
        "metrics": {
          "complexity": 1,
          "loc": 233,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 98
      },
      {
        "file": "tests/fixtures/parsers/stub-parser.js",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/throws-with-options.js",
        "metrics": {
          "complexity": 2,
          "loc": 8,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/promise-config/a.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/promise-config/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/processors/custom-processor.js",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/processors/pattern-processor.js",
        "metrics": {
          "complexity": 8,
          "loc": 43,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/relative-module-resolver/file2.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/rules/custom-rule.js",
        "metrics": {
          "complexity": 2,
          "loc": 15,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/rules/eslint.js",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/rules/fixture-rule.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/rules/make-syntax-error-rule.js",
        "metrics": {
          "complexity": 1,
          "loc": 19,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/rules/missing-rule.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/rules/test-multi-rulesdirs.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/shallow-glob/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/simple-valid-project/.eslintrc.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/simple-valid-project/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/simple-valid-project/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/simple-valid-project-2/bar.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/simple-valid-project-2/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/simple-valid-project-2/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/source-code-util/bar.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/source-code-util/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/source-code-util/ignored.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/stats-example/file-to-fix.js",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/suppressions/test-file.js",
        "metrics": {
          "complexity": 2,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/helper.ts",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 8,
          "instability": 0.11,
          "cohesionScore": 0,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/traverse/.hidden_file.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/traverse/found.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/unmatched-patterns/failing.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/src/assets/js/components-index.js",
        "metrics": {
          "complexity": 3,
          "loc": 31,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/src/assets/js/css-vars-ponyfill@2.js",
        "metrics": {
          "complexity": 332,
          "loc": 1473,
          "functionCount": 156,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 16.6
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.47
          }
        ],
        "healthScore": 0
      },
      {
        "file": "docs/src/assets/js/focus-visible.js",
        "metrics": {
          "complexity": 36,
          "loc": 162,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.8
          }
        ],
        "healthScore": 41
      },
      {
        "file": "docs/src/assets/js/inert-polyfill.js",
        "metrics": {
          "complexity": 24,
          "loc": 93,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 57
      },
      {
        "file": "docs/src/assets/js/main.js",
        "metrics": {
          "complexity": 22,
          "loc": 259,
          "functionCount": 31,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.29
          }
        ],
        "healthScore": 49
      },
      {
        "file": "docs/src/assets/js/scroll-up-btn.js",
        "metrics": {
          "complexity": 4,
          "loc": 15,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "docs/src/assets/js/search.js",
        "metrics": {
          "complexity": 41,
          "loc": 190,
          "functionCount": 22,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.05
          }
        ],
        "healthScore": 33
      },
      {
        "file": "docs/src/assets/js/tabs.js",
        "metrics": {
          "complexity": 32,
          "loc": 260,
          "functionCount": 26,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 37
      },
      {
        "file": "docs/src/assets/js/themes.js",
        "metrics": {
          "complexity": 12,
          "loc": 68,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 90
      },
      {
        "file": "packages/js/src/configs/eslint-all.js",
        "metrics": {
          "complexity": 1,
          "loc": 203,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.01
          }
        ],
        "healthScore": 94
      },
      {
        "file": "packages/js/src/configs/eslint-recommended.js",
        "metrics": {
          "complexity": 1,
          "loc": 66,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/js/tests/types/types.test.ts",
        "metrics": {
          "complexity": 1,
          "loc": 42,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.4,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 8,
          "instability": 0.11,
          "cohesionScore": 0.8,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/source-code.js",
        "metrics": {
          "complexity": 159,
          "loc": 736,
          "functionCount": 51,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 2,
          "instability": 0.75,
          "cohesionScore": 0.24,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 7.95
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.45
          }
        ],
        "healthScore": 0
      },
      {
        "file": "tests/lib/cli-engine/formatters/html.js",
        "metrics": {
          "complexity": 1,
          "loc": 756,
          "functionCount": 25,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.51
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/lib/cli-engine/formatters/json-with-metadata.js",
        "metrics": {
          "complexity": 1,
          "loc": 66,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/cli-engine/formatters/json.js",
        "metrics": {
          "complexity": 1,
          "loc": 35,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/cli-engine/formatters/stylish.js",
        "metrics": {
          "complexity": 1,
          "loc": 441,
          "functionCount": 37,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.47
          }
        ],
        "healthScore": 78
      },
      {
        "file": "lib/rules/utils/unicode/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.8,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/utils/unicode/is-combining-character.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/utils/unicode/is-emoji-modifier.js",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/utils/unicode/is-regional-indicator-symbol.js",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/rules/utils/unicode/is-surrogate-pair.js",
        "metrics": {
          "complexity": 4,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/linter/code-path-analysis/code-path-analyzer.js",
        "metrics": {
          "complexity": 30,
          "loc": 951,
          "functionCount": 105,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 1.2
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.9
          }
        ],
        "healthScore": 15
      },
      {
        "file": "tests/lib/linter/code-path-analysis/code-path.js",
        "metrics": {
          "complexity": 6,
          "loc": 201,
          "functionCount": 30,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/cache/src/fail-file.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/cache/src/file-to-delete.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/cache/src/test-file.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/cache/src/test-file2.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/cli-engine/deprecated-rule-config/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/lib/rules/utils/ast-utils.js",
        "metrics": {
          "complexity": 8,
          "loc": 2182,
          "functionCount": 262,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.45
          }
        ],
        "healthScore": 44
      },
      {
        "file": "tests/lib/rules/utils/char-source.js",
        "metrics": {
          "complexity": 7,
          "loc": 265,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 96
      },
      {
        "file": "tests/lib/rules/utils/fix-tracker.js",
        "metrics": {
          "complexity": 1,
          "loc": 115,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/cli-engine/nested_node_modules/passing.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/cli-engine/overrides-with-dot/.test-target.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/cli/ignore-pattern-relative/.eslintrc.js",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/cli/ignore-pattern-relative/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/broken/add-conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/broken/console-wrong-quotes-node.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/broken/console-wrong-quotes.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/broken/override-conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/broken/process-exit.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/broken/wrong-quotes.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/fileexts/.eslintrc.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/packagejson/wrong-quotes.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-base-path/subdir/a.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-base-path/subdir/b.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-file/extends-chain-2/parser.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-file/js/.eslintrc.broken.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-file/js/.eslintrc.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-file/js/.eslintrc.parser.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-file/js/.eslintrc.parser2.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-file/js/.eslintrc.parser3.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-file/js/not-a-config.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-lookup-ignores-2/subdir1/1.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-lookup-ignores-2/subdir2/2.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-lookup-ignores-2/subdir3/3.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-lookup-ignores/subdir2/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-lookup-ignores-3/subdir/a.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-lookup-ignores-3/subdir/b.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/configurations/parser/custom.js",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/empty-config-file/cjs/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/empty-config-file/esm/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/example-app2/subdir2/b.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/example-app2/subdir1/a.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/example-app/subdir/util.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/example-app3/src/1.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/formatters/test/simple.js",
        "metrics": {
          "complexity": 2,
          "loc": 10,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/glob-util/hidden/.foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/glob-util/ignored/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/glob-util/one-js-file/baz.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/glob-util/two-js-files/bar.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/glob-util/two-js-files/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignores-relative/subdir/a.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignored-paths/brackets/[index.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignored-paths/brackets/[index].js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignored-paths/brackets/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignored-paths/brackets/index].js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignored-paths/negation/ignore.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignored-paths/negation/unignore.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignored-paths/subdir/undef.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/lookup-from-file/subdir/code.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/lookup-from-file/subdir/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/module-not-found/throw-in-config-itself/.eslintrc.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/array-bracket-spacing/flow-destructuring-1.js",
        "metrics": {
          "complexity": 1,
          "loc": 564,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/fixtures/parsers/array-bracket-spacing/flow-destructuring-2.js",
        "metrics": {
          "complexity": 1,
          "loc": 564,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/fixtures/parsers/arrow-parens/generics-extends-complex.js",
        "metrics": {
          "complexity": 1,
          "loc": 242,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 97
      },
      {
        "file": "tests/fixtures/parsers/arrow-parens/generics-extends.js",
        "metrics": {
          "complexity": 1,
          "loc": 144,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/arrow-parens/generics-simple-async.js",
        "metrics": {
          "complexity": 1,
          "loc": 121,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/arrow-parens/generics-simple-no-params.js",
        "metrics": {
          "complexity": 1,
          "loc": 99,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/arrow-parens/generics-simple.js",
        "metrics": {
          "complexity": 1,
          "loc": 112,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/arrow-parens/identifier-type.js",
        "metrics": {
          "complexity": 1,
          "loc": 346,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 84
      },
      {
        "file": "tests/fixtures/parsers/arrow-parens/return-type.js",
        "metrics": {
          "complexity": 1,
          "loc": 347,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.16
          }
        ],
        "healthScore": 84
      },
      {
        "file": "tests/fixtures/parsers/babel-eslint10/object-pattern-with-rest-element.js",
        "metrics": {
          "complexity": 1,
          "loc": 146,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/babel-eslint5/destructuring-object-spread.js",
        "metrics": {
          "complexity": 1,
          "loc": 1720,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 50
      },
      {
        "file": "tests/fixtures/parsers/babel-eslint7/array-pattern-with-annotation.js",
        "metrics": {
          "complexity": 1,
          "loc": 381,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 82
      },
      {
        "file": "tests/fixtures/parsers/babel-eslint7/function-type-annotation.js",
        "metrics": {
          "complexity": 1,
          "loc": 518,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.04
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/fixtures/parsers/babel-eslint7/object-pattern-with-annotation.js",
        "metrics": {
          "complexity": 1,
          "loc": 430,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.43
          }
        ],
        "healthScore": 79
      },
      {
        "file": "tests/fixtures/parsers/babel-eslint7/object-pattern-with-object-annotation.js",
        "metrics": {
          "complexity": 1,
          "loc": 431,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.44
          }
        ],
        "healthScore": 79
      },
      {
        "file": "tests/fixtures/parsers/comma-dangle/object-pattern-1.js",
        "metrics": {
          "complexity": 1,
          "loc": 1142,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.28
          }
        ],
        "healthScore": 64
      },
      {
        "file": "tests/fixtures/parsers/comma-dangle/object-pattern-2.js",
        "metrics": {
          "complexity": 1,
          "loc": 1142,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.28
          }
        ],
        "healthScore": 64
      },
      {
        "file": "tests/fixtures/parsers/comma-dangle/return-type-1.js",
        "metrics": {
          "complexity": 1,
          "loc": 901,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.8
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/fixtures/parsers/comma-dangle/return-type-2.js",
        "metrics": {
          "complexity": 1,
          "loc": 901,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.8
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/fixtures/parsers/function-paren-newline/arrow-function-return-type.js",
        "metrics": {
          "complexity": 1,
          "loc": 646,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.29
          }
        ],
        "healthScore": 67
      },
      {
        "file": "tests/fixtures/parsers/keyword-spacing/prefix-cast-operator-no-space.js",
        "metrics": {
          "complexity": 1,
          "loc": 117,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/keyword-spacing/prefix-cast-operator-space.js",
        "metrics": {
          "complexity": 1,
          "loc": 117,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/object-curly-newline/flow-stub-parser-multiline-type-literal.js",
        "metrics": {
          "complexity": 1,
          "loc": 810,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.62
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/fixtures/parsers/object-curly-newline/flow-stub-parser-multiline.js",
        "metrics": {
          "complexity": 1,
          "loc": 580,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.16
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/fixtures/parsers/object-curly-newline/flow-stub-parser-singleline-type-literal.js",
        "metrics": {
          "complexity": 1,
          "loc": 810,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.62
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/fixtures/parsers/object-curly-newline/flow-stub-parser-singleline.js",
        "metrics": {
          "complexity": 1,
          "loc": 580,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.16
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/fixtures/parsers/object-curly-spacing/flow-stub-parser-never-invalid.js",
        "metrics": {
          "complexity": 1,
          "loc": 599,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/fixtures/parsers/object-curly-spacing/flow-stub-parser-never-valid.js",
        "metrics": {
          "complexity": 1,
          "loc": 599,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/fixtures/parsers/space-before-blocks/return-type-keyword-1.js",
        "metrics": {
          "complexity": 1,
          "loc": 199,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/space-before-blocks/return-type-keyword-2.js",
        "metrics": {
          "complexity": 1,
          "loc": 91,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/unknown-operators/unknown-logical-operator-nested.js",
        "metrics": {
          "complexity": 1,
          "loc": 217,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 99
      },
      {
        "file": "tests/fixtures/parsers/unknown-operators/unknown-logical-operator.js",
        "metrics": {
          "complexity": 1,
          "loc": 146,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/type-annotations/function-declaration-type-annotation-no-space.js",
        "metrics": {
          "complexity": 1,
          "loc": 481,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 75
      },
      {
        "file": "tests/fixtures/parsers/type-annotations/function-expression-type-annotation.js",
        "metrics": {
          "complexity": 1,
          "loc": 579,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.16
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/fixtures/parsers/type-annotations/function-parameter-type-annotation.js",
        "metrics": {
          "complexity": 1,
          "loc": 388,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.29
          }
        ],
        "healthScore": 81
      },
      {
        "file": "tests/fixtures/parsers/type-annotations/function-return-type-annotation.js",
        "metrics": {
          "complexity": 1,
          "loc": 292,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 94
      },
      {
        "file": "tests/fixtures/parsers/type-annotations/variable-declaration-init-type-annotation-no-space.js",
        "metrics": {
          "complexity": 1,
          "loc": 288,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 94
      },
      {
        "file": "tests/fixtures/parsers/type-annotations/variable-declaration-init-type-annotation.js",
        "metrics": {
          "complexity": 1,
          "loc": 289,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 94
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/abstract-class-invalid.js",
        "metrics": {
          "complexity": 1,
          "loc": 1189,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.38
          }
        ],
        "healthScore": 63
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/abstract-class-valid.js",
        "metrics": {
          "complexity": 1,
          "loc": 1189,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.38
          }
        ],
        "healthScore": 63
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/functions-with-abstract-class-invalid.js",
        "metrics": {
          "complexity": 1,
          "loc": 1047,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.09
          }
        ],
        "healthScore": 64
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/functions-with-abstract-class-valid.js",
        "metrics": {
          "complexity": 1,
          "loc": 1047,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.09
          }
        ],
        "healthScore": 64
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/interface.js",
        "metrics": {
          "complexity": 1,
          "loc": 439,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.46
          }
        ],
        "healthScore": 78
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/namespace-invalid.js",
        "metrics": {
          "complexity": 1,
          "loc": 816,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.63
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/namespace-valid.js",
        "metrics": {
          "complexity": 1,
          "loc": 816,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.63
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/namespace-with-functions-with-abstract-class-invalid.js",
        "metrics": {
          "complexity": 1,
          "loc": 1181,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.36
          }
        ],
        "healthScore": 63
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/namespace-with-functions-with-abstract-class-valid.js",
        "metrics": {
          "complexity": 1,
          "loc": 1181,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.36
          }
        ],
        "healthScore": 63
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/variable-declarator-type-indent-two-spaces.js",
        "metrics": {
          "complexity": 1,
          "loc": 386,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.29
          }
        ],
        "healthScore": 82
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/variable-declarator-type-no-indent.js",
        "metrics": {
          "complexity": 1,
          "loc": 386,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.29
          }
        ],
        "healthScore": 82
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/boolean-cast-with-assertion.js",
        "metrics": {
          "complexity": 1,
          "loc": 326,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.09
          }
        ],
        "healthScore": 86
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/declare-class.js",
        "metrics": {
          "complexity": 1,
          "loc": 410,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.37
          }
        ],
        "healthScore": 80
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/declare-var.js",
        "metrics": {
          "complexity": 1,
          "loc": 207,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/decorator-with-class-methods.js",
        "metrics": {
          "complexity": 1,
          "loc": 882,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.76
          }
        ],
        "healthScore": 66
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/decorator-with-class.js",
        "metrics": {
          "complexity": 1,
          "loc": 207,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/decorator-with-keywords-class-method.js",
        "metrics": {
          "complexity": 1,
          "loc": 1176,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.35
          }
        ],
        "healthScore": 63
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/decorator-with-static-class-methods.js",
        "metrics": {
          "complexity": 1,
          "loc": 1179,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 2.36
          }
        ],
        "healthScore": 63
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/exponentiation-with-assertion-1.js",
        "metrics": {
          "complexity": 1,
          "loc": 314,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 86
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/exponentiation-with-assertion-2.js",
        "metrics": {
          "complexity": 1,
          "loc": 314,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 86
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/exponentiation-with-assertion-3.js",
        "metrics": {
          "complexity": 1,
          "loc": 314,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 86
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/global-await.js",
        "metrics": {
          "complexity": 1,
          "loc": 155,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/global-for-await-of.js",
        "metrics": {
          "complexity": 1,
          "loc": 461,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.54
          }
        ],
        "healthScore": 77
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/keyword-with-arrow-function.js",
        "metrics": {
          "complexity": 1,
          "loc": 173,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/logical-assignment-with-assertion.js",
        "metrics": {
          "complexity": 1,
          "loc": 202,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/logical-with-assignment-with-assertion-1.js",
        "metrics": {
          "complexity": 1,
          "loc": 531,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.06
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/logical-with-assignment-with-assertion-2.js",
        "metrics": {
          "complexity": 1,
          "loc": 561,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.12
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/logical-with-assignment-with-assertion-3.js",
        "metrics": {
          "complexity": 1,
          "loc": 561,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 500,
            "excessRatio": 1.12
          }
        ],
        "healthScore": 68
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/member-call-expr-with-assertion.js",
        "metrics": {
          "complexity": 1,
          "loc": 359,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 83
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/new-parens.js",
        "metrics": {
          "complexity": 1,
          "loc": 133,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/object-with-arrow-fn-props.js",
        "metrics": {
          "complexity": 1,
          "loc": 8903,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 5.94
          }
        ],
        "healthScore": 0
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/object-with-generic-arrow-fn-props.js",
        "metrics": {
          "complexity": 1,
          "loc": 2123,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.42
          }
        ],
        "healthScore": 45
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/type-alias.js",
        "metrics": {
          "complexity": 1,
          "loc": 154,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/unneeded-ternary-1.js",
        "metrics": {
          "complexity": 1,
          "loc": 231,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 98
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/unneeded-ternary-2.js",
        "metrics": {
          "complexity": 1,
          "loc": 233,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 98
      },
      {
        "file": "tests/fixtures/plugins/subdir/file.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/rules/dir1/no-strings.js",
        "metrics": {
          "complexity": 2,
          "loc": 12,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/rules/dir2/no-literals.js",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/rules/fix-types-test/no-program.js",
        "metrics": {
          "complexity": 1,
          "loc": 17,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/rules/function-style/no-strings.js",
        "metrics": {
          "complexity": 2,
          "loc": 10,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/rules/indent/indent-invalid-fixture-1.js",
        "metrics": {
          "complexity": 64,
          "loc": 454,
          "functionCount": 33,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 2.56
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.51
          }
        ],
        "healthScore": 0
      },
      {
        "file": "tests/fixtures/rules/indent/indent-valid-fixture-1.js",
        "metrics": {
          "complexity": 64,
          "loc": 454,
          "functionCount": 33,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 2.56
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.51
          }
        ],
        "healthScore": 0
      },
      {
        "file": "tests/fixtures/rules/indent-legacy/indent-invalid-fixture-1.js",
        "metrics": {
          "complexity": 64,
          "loc": 454,
          "functionCount": 33,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 2.56
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.51
          }
        ],
        "healthScore": 0
      },
      {
        "file": "tests/fixtures/rules/indent-legacy/indent-valid-fixture-1.js",
        "metrics": {
          "complexity": 64,
          "loc": 454,
          "functionCount": 33,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 2.56
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.51
          }
        ],
        "healthScore": 0
      },
      {
        "file": "tests/fixtures/rules/test/test-custom-rule.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/rules/wrong/custom-rule.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/shallow-glob/subdir/broken.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/shallow-glob/target-dir/passing.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/simple-valid-project/src/foobar.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/source-code-util/jsx/foo.jsx",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/source-code-util/ext/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/source-code-util/nested/bar.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/source-code-util/nested/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/source-code-util/parse-error/parse-error.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/testers/rule-tester/fixes-one-problem.js",
        "metrics": {
          "complexity": 1,
          "loc": 21,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/testers/rule-tester/messageId.js",
        "metrics": {
          "complexity": 8,
          "loc": 137,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/testers/rule-tester/modify-ast-at-first.js",
        "metrics": {
          "complexity": 2,
          "loc": 33,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/testers/rule-tester/modify-ast-at-last.js",
        "metrics": {
          "complexity": 2,
          "loc": 33,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/testers/rule-tester/modify-ast.js",
        "metrics": {
          "complexity": 2,
          "loc": 17,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/testers/rule-tester/no-eval.js",
        "metrics": {
          "complexity": 2,
          "loc": 16,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/testers/rule-tester/no-invalid-args.js",
        "metrics": {
          "complexity": 2,
          "loc": 19,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/testers/rule-tester/no-invalid-schema.js",
        "metrics": {
          "complexity": 2,
          "loc": 18,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/testers/rule-tester/no-schema-violation.js",
        "metrics": {
          "complexity": 3,
          "loc": 19,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/testers/rule-tester/no-test-global.js",
        "metrics": {
          "complexity": 3,
          "loc": 23,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/testers/rule-tester/no-test-settings.js",
        "metrics": {
          "complexity": 3,
          "loc": 19,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/testers/rule-tester/no-var.js",
        "metrics": {
          "complexity": 2,
          "loc": 24,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/testers/rule-tester/suggestions.js",
        "metrics": {
          "complexity": 9,
          "loc": 248,
          "functionCount": 34,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 97
      },
      {
        "file": "tests/fixtures/ts-config-files/cts/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/mts/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/traverse/.hidden_dir/dummy.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/eslint.config.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.6,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/eslint.undefined.config.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/{curly-path}/client/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/{curly-path}/server/eslint.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/backward-token-comment-cursor.js",
        "metrics": {
          "complexity": 9,
          "loc": 32,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.83,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/backward-token-cursor.js",
        "metrics": {
          "complexity": 3,
          "loc": 22,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.83,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/cursor.js",
        "metrics": {
          "complexity": 3,
          "loc": 19,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/cursors.js",
        "metrics": {
          "complexity": 5,
          "loc": 64,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.83,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/decorative-cursor.js",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.83,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/filter-cursor.js",
        "metrics": {
          "complexity": 3,
          "loc": 17,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/forward-token-comment-cursor.js",
        "metrics": {
          "complexity": 9,
          "loc": 36,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.83,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/forward-token-cursor.js",
        "metrics": {
          "complexity": 3,
          "loc": 25,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.83,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/index.js",
        "metrics": {
          "complexity": 30,
          "loc": 401,
          "functionCount": 27,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.7,
          "percentileUsageRank": 73,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.5
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.34
          }
        ],
        "healthScore": 24
      },
      {
        "file": "lib/languages/js/source-code/token-store/limit-cursor.js",
        "metrics": {
          "complexity": 2,
          "loc": 15,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/padded-token-cursor.js",
        "metrics": {
          "complexity": 1,
          "loc": 17,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/skip-cursor.js",
        "metrics": {
          "complexity": 3,
          "loc": 17,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/utils.js",
        "metrics": {
          "complexity": 12,
          "loc": 54,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 90
      },
      {
        "file": "tests/lib/languages/js/source-code/source-code.js",
        "metrics": {
          "complexity": 53,
          "loc": 3712,
          "functionCount": 432,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 2.12
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 2.47
          }
        ],
        "healthScore": 0
      },
      {
        "file": "tests/lib/languages/js/source-code/token-store.js",
        "metrics": {
          "complexity": 6,
          "loc": 1598,
          "functionCount": 226,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.08,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1500,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 51
      },
      {
        "file": "tests/fixtures/cli-engine/hidden/.hiddenfolder/double-quotes.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/cli/foo/.bar/passing.js",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/broken/plugins/console-wrong-quotes.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/broken/plugins2/console-wrong-quotes.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/broken/subbroken/console-wrong-quotes.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/envs/sub/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/packagejson/subdir/wrong-quotes.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/shared/a/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/shared/b/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/glob-util/unignored/dir/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignores-directory-deep/tests/format/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignores-directory-deep/tests/format/jsfmt.spec.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignores-directory/subdir/subsubdir/a.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignored-paths/bower_components/package/file.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignores-subdirectory/subdir/subsubdir/a.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/no-lone-blocks/await-using.js",
        "metrics": {
          "complexity": 1,
          "loc": 326,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.09
          }
        ],
        "healthScore": 86
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/no-lone-blocks/using.js",
        "metrics": {
          "complexity": 1,
          "loc": 308,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.03
          }
        ],
        "healthScore": 87
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/object-assign-with-generic/object-assign-with-generic-1.js",
        "metrics": {
          "complexity": 1,
          "loc": 336,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.12
          }
        ],
        "healthScore": 85
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/object-assign-with-generic/object-assign-with-generic-2.js",
        "metrics": {
          "complexity": 1,
          "loc": 191,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/tagged-template-with-generic/tagged-template-with-generic-1.js",
        "metrics": {
          "complexity": 1,
          "loc": 235,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 98
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/tagged-template-with-generic/tagged-template-with-generic-2.js",
        "metrics": {
          "complexity": 1,
          "loc": 235,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 98
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/tagged-template-with-generic/tagged-template-with-generic-3.js",
        "metrics": {
          "complexity": 1,
          "loc": 235,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 98
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/tagged-template-with-generic/tagged-template-with-generic-and-comment.js",
        "metrics": {
          "complexity": 1,
          "loc": 314,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 68,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 86
      },
      {
        "file": "tests/fixtures/shallow-glob/subdir/subsubdir/broken.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/shallow-glob/subdir/subsubdir/plain.jsx",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/cts/with-type-commonjs/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/cts/with-type-module/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/mts/with-type-commonjs/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/mts/with-type-module/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/const-enums/eslint.config.ts",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/const-enums/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/custom-config/eslint.config.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/custom-config/eslint.custom.config.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/custom-config/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/exports-promise/eslint.config.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/exports-promise/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/jiti-interopDefault/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/local-namespace/eslint.config.ts",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/local-namespace/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/with-type-commonjs/eslint.config.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/with-type-commonjs/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/with-type-module/eslint.config.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/with-type-module/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/{curly-path}/client/src/one.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/{curly-path}/server/src/two.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/cli/ignore-pattern-relative/subdir/subsubdir/a.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/broken/subbroken/subsubbroken/console-wrong-quotes.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/root-true/parent/root/wrong-semi.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/packagejson/subdir/subsubdir/wrong-quotes.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignores-directory-deep/tests/format/subdir/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignores-directory-deep/tests/format/subdir/jsfmt.spec.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ignored-paths/subdir/bower_components/package/file.js",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/ts-config-files/ts/jiti-interopDefault/plugin/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "tests/fixtures/config-hierarchy/packagejson/subdir/subsubdir/subsubsubdir/wrong-quotes.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      }
    ],
    "codeContext": [
      {
        "file": "Makefile.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 18,
            "lineCount": 171,
            "parameterCount": 0,
            "snippet": "function () {\n\techo(\"Validating rules\");\n\tlet errors = 0;\n\tRULE_FILES.forEach(filename => {\n\t\tconst basename = path.basename(filename, \".js\");\n\t\tconst docFilename = `docs/src/rules/${basename}.md`;\n\t\tconst docText = cat(docFilename);\n\t\tconst docTextWithoutFrontmatter = matter(String(docText)).content;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 171 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 17,
            "lineCount": 161,
            "parameterCount": 1,
            "snippet": "filename => {\n\t\tconst basename = path.basename(filename, \".js\");\n\t\tconst docFilename = `docs/src/rules/${basename}.md`;\n\t\tconst docText = cat(docFilename);\n\t\tconst docTextWithoutFrontmatter = matter(String(docText)).content;\n\t\tconst docMarkdown = marked.lexer(docTextWithoutFrontmatter, {\n\t\t\tgfm: true,\n\t\t\tsilent: false,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 161 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 8,
            "lineCount": 58,
            "parameterCount": 0,
            "snippet": "function () {\n\techo(\"Generating documentation\");\n\tconst DOCS_RULES_DIR = path.join(DOCS_SRC_DIR, \"rules\");\n\tconst RULE_VERSIONS_FILE = path.join(\n\t\tDOCS_SRC_DIR,\n\t\t\"_data/rule_versions.json\",\n\t);\n\tlet versions = test(\"-f\", RULE_VERSIONS_FILE)\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "generateRuleIndexPage",
            "complexity": 4,
            "lineCount": 60,
            "parameterCount": 0,
            "snippet": "function generateRuleIndexPage() {\n\tconst docsSiteOutputFile = path.join(DOCS_DATA_DIR, \"rules.json\"),\n\t\tdocsSiteMetaOutputFile = path.join(DOCS_DATA_DIR, \"rules_meta.json\"),\n\t\truleTypes = \"conf/rule-type-list.json\",\n\t\truleTypesData = JSON.parse(cat(path.resolve(ruleTypes)));\n\tconst meta = {};\n\tRULE_FILES.map(filename => [filename, path.basename(filename, \".js\")])\n\t\t.sort((a, b) => a[1].localeCompare(b[1]))\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 60 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "updateVersions",
            "complexity": 4,
            "lineCount": 58,
            "parameterCount": 2,
            "snippet": "function updateVersions(oldVersion, newVersion) {\n\techo(\"Updating ESLint versions list in docs package\");\n\tconst filePath = path.join(\n\t\t__dirname,\n\t\t\"docs\",\n\t\t\"src\",\n\t\t\"_data\",\n\t\t\"versions.json\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "docs/.eleventy.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 25,
            "lineCount": 552,
            "parameterCount": 1,
            "snippet": "function (eleventyConfig) {\n\t/*\n\t * The docs stored in the eslint repo are loaded through eslint.org at\n\t * at /docs/head to show the most recent version of the documentation\n\t * based on the HEAD commit. This gives users a preview of what's coming\n\t * in the next release. This is the way that the site works locally so\n\t * it's easier to see if URLs are broken.\n\t *\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 552 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "imageShortcode",
            "complexity": 3,
            "lineCount": 53,
            "parameterCount": 4,
            "snippet": "function imageShortcode(\n\t\tsource,\n\t\talt,\n\t\tcls,\n\t\tsizes = \"(max-width: 768px) 100vw, 50vw\",\n\t) {\n\t\tconst options = {\n\t\t\twidths: [600, 900, 1500],\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/cli.js",
        "criticalFunctions": [
          {
            "name": "execute",
            "complexity": 71,
            "lineCount": 336,
            "parameterCount": 3,
            "snippet": "async execute(args, text, allowFlatConfig = true) {\n\t\tif (Array.isArray(args)) {\n\t\t\tdebug(\"CLI args: %o\", args.slice(2));\n\t\t}\n\t\t/*\n\t\t * Before doing anything, we need to see if we are using a\n\t\t * flat config file. If so, then we need to change the way command\n\t\t * line args are parsed. This is temporary, and when we fully\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 71 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 336 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "translateOptions",
            "complexity": 30,
            "lineCount": 187,
            "parameterCount": 2,
            "snippet": "async function translateOptions(\n\t{\n\t\tcache,\n\t\tcacheFile,\n\t\tcacheLocation,\n\t\tcacheStrategy,\n\t\tconfig,\n\t\tconfigLookup,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 30 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 187 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/options.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 15,
            "lineCount": 440,
            "parameterCount": 1,
            "snippet": "function (usingFlatConfig) {\n\tlet lookupFlag;\n\tif (usingFlatConfig) {\n\t\tlookupFlag = {\n\t\t\toption: \"config-lookup\",\n\t\t\ttype: \"Boolean\",\n\t\t\tdefault: \"true\",\n\t\t\tdescription: \"Disable look up for eslint.config.js\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 440 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "tools/check-rule-examples.js",
        "criticalFunctions": [
          {
            "name": "findProblems",
            "complexity": 27,
            "lineCount": 196,
            "parameterCount": 1,
            "snippet": "async function findProblems(filename) {\n\tconst text = await readFile(filename, \"UTF-8\");\n\tconst { title } = matter(text).data;\n\tconst isRuleRemoved = !rules.has(title);\n\tconst problems = [];\n\tconst ruleExampleOptions = markdownItRuleExample({\n\t\topen({ code, type, languageOptions = {}, codeBlockToken }) {\n\t\t\tconst languageTag = codeBlockToken.info;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 196 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "open",
            "complexity": 27,
            "lineCount": 182,
            "parameterCount": 1,
            "snippet": "open({ code, type, languageOptions = {}, codeBlockToken }) {\n\t\t\tconst languageTag = codeBlockToken.info;\n\t\t\tif (!STANDARD_LANGUAGE_TAGS.has(languageTag)) {\n\t\t\t\t/*\n\t\t\t\t * Missing language tags are also reported by Markdownlint rule MD040 for all code blocks,\n\t\t\t\t * but the message we output here is more specific.\n\t\t\t\t */\n\t\t\t\tconst message = `${\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 182 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tools/code-sample-minimizer.js",
        "criticalFunctions": [
          {
            "name": "reduceBadExampleSize",
            "complexity": 26,
            "lineCount": 186,
            "parameterCount": 1,
            "snippet": "function reduceBadExampleSize({\n\tsourceText,\n\tpredicate,\n\tparser = {\n\t\tparse: (code, options) =>\n\t\t\tespree.parse(code, {\n\t\t\t\t...options,\n\t\t\t\tloc: true,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 186 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tools/config-rule.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tools/eslint-fuzzer.js",
        "criticalFunctions": [
          {
            "name": "fuzz",
            "complexity": 25,
            "lineCount": 208,
            "parameterCount": 1,
            "snippet": "function fuzz(options) {\n\tassert.strictEqual(\n\t\ttypeof options,\n\t\t\"object\",\n\t\t\"An options object must be provided\",\n\t);\n\tassert.strictEqual(\n\t\ttypeof options.count,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 208 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tools/update-rule-type-headers.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "docs/tools/prism-eslint-hook.js",
        "criticalFunctions": [
          {
            "name": "installPrismESLintMarkerHook",
            "complexity": 50,
            "lineCount": 435,
            "parameterCount": 0,
            "snippet": "function installPrismESLintMarkerHook() {\n\t/**\n\t * A token type for marking the range reported by a rule.\n\t * This is also used for the `class` attribute of `<span>`.\n\t */\n\tconst TOKEN_TYPE_ESLINT_MARKED = \"eslint-marked\";\n\t/**\n\t * Use in the class attribute of `<span>` when an error is displayed in the BOM code or empty string.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 50 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 435 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 40,
            "lineCount": 368,
            "parameterCount": 1,
            "snippet": "env => {\n\t\tmessageMap.clear();\n\t\tif (contentMustBeMarked !== env.code) {\n\t\t\treturn;\n\t\t}\n\t\tcontentMustBeMarked = void 0;\n\t\tconst config = contentLanguageOptions\n\t\t\t? { languageOptions: contentLanguageOptions }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 40 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 368 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "convertMarked",
            "complexity": 13,
            "lineCount": 75,
            "parameterCount": 1,
            "snippet": "function* convertMarked({ tokens, range, message, tokenStart = 0 }) {\n\t\t\tlet start = tokenStart;\n\t\t\tconst buffer = [tokens].flat();\n\t\t\tlet token;\n\t\t\twhile ((token = buffer.shift())) {\n\t\t\t\tconst content = getTokenContent(token);\n\t\t\t\tconst end = start + content.length;\n\t\t\t\tif (!content || end <= range[0]) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "splitToken",
            "complexity": 10,
            "lineCount": 83,
            "parameterCount": 1,
            "snippet": "function splitToken({ token, range, message, tokenStart }) {\n\t\t\tconst content = getTokenContent(token);\n\t\t\tconst tokenEnd = tokenStart + content.length;\n\t\t\tif (range[0] <= tokenStart && tokenEnd <= range[1]) {\n\t\t\t\tconst marked = new Prism.Token(\n\t\t\t\t\tTOKEN_TYPE_ESLINT_MARKED,\n\t\t\t\t\t[token],\n\t\t\t\t\t[getMessageIdFromMessage(message)],\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 83 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/cli-engine/cli-engine.js",
        "criticalFunctions": [
          {
            "name": "executeOnFiles",
            "complexity": 18,
            "lineCount": 132,
            "parameterCount": 1,
            "snippet": "executeOnFiles(patterns) {\n\t\tconst {\n\t\t\tcacheFilePath,\n\t\t\tfileEnumerator,\n\t\t\tlastConfigArrays,\n\t\t\tlintResultCache,\n\t\t\tlinter,\n\t\t\toptions: {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 132 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getFormatter",
            "complexity": 9,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "getFormatter(format) {\n\t\tconst resolvedFormatName = format || \"stylish\";\n\t\tif (typeof resolvedFormatName === \"string\") {\n\t\t\tconst normalizedFormatName = resolvedFormatName.replace(\n\t\t\t\t/\\\\/gu,\n\t\t\t\t\"/\",\n\t\t\t);\n\t\t\tconst slots = internalSlotsMap.get(this);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "executeOnText",
            "complexity": 7,
            "lineCount": 70,
            "parameterCount": 3,
            "snippet": "executeOnText(text, filename, warnIgnored) {\n\t\tconst {\n\t\t\tconfigArrayFactory,\n\t\t\tfileEnumerator,\n\t\t\tlastConfigArrays,\n\t\t\tlinter,\n\t\t\toptions: {\n\t\t\t\tallowInlineConfig,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 70 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "verifyText",
            "complexity": 6,
            "lineCount": 58,
            "parameterCount": 1,
            "snippet": "function verifyText({\n\ttext,\n\tcwd,\n\tfilePath: providedFilePath,\n\tconfig,\n\tfix,\n\tallowInlineConfig,\n\treportUnusedDisableDirectives,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              }
            ]
          },
          {
            "name": "getCacheFile",
            "complexity": 6,
            "lineCount": 58,
            "parameterCount": 2,
            "snippet": "function getCacheFile(cacheFile, cwd) {\n\t/*\n\t * make sure the path separators are normalized for the environment/os\n\t * keeping the trailing path separator if present\n\t */\n\tconst normalizedCacheFile = path.normalize(cacheFile);\n\tconst resolvedCacheFile = path.resolve(cwd, normalizedCacheFile);\n\tconst looksLikeADirectory = normalizedCacheFile.slice(-1) === path.sep;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/cli-engine/file-enumerator.js",
        "criticalFunctions": [
          {
            "name": "_iterateFilesRecursive",
            "complexity": 14,
            "lineCount": 80,
            "parameterCount": 2,
            "snippet": "*_iterateFilesRecursive(directoryPath, options) {\n\t\tdebug(`Enter the directory: ${directoryPath}`);\n\t\tconst { configArrayFactory } = internalSlotsMap.get(this);\n\t\t/** @type {ConfigArray|null} */\n\t\tlet config = null;\n\t\tfor (const entry of readdirSafeSync(directoryPath)) {\n\t\t\tconst filePath = path.join(directoryPath, entry.name);\n\t\t\tconst fileInfo = entry.isSymbolicLink()\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "iterateFiles",
            "complexity": 11,
            "lineCount": 58,
            "parameterCount": 1,
            "snippet": "*iterateFiles(patternOrPatterns) {\n\t\tconst { globInputPaths, errorOnUnmatchedPattern } =\n\t\t\tinternalSlotsMap.get(this);\n\t\tconst patterns = Array.isArray(patternOrPatterns)\n\t\t\t? patternOrPatterns\n\t\t\t: [patternOrPatterns];\n\t\tdebug(\"Start to iterate files: %o\", patterns);\n\t\tconst set = new Set();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/config/config-loader.js",
        "criticalFunctions": [
          {
            "name": "calculateConfigArray",
            "complexity": 15,
            "lineCount": 102,
            "parameterCount": 3,
            "snippet": "static async calculateConfigArray(configFilePath, basePath, options) {\n\t\tconst {\n\t\t\tcwd,\n\t\t\tbaseConfig,\n\t\t\tignoreEnabled,\n\t\t\tignorePatterns,\n\t\t\toverrideConfig,\n\t\t\thasUnstableNativeNodeJsTSConfigFlag = false,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 102 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "loadConfigFile",
            "complexity": 8,
            "lineCount": 79,
            "parameterCount": 2,
            "snippet": "async function loadConfigFile(filePath, hasUnstableNativeNodeJsTSConfigFlag) {\n\tdebug(`Loading config from ${filePath}`);\n\tconst fileURL = pathToFileURL(filePath);\n\tdebug(`Config file URL is ${fileURL}`);\n\tconst mtime = (await fs.stat(filePath)).mtime.getTime();\n\t/*\n\t * Append a query with the config file's modification time (`mtime`) in order\n\t * to import the current version of the config file. Without the query, `import()` would\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/config/config.js",
        "criticalFunctions": [
          {
            "name": "validateRulesConfig",
            "complexity": 12,
            "lineCount": 62,
            "parameterCount": 1,
            "snippet": "validateRulesConfig(rulesConfig) {\n\t\tif (!rulesConfig) {\n\t\t\tthrow new TypeError(\"Config is required for validation.\");\n\t\t}\n\t\tfor (const [ruleId, ruleOptions] of Object.entries(rulesConfig)) {\n\t\t\tif (ruleId === \"__proto__\") {\n\t\t\t\tcontinue;\n\t\t\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/config/flat-config-schema.js",
        "criticalFunctions": [
          {
            "name": "deepMerge",
            "complexity": 9,
            "lineCount": 52,
            "parameterCount": 3,
            "snippet": "function deepMerge(first, second, mergeMap = new Map()) {\n\tlet secondMergeMap = mergeMap.get(first);\n\tif (secondMergeMap) {\n\t\tconst result = secondMergeMap.get(second);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t} else {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "merge",
            "complexity": 7,
            "lineCount": 56,
            "parameterCount": 2,
            "snippet": "merge(first = {}, second = {}) {\n\t\tconst result = {\n\t\t\t...first,\n\t\t\t...second,\n\t\t};\n\t\tfor (const ruleId of Object.keys(result)) {\n\t\t\ttry {\n\t\t\t\tif (ruleId === \"__proto__\") {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/eslint/eslint-helpers.js",
        "criticalFunctions": [
          {
            "name": "processOptions",
            "complexity": 47,
            "lineCount": 194,
            "parameterCount": 1,
            "snippet": "function processOptions({\n\tallowInlineConfig = true, // ← we cannot use `overrideConfig.noInlineConfig` instead because `allowInlineConfig` has side-effect that suppress warnings that show inline configs are ignored.\n\tbaseConfig = null,\n\tcache = false,\n\tcacheLocation = \".eslintcache\",\n\tcacheStrategy = \"metadata\",\n\tcwd = process.cwd(),\n\terrorOnUnmatchedPattern = true,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 47 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 194 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "globSearch",
            "complexity": 13,
            "lineCount": 124,
            "parameterCount": 1,
            "snippet": "async function globSearch({\n\tbasePath,\n\tpatterns,\n\trawPatterns,\n\tconfigLoader,\n\terrorOnUnmatchedPattern,\n}) {\n\tif (patterns.length === 0) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 124 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "findFiles",
            "complexity": 10,
            "lineCount": 118,
            "parameterCount": 1,
            "snippet": "async function findFiles({\n\tpatterns,\n\tglobInputPaths,\n\tcwd,\n\tconfigLoader,\n\terrorOnUnmatchedPattern,\n}) {\n\tconst results = [];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 118 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getCacheFile",
            "complexity": 6,
            "lineCount": 58,
            "parameterCount": 3,
            "snippet": "function getCacheFile(cacheFile, cwd, { prefix = \".cache_\" } = {}) {\n\t/*\n\t * make sure the path separators are normalized for the environment/os\n\t * keeping the trailing path separator if present\n\t */\n\tconst normalizedCacheFile = path.normalize(cacheFile);\n\tconst resolvedCacheFile = path.resolve(cwd, normalizedCacheFile);\n\tconst looksLikeADirectory = normalizedCacheFile.slice(-1) === path.sep;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "globMultiSearch",
            "complexity": 5,
            "lineCount": 66,
            "parameterCount": 1,
            "snippet": "async function globMultiSearch({\n\tsearches,\n\tconfigLoader,\n\terrorOnUnmatchedPattern,\n}) {\n\t/*\n\t * For convenience, we normalized the search map into an array of objects.\n\t * Next, we filter out all searches that have no patterns. This happens\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/eslint/eslint.js",
        "criticalFunctions": [
          {
            "name": "lintFiles",
            "complexity": 23,
            "lineCount": 208,
            "parameterCount": 1,
            "snippet": "async lintFiles(patterns) {\n\t\tlet normalizedPatterns = patterns;\n\t\tconst {\n\t\t\tcacheFilePath,\n\t\t\tlintResultCache,\n\t\t\tlinter,\n\t\t\toptions: eslintOptions,\n\t\t} = privateMembers.get(this);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 208 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "lintText",
            "complexity": 16,
            "lineCount": 102,
            "parameterCount": 2,
            "snippet": "async lintText(code, options = {}) {\n\t\tif (typeof code !== \"string\") {\n\t\t\tthrow new Error(\"'code' must be a string\");\n\t\t}\n\t\tif (typeof options !== \"object\") {\n\t\t\tthrow new Error(\"'options' must be an object, null, or undefined\");\n\t\t}\n\t\tconst { filePath, warnIgnored, ...unknownOptions } = options || {};\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 102 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getRulesMetaForResults",
            "complexity": 9,
            "lineCount": 58,
            "parameterCount": 1,
            "snippet": "getRulesMetaForResults(results) {\n\t\tif (results.length === 0) {\n\t\t\treturn {};\n\t\t}\n\t\tconst resultRules = new Map();\n\t\tconst {\n\t\t\tconfigLoader,\n\t\t\toptions: { cwd },\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 9,
            "lineCount": 95,
            "parameterCount": 1,
            "snippet": "async filePath => {\n\t\t\t\tconst configs =\n\t\t\t\t\tawait this.#configLoader.loadConfigArrayForFile(filePath);\n\t\t\t\tconst config = configs.getConfig(filePath);\n\t\t\t\t/*\n\t\t\t\t * If a filename was entered that cannot be matched\n\t\t\t\t * to a config, then notify the user.\n\t\t\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 95 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "loadFormatter",
            "complexity": 9,
            "lineCount": 86,
            "parameterCount": 1,
            "snippet": "async loadFormatter(name = \"stylish\") {\n\t\tif (typeof name !== \"string\") {\n\t\t\tthrow new Error(\"'name' must be a string\");\n\t\t}\n\t\tconst normalizedFormatName = name.replace(/\\\\/gu, \"/\");\n\t\tconst namespace = getNamespaceFromTerm(normalizedFormatName);\n\t\tconst { cwd } = privateMembers.get(this).options;\n\t\tlet formatterPath;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 86 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/eslint/legacy-eslint.js",
        "criticalFunctions": [
          {
            "name": "processOptions",
            "complexity": 46,
            "lineCount": 188,
            "parameterCount": 1,
            "snippet": "function processOptions({\n\tallowInlineConfig = true, // ← we cannot use `overrideConfig.noInlineConfig` instead because `allowInlineConfig` has side-effect that suppress warnings that show inline configs are ignored.\n\tbaseConfig = null,\n\tcache = false,\n\tcacheLocation = \".eslintcache\",\n\tcacheStrategy = \"metadata\",\n\tcwd = process.cwd(),\n\terrorOnUnmatchedPattern = true,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 46 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 188 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/apply-disable-directives.js",
        "criticalFunctions": [
          {
            "name": "applyDirectives",
            "complexity": 24,
            "lineCount": 128,
            "parameterCount": 1,
            "snippet": "function applyDirectives(options) {\n\tconst problems = [];\n\tconst usedDisableDirectives = new Set();\n\tconst { sourceCode } = options;\n\tfor (const problem of options.problems) {\n\t\tlet disableDirectivesForProblem = [];\n\t\tlet nextDirectiveIndex = 0;\n\t\twhile (\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 128 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 11,
            "lineCount": 121,
            "parameterCount": 1,
            "snippet": "({\n\tlanguage,\n\tsourceCode,\n\tdirectives,\n\tdisableFixes,\n\tproblems,\n\tconfiguredRules,\n\truleFilter,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 121 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "collectUsedEnableDirectives",
            "complexity": 10,
            "lineCount": 79,
            "parameterCount": 1,
            "snippet": "function collectUsedEnableDirectives(directives) {\n\t/**\n\t * A Map of `eslint-enable` keyed by ruleIds that may be marked as used.\n\t * If `eslint-enable` does not have a ruleId, the key will be `null`.\n\t * @type {Map<string|null, Directive>}\n\t */\n\tconst enabledRules = new Map();\n\t/**\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createIndividualDirectivesRemoval",
            "complexity": 2,
            "lineCount": 91,
            "parameterCount": 3,
            "snippet": "function createIndividualDirectivesRemoval(\n\tdirectives,\n\tparentDirective,\n\tsourceCode,\n) {\n\t/*\n\t * Get the list of the rules text without any surrounding whitespace. In order to preserve the original\n\t * formatting, we don't want to change that whitespace.\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 91 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 2,
            "lineCount": 64,
            "parameterCount": 1,
            "snippet": "directive => {\n\t\tconst { ruleId } = directive;\n\t\tconst regex = new RegExp(\n\t\t\tString.raw`(?:^|\\s*,\\s*)(?<quote>['\"]?)${escapeRegExp(ruleId)}\\k<quote>(?:\\s*,\\s*|$)`,\n\t\t\t\"u\",\n\t\t);\n\t\tconst match = regex.exec(listText);\n\t\tconst matchedText = match[0];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/esquery.js",
        "criticalFunctions": [
          {
            "name": "analyzeParsedSelector",
            "complexity": 17,
            "lineCount": 84,
            "parameterCount": 1,
            "snippet": "function analyzeParsedSelector(parsedSelector) {\n\tlet attributeCount = 0;\n\tlet identifierCount = 0;\n\t/**\n\t * Analyzes a selector and returns the node types that could possibly trigger it.\n\t * @param {ESQuerySelector} selector The selector to analyze.\n\t * @returns {string[]|null} The node types that could possibly trigger this selector, or `null` if all node types could trigger it\n\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 84 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "analyzeSelector",
            "complexity": 17,
            "lineCount": 66,
            "parameterCount": 1,
            "snippet": "function analyzeSelector(selector) {\n\t\tswitch (selector.type) {\n\t\t\tcase \"identifier\":\n\t\t\t\tidentifierCount++;\n\t\t\t\treturn [selector.value];\n\t\t\tcase \"not\":\n\t\t\t\tselector.selectors.map(analyzeSelector);\n\t\t\t\treturn null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/linter.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 31,
            "lineCount": 347,
            "parameterCount": 3,
            "snippet": "#flatVerifyWithoutProcessors(file, providedConfig, providedOptions) {\n\t\tconst slots = internalSlotsMap.get(this);\n\t\tconst config = providedConfig || {};\n\t\tconst { settings = {}, languageOptions } = config;\n\t\tconst options = normalizeVerifyOptions(providedOptions, config);\n\t\tif (!slots.lastSourceCode) {\n\t\t\tlet t;\n\t\t\tif (options.stats) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 31 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 347 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "runRules",
            "complexity": 29,
            "lineCount": 191,
            "parameterCount": 15,
            "snippet": "function runRules(\n\tsourceCode,\n\tconfiguredRules,\n\truleMapper,\n\tparserName,\n\tlanguage,\n\tlanguageOptions,\n\tsettings,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 29 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 191 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "15 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 28,
            "lineCount": 144,
            "parameterCount": 1,
            "snippet": "ruleId => {\n\t\tconst severity = Config.getRuleNumericSeverity(configuredRules[ruleId]);\n\t\tif (severity === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (ruleFilter && !ruleFilter({ ruleId, severity })) {\n\t\t\treturn;\n\t\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 144 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getDirectiveComments",
            "complexity": 27,
            "lineCount": 260,
            "parameterCount": 4,
            "snippet": "function getDirectiveComments(\n\tsourceCode,\n\truleMapper,\n\twarnInlineConfig,\n\tconfig,\n) {\n\tconst configuredRules = {};\n\tconst enabledGlobals = Object.create(null);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 260 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 27,
            "lineCount": 233,
            "parameterCount": 1,
            "snippet": "comment => {\n\t\t\tconst directive = commentParser.parseDirective(comment.value);\n\t\t\tif (!directive) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst {\n\t\t\t\tlabel,\n\t\t\t\tvalue,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 233 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/report-translator.js",
        "criticalFunctions": [
          {
            "name": "createReportTranslator",
            "complexity": 10,
            "lineCount": 64,
            "parameterCount": 1,
            "snippet": "function createReportTranslator(metadata) {\n\t/*\n\t * `createReportTranslator` gets called once per enabled rule per file. It needs to be very performant.\n\t * The report translator itself (i.e. the function that `createReportTranslator` returns) gets\n\t * called every time a rule reports a problem, which happens much less frequently (usually, the vast\n\t * majority of rules don't report any problems for a given file).\n\t */\n\treturn (...args) => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 10,
            "lineCount": 56,
            "parameterCount": 1,
            "snippet": "(...args) => {\n\t\tconst descriptor = normalizeMultiArgReportCall(...args);\n\t\tconst messages = metadata.messageIds;\n\t\tconst { sourceCode } = metadata;\n\t\tassertValidNodeInfo(descriptor);\n\t\tlet computedMessage;\n\t\tif (descriptor.messageId) {\n\t\t\tif (!messages) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/source-code-fixer.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 16,
            "lineCount": 92,
            "parameterCount": 3,
            "snippet": "function (sourceText, messages, shouldFix) {\n\tdebug(\"Applying fixes\");\n\tif (shouldFix === false) {\n\t\tdebug(\"shouldFix parameter was false, not attempting fixes\");\n\t\treturn {\n\t\t\tfixed: false,\n\t\t\tmessages,\n\t\t\toutput: sourceText,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 92 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/source-code-traverser.js",
        "criticalFunctions": [
          {
            "name": "calculateSelectors",
            "complexity": 13,
            "lineCount": 65,
            "parameterCount": 3,
            "snippet": "calculateSelectors(node, ancestry, isExit) {\n\t\tconst nodeTypeKey = this.esqueryOptions?.nodeTypeKey || \"type\";\n\t\tconst selectors = [];\n\t\t/*\n\t\t * Get the selectors that may match this node. First, check\n\t\t * to see if the node type has specific selectors,\n\t\t * then gather the \"any type\" selectors.\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "traverseSync",
            "complexity": 6,
            "lineCount": 56,
            "parameterCount": 3,
            "snippet": "traverseSync(sourceCode, visitor, { steps } = {}) {\n\t\tconst esquery = new ESQueryHelper(visitor, {\n\t\t\tvisitorKeys: sourceCode.visitorKeys ?? this.#language.visitorKeys,\n\t\t\tfallback: vk.getKeys,\n\t\t\tmatchClass: this.#language.matchesSelectorClass ?? (() => false),\n\t\t\tnodeTypeKey: this.#language.nodeTypeKey,\n\t\t});\n\t\tconst currentAncestry = [];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rule-tester/rule-tester.js",
        "criticalFunctions": [
          {
            "name": "run",
            "complexity": 91,
            "lineCount": 1008,
            "parameterCount": 3,
            "snippet": "run(ruleName, rule, test) {\n\t\tconst testerConfig = this.testerConfig,\n\t\t\trequiredScenarios = [\"valid\", \"invalid\"],\n\t\t\tscenarioErrors = [],\n\t\t\tlinter = this.linter,\n\t\t\truleId = `rule-to-test/${ruleName}`;\n\t\tconst seenValidTestCases = new Set();\n\t\tconst seenInvalidTestCases = new Set();\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 91 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1008 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "testInvalidTemplate",
            "complexity": 48,
            "lineCount": 483,
            "parameterCount": 1,
            "snippet": "function testInvalidTemplate(item) {\n\t\t\tassert.ok(\n\t\t\t\ttypeof item.code === \"string\",\n\t\t\t\t\"Test case must specify a string value for 'code'\",\n\t\t\t);\n\t\t\tif (item.name) {\n\t\t\t\tassert.ok(\n\t\t\t\t\ttypeof item.name === \"string\",\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 48 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 483 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "runRuleForItem",
            "complexity": 20,
            "lineCount": 247,
            "parameterCount": 1,
            "snippet": "function runRuleForItem(item) {\n\t\t\tconst flatConfigArrayOptions = {\n\t\t\t\tbaseConfig,\n\t\t\t};\n\t\t\tif (item.filename) {\n\t\t\t\tflatConfigArrayOptions.basePath =\n\t\t\t\t\tpath.parse(item.filename).root || void 0;\n\t\t\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 247 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 9,
            "lineCount": 168,
            "parameterCount": 2,
            "snippet": "(expectedSuggestion, index) => {\n\t\t\t\t\t\t\t\t\t\t\tassert.ok(\n\t\t\t\t\t\t\t\t\t\t\t\ttypeof expectedSuggestion ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"object\" &&\n\t\t\t\t\t\t\t\t\t\t\t\t\texpectedSuggestion !== null,\n\t\t\t\t\t\t\t\t\t\t\t\t\"Test suggestion in 'suggestions' array must be an object.\",\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tObject.keys(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 168 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/services/suppressions-service.js",
        "criticalFunctions": [
          {
            "name": "applySuppressions",
            "complexity": 10,
            "lineCount": 67,
            "parameterCount": 2,
            "snippet": "applySuppressions(results, suppressions) {\n\t\t/**\n\t\t * We copy the results to avoid modifying the original objects\n\t\t * We remove only result messages that are matched and hence suppressed\n\t\t * We leave the rest untouched to minimize the risk of losing parts of the original data\n\t\t */\n\t\tconst filtered = structuredClone(results);\n\t\tconst unused = {};\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/accessor-pairs.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 33,
            "lineCount": 190,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [\n\t\t\t{\n\t\t\t\tgetWithoutSet: checkGetWithoutSet,\n\t\t\t\tsetWithoutGet: checkSetWithoutGet,\n\t\t\t\tenforceForClassMembers,\n\t\t\t},\n\t\t] = context.options;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 33 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 190 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkList",
            "complexity": 18,
            "lineCount": 48,
            "parameterCount": 1,
            "snippet": "function checkList(nodes) {\n\t\t\tconst accessors = [];\n\t\t\tlet found = false;\n\t\t\tfor (let i = 0; i < nodes.length; i++) {\n\t\t\t\tconst node = nodes[i];\n\t\t\t\tif (isAccessorKind(node)) {\n\t\t\t\t\tconst name = astUtils.getStaticPropertyName(node);\n\t\t\t\t\tconst key =\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/array-bracket-newline.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 23,
            "lineCount": 208,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Normalizes a given option value.\n\t\t * @param {string|Object|undefined} option An option value to parse.\n\t\t * @returns {{multiline: boolean, minItems: number}} Normalized option object.\n\t\t */\n\t\tfunction normalizeOptionValue(option) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 208 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "check",
            "complexity": 15,
            "lineCount": 54,
            "parameterCount": 1,
            "snippet": "function check(node) {\n\t\t\tconst elements = node.elements;\n\t\t\tconst normalizedOptions = normalizeOptions(context.options[0]);\n\t\t\tconst options = normalizedOptions[node.type];\n\t\t\tconst openBracket = sourceCode.getFirstToken(node);\n\t\t\tconst closeBracket = sourceCode.getLastToken(node);\n\t\t\tconst firstIncComment = sourceCode.getTokenAfter(openBracket, {\n\t\t\t\tincludeComments: true,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/array-bracket-spacing.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 32,
            "lineCount": 223,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst spaced = context.options[0] === \"always\",\n\t\t\tsourceCode = context.sourceCode;\n\t\t/**\n\t\t * Determines whether an option is set, relative to the spacing option.\n\t\t * If spaced is \"always\", then check whether option is set to false.\n\t\t * If spaced is \"never\", then check whether option is set to true.\n\t\t * @param {Object} option The option to exclude.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 223 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "validateArraySpacing",
            "complexity": 27,
            "lineCount": 64,
            "parameterCount": 1,
            "snippet": "function validateArraySpacing(node) {\n\t\t\tif (options.spaced && node.elements.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst first = sourceCode.getFirstToken(node),\n\t\t\t\tsecond = sourceCode.getFirstToken(node, 1),\n\t\t\t\tlast = node.typeAnnotation\n\t\t\t\t\t? sourceCode.getTokenBefore(node.typeAnnotation)\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/array-callback-return.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 26,
            "lineCount": 223,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [options] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\tlet funcInfo = {\n\t\t\tarrayMethodName: null,\n\t\t\tupper: null,\n\t\t\tcodePath: null,\n\t\t\thasReturn: false,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 223 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getArrayMethodName",
            "complexity": 15,
            "lineCount": 68,
            "parameterCount": 1,
            "snippet": "function getArrayMethodName(node) {\n\tlet currentNode = node;\n\twhile (currentNode) {\n\t\tconst parent = currentNode.parent;\n\t\tswitch (parent.type) {\n\t\t\t/*\n\t\t\t * Looks up the destination. e.g.,\n\t\t\t * foo.every(nativeFoo || function foo() { ... });\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkLastSegment",
            "complexity": 13,
            "lineCount": 90,
            "parameterCount": 1,
            "snippet": "function checkLastSegment(node) {\n\t\t\tif (!funcInfo.shouldCheck) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst messageAndSuggestions = { messageId: \"\", suggest: [] };\n\t\t\tif (funcInfo.arrayMethodName === \"forEach\") {\n\t\t\t\tif (\n\t\t\t\t\toptions.checkForEach &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 90 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ReturnStatement",
            "complexity": 11,
            "lineCount": 62,
            "parameterCount": 1,
            "snippet": "ReturnStatement(node) {\n\t\t\t\tif (!funcInfo.shouldCheck) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfuncInfo.hasReturn = true;\n\t\t\t\tconst messageAndSuggestions = { messageId: \"\", suggest: [] };\n\t\t\t\tif (funcInfo.arrayMethodName === \"forEach\") {\n\t\t\t\t\tif (options.checkForEach && node.argument) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/array-element-newline.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 34,
            "lineCount": 271,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Normalizes a given option value.\n\t\t * @param {string|Object|undefined} providedOption An option value to parse.\n\t\t * @returns {{multiline: boolean, minItems: number}} Normalized option object.\n\t\t */\n\t\tfunction normalizeOptionValue(providedOption) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 34 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 271 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "check",
            "complexity": 19,
            "lineCount": 108,
            "parameterCount": 1,
            "snippet": "function check(node) {\n\t\t\tconst elements = node.elements;\n\t\t\tconst normalizedOptions = normalizeOptions(context.options[0]);\n\t\t\tconst options = normalizedOptions[node.type];\n\t\t\tif (!options) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet elementBreak = false;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 108 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "reportNoLineBreak",
            "complexity": 4,
            "lineCount": 53,
            "parameterCount": 1,
            "snippet": "function reportNoLineBreak(token) {\n\t\t\tconst tokenBefore = sourceCode.getTokenBefore(token, {\n\t\t\t\tincludeComments: true,\n\t\t\t});\n\t\t\tcontext.report({\n\t\t\t\tloc: {\n\t\t\t\t\tstart: tokenBefore.loc.end,\n\t\t\t\t\tend: token.loc.start,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/arrow-body-style.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 47,
            "lineCount": 338,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst options = context.options;\n\t\tconst always = options[0] === \"always\";\n\t\tconst asNeeded = options[0] === \"as-needed\";\n\t\tconst never = options[0] === \"never\";\n\t\tconst requireReturnForObjectLiteral =\n\t\t\toptions[1] && options[1].requireReturnForObjectLiteral;\n\t\tconst sourceCode = context.sourceCode;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 47 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 338 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "validate",
            "complexity": 38,
            "lineCount": 256,
            "parameterCount": 1,
            "snippet": "function validate(node) {\n\t\t\tconst arrowBody = node.body;\n\t\t\tif (arrowBody.type === \"BlockStatement\") {\n\t\t\t\tconst blockBody = arrowBody.body;\n\t\t\t\tif (blockBody.length !== 1 && !never) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 38 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 256 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "fix",
            "complexity": 13,
            "lineCount": 100,
            "parameterCount": 1,
            "snippet": "fix(fixer) {\n\t\t\t\t\t\t\tconst fixes = [];\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tblockBody.length !== 1 ||\n\t\t\t\t\t\t\t\tblockBody[0].type !== \"ReturnStatement\" ||\n\t\t\t\t\t\t\t\t!blockBody[0].argument ||\n\t\t\t\t\t\t\t\thasASIProblem(\n\t\t\t\t\t\t\t\t\tsourceCode.getTokenAfter(arrowBody),\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 100 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "fix",
            "complexity": 6,
            "lineCount": 90,
            "parameterCount": 1,
            "snippet": "fix(fixer) {\n\t\t\t\t\t\t\tconst fixes = [];\n\t\t\t\t\t\t\tconst arrowToken = sourceCode.getTokenBefore(\n\t\t\t\t\t\t\t\tarrowBody,\n\t\t\t\t\t\t\t\tastUtils.isArrowToken,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst [\n\t\t\t\t\t\t\t\tfirstTokenAfterArrow,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 90 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/arrow-parens.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 23,
            "lineCount": 143,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst asNeeded = context.options[0] === \"as-needed\";\n\t\tconst requireForBlockBody =\n\t\t\tasNeeded &&\n\t\t\tcontext.options[1] &&\n\t\t\tcontext.options[1].requireForBlockBody === true;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 143 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 17,
            "lineCount": 66,
            "parameterCount": 1,
            "snippet": "\"ArrowFunctionExpression[params.length=1]\"(node) {\n\t\t\t\tconst shouldHaveParens =\n\t\t\t\t\t!asNeeded || (requireForBlockBody && hasBlockBody(node));\n\t\t\t\tconst openingParen = findOpeningParenOfParams(node);\n\t\t\t\tconst hasParens = openingParen !== null;\n\t\t\t\tconst [param] = node.params;\n\t\t\t\tif (shouldHaveParens && !hasParens) {\n\t\t\t\t\tcontext.report({\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/block-spacing.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 19,
            "lineCount": 144,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst always = context.options[0] !== \"never\",\n\t\t\tmessageId = always ? \"missing\" : \"extra\",\n\t\t\tsourceCode = context.sourceCode;\n\t\t/**\n\t\t * Gets the open brace token from a given node.\n\t\t * @param {ASTNode} node A BlockStatement/StaticBlock/SwitchStatement node to get.\n\t\t * @returns {Token} The token of the open brace.\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 144 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkSpacingInsideBraces",
            "complexity": 14,
            "lineCount": 88,
            "parameterCount": 1,
            "snippet": "function checkSpacingInsideBraces(node) {\n\t\t\tconst openBrace = getOpenBrace(node);\n\t\t\tconst closeBrace = sourceCode.getLastToken(node);\n\t\t\tconst firstToken = sourceCode.getTokenAfter(openBrace, {\n\t\t\t\tincludeComments: true,\n\t\t\t});\n\t\t\tconst lastToken = sourceCode.getTokenBefore(closeBrace, {\n\t\t\t\tincludeComments: true,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 88 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/brace-style.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 26,
            "lineCount": 197,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst style = context.options[0] || \"1tbs\",\n\t\t\tparams = context.options[1] || {},\n\t\t\tsourceCode = context.sourceCode;\n\t\t/**\n\t\t * Fixes a place where a newline unexpectedly appears\n\t\t * @param {Token} firstToken The token before the unexpected newline\n\t\t * @param {Token} secondToken The token after the unexpected newline\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 197 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "validateCurlyPair",
            "complexity": 13,
            "lineCount": 73,
            "parameterCount": 2,
            "snippet": "function validateCurlyPair(openingCurly, closingCurly) {\n\t\t\tconst tokenBeforeOpeningCurly =\n\t\t\t\tsourceCode.getTokenBefore(openingCurly);\n\t\t\tconst tokenAfterOpeningCurly =\n\t\t\t\tsourceCode.getTokenAfter(openingCurly);\n\t\t\tconst tokenBeforeClosingCurly =\n\t\t\t\tsourceCode.getTokenBefore(closingCurly);\n\t\t\tconst singleLineException =\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 73 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/callback-return.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 27,
            "lineCount": 160,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst callbacks = context.options[0] || [\"callback\", \"cb\", \"next\"],\n\t\t\tsourceCode = context.sourceCode;\n\t\t/**\n\t\t * Find the closest parent matching a list of types.\n\t\t * @param {ASTNode} node The node whose parents we are searching\n\t\t * @param {Array} types The node types to match\n\t\t * @returns {ASTNode} The matched node or undefined.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 160 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "CallExpression",
            "complexity": 13,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "CallExpression(node) {\n\t\t\t\tif (!isCallback(node)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst closestBlock =\n\t\t\t\t\tfindClosestParentOfType(node, [\n\t\t\t\t\t\t\"BlockStatement\",\n\t\t\t\t\t\t\"ReturnStatement\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/camelcase.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 55,
            "lineCount": 347,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [\n\t\t\t{\n\t\t\t\tallow,\n\t\t\t\tignoreDestructuring,\n\t\t\t\tignoreGlobals,\n\t\t\t\tignoreImports,\n\t\t\t\tproperties,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 55 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 347 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/capitalized-comments.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 23,
            "lineCount": 183,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst capitalize = context.options[0] || \"always\",\n\t\t\tnormalizedOptions = getAllNormalizedOptions(context.options[1]),\n\t\t\tsourceCode = context.sourceCode;\n\t\tcreateRegExpForIgnorePatterns(normalizedOptions);\n\t\t/**\n\t\t * Checks whether a comment is an inline comment.\n\t\t *\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 183 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isCommentValid",
            "complexity": 15,
            "lineCount": 66,
            "parameterCount": 2,
            "snippet": "function isCommentValid(comment, options) {\n\t\t\tif (DEFAULT_IGNORE_PATTERN.test(comment.value)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst commentWithoutAsterisks = comment.value.replace(/\\*/gu, \"\");\n\t\t\tif (\n\t\t\t\toptions.ignorePatternRegExp &&\n\t\t\t\toptions.ignorePatternRegExp.test(commentWithoutAsterisks)\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/class-methods-use-this.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 25,
            "lineCount": 183,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [options] = context.options;\n\t\tconst {\n\t\t\tenforceForClassFields,\n\t\t\tignoreOverrideMethods,\n\t\t\tignoreClassesWithImplements,\n\t\t} = options;\n\t\tconst exceptMethods = new Set(options.exceptMethods);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 183 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/comma-dangle.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 29,
            "lineCount": 256,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst options = normalizeOptions(\n\t\t\tcontext.options[0],\n\t\t\tcontext.languageOptions.ecmaVersion,\n\t\t);\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Gets the last item of the given node.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 29 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 256 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/comma-spacing.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 24,
            "lineCount": 137,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst tokensAndComments = sourceCode.tokensAndComments;\n\t\tconst options = {\n\t\t\tbefore: context.options[0] ? context.options[0].before : false,\n\t\t\tafter: context.options[0] ? context.options[0].after : true,\n\t\t};\n\t\tconst commaTokensToIgnore = [];\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 137 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 16,
            "lineCount": 49,
            "parameterCount": 0,
            "snippet": "\"Program:exit\"() {\n\t\t\t\ttokensAndComments.forEach((token, i) => {\n\t\t\t\t\tif (!astUtils.isCommaToken(token)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst previousToken = tokensAndComments[i - 1];\n\t\t\t\t\tconst nextToken = tokensAndComments[i + 1];\n\t\t\t\t\tif (\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 16,
            "lineCount": 47,
            "parameterCount": 2,
            "snippet": "(token, i) => {\n\t\t\t\t\tif (!astUtils.isCommaToken(token)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst previousToken = tokensAndComments[i - 1];\n\t\t\t\t\tconst nextToken = tokensAndComments[i + 1];\n\t\t\t\t\tif (\n\t\t\t\t\t\tpreviousToken &&\n  // ... more code ...",
            "issues": []
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/comma-style.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 41,
            "lineCount": 316,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst style = context.options[0] || \"last\",\n\t\t\tsourceCode = context.sourceCode;\n\t\tconst exceptions = {\n\t\t\tArrayPattern: true,\n\t\t\tArrowFunctionExpression: true,\n\t\t\tCallExpression: true,\n\t\t\tFunctionDeclaration: true,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 41 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 316 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "validateCommaItemSpacing",
            "complexity": 12,
            "lineCount": 68,
            "parameterCount": 4,
            "snippet": "function validateCommaItemSpacing(\n\t\t\tpreviousItemToken,\n\t\t\tcommaToken,\n\t\t\tcurrentItemToken,\n\t\t\treportItem,\n\t\t) {\n\t\t\tif (\n\t\t\t\tastUtils.isTokenOnSameLine(commaToken, currentItemToken) &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "validateComma",
            "complexity": 12,
            "lineCount": 77,
            "parameterCount": 2,
            "snippet": "function validateComma(node, property) {\n\t\t\tconst items = node[property],\n\t\t\t\tarrayLiteral =\n\t\t\t\t\tnode.type === \"ArrayExpression\" ||\n\t\t\t\t\tnode.type === \"ArrayPattern\";\n\t\t\tif (items.length > 1 || arrayLiteral) {\n\t\t\t\tlet previousItemToken = sourceCode.getFirstToken(node);\n\t\t\t\titems.forEach(item => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 77 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/complexity.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 18,
            "lineCount": 126,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst option = context.options[0];\n\t\tlet threshold = THRESHOLD_DEFAULT;\n\t\tlet VARIANT = \"classic\";\n\t\tif (typeof option === \"object\") {\n\t\t\tif (\n\t\t\t\tObject.hasOwn(option, \"maximum\") ||\n\t\t\t\tObject.hasOwn(option, \"max\")\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 126 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/consistent-return.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 19,
            "lineCount": 137,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ treatUndefinedAsUnspecified }] = context.options;\n\t\tlet funcInfo = null;\n\t\t/**\n\t\t * Checks whether of not the implicit returning is consistent if the last\n\t\t * code path segment is reachable.\n\t\t * @param {ASTNode} node A program/function node to check.\n\t\t * @returns {void}\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 137 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/consistent-this.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 20,
            "lineCount": 137,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst aliases = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Reports that a variable declarator or assignment expression is assigning\n\t\t * a non-'this' value to the specified alias.\n\t\t * @param {ASTNode} node The assigning node.\n\t\t * @param {string} name the name of the alias that was incorrectly used.\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 137 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/constructor-super.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 32,
            "lineCount": 298,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\t/*\n\t\t * {{hasExtends: boolean, scope: Scope, codePath: CodePath}[]}\n\t\t * Information for each constructor.\n\t\t * - upper:      Information of the upper constructor.\n\t\t * - hasExtends: A flag which shows whether own class has a valid `extends`\n\t\t *               part.\n\t\t * - scope:      The scope of own class.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 298 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isPossibleConstructor",
            "complexity": 23,
            "lineCount": 72,
            "parameterCount": 1,
            "snippet": "function isPossibleConstructor(node) {\n\tif (!node) {\n\t\treturn false;\n\t}\n\tswitch (node.type) {\n\t\tcase \"ClassExpression\":\n\t\tcase \"FunctionExpression\":\n\t\tcase \"ThisExpression\":\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/curly.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 41,
            "lineCount": 353,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst multiOnly = context.options[0] === \"multi\";\n\t\tconst multiLine = context.options[0] === \"multi-line\";\n\t\tconst multiOrNest = context.options[0] === \"multi-or-nest\";\n\t\tconst consistent = context.options[1] === \"consistent\";\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Determines if a given node is a one-liner that's on the same line as it's preceding code.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 41 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 353 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "prepareCheck",
            "complexity": 21,
            "lineCount": 131,
            "parameterCount": 4,
            "snippet": "function prepareCheck(node, body, name, opts) {\n\t\t\tconst hasBlock = body.type === \"BlockStatement\";\n\t\t\tlet expected = null;\n\t\t\tif (\n\t\t\t\thasBlock &&\n\t\t\t\t(body.body.length !== 1 ||\n\t\t\t\t\tastUtils.areBracesNecessary(body, sourceCode))\n\t\t\t) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 131 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "check",
            "complexity": 12,
            "lineCount": 91,
            "parameterCount": 0,
            "snippet": "check() {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.expected !== null &&\n\t\t\t\t\t\tthis.expected !== this.actual\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (this.expected) {\n\t\t\t\t\t\t\tcontext.report({\n\t\t\t\t\t\t\t\tnode,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 91 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "needsSemicolon",
            "complexity": 11,
            "lineCount": 51,
            "parameterCount": 1,
            "snippet": "function needsSemicolon(closingBracket) {\n\t\t\tconst tokenBefore = sourceCode.getTokenBefore(closingBracket);\n\t\t\tconst tokenAfter = sourceCode.getTokenAfter(closingBracket);\n\t\t\tconst lastBlockNode = sourceCode.getNodeByRangeIndex(\n\t\t\t\ttokenBefore.range[0],\n\t\t\t);\n\t\t\tif (astUtils.isSemicolonToken(tokenBefore)) {\n\t\t\t\treturn false;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              }
            ]
          },
          {
            "name": "fix",
            "complexity": 5,
            "lineCount": 54,
            "parameterCount": 1,
            "snippet": "fix(fixer) {\n\t\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t\t * `do while` expressions sometimes need a space to be inserted after `do`.\n\t\t\t\t\t\t\t\t\t * e.g. `do{foo()} while (bar)` should be corrected to `do foo() while (bar)`\n\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\tconst needsPrecedingSpace =\n\t\t\t\t\t\t\t\t\t\tnode.type === \"DoWhileStatement\" &&\n\t\t\t\t\t\t\t\t\t\tsourceCode.getTokenBefore(body)\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/dot-notation.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 29,
            "lineCount": 151,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [options] = context.options;\n\t\tconst allowKeywords = options.allowKeywords;\n\t\tconst sourceCode = context.sourceCode;\n\t\tlet allowPattern;\n\t\tif (options.allowPattern) {\n\t\t\tallowPattern = new RegExp(options.allowPattern, \"u\");\n\t\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 29 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 151 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "MemberExpression",
            "complexity": 16,
            "lineCount": 66,
            "parameterCount": 1,
            "snippet": "MemberExpression(node) {\n\t\t\t\tif (\n\t\t\t\t\tnode.computed &&\n\t\t\t\t\tnode.property.type === \"Literal\" &&\n\t\t\t\t\t(literalTypesToCheck.has(typeof node.property.value) ||\n\t\t\t\t\t\tastUtils.isNullLiteral(node.property))\n\t\t\t\t) {\n\t\t\t\t\tcheckComputedProperty(node, node.property.value);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkComputedProperty",
            "complexity": 13,
            "lineCount": 64,
            "parameterCount": 2,
            "snippet": "function checkComputedProperty(node, value) {\n\t\t\tif (\n\t\t\t\tvalidIdentifier.test(value) &&\n\t\t\t\t(allowKeywords || !keywords.includes(String(value))) &&\n\t\t\t\t!(allowPattern && allowPattern.test(value))\n\t\t\t) {\n\t\t\t\tconst formattedValue =\n\t\t\t\t\tnode.property.type === \"Literal\"\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/eqeqeq.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 22,
            "lineCount": 138,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst config = context.options[0] || \"always\";\n\t\tconst options = context.options[1] || {};\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst nullOption =\n\t\t\tconfig === \"always\" ? options.null || \"always\" : \"ignore\";\n\t\tconst enforceRuleForNull = nullOption === \"always\";\n\t\tconst enforceInverseRuleForNull = nullOption === \"never\";\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 138 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/for-direction.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 26,
            "lineCount": 126,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst { sourceCode } = context;\n\t\t/**\n\t\t * report an error.\n\t\t * @param {ASTNode} node the node to report.\n\t\t * @returns {void}\n\t\t */\n\t\tfunction report(node) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 126 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ForStatement",
            "complexity": 16,
            "lineCount": 44,
            "parameterCount": 1,
            "snippet": "ForStatement(node) {\n\t\t\t\tif (\n\t\t\t\t\tnode.test &&\n\t\t\t\t\tnode.test.type === \"BinaryExpression\" &&\n\t\t\t\t\tnode.update\n\t\t\t\t) {\n\t\t\t\t\tfor (const counterPosition of [\"left\", \"right\"]) {\n\t\t\t\t\t\tif (node.test[counterPosition].type !== \"Identifier\") {\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/func-call-spacing.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 22,
            "lineCount": 184,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst never = context.options[0] !== \"always\";\n\t\tconst allowNewlines =\n\t\t\t!never && context.options[1] && context.options[1].allowNewlines;\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst text = sourceCode.getText();\n\t\t/**\n\t\t * Check if open space is present in a function name\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 184 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkSpacing",
            "complexity": 17,
            "lineCount": 136,
            "parameterCount": 3,
            "snippet": "function checkSpacing(node, leftToken, rightToken) {\n\t\t\tconst textBetweenTokens = text\n\t\t\t\t.slice(leftToken.range[1], rightToken.range[0])\n\t\t\t\t.replace(/\\/\\*.*?\\*\\//gu, \"\");\n\t\t\tconst hasWhitespace = /\\s/u.test(textBetweenTokens);\n\t\t\tconst hasNewline =\n\t\t\t\thasWhitespace &&\n\t\t\t\tastUtils.LINEBREAK_MATCHER.test(textBetweenTokens);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 136 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/func-name-matching.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 53,
            "lineCount": 218,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst options =\n\t\t\t(typeof context.options[0] === \"object\"\n\t\t\t\t? context.options[0]\n\t\t\t\t: context.options[1]) || {};\n\t\tconst nameMatches =\n\t\t\ttypeof context.options[0] === \"string\"\n\t\t\t\t? context.options[0]\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 53 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 218 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 23,
            "lineCount": 86,
            "parameterCount": 1,
            "snippet": "\"Property, PropertyDefinition[value]\"(node) {\n\t\t\t\tif (\n\t\t\t\t\t!(node.value.type === \"FunctionExpression\" && node.value.id)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (node.key.type === \"Identifier\" && !node.computed) {\n\t\t\t\t\tconst functionName = node.value.id.name;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 86 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/func-names.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 31,
            "lineCount": 124,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Returns the config option for the given node.\n\t\t * @param {ASTNode} node A node to get the config for.\n\t\t * @returns {string} The config option.\n\t\t */\n\t\tfunction getConfigForNode(node) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 31 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 124 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/func-style.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 40,
            "lineCount": 153,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [style, { allowArrowFunctions, allowTypeAnnotation, overrides }] =\n\t\t\tcontext.options;\n\t\tconst enforceDeclarations = style === \"declaration\";\n\t\tconst { namedExports: exportFunctionStyle } = overrides;\n\t\tconst stack = [];\n\t\t/**\n\t\t * Checks if a function declaration is part of an overloaded function\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 40 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 153 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/function-paren-newline.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 42,
            "lineCount": 280,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst rawOption = context.options[0] || \"multiline\";\n\t\tconst multilineOption = rawOption === \"multiline\";\n\t\tconst multilineArgumentsOption = rawOption === \"multiline-arguments\";\n\t\tconst consistentOption = rawOption === \"consistent\";\n\t\tlet minItems;\n\t\tif (typeof rawOption === \"object\") {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 42 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 280 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getParenTokens",
            "complexity": 15,
            "lineCount": 82,
            "parameterCount": 1,
            "snippet": "function getParenTokens(node) {\n\t\t\tswitch (node.type) {\n\t\t\t\tcase \"NewExpression\":\n\t\t\t\t\tif (\n\t\t\t\t\t\t!node.arguments.length &&\n\t\t\t\t\t\t!(\n\t\t\t\t\t\t\tastUtils.isOpeningParenToken(\n\t\t\t\t\t\t\t\tsourceCode.getLastToken(node, { skip: 1 }),\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 82 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "validateParens",
            "complexity": 11,
            "lineCount": 71,
            "parameterCount": 2,
            "snippet": "function validateParens(parens, elements) {\n\t\t\tconst leftParen = parens.leftParen;\n\t\t\tconst rightParen = parens.rightParen;\n\t\t\tconst tokenAfterLeftParen = sourceCode.getTokenAfter(leftParen);\n\t\t\tconst tokenBeforeRightParen = sourceCode.getTokenBefore(rightParen);\n\t\t\tconst hasLeftNewline = !astUtils.isTokenOnSameLine(\n\t\t\t\tleftParen,\n\t\t\t\ttokenAfterLeftParen,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 71 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/generator-star-spacing.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 19,
            "lineCount": 153,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst optionDefinitions = {\n\t\t\tbefore: { before: true, after: false },\n\t\t\tafter: { before: false, after: true },\n\t\t\tboth: { before: true, after: true },\n\t\t\tneither: { before: false, after: false },\n\t\t};\n\t\t/**\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 153 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/getter-return.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 20,
            "lineCount": 166,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ allowImplicit }] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\tlet funcInfo = {\n\t\t\tupper: null,\n\t\t\tcodePath: null,\n\t\t\thasReturn: false,\n\t\t\tshouldCheck: false,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 166 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isGetter",
            "complexity": 14,
            "lineCount": 63,
            "parameterCount": 1,
            "snippet": "function isGetter(node) {\n\t\t\tconst parent = node.parent;\n\t\t\tif (\n\t\t\t\tTARGET_NODE_TYPE.test(node.type) &&\n\t\t\t\tnode.body.type === \"BlockStatement\"\n\t\t\t) {\n\t\t\t\tif (parent.kind === \"get\") {\n\t\t\t\t\treturn true;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 63 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/grouped-accessor-pairs.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 24,
            "lineCount": 115,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [order] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Reports the given accessor pair.\n\t\t * @param {string} messageId messageId to report.\n\t\t * @param {ASTNode} formerNode getter/setter node that is defined before `latterNode`.\n\t\t * @param {ASTNode} latterNode getter/setter node that is defined after `formerNode`.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 115 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkList",
            "complexity": 22,
            "lineCount": 63,
            "parameterCount": 2,
            "snippet": "function checkList(nodes, shouldCheck) {\n\t\t\tconst accessors = [];\n\t\t\tlet found = false;\n\t\t\tfor (let i = 0; i < nodes.length; i++) {\n\t\t\t\tconst node = nodes[i];\n\t\t\t\tif (shouldCheck(node) && isAccessorKind(node)) {\n\t\t\t\t\tconst name = astUtils.getStaticPropertyName(node);\n\t\t\t\t\tconst key =\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 63 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/id-blacklist.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 14,
            "lineCount": 106,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst denyList = new Set(context.options);\n\t\tconst reportedNodes = new Set();\n\t\tconst sourceCode = context.sourceCode;\n\t\tlet globalScope;\n\t\t/**\n\t\t * Checks whether the given name is restricted.\n\t\t * @param {string} name The name to check.\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 106 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/id-denylist.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 15,
            "lineCount": 110,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst denyList = new Set(context.options);\n\t\tconst reportedNodes = new Set();\n\t\tconst sourceCode = context.sourceCode;\n\t\tlet globalScope;\n\t\t/**\n\t\t * Checks whether the given name is restricted.\n\t\t * @param {string} name The name to check.\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 110 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/id-length.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 27,
            "lineCount": 132,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [options] = context.options;\n\t\tconst { max: maxLength = Infinity, min: minLength } = options;\n\t\tconst properties = options.properties !== \"never\";\n\t\tconst exceptions = new Set(options.exceptions);\n\t\tconst exceptionPatterns = options.exceptionPatterns.map(\n\t\t\tpattern => new RegExp(pattern, \"u\"),\n\t\t);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 132 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/id-match.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 62,
            "lineCount": 291,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [\n\t\t\tpattern,\n\t\t\t{\n\t\t\t\tclassFields: checkClassFields,\n\t\t\t\tignoreDestructuring,\n\t\t\t\tonlyDeclarations,\n\t\t\t\tproperties: checkProperties,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 62 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 291 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "Identifier",
            "complexity": 50,
            "lineCount": 138,
            "parameterCount": 1,
            "snippet": "Identifier(node) {\n\t\t\t\tconst name = node.name,\n\t\t\t\t\tparent = node.parent,\n\t\t\t\t\teffectiveParent =\n\t\t\t\t\t\tparent.type === \"MemberExpression\"\n\t\t\t\t\t\t\t? parent.parent\n\t\t\t\t\t\t\t: parent;\n\t\t\t\tif (\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 50 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 138 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/indent-legacy.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 185,
            "lineCount": 1171,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst DEFAULT_VARIABLE_INDENT = 1;\n\t\tconst DEFAULT_PARAMETER_INDENT = null; // For backwards compatibility, don't check parameter indentation unless specified in the config\n\t\tconst DEFAULT_FUNCTION_BODY_INDENT = 1;\n\t\tlet indentType = \"space\";\n\t\tlet indentSize = 4;\n\t\tconst options = {\n\t\t\tSwitchCase: 0,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 185 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1171 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkIndentInArrayOrObjectBlock",
            "complexity": 30,
            "lineCount": 146,
            "parameterCount": 1,
            "snippet": "function checkIndentInArrayOrObjectBlock(node) {\n\t\t\tif (isSingleLineNode(node)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet elements =\n\t\t\t\tnode.type === \"ArrayExpression\"\n\t\t\t\t\t? node.elements\n\t\t\t\t\t: node.properties;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 30 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 146 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkIndentInFunctionBlock",
            "complexity": 19,
            "lineCount": 84,
            "parameterCount": 1,
            "snippet": "function checkIndentInFunctionBlock(node) {\n\t\t\t/*\n\t\t\t * Search first caller in chain.\n\t\t\t * Ex.:\n\t\t\t *\n\t\t\t * Models <- Identifier\n\t\t\t *   .User\n\t\t\t *   .find()\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 84 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "blockIndentationCheck",
            "complexity": 16,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "function blockIndentationCheck(node) {\n\t\t\tif (isSingleLineNode(node)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tnode.parent &&\n\t\t\t\t(node.parent.type === \"FunctionExpression\" ||\n\t\t\t\t\tnode.parent.type === \"FunctionDeclaration\" ||\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/indent.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 168,
            "lineCount": 1663,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst DEFAULT_VARIABLE_INDENT = 1;\n\t\tconst DEFAULT_PARAMETER_INDENT = 1;\n\t\tconst DEFAULT_FUNCTION_BODY_INDENT = 1;\n\t\tlet indentType = \"space\";\n\t\tlet indentSize = 4;\n\t\tconst options = {\n\t\t\tSwitchCase: 0,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 168 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1663 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 21,
            "lineCount": 128,
            "parameterCount": 0,
            "snippet": "\"Program:exit\"() {\n\t\t\t\tif (options.ignoreComments) {\n\t\t\t\t\tsourceCode\n\t\t\t\t\t\t.getAllComments()\n\t\t\t\t\t\t.forEach(comment => offsets.ignoreToken(comment));\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < listenerCallQueue.length; i++) {\n\t\t\t\t\tconst nodeInfo = listenerCallQueue[i];\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 128 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "addElementListIndent",
            "complexity": 16,
            "lineCount": 77,
            "parameterCount": 4,
            "snippet": "function addElementListIndent(elements, startToken, endToken, offset) {\n\t\t\t/**\n\t\t\t * Gets the first token of a given element, including surrounding parentheses.\n\t\t\t * @param {ASTNode} element A node in the `elements` list\n\t\t\t * @returns {Token} The first token of this element\n\t\t\t */\n\t\t\tfunction getFirstToken(element) {\n\t\t\t\tlet token = sourceCode.getTokenBefore(element);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 77 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ConditionalExpression",
            "complexity": 11,
            "lineCount": 85,
            "parameterCount": 1,
            "snippet": "ConditionalExpression(node) {\n\t\t\t\tconst firstToken = sourceCode.getFirstToken(node);\n\t\t\t\tif (\n\t\t\t\t\t!options.flatTernaryExpressions ||\n\t\t\t\t\t!astUtils.isTokenOnSameLine(node.test, node.consequent) ||\n\t\t\t\t\tisOnFirstLineOfStatement(firstToken, node)\n\t\t\t\t) {\n\t\t\t\t\tconst questionMarkToken = sourceCode.getFirstTokenBetween(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 85 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 8,
            "lineCount": 91,
            "parameterCount": 1,
            "snippet": "\"MemberExpression, JSXMemberExpression, MetaProperty\"(node) {\n\t\t\t\tconst object =\n\t\t\t\t\tnode.type === \"MetaProperty\" ? node.meta : node.object;\n\t\t\t\tconst firstNonObjectToken = sourceCode.getFirstTokenBetween(\n\t\t\t\t\tobject,\n\t\t\t\t\tnode.property,\n\t\t\t\t\tastUtils.isNotClosingParenToken,\n\t\t\t\t);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 91 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/init-declarations.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 17,
            "lineCount": 67,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst MODE_ALWAYS = \"always\",\n\t\t\tMODE_NEVER = \"never\";\n\t\tconst mode = context.options[0] || MODE_ALWAYS;\n\t\tconst params = context.options[1] || {};\n\t\tlet insideDeclaredNamespace = false;\n\t\treturn {\n\t\t\tTSModuleDeclaration(node) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/key-spacing.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 51,
            "lineCount": 463,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\t/**\n\t\t * OPTIONS\n\t\t * \"key-spacing\": [2, {\n\t\t *     beforeColon: false,\n\t\t *     afterColon: true,\n\t\t *     align: \"colon\" // Optional, or \"value\"\n\t\t * }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 51 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 463 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "report",
            "complexity": 21,
            "lineCount": 93,
            "parameterCount": 5,
            "snippet": "function report(property, side, whitespace, expected, mode) {\n\t\t\tconst diff = whitespace.length - expected;\n\t\t\tif (\n\t\t\t\t((diff && mode === \"strict\") ||\n\t\t\t\t\t(diff < 0 && mode === \"minimum\") ||\n\t\t\t\t\t(diff > 0 && !expected && mode === \"minimum\")) &&\n\t\t\t\t!(expected && containsLineTerminator(whitespace))\n\t\t\t) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 93 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "verifyGroupAlignment",
            "complexity": 7,
            "lineCount": 66,
            "parameterCount": 1,
            "snippet": "function verifyGroupAlignment(properties) {\n\t\t\tconst length = properties.length,\n\t\t\t\twidths = properties.map(getKeyWidth), // Width of keys, including quotes\n\t\t\t\talign = alignmentOptions.on; // \"value\" or \"colon\"\n\t\t\tlet targetWidth = Math.max(...widths),\n\t\t\t\tbeforeColon,\n\t\t\t\tafterColon,\n\t\t\t\tmode;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/keyword-spacing.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 72,
            "lineCount": 556,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst tokensToIgnore = new WeakSet();\n\t\t/**\n\t\t * Reports a given token if there are not space(s) before the token.\n\t\t * @param {Token} token A token to report.\n\t\t * @param {RegExp} pattern A pattern of the previous token to check.\n\t\t * @returns {void}\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 72 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 556 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/lines-around-comment.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 78,
            "lineCount": 425,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst options = Object.assign({}, context.options[0]);\n\t\tconst ignorePattern = options.ignorePattern;\n\t\tconst defaultIgnoreRegExp = astUtils.COMMENTS_IGNORE_PATTERN;\n\t\tconst customIgnoreRegExp = new RegExp(ignorePattern, \"u\");\n\t\tconst applyDefaultIgnorePatterns =\n\t\t\toptions.applyDefaultIgnorePatterns !== false;\n\t\toptions.beforeBlockComment =\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 78 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 425 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkForEmptyLine",
            "complexity": 36,
            "lineCount": 118,
            "parameterCount": 2,
            "snippet": "function checkForEmptyLine(token, opts) {\n\t\t\tif (\n\t\t\t\tapplyDefaultIgnorePatterns &&\n\t\t\t\tdefaultIgnoreRegExp.test(token.value)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (ignorePattern && customIgnoreRegExp.test(token.value)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 36 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 118 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/lines-around-directive.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 28,
            "lineCount": 172,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst config = context.options[0] || \"always\";\n\t\tconst expectLineBefore =\n\t\t\ttypeof config === \"string\" ? config : config.before;\n\t\tconst expectLineAfter =\n\t\t\ttypeof config === \"string\" ? config : config.after;\n\t\t/**\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 172 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkDirectives",
            "complexity": 18,
            "lineCount": 66,
            "parameterCount": 1,
            "snippet": "function checkDirectives(node) {\n\t\t\tconst directives = astUtils.getDirectivePrologue(node);\n\t\t\tif (!directives.length) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst firstDirective = directives[0];\n\t\t\tconst leadingComments =\n\t\t\t\tsourceCode.getCommentsBefore(firstDirective);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/lines-between-class-members.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 23,
            "lineCount": 238,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst options = [];\n\t\toptions[0] = context.options[0] || \"always\";\n\t\toptions[1] = context.options[1] || { exceptAfterSingleLine: false };\n\t\tconst configureList =\n\t\t\ttypeof options[0] === \"object\"\n\t\t\t\t? options[0].enforce\n\t\t\t\t: [{ blankLine: options[0], prev: \"*\", next: \"*\" }];\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 238 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ClassBody",
            "complexity": 10,
            "lineCount": 75,
            "parameterCount": 1,
            "snippet": "ClassBody(node) {\n\t\t\t\tconst body = node.body;\n\t\t\t\tfor (let i = 0; i < body.length - 1; i++) {\n\t\t\t\t\tconst curFirst = sourceCode.getFirstToken(body[i]);\n\t\t\t\t\tconst { curLast, nextFirst } = getBoundaryTokens(\n\t\t\t\t\t\tbody[i],\n\t\t\t\t\t\tbody[i + 1],\n\t\t\t\t\t);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/logical-assignment-operators.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 50,
            "lineCount": 405,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst mode = context.options[0] === \"never\" ? \"never\" : \"always\";\n\t\tconst checkIf =\n\t\t\tmode === \"always\" &&\n\t\t\tcontext.options.length > 1 &&\n\t\t\tcontext.options[1].enforceForIfStatements;\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst isStrict = sourceCode.getScope(sourceCode.ast).isStrict;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 50 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 405 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 21,
            "lineCount": 103,
            "parameterCount": 1,
            "snippet": "\"IfStatement[alternate=null]\"(ifNode) {\n\t\t\t\tif (!checkIf) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst hasBody = ifNode.consequent.type === \"BlockStatement\";\n\t\t\t\tif (hasBody && ifNode.consequent.body.length !== 1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 103 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "fix",
            "complexity": 10,
            "lineCount": 53,
            "parameterCount": 1,
            "snippet": "*fix(ruleFixer) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tsourceCode.getCommentsInside(ifNode).length > 0\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst firstBodyToken =\n\t\t\t\t\t\t\t\tsourceCode.getFirstToken(body);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 9,
            "lineCount": 75,
            "parameterCount": 1,
            "snippet": "'LogicalExpression[right.type=\"AssignmentExpression\"][right.operator=\"=\"]'(\n\t\t\t\tlogical,\n\t\t\t) {\n\t\t\t\tif (\n\t\t\t\t\tisReference(logical.left) &&\n\t\t\t\t\tastUtils.isSameReference(logical.left, logical.right.left)\n\t\t\t\t) {\n\t\t\t\t\tconst descriptor = {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "AssignmentExpression",
            "complexity": 7,
            "lineCount": 80,
            "parameterCount": 1,
            "snippet": "AssignmentExpression(assignment) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!astUtils.isLogicalAssignmentOperator(\n\t\t\t\t\t\t\tassignment.operator,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/max-len.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 56,
            "lineCount": 386,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\t/*\n\t\t * Inspired by http://tools.ietf.org/html/rfc3986#appendix-B, however:\n\t\t * - They're matching an entire string that we know is a URI\n\t\t * - We're matching part of a string where we think there *might* be a URL\n\t\t * - We're only concerned about URLs, as picking out any URI would cause\n\t\t *   too many false positives\n\t\t * - We don't care about matching the entire URL, any small segment is fine\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 56 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 386 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkProgramForMaxLength",
            "complexity": 27,
            "lineCount": 133,
            "parameterCount": 1,
            "snippet": "function checkProgramForMaxLength(node) {\n\t\t\tconst lines = sourceCode.lines,\n\t\t\t\tcomments =\n\t\t\t\t\tignoreComments || maxCommentLength || ignoreTrailingComments\n\t\t\t\t\t\t? getAllComments()\n\t\t\t\t\t\t: [];\n\t\t\tlet commentsIndex = 0;\n\t\t\tconst strings = getAllStrings();\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 133 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 24,
            "lineCount": 110,
            "parameterCount": 2,
            "snippet": "(line, i) => {\n\t\t\t\tconst lineNumber = i + 1;\n\t\t\t\t/*\n\t\t\t\t * if we're checking comment length; we need to know whether this\n\t\t\t\t * line is a comment\n\t\t\t\t */\n\t\t\t\tlet lineIsComment = false;\n\t\t\t\tlet textToMeasure;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 110 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/max-lines-per-function.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 30,
            "lineCount": 152,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst lines = sourceCode.lines;\n\t\tconst option = context.options[0];\n\t\tlet maxLines = 50;\n\t\tlet skipComments = false;\n\t\tlet skipBlankLines = false;\n\t\tlet IIFEs = false;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 30 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 152 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/max-lines.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 20,
            "lineCount": 116,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst option = context.options[0];\n\t\tlet max = 300;\n\t\tif (typeof option === \"object\" && Object.hasOwn(option, \"max\")) {\n\t\t\tmax = option.max;\n\t\t} else if (typeof option === \"number\") {\n\t\t\tmax = option;\n\t\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 116 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/multiline-comment-style.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 58,
            "lineCount": 560,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst option = context.options[0] || \"starred-block\";\n\t\tconst params = context.options[1] || {};\n\t\tconst checkJSDoc = !!params.checkJSDoc;\n\t\t/**\n\t\t * Checks if a comment line is starred.\n\t\t * @param {string} line A string representing a comment line.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 58 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 560 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 18,
            "lineCount": 176,
            "parameterCount": 1,
            "snippet": "\"starred-block\"(commentGroup) {\n\t\t\t\tconst [firstComment] = commentGroup;\n\t\t\t\tconst commentLines = getCommentLines(commentGroup);\n\t\t\t\tif (commentLines.some(value => value.includes(\"*/\"))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (commentGroup.length > 1) {\n\t\t\t\t\tcontext.report({\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 176 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "fix",
            "complexity": 9,
            "lineCount": 66,
            "parameterCount": 1,
            "snippet": "fix(fixer) {\n\t\t\t\t\t\t\t\t\tconst lineStartIndex =\n\t\t\t\t\t\t\t\t\t\tsourceCode.getIndexFromLoc({\n\t\t\t\t\t\t\t\t\t\t\tline: lineNumber,\n\t\t\t\t\t\t\t\t\t\t\tcolumn: 0,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (errorType === \"alignment\") {\n\t\t\t\t\t\t\t\t\t\tconst [, commentTextPrefix = \"\"] =\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "Program",
            "complexity": 9,
            "lineCount": 51,
            "parameterCount": 0,
            "snippet": "Program() {\n\t\t\t\treturn sourceCode\n\t\t\t\t\t.getAllComments()\n\t\t\t\t\t.filter(comment => comment.type !== \"Shebang\")\n\t\t\t\t\t.filter(\n\t\t\t\t\t\tcomment =>\n\t\t\t\t\t\t\t!astUtils.COMMENTS_IGNORE_PATTERN.test(\n\t\t\t\t\t\t\t\tcomment.value,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 6,
            "lineCount": 52,
            "parameterCount": 1,
            "snippet": "\"bare-block\"(commentGroup) {\n\t\t\t\tif (isJSDocComment(commentGroup)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst [firstComment] = commentGroup;\n\t\t\t\tconst commentLines = getCommentLines(commentGroup);\n\t\t\t\tif (\n\t\t\t\t\tfirstComment.type === \"Line\" &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/multiline-ternary.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 16,
            "lineCount": 189,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst option = context.options[0];\n\t\tconst multiline = option !== \"never\";\n\t\tconst allowSingleLine = option === \"always-multiline\";\n\t\treturn {\n\t\t\tConditionalExpression(node) {\n\t\t\t\tconst questionToken = sourceCode.getTokenAfter(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 189 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ConditionalExpression",
            "complexity": 16,
            "lineCount": 176,
            "parameterCount": 1,
            "snippet": "ConditionalExpression(node) {\n\t\t\t\tconst questionToken = sourceCode.getTokenAfter(\n\t\t\t\t\tnode.test,\n\t\t\t\t\tastUtils.isNotClosingParenToken,\n\t\t\t\t);\n\t\t\t\tconst colonToken = sourceCode.getTokenAfter(\n\t\t\t\t\tnode.consequent,\n\t\t\t\t\tastUtils.isNotClosingParenToken,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 176 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/new-cap.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 24,
            "lineCount": 153,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [config] = context.options;\n\t\tconst skipProperties = !config.properties;\n\t\tconst newIsCapExceptions = config.newIsCapExceptions.reduce(invert, {});\n\t\tconst newIsCapExceptionPattern = config.newIsCapExceptionPattern\n\t\t\t? new RegExp(config.newIsCapExceptionPattern, \"u\")\n\t\t\t: null;\n\t\tconst capIsNewExceptions = calculateCapIsNewExceptions(config);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 153 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/newline-after-var.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 31,
            "lineCount": 244,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst mode = context.options[0] === \"never\" ? \"never\" : \"always\";\n\t\tconst commentEndLine = sourceCode\n\t\t\t.getAllComments()\n\t\t\t.reduce((result, token) => {\n\t\t\t\tresult[token.loc.start.line] = token.loc.end.line;\n\t\t\t\treturn result;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 31 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 244 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkForBlankLine",
            "complexity": 17,
            "lineCount": 98,
            "parameterCount": 1,
            "snippet": "function checkForBlankLine(node) {\n\t\t\t/*\n\t\t\t * lastToken is the last token on the node's line. It will usually also be the last token of the node, but it will\n\t\t\t * sometimes be second-last if there is a semicolon on a different line.\n\t\t\t */\n\t\t\tconst lastToken = getLastToken(node),\n\t\t\t\t/*\n\t\t\t\t * If lastToken is the last token of the node, nextToken should be the token after the node. Otherwise, nextToken\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 98 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/newline-before-return.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 18,
            "lineCount": 191,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Tests whether node is preceded by supplied tokens\n\t\t * @param {ASTNode} node node to check\n\t\t * @param {Array} testTokens array of tokens to test against\n\t\t * @returns {boolean} Whether or not the node is preceded by one of the supplied tokens\n\t\t * @private\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 191 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-alert.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-array-constructor.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 22,
            "lineCount": 144,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Checks if there are comments in Array constructor expressions.\n\t\t * @param {ASTNode} node A CallExpression or NewExpression node.\n\t\t * @returns {boolean} True if there are comments, false otherwise.\n\t\t */\n\t\tfunction hasCommentsInArrayConstructor(node) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 144 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "check",
            "complexity": 16,
            "lineCount": 78,
            "parameterCount": 1,
            "snippet": "function check(node) {\n\t\t\tif (\n\t\t\t\tnode.callee.type !== \"Identifier\" ||\n\t\t\t\tnode.callee.name !== \"Array\" ||\n\t\t\t\tnode.typeArguments ||\n\t\t\t\t(node.arguments.length === 1 &&\n\t\t\t\t\tnode.arguments[0].type !== \"SpreadElement\")\n\t\t\t) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 78 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-await-in-loop.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-cond-assign.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 18,
            "lineCount": 109,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [prohibitAssign] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Check whether an AST node is the test expression for a conditional statement.\n\t\t * @param {!Object} node The node to test.\n\t\t * @returns {boolean} `true` if the node is the text expression for a conditional statement; otherwise, `false`.\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 109 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-console.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 20,
            "lineCount": 162,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ allow: allowed = [] }] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Checks whether the given reference is 'console' or not.\n\t\t * @param {eslint-scope.Reference} reference The reference to check.\n\t\t * @returns {boolean} `true` if the reference is 'console'.\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 162 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-constant-binary-expression.js",
        "criticalFunctions": [
          {
            "name": "hasConstantStrictBooleanComparison",
            "complexity": 30,
            "lineCount": 86,
            "parameterCount": 2,
            "snippet": "function hasConstantStrictBooleanComparison(scope, node) {\n\tswitch (node.type) {\n\t\tcase \"ObjectExpression\": // Objects are not booleans\n\t\tcase \"ArrayExpression\": // Arrays are not booleans\n\t\tcase \"ArrowFunctionExpression\": // Functions are not booleans\n\t\tcase \"FunctionExpression\":\n\t\tcase \"ClassExpression\": // Classes are not booleans\n\t\tcase \"NewExpression\": // Objects are not booleans\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 30 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 86 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "hasConstantNullishness",
            "complexity": 29,
            "lineCount": 84,
            "parameterCount": 3,
            "snippet": "function hasConstantNullishness(scope, node, nonNullish) {\n\tif (nonNullish && isNullOrUndefined(scope, node)) {\n\t\treturn false;\n\t}\n\tswitch (node.type) {\n\t\tcase \"ObjectExpression\": // Objects are never nullish\n\t\tcase \"ArrayExpression\": // Arrays are never nullish\n\t\tcase \"ArrowFunctionExpression\": // Functions never nullish\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 29 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 84 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "hasConstantLooseBooleanComparison",
            "complexity": 27,
            "lineCount": 110,
            "parameterCount": 2,
            "snippet": "function hasConstantLooseBooleanComparison(scope, node) {\n\tswitch (node.type) {\n\t\tcase \"ObjectExpression\":\n\t\tcase \"ClassExpression\":\n\t\t\t/**\n\t\t\t * In theory objects like:\n\t\t\t *\n\t\t\t * `{toString: () => a}`\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 110 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isAlwaysNew",
            "complexity": 17,
            "lineCount": 51,
            "parameterCount": 2,
            "snippet": "function isAlwaysNew(scope, node) {\n\tswitch (node.type) {\n\t\tcase \"ObjectExpression\":\n\t\tcase \"ArrayExpression\":\n\t\tcase \"ArrowFunctionExpression\":\n\t\tcase \"FunctionExpression\":\n\t\tcase \"ClassExpression\":\n\t\t\treturn true;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "create",
            "complexity": 16,
            "lineCount": 88,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\treturn {\n\t\t\tLogicalExpression(node) {\n\t\t\t\tconst { operator, left } = node;\n\t\t\t\tconst scope = sourceCode.getScope(node);\n\t\t\t\tif (\n\t\t\t\t\t(operator === \"&&\" || operator === \"||\") &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 88 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-control-regex.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 13,
            "lineCount": 59,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\t/**\n\t\t * Get the regex expression\n\t\t * @param {ASTNode} node `Literal` node to evaluate\n\t\t * @returns {{ pattern: string, flags: string | null } | null} Regex if found (the given node is either a regex literal\n\t\t * or a string literal that is the pattern argument of a RegExp constructor call). Otherwise `null`. If flags cannot be determined,\n\t\t * the `flags` property will be `null`.\n\t\t * @private\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-dupe-else-if.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 15,
            "lineCount": 74,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Determines whether the two given nodes are considered to be equal. In particular, given that the nodes\n\t\t * represent expressions in a boolean context, `||` and `&&` can be considered as commutative operators.\n\t\t * @param {ASTNode} a First node.\n\t\t * @param {ASTNode} b Second node.\n\t\t * @returns {boolean} `true` if the nodes are considered to be equal.\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-duplicate-imports.js",
        "criticalFunctions": [
          {
            "name": "isImportExportCanBeMerged",
            "complexity": 19,
            "lineCount": 38,
            "parameterCount": 2,
            "snippet": "function isImportExportCanBeMerged(node1, node2) {\n\tconst importExportType1 = getImportExportType(node1);\n\tconst importExportType2 = getImportExportType(node2);\n\tif (\n\t\t(node1.importKind === \"type\" || node1.exportKind === \"type\") &&\n\t\t(node2.importKind === \"type\" || node2.exportKind === \"type\")\n\t) {\n\t\tconst isDefault1 = importExportType1 === \"ImportDefaultSpecifier\";\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkAndReport",
            "complexity": 10,
            "lineCount": 71,
            "parameterCount": 6,
            "snippet": "function checkAndReport(\n\tcontext,\n\tnode,\n\tmodules,\n\tdeclarationType,\n\tincludeExports,\n\tallowSeparateTypeImports,\n) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 71 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-else-return.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 45,
            "lineCount": 397,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ allowElseIf }] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Checks whether the given names can be safely used to declare block-scoped variables\n\t\t * in the given scope. Name collisions can produce redeclaration syntax errors,\n\t\t * or silently change references and modify behavior of the original code.\n\t\t *\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 45 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 397 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "displayReport",
            "complexity": 15,
            "lineCount": 97,
            "parameterCount": 1,
            "snippet": "function displayReport(elseNode) {\n\t\t\tconst currentScope = sourceCode.getScope(elseNode.parent);\n\t\t\tcontext.report({\n\t\t\t\tnode: elseNode,\n\t\t\t\tmessageId: \"unexpected\",\n\t\t\t\tfix(fixer) {\n\t\t\t\t\tif (!isSafeFromNameCollisions(elseNode, currentScope)) {\n\t\t\t\t\t\treturn null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 97 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "fix",
            "complexity": 15,
            "lineCount": 89,
            "parameterCount": 1,
            "snippet": "fix(fixer) {\n\t\t\t\t\tif (!isSafeFromNameCollisions(elseNode, currentScope)) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tconst startToken = sourceCode.getFirstToken(elseNode);\n\t\t\t\t\tconst elseToken = sourceCode.getTokenBefore(startToken);\n\t\t\t\t\tconst source = sourceCode.getText(elseNode);\n\t\t\t\t\tconst lastIfToken = sourceCode.getTokenBefore(elseToken);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 89 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isSafeToDeclare",
            "complexity": 12,
            "lineCount": 85,
            "parameterCount": 2,
            "snippet": "function isSafeToDeclare(names, scope) {\n\t\t\tif (names.length === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst functionScope = scope.variableScope;\n\t\t\t/*\n\t\t\t * If this is a function scope, scope.variables will contain parameters, implicit variables such as \"arguments\",\n\t\t\t * all function-scoped variables ('var'), and block-scoped variables defined in the scope.\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 85 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-empty-function.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 17,
            "lineCount": 80,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ allow }] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Checks if the given function node is allowed to be empty.\n\t\t * @param {ASTNode} node The function node to check.\n\t\t * @returns {boolean} True if the function is allowed to be empty, false otherwise.\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-eval.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 27,
            "lineCount": 221,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ allowIndirect }] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\tlet funcInfo = null;\n\t\t/**\n\t\t * Pushes a `this` scope (non-arrow function, class static block, or class field initializer) information to the stack.\n\t\t * Top-level scopes are handled separately.\n\t\t *\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 221 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-extend-native.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 16,
            "lineCount": 127,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst exceptions = new Set(context.options[0].exceptions);\n\t\tconst modifiedBuiltins = new Set(\n\t\t\tObject.keys(astUtils.ECMASCRIPT_GLOBALS)\n\t\t\t\t.filter(builtin => builtin[0].toUpperCase() === builtin[0])\n\t\t\t\t.filter(builtin => !exceptions.has(builtin)),\n\t\t);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 127 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-extra-boolean-cast.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 65,
            "lineCount": 351,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst [{ enforceForLogicalOperands, enforceForInnerExpressions }] =\n\t\t\tcontext.options;\n\t\tconst BOOLEAN_NODE_TYPES = new Set([\n\t\t\t\"IfStatement\",\n\t\t\t\"DoWhileStatement\",\n\t\t\t\"WhileStatement\",\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 65 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 351 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "needsParens",
            "complexity": 18,
            "lineCount": 62,
            "parameterCount": 2,
            "snippet": "function needsParens(previousNode, node) {\n\t\t\tif (previousNode.parent.type === \"ChainExpression\") {\n\t\t\t\treturn needsParens(previousNode.parent, node);\n\t\t\t}\n\t\t\tif (isParenthesized(previousNode)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst parent = previousNode.parent;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              }
            ]
          },
          {
            "name": "isInFlaggedContext",
            "complexity": 16,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "function isInFlaggedContext(node) {\n\t\t\tif (node.parent.type === \"ChainExpression\") {\n\t\t\t\treturn isInFlaggedContext(node.parent);\n\t\t\t}\n\t\t\t/*\n\t\t\t * legacy behavior - enforceForLogicalOperands will only recurse on\n\t\t\t * logical expressions, not on other contexts.\n\t\t\t * enforceForInnerExpressions will recurse on logical expressions\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "CallExpression",
            "complexity": 16,
            "lineCount": 95,
            "parameterCount": 1,
            "snippet": "CallExpression(node) {\n\t\t\t\tif (\n\t\t\t\t\tnode.callee.type !== \"Identifier\" ||\n\t\t\t\t\tnode.callee.name !== \"Boolean\"\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (isInFlaggedContext(node)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 95 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "fix",
            "complexity": 13,
            "lineCount": 80,
            "parameterCount": 1,
            "snippet": "fix(fixer) {\n\t\t\t\t\t\t\tconst parent = node.parent;\n\t\t\t\t\t\t\tif (node.arguments.length === 0) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tparent.type === \"UnaryExpression\" &&\n\t\t\t\t\t\t\t\t\tparent.operator === \"!\"\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t/*\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-extra-parens.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 296,
            "lineCount": 1553,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst tokensToIgnore = new WeakSet();\n\t\tconst precedence = astUtils.getPrecedence;\n\t\tconst ALL_NODES = context.options[0] !== \"functions\";\n\t\tconst EXCEPT_COND_ASSIGN =\n\t\t\tALL_NODES &&\n\t\t\tcontext.options[1] &&\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 296 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1553 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "MemberExpression",
            "complexity": 23,
            "lineCount": 57,
            "parameterCount": 1,
            "snippet": "MemberExpression(node) {\n\t\t\t\tconst shouldAllowWrapOnce =\n\t\t\t\t\tisMemberExpInNewCallee(node) &&\n\t\t\t\t\tdoesMemberExpressionContainCallExpression(node);\n\t\t\t\tconst nodeObjHasExcessParens = shouldAllowWrapOnce\n\t\t\t\t\t? hasDoubleExcessParens(node.object)\n\t\t\t\t\t: hasExcessParens(node.object) &&\n\t\t\t\t\t\t!(\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              }
            ]
          },
          {
            "name": "checkBinaryLogical",
            "complexity": 21,
            "lineCount": 47,
            "parameterCount": 1,
            "snippet": "function checkBinaryLogical(node) {\n\t\t\tconst prec = precedence(node);\n\t\t\tconst leftPrecedence = precedence(node.left);\n\t\t\tconst rightPrecedence = precedence(node.right);\n\t\t\tconst isExponentiation = node.operator === \"**\";\n\t\t\tconst shouldSkipLeft =\n\t\t\t\tNESTED_BINARY &&\n\t\t\t\t(node.left.type === \"BinaryExpression\" ||\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkExpressionOrExportStatement",
            "complexity": 21,
            "lineCount": 53,
            "parameterCount": 1,
            "snippet": "function checkExpressionOrExportStatement(node) {\n\t\t\tconst firstToken = isParenthesised(node)\n\t\t\t\t? sourceCode.getTokenBefore(node)\n\t\t\t\t: sourceCode.getFirstToken(node);\n\t\t\tconst secondToken = sourceCode.getTokenAfter(\n\t\t\t\tfirstToken,\n\t\t\t\tastUtils.isNotOpeningParenToken,\n\t\t\t);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              }
            ]
          },
          {
            "name": "report",
            "complexity": 12,
            "lineCount": 77,
            "parameterCount": 1,
            "snippet": "function report(node) {\n\t\t\tconst leftParenToken = sourceCode.getTokenBefore(node);\n\t\t\tconst rightParenToken = sourceCode.getTokenAfter(node);\n\t\t\tif (!isParenthesisedTwice(node)) {\n\t\t\t\tif (tokensToIgnore.has(sourceCode.getFirstToken(node))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (isIIFE(node) && !isParenthesised(node.callee)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 77 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-fallthrough.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 14,
            "lineCount": 106,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst codePathSegments = [];\n\t\tlet currentCodePathSegments = new Set();\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst [\n\t\t\t{ allowEmptyCase, commentPattern, reportUnusedFallthroughComment },\n\t\t] = context.options;\n\t\tconst fallthroughCommentPattern = commentPattern\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 106 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-implicit-coercion.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 46,
            "lineCount": 225,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [options] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Reports an error and autofixes the node\n\t\t * @param {ASTNode} node An ast node to report the error on.\n\t\t * @param {string} recommendation The recommended code for the issue\n\t\t * @param {bool} shouldSuggest Whether this report should offer a suggestion\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 46 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 225 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "UnaryExpression",
            "complexity": 18,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "UnaryExpression(node) {\n\t\t\t\tlet operatorAllowed;\n\t\t\t\toperatorAllowed = options.allow.includes(\"!!\");\n\t\t\t\tif (\n\t\t\t\t\t!operatorAllowed &&\n\t\t\t\t\toptions.boolean &&\n\t\t\t\t\tisDoubleLogicalNegating(node)\n\t\t\t\t) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-implicit-globals.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 21,
            "lineCount": 126,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ lexicalBindings: checkLexicalBindings }] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Reports the node.\n\t\t * @param {ASTNode} node Node to report.\n\t\t * @param {string} messageId Id of the message to report.\n\t\t * @param {string|undefined} kind Declaration kind, can be 'var', 'const', 'let', function or class.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 126 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "Program",
            "complexity": 21,
            "lineCount": 102,
            "parameterCount": 1,
            "snippet": "Program(node) {\n\t\t\t\tconst scope = sourceCode.getScope(node);\n\t\t\t\tscope.variables.forEach(variable => {\n\t\t\t\t\tconst isReadonlyEslintGlobalVariable =\n\t\t\t\t\t\tvariable.writeable === false;\n\t\t\t\t\tconst isWritableEslintGlobalVariable =\n\t\t\t\t\t\tvariable.writeable === true;\n\t\t\t\t\tif (isWritableEslintGlobalVariable) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 102 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 21,
            "lineCount": 90,
            "parameterCount": 1,
            "snippet": "variable => {\n\t\t\t\t\tconst isReadonlyEslintGlobalVariable =\n\t\t\t\t\t\tvariable.writeable === false;\n\t\t\t\t\tconst isWritableEslintGlobalVariable =\n\t\t\t\t\t\tvariable.writeable === true;\n\t\t\t\t\tif (isWritableEslintGlobalVariable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 90 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-implied-eval.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 18,
            "lineCount": 122,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst GLOBAL_CANDIDATES = Object.freeze([\n\t\t\t\"global\",\n\t\t\t\"window\",\n\t\t\t\"globalThis\",\n\t\t]);\n\t\tconst EVAL_LIKE_FUNC_PATTERN =\n\t\t\t/^(?:set(?:Interval|Timeout)|execScript)$/u;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 122 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-import-assign.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-invalid-regexp.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 26,
            "lineCount": 189,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ allowConstructorFlags }] = context.options;\n\t\tlet allowedFlags = [];\n\t\tif (allowConstructorFlags) {\n\t\t\tconst temp = allowConstructorFlags\n\t\t\t\t.join(\"\")\n\t\t\t\t.replace(new RegExp(`[${validFlags}]`, \"gu\"), \"\");\n\t\t\tif (temp) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 189 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 11,
            "lineCount": 62,
            "parameterCount": 1,
            "snippet": "\"CallExpression, NewExpression\"(node) {\n\t\t\t\tif (\n\t\t\t\t\tnode.callee.type !== \"Identifier\" ||\n\t\t\t\t\tnode.callee.name !== \"RegExp\"\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst flags = getFlags(node);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-irregular-whitespace.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 22,
            "lineCount": 212,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [\n\t\t\t{\n\t\t\t\tskipComments,\n\t\t\t\tskipStrings,\n\t\t\t\tskipRegExps,\n\t\t\t\tskipTemplates,\n\t\t\t\tskipJSXText,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 212 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-lone-blocks.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 20,
            "lineCount": 109,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst loneBlocks = [];\n\t\tlet ruleDef;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Reports a node as invalid.\n\t\t * @param {ASTNode} node The node to be reported.\n\t\t * @returns {void}\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 109 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-lonely-if.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 18,
            "lineCount": 87,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\treturn {\n\t\t\tIfStatement(node) {\n\t\t\t\tconst parent = node.parent,\n\t\t\t\t\tgrandparent = parent.parent;\n\t\t\t\tif (\n\t\t\t\t\tparent &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "IfStatement",
            "complexity": 18,
            "lineCount": 81,
            "parameterCount": 1,
            "snippet": "IfStatement(node) {\n\t\t\t\tconst parent = node.parent,\n\t\t\t\t\tgrandparent = parent.parent;\n\t\t\t\tif (\n\t\t\t\t\tparent &&\n\t\t\t\t\tparent.type === \"BlockStatement\" &&\n\t\t\t\t\tparent.body.length === 1 &&\n\t\t\t\t\t!astUtils.areBracesNecessary(parent, sourceCode) &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 81 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "fix",
            "complexity": 11,
            "lineCount": 62,
            "parameterCount": 1,
            "snippet": "fix(fixer) {\n\t\t\t\t\t\t\tconst openingElseCurly =\n\t\t\t\t\t\t\t\tsourceCode.getFirstToken(parent);\n\t\t\t\t\t\t\tconst closingElseCurly =\n\t\t\t\t\t\t\t\tsourceCode.getLastToken(parent);\n\t\t\t\t\t\t\tconst elseKeyword =\n\t\t\t\t\t\t\t\tsourceCode.getTokenBefore(openingElseCurly);\n\t\t\t\t\t\t\tconst tokenAfterElseBlock =\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-loop-func.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 37,
            "lineCount": 212,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst SKIPPED_IIFE_NODES = new Set();\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Gets the containing loop node of a specified node.\n\t\t *\n\t\t * We don't need to check nested functions, so this ignores those, with the exception of IIFE.\n\t\t * `Scope.through` contains references of nested functions.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 37 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 212 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isSafe",
            "complexity": 13,
            "lineCount": 61,
            "parameterCount": 2,
            "snippet": "function isSafe(loopNode, reference) {\n\t\t\tconst variable = reference.resolved;\n\t\t\tconst definition = variable && variable.defs[0];\n\t\t\tconst declaration = definition && definition.parent;\n\t\t\tconst kind =\n\t\t\t\tdeclaration && declaration.type === \"VariableDeclaration\"\n\t\t\t\t\t? declaration.kind\n\t\t\t\t\t: \"\";\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-loss-of-precision.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 17,
            "lineCount": 200,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\t/**\n\t\t * Returns whether the node is number literal\n\t\t * @param {Node} node the node literal being evaluated\n\t\t * @returns {boolean} true if the node is a number literal\n\t\t */\n\t\tfunction isNumber(node) {\n\t\t\treturn typeof node.value === \"number\";\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 200 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-magic-numbers.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 41,
            "lineCount": 197,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst config = context.options[0] || {},\n\t\t\tdetectObjects = !!config.detectObjects,\n\t\t\tenforceConst = !!config.enforceConst,\n\t\t\tignore = new Set((config.ignore || []).map(normalizeIgnoreValue)),\n\t\t\tignoreArrayIndexes = !!config.ignoreArrayIndexes,\n\t\t\tignoreDefaultValues = !!config.ignoreDefaultValues,\n\t\t\tignoreClassFieldInitialValues =\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 41 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 197 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "Literal",
            "complexity": 28,
            "lineCount": 68,
            "parameterCount": 1,
            "snippet": "Literal(node) {\n\t\t\t\tif (!astUtils.isNumericLiteral(node)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet fullNumberNode;\n\t\t\t\tlet value;\n\t\t\t\tlet raw;\n\t\t\t\tif (\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-misleading-character-class.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 34,
            "lineCount": 275,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst allowEscape = context.options[0]?.allowEscape;\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst parser = new RegExpParser();\n\t\tconst checkedPatternNodes = new Set();\n\t\t/**\n\t\t * Verify a given regular expression.\n\t\t * @param {Node} node The node to report.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 34 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 275 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "verify",
            "complexity": 20,
            "lineCount": 157,
            "parameterCount": 4,
            "snippet": "function verify(node, pattern, flags, unicodeFixer) {\n\t\t\tlet patternNode;\n\t\t\ttry {\n\t\t\t\tpatternNode = parser.parsePattern(pattern, 0, pattern.length, {\n\t\t\t\t\tunicode: flags.includes(\"u\"),\n\t\t\t\t\tunicodeSets: flags.includes(\"v\"),\n\t\t\t\t});\n\t\t\t} catch {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 157 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "Program",
            "complexity": 13,
            "lineCount": 83,
            "parameterCount": 1,
            "snippet": "Program(node) {\n\t\t\t\tconst scope = sourceCode.getScope(node);\n\t\t\t\tconst tracker = new ReferenceTracker(scope);\n\t\t\t\t/*\n\t\t\t\t * Iterate calls of RegExp.\n\t\t\t\t * E.g., `new RegExp()`, `RegExp()`, `new window.RegExp()`,\n\t\t\t\t *       `const {RegExp: a} = window; new a()`, etc...\n\t\t\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 83 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-mixed-operators.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 12,
            "lineCount": 106,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst options = normalizeOptions(context.options[0]);\n\t\t/**\n\t\t * Checks whether a given node should be ignored by options or not.\n\t\t * @param {ASTNode} node A node to check. This is a BinaryExpression\n\t\t *      node or a LogicalExpression node. This parent node is one of\n\t\t *      them, too.\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 106 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-mixed-requires.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 22,
            "lineCount": 192,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst options = context.options[0];\n\t\tlet grouping = false,\n\t\t\tallowCall = false;\n\t\tif (typeof options === \"object\") {\n\t\t\tgrouping = options.grouping;\n\t\t\tallowCall = options.allowCall;\n\t\t} else {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 192 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-multi-spaces.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 16,
            "lineCount": 103,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst options = context.options[0] || {};\n\t\tconst ignoreEOLComments = options.ignoreEOLComments;\n\t\tconst exceptions = Object.assign(\n\t\t\t{ Property: true },\n\t\t\toptions.exceptions,\n\t\t);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 103 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "Program",
            "complexity": 13,
            "lineCount": 68,
            "parameterCount": 0,
            "snippet": "Program() {\n\t\t\t\tsourceCode.tokensAndComments.forEach(\n\t\t\t\t\t(leftToken, leftIndex, tokensAndComments) => {\n\t\t\t\t\t\tif (leftIndex === tokensAndComments.length - 1) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst rightToken = tokensAndComments[leftIndex + 1];\n\t\t\t\t\t\tif (\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 13,
            "lineCount": 64,
            "parameterCount": 3,
            "snippet": "(leftToken, leftIndex, tokensAndComments) => {\n\t\t\t\t\t\tif (leftIndex === tokensAndComments.length - 1) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst rightToken = tokensAndComments[leftIndex + 1];\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!sourceCode.text\n\t\t\t\t\t\t\t\t.slice(leftToken.range[1], rightToken.range[0])\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-param-reassign.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 35,
            "lineCount": 176,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst props = context.options[0] && context.options[0].props;\n\t\tconst ignoredPropertyAssignmentsFor =\n\t\t\t(context.options[0] &&\n\t\t\t\tcontext.options[0].ignorePropertyModificationsFor) ||\n\t\t\t[];\n\t\tconst ignoredPropertyAssignmentsForRegex =\n\t\t\t(context.options[0] &&\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 35 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 176 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isModifyingProp",
            "complexity": 20,
            "lineCount": 75,
            "parameterCount": 1,
            "snippet": "function isModifyingProp(reference) {\n\t\t\tlet node = reference.identifier;\n\t\t\tlet parent = node.parent;\n\t\t\twhile (\n\t\t\t\tparent &&\n\t\t\t\t(!stopNodePattern.test(parent.type) ||\n\t\t\t\t\tparent.type === \"ForInStatement\" ||\n\t\t\t\t\tparent.type === \"ForOfStatement\")\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-promise-executor-return.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 14,
            "lineCount": 100,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tlet funcInfo = null;\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst [{ allowVoid }] = context.options;\n\t\treturn {\n\t\t\tonCodePathStart(_, node) {\n\t\t\t\tfuncInfo = {\n\t\t\t\t\tupper: funcInfo,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 100 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "onCodePathStart",
            "complexity": 10,
            "lineCount": 54,
            "parameterCount": 2,
            "snippet": "onCodePathStart(_, node) {\n\t\t\t\tfuncInfo = {\n\t\t\t\t\tupper: funcInfo,\n\t\t\t\t\tshouldCheck:\n\t\t\t\t\t\tfunctionTypesToCheck.has(node.type) &&\n\t\t\t\t\t\tisPromiseExecutor(node, sourceCode),\n\t\t\t\t};\n\t\t\t\tif (\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-redeclare.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 16,
            "lineCount": 123,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ builtinGlobals }] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Iterate declarations of a given variable.\n\t\t * @param {escope.variable} variable The variable object to iterate declarations.\n\t\t * @returns {IterableIterator<{type:string,node:ASTNode,loc:SourceLocation}>} The declarations.\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 123 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-regex-spaces.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 15,
            "lineCount": 164,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Validate regular expression\n\t\t * @param {ASTNode} nodeToReport Node to report.\n\t\t * @param {string} pattern Regular expression pattern to validate.\n\t\t * @param {string} rawPattern Raw representation of the pattern in the source code.\n\t\t * @param {number} rawPatternStartRange Start range of the pattern in the source code.\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 164 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkRegex",
            "complexity": 7,
            "lineCount": 74,
            "parameterCount": 5,
            "snippet": "function checkRegex(\n\t\t\tnodeToReport,\n\t\t\tpattern,\n\t\t\trawPattern,\n\t\t\trawPatternStartRange,\n\t\t\tflags,\n\t\t) {\n\t\t\tif (!DOUBLE_SPACE.test(rawPattern)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-restricted-exports.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 28,
            "lineCount": 125,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst restrictedNames = new Set(\n\t\t\tcontext.options[0] && context.options[0].restrictedNamedExports,\n\t\t);\n\t\tconst restrictedNamePattern =\n\t\t\tcontext.options[0] &&\n\t\t\tcontext.options[0].restrictedNamedExportsPattern;\n\t\tconst restrictDefaultExports =\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 125 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkExportedName",
            "complexity": 18,
            "lineCount": 66,
            "parameterCount": 1,
            "snippet": "function checkExportedName(node) {\n\t\t\tconst name = astUtils.getModuleExportName(node);\n\t\t\tlet matchesRestrictedNamePattern = false;\n\t\t\tif (restrictedNamePattern && name !== \"default\") {\n\t\t\t\tconst patternRegex = new RegExp(restrictedNamePattern, \"u\");\n\t\t\t\tmatchesRestrictedNamePattern = patternRegex.test(name);\n\t\t\t}\n\t\t\tif (matchesRestrictedNamePattern || restrictedNames.has(name)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-restricted-imports.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 71,
            "lineCount": 448,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst options = Array.isArray(context.options) ? context.options : [];\n\t\tconst isPathAndPatternsObject =\n\t\t\ttypeof options[0] === \"object\" &&\n\t\t\t(Object.hasOwn(options[0], \"paths\") ||\n\t\t\t\tObject.hasOwn(options[0], \"patterns\"));\n\t\tconst restrictedPaths =\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 71 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 448 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "reportPathForPatterns",
            "complexity": 27,
            "lineCount": 160,
            "parameterCount": 3,
            "snippet": "function reportPathForPatterns(node, group, importNames) {\n\t\t\tconst importSource = node.source.value.trim();\n\t\t\tconst customMessage = group.customMessage;\n\t\t\tconst restrictedImportNames = group.importNames;\n\t\t\tconst restrictedImportNamePattern = group.importNamePattern\n\t\t\t\t? new RegExp(group.importNamePattern, \"u\")\n\t\t\t\t: null;\n\t\t\tconst allowedImportNames = group.allowImportNames;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 160 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 20,
            "lineCount": 123,
            "parameterCount": 2,
            "snippet": "(specifiers, importName) => {\n\t\t\t\tif (importName === \"*\") {\n\t\t\t\t\tconst [specifier] = specifiers;\n\t\t\t\t\tif (restrictedImportNames) {\n\t\t\t\t\t\tcontext.report({\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tmessageId: customMessage\n\t\t\t\t\t\t\t\t? \"patternAndEverythingWithCustomMessage\"\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 123 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkRestrictedPathAndReport",
            "complexity": 16,
            "lineCount": 107,
            "parameterCount": 3,
            "snippet": "function checkRestrictedPathAndReport(importSource, importNames, node) {\n\t\t\tif (!Object.hasOwn(groupedRestrictedPaths, importSource)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tgroupedRestrictedPaths[importSource].forEach(\n\t\t\t\trestrictedPathEntry => {\n\t\t\t\t\tconst customMessage = restrictedPathEntry.message;\n\t\t\t\t\tconst restrictedImportNames =\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 107 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 15,
            "lineCount": 99,
            "parameterCount": 1,
            "snippet": "restrictedPathEntry => {\n\t\t\t\t\tconst customMessage = restrictedPathEntry.message;\n\t\t\t\t\tconst restrictedImportNames =\n\t\t\t\t\t\trestrictedPathEntry.importNames;\n\t\t\t\t\tconst allowedImportNames =\n\t\t\t\t\t\trestrictedPathEntry.allowImportNames;\n\t\t\t\t\tif (!restrictedImportNames && !allowedImportNames) {\n\t\t\t\t\t\tcontext.report({\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 99 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-restricted-modules.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 23,
            "lineCount": 141,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst options = Array.isArray(context.options) ? context.options : [];\n\t\tconst isPathAndPatternsObject =\n\t\t\ttypeof options[0] === \"object\" &&\n\t\t\t(Object.hasOwn(options[0], \"paths\") ||\n\t\t\t\tObject.hasOwn(options[0], \"patterns\"));\n\t\tconst restrictedPaths =\n\t\t\t(isPathAndPatternsObject ? options[0].paths : context.options) ||\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 141 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-restricted-properties.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 23,
            "lineCount": 150,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst restrictedCalls = context.options;\n\t\tif (restrictedCalls.length === 0) {\n\t\t\treturn {};\n\t\t}\n\t\tconst restrictedProperties = new Map();\n\t\tconst globallyRestrictedObjects = new Map();\n\t\tconst globallyRestrictedProperties = new Map();\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 150 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkPropertyAccess",
            "complexity": 11,
            "lineCount": 55,
            "parameterCount": 3,
            "snippet": "function checkPropertyAccess(node, objectName, propertyName) {\n\t\t\tif (propertyName === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst matchedObject = restrictedProperties.get(objectName);\n\t\t\tconst matchedObjectProperty = matchedObject\n\t\t\t\t? matchedObject.get(propertyName)\n\t\t\t\t: globallyRestrictedObjects.get(objectName);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-return-await.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 20,
            "lineCount": 116,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\t/**\n\t\t * Reports a found unnecessary `await` expression.\n\t\t * @param {ASTNode} node The node representing the `await` expression to report\n\t\t * @returns {void}\n\t\t */\n\t\tfunction reportUnnecessaryAwait(node) {\n\t\t\tcontext.report({\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 116 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-self-assign.js",
        "criticalFunctions": [
          {
            "name": "eachSelfAssignment",
            "complexity": 34,
            "lineCount": 93,
            "parameterCount": 4,
            "snippet": "function eachSelfAssignment(left, right, props, report) {\n\tif (!left || !right) {\n\t} else if (\n\t\tleft.type === \"Identifier\" &&\n\t\tright.type === \"Identifier\" &&\n\t\tleft.name === right.name\n\t) {\n\t\treport(right);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 34 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 93 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-sequences.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 16,
            "lineCount": 102,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ allowInParentheses }] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Parts of the grammar that are required to have parens.\n\t\t */\n\t\tconst parenthesized = {\n\t\t\tDoWhileStatement: \"test\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 102 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-setter-return.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 6,
            "lineCount": 64,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tlet funcInfo = null;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Creates and pushes to the stack a function info object for the given function node.\n\t\t * @param {ASTNode} node The function node.\n\t\t * @returns {void}\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-shadow.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 97,
            "lineCount": 514,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [\n\t\t\t{\n\t\t\t\tbuiltinGlobals,\n\t\t\t\thoist,\n\t\t\t\tallow,\n\t\t\t\tignoreOnInitialization,\n\t\t\t\tignoreTypeValueShadow,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 97 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 514 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkForShadows",
            "complexity": 24,
            "lineCount": 62,
            "parameterCount": 1,
            "snippet": "function checkForShadows(scope) {\n\t\t\tif (isGlobalAugmentation(scope)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst variables = scope.variables;\n\t\t\tfor (let i = 0; i < variables.length; ++i) {\n\t\t\t\tconst variable = variables[i];\n\t\t\t\tif (\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isInitPatternNode",
            "complexity": 13,
            "lineCount": 57,
            "parameterCount": 2,
            "snippet": "function isInitPatternNode(variable, shadowedVariable) {\n\t\t\tconst outerDef = shadowedVariable.defs[0];\n\t\t\tif (!outerDef) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst { variableScope } = variable.scope;\n\t\t\tif (\n\t\t\t\t!(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-this-before-super.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 28,
            "lineCount": 287,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\t/*\n\t\t * Information for each constructor.\n\t\t * - upper:      Information of the upper constructor.\n\t\t * - hasExtends: A flag which shows whether the owner class has a valid\n\t\t *   `extends` part.\n\t\t * - scope:      The scope of the owner class.\n\t\t * - codePath:   The code path of this constructor.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 287 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-trailing-spaces.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 18,
            "lineCount": 144,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst BLANK_CLASS = \"[ \\t\\u00a0\\u2000-\\u200b\\u3000]\",\n\t\t\tSKIP_BLANK = `^${BLANK_CLASS}*$`,\n\t\t\tNONBLANK = `${BLANK_CLASS}+$`;\n\t\tconst options = context.options[0] || {},\n\t\t\tskipBlankLines = options.skipBlankLines || false,\n\t\t\tignoreComments = options.ignoreComments || false;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 144 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkTrailingSpaces",
            "complexity": 13,
            "lineCount": 80,
            "parameterCount": 1,
            "snippet": "function checkTrailingSpaces(node) {\n\t\t\t\t/*\n\t\t\t\t * Let's hack. Since Espree does not return whitespace nodes,\n\t\t\t\t * fetch the source code and do matching via regexps.\n\t\t\t\t */\n\t\t\t\tconst re = new RegExp(NONBLANK, \"u\"),\n\t\t\t\t\tskipMatch = new RegExp(SKIP_BLANK, \"u\"),\n\t\t\t\t\tlines = sourceCode.lines,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-underscore-dangle.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 47,
            "lineCount": 300,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [\n\t\t\t{\n\t\t\t\tallow,\n\t\t\t\tallowAfterSuper,\n\t\t\t\tallowAfterThis,\n\t\t\t\tallowAfterThisConstructor,\n\t\t\t\tallowFunctionParams,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 47 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 300 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-unmodified-loop-condition.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 17,
            "lineCount": 177,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tlet groupMap = null;\n\t\t/**\n\t\t * Reports a given condition info.\n\t\t * @param {LoopConditionInfo} condition A loop condition info to report.\n\t\t * @returns {void}\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 177 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-unneeded-ternary.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 21,
            "lineCount": 155,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ defaultAssignment }] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Test if the node is a boolean literal\n\t\t * @param {ASTNode} node The node to report.\n\t\t * @returns {boolean} True if the its a boolean literal\n\t\t * @private\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 155 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ConditionalExpression",
            "complexity": 12,
            "lineCount": 78,
            "parameterCount": 1,
            "snippet": "ConditionalExpression(node) {\n\t\t\t\tif (\n\t\t\t\t\tisBooleanLiteral(node.alternate) &&\n\t\t\t\t\tisBooleanLiteral(node.consequent)\n\t\t\t\t) {\n\t\t\t\t\tcontext.report({\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tmessageId: \"unnecessaryConditionalExpression\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 78 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-unreachable-loop.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 5,
            "lineCount": 78,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ ignore: ignoredLoopTypes }] = context.options;\n\t\tconst loopTypesToCheck = getDifference(allLoopTypes, ignoredLoopTypes),\n\t\t\tloopSelector = loopTypesToCheck.join(\",\"),\n\t\t\tloopsByTargetSegments = new Map(),\n\t\t\tloopsToReport = new Set();\n\t\tconst codePathSegments = [];\n\t\tlet currentCodePathSegments = new Set();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 78 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-unreachable.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 17,
            "lineCount": 167,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\t/** @type {ConstructorInfo | null} */\n\t\tlet constructorInfo = null;\n\t\t/** @type {ConsecutiveRange} */\n\t\tconst range = new ConsecutiveRange(context.sourceCode);\n\t\t/** @type {Array<Set<CodePathSegment>>} */\n\t\tconst codePathSegments = [];\n\t\t/** @type {Set<CodePathSegment>} */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 167 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-unsafe-optional-chaining.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 23,
            "lineCount": 156,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ disallowArithmeticOperators }] = context.options;\n\t\t/**\n\t\t * Reports unsafe usage of optional chaining\n\t\t * @param {ASTNode} node node to report\n\t\t * @returns {void}\n\t\t */\n\t\tfunction reportUnsafeUsage(node) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 156 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-unused-private-class-members.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 29,
            "lineCount": 188,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst trackedClasses = [];\n\t\t/**\n\t\t * Check whether the current node is in a write only assignment.\n\t\t * @param {ASTNode} privateIdentifierNode Node referring to a private identifier\n\t\t * @returns {boolean} Whether the node is in a write only assignment\n\t\t * @private\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 29 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 188 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "PrivateIdentifier",
            "complexity": 14,
            "lineCount": 88,
            "parameterCount": 1,
            "snippet": "PrivateIdentifier(privateIdentifierNode) {\n\t\t\t\tconst classBody = trackedClasses.find(classProperties =>\n\t\t\t\t\tclassProperties.has(privateIdentifierNode.name),\n\t\t\t\t);\n\t\t\t\tif (!classBody) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst memberDefinition = classBody.get(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 88 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-unused-vars.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 238,
            "lineCount": 1602,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst REST_PROPERTY_TYPE =\n\t\t\t/^(?:RestElement|(?:Experimental)?RestProperty)$/u;\n\t\tconst config = {\n\t\t\tvars: \"all\",\n\t\t\targs: \"after-used\",\n\t\t\tignoreRestSiblings: false,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 238 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1602 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "handleFixes",
            "complexity": 96,
            "lineCount": 693,
            "parameterCount": 2,
            "snippet": "function handleFixes(fixer, unusedVar) {\n\t\t\tconst id = unusedVar.identifiers[0];\n\t\t\tconst parent = id.parent;\n\t\t\tconst parentType = parent.type;\n\t\t\tconst tokenBefore = sourceCode.getTokenBefore(id);\n\t\t\tconst tokenAfter = sourceCode.getTokenAfter(id);\n\t\t\tconst isFunction = astUtils.isFunction;\n\t\t\tconst isLoop = astUtils.isLoop;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 96 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 693 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "collectUnusedVariables",
            "complexity": 48,
            "lineCount": 204,
            "parameterCount": 2,
            "snippet": "function collectUnusedVariables(scope, unusedVars) {\n\t\t\tconst variables = scope.variables;\n\t\t\tconst childScopes = scope.childScopes;\n\t\t\tlet i, l;\n\t\t\tif (scope.type !== \"global\" || config.vars === \"all\") {\n\t\t\t\tfor (i = 0, l = variables.length; i < l; ++i) {\n\t\t\t\t\tconst variable = variables[i];\n\t\t\t\t\tif (\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 48 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 204 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "fixVariables",
            "complexity": 9,
            "lineCount": 67,
            "parameterCount": 1,
            "snippet": "function fixVariables(node) {\n\t\t\t\tconst parentNode = node.parent;\n\t\t\t\tif (parentNode.type === \"VariableDeclarator\") {\n\t\t\t\t\tif (isLoop(parentNode.parent.parent)) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\t * remove unused declared variable with single declaration such as 'var a = b;'\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 8,
            "lineCount": 66,
            "parameterCount": 1,
            "snippet": "\"Program:exit\"(programNode) {\n\t\t\t\tconst unusedVars = collectUnusedVariables(\n\t\t\t\t\tsourceCode.getScope(programNode),\n\t\t\t\t\t[],\n\t\t\t\t);\n\t\t\t\tfor (let i = 0, l = unusedVars.length; i < l; ++i) {\n\t\t\t\t\tconst unusedVar = unusedVars[i];\n\t\t\t\t\tif (unusedVar.defs.length > 0) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-use-before-define.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 28,
            "lineCount": 123,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst options = parseOptions(context.options[0]);\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Determines whether a given reference should be checked.\n\t\t *\n\t\t * Returns `false` if the reference is:\n\t\t * - initialization's (e.g., `let a = 1`).\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 123 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "shouldCheck",
            "complexity": 25,
            "lineCount": 73,
            "parameterCount": 1,
            "snippet": "function shouldCheck(reference) {\n\t\t\tif (reference.init) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst { identifier } = reference;\n\t\t\tif (\n\t\t\t\toptions.allowNamedExports &&\n\t\t\t\tidentifier.parent.type === \"ExportSpecifier\" &&\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 73 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isEvaluatedDuringInitialization",
            "complexity": 12,
            "lineCount": 53,
            "parameterCount": 1,
            "snippet": "function isEvaluatedDuringInitialization(reference) {\n\tif (isFromSeparateExecutionContext(reference)) {\n\t\t/*\n\t\t * Even if the reference appears in the initializer, it isn't evaluated during the initialization.\n\t\t * For example, `const x = () => x;` is valid.\n\t\t */\n\t\treturn false;\n\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-useless-assignment.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 57,
            "lineCount": 509,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * @typedef {Object} ScopeStack\n\t\t * @property {CodePath} codePath The code path of this scope stack.\n\t\t * @property {Scope} scope The scope of this scope stack.\n\t\t * @property {ScopeStack} upper The upper scope stack.\n\t\t * @property {Record<string, ScopeStackSegmentInfo>} segments The map of ScopeStackSegmentInfo.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 57 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 509 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "verify",
            "complexity": 33,
            "lineCount": 292,
            "parameterCount": 1,
            "snippet": "function verify(target) {\n\t\t\t/**\n\t\t\t * Checks whether the given identifier is used in the segment.\n\t\t\t * @param {CodePathSegment} segment The code path segment.\n\t\t\t * @param {Identifier} identifier The identifier to check.\n\t\t\t * @returns {boolean} `true` if the identifier is used in the segment.\n\t\t\t */\n\t\t\tfunction isIdentifierUsedInSegment(segment, identifier) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 33 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 292 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "verifyAssignmentIsUsed",
            "complexity": 28,
            "lineCount": 256,
            "parameterCount": 2,
            "snippet": "function verifyAssignmentIsUsed(targetAssignment, allAssignments) {\n\t\t\t\tconst isAssignmentInTryBlock = target.tryStatementBlocks.some(\n\t\t\t\t\ttryBlock =>\n\t\t\t\t\t\ttryBlock.range[0] <=\n\t\t\t\t\t\t\ttargetAssignment.identifier.range[0] &&\n\t\t\t\t\t\ttargetAssignment.identifier.range[1] <=\n\t\t\t\t\t\t\ttryBlock.range[1],\n\t\t\t\t);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 256 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 21,
            "lineCount": 110,
            "parameterCount": 1,
            "snippet": "\":matches(VariableDeclarator[init!=null], AssignmentExpression, UpdateExpression):exit\"(\n\t\t\t\tnode,\n\t\t\t) {\n\t\t\t\tif (scopeStack.currentSegments.size === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst assignments = scopeStack.assignments;\n\t\t\t\tlet pattern;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 110 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-useless-backreference.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 19,
            "lineCount": 168,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Checks and reports useless backreferences in the given regular expression.\n\t\t * @param {ASTNode} node Node that represents regular expression. A regex literal or RegExp constructor call.\n\t\t * @param {string} pattern Regular expression pattern.\n\t\t * @param {string} flags Regular expression flags.\n\t\t * @returns {void}\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 168 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkRegex",
            "complexity": 16,
            "lineCount": 127,
            "parameterCount": 3,
            "snippet": "function checkRegex(node, pattern, flags) {\n\t\t\tlet regExpAST;\n\t\t\ttry {\n\t\t\t\tregExpAST = parser.parsePattern(pattern, 0, pattern.length, {\n\t\t\t\t\tunicode: flags.includes(\"u\"),\n\t\t\t\t\tunicodeSets: flags.includes(\"v\"),\n\t\t\t\t});\n\t\t\t} catch {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 127 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "onBackreferenceEnter",
            "complexity": 15,
            "lineCount": 111,
            "parameterCount": 1,
            "snippet": "onBackreferenceEnter(bref) {\n\t\t\t\t\tconst groups = [bref.resolved].flat(),\n\t\t\t\t\t\tbrefPath = getPathToRoot(bref);\n\t\t\t\t\tconst problems = groups.map(group => {\n\t\t\t\t\t\tconst groupPath = getPathToRoot(group);\n\t\t\t\t\t\tif (brefPath.includes(group)) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tmessageId: \"nested\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 111 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 10,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "group => {\n\t\t\t\t\t\tconst groupPath = getPathToRoot(group);\n\t\t\t\t\t\tif (brefPath.includes(group)) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tmessageId: \"nested\",\n\t\t\t\t\t\t\t\tgroup,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-useless-computed-key.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 7,
            "lineCount": 77,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst [{ enforceForClassMembers }] = context.options;\n\t\t/**\n\t\t * Reports a given node if it violated this rule.\n\t\t * @param {ASTNode} node The node to check.\n\t\t * @returns {void}\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 77 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "check",
            "complexity": 5,
            "lineCount": 54,
            "parameterCount": 1,
            "snippet": "function check(node) {\n\t\t\tif (hasUselessComputedKey(node)) {\n\t\t\t\tconst { key } = node;\n\t\t\t\tcontext.report({\n\t\t\t\t\tnode,\n\t\t\t\t\tmessageId: \"unnecessarilyComputedProperty\",\n\t\t\t\t\tdata: { property: sourceCode.getText(key) },\n\t\t\t\t\tfix(fixer) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-useless-constructor.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 11,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\t/**\n\t\t * Checks whether a node is a redundant constructor\n\t\t * @param {ASTNode} node node to check\n\t\t * @returns {void}\n\t\t */\n\t\tfunction checkForConstructor(node) {\n\t\t\tif (\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkForConstructor",
            "complexity": 11,
            "lineCount": 54,
            "parameterCount": 1,
            "snippet": "function checkForConstructor(node) {\n\t\t\tif (\n\t\t\t\tnode.kind !== \"constructor\" ||\n\t\t\t\tnode.value.type !== \"FunctionExpression\" ||\n\t\t\t\thasDecoratorsOrParameterProperty(node) ||\n\t\t\t\thasUsefulAccessibility(node)\n\t\t\t) {\n\t\t\t\treturn;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-useless-escape.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 43,
            "lineCount": 302,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst [{ allowRegexCharacters }] = context.options;\n\t\tconst parser = new RegExpParser();\n\t\t/**\n\t\t * Reports a node\n\t\t * @param {ASTNode} node The node to report\n\t\t * @param {number} startOffset The backslash's offset from the start of the node\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 43 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 302 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "validateRegExp",
            "complexity": 23,
            "lineCount": 150,
            "parameterCount": 1,
            "snippet": "function validateRegExp(node) {\n\t\t\tconst { pattern, flags } = node.regex;\n\t\t\tlet patternNode;\n\t\t\tconst unicode = flags.includes(\"u\");\n\t\t\tconst unicodeSets = flags.includes(\"v\");\n\t\t\ttry {\n\t\t\t\tpatternNode = parser.parsePattern(pattern, 0, pattern.length, {\n\t\t\t\t\tunicode,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 150 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "onCharacterEnter",
            "complexity": 22,
            "lineCount": 121,
            "parameterCount": 1,
            "snippet": "onCharacterEnter(characterNode) {\n\t\t\t\t\tif (!characterNode.raw.startsWith(\"\\\\\")) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst escapedChar = characterNode.raw.slice(1);\n\t\t\t\t\tif (\n\t\t\t\t\t\tescapedChar !==\n\t\t\t\t\t\t\tString.fromCodePoint(characterNode.value) ||\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 121 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-useless-rename.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 22,
            "lineCount": 145,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst [{ ignoreDestructuring, ignoreImport, ignoreExport }] =\n\t\t\tcontext.options;\n\t\t/**\n\t\t * Reports error for unnecessarily renamed assignments\n\t\t * @param {ASTNode} node node to report\n\t\t * @param {ASTNode} initial node with initial name value\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 145 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-useless-return.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 23,
            "lineCount": 300,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst segmentInfoMap = new WeakMap();\n\t\tconst sourceCode = context.sourceCode;\n\t\tlet scopeInfo = null;\n\t\t/**\n\t\t * Checks whether the given segment is terminated by a return statement or not.\n\t\t * @param {CodePathSegment} segment The segment to check.\n\t\t * @returns {boolean} `true` if the segment is terminated by a return statement, or if it's still a part of unreachable.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 300 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "markReturnStatementsOnSegmentAsUsed",
            "complexity": 7,
            "lineCount": 59,
            "parameterCount": 2,
            "snippet": "function markReturnStatementsOnSegmentAsUsed(\n\t\t\tsegment,\n\t\t\tusedUnreachableSegments,\n\t\t) {\n\t\t\tif (!segment.reachable) {\n\t\t\t\tusedUnreachableSegments.add(segment);\n\t\t\t\tsegment.allPrevSegments\n\t\t\t\t\t.filter(isReturned)\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-var.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 21,
            "lineCount": 148,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Checks whether the variables which are defined by the given declarator node have their references in TDZ.\n\t\t * @param {ASTNode} declarator The VariableDeclarator node to check.\n\t\t * @returns {boolean} `true` if one of the variables which are defined by the given declarator node have their references in TDZ.\n\t\t */\n\t\tfunction hasSelfReferenceInTDZ(declarator) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 148 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/object-curly-newline.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 23,
            "lineCount": 159,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst normalizedOptions = normalizeOptions(context.options[0]);\n\t\t/**\n\t\t * Reports a given node if it violated this rule.\n\t\t * @param {ASTNode} node A node to check. This is an ObjectExpression, ObjectPattern, ImportDeclaration or ExportNamedDeclaration node.\n\t\t * @returns {void}\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 159 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "check",
            "complexity": 23,
            "lineCount": 142,
            "parameterCount": 1,
            "snippet": "function check(node) {\n\t\t\tconst options = normalizedOptions[node.type];\n\t\t\tif (\n\t\t\t\t(node.type === \"ImportDeclaration\" &&\n\t\t\t\t\t!node.specifiers.some(\n\t\t\t\t\t\tspecifier => specifier.type === \"ImportSpecifier\",\n\t\t\t\t\t)) ||\n\t\t\t\t(node.type === \"ExportNamedDeclaration\" &&\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 142 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/object-curly-spacing.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 27,
            "lineCount": 300,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst spaced = context.options[0] === \"always\",\n\t\t\tsourceCode = context.sourceCode;\n\t\t/**\n\t\t * Determines whether an option is set, relative to the spacing option.\n\t\t * If spaced is \"always\", then check whether option is set to false.\n\t\t * If spaced is \"never\", then check whether option is set to true.\n\t\t * @param {Object} option The option to exclude.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 300 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "validateBraceSpacing",
            "complexity": 21,
            "lineCount": 47,
            "parameterCount": 5,
            "snippet": "function validateBraceSpacing(node, first, second, penultimate, last) {\n\t\t\tif (astUtils.isTokenOnSameLine(first, second)) {\n\t\t\t\tconst firstSpaced = sourceCode.isSpaceBetweenTokens(\n\t\t\t\t\tfirst,\n\t\t\t\t\tsecond,\n\t\t\t\t);\n\t\t\t\tif (options.spaced && !firstSpaced) {\n\t\t\t\t\treportRequiredBeginningSpace(node, first);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/object-shorthand.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 81,
            "lineCount": 504,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst APPLY = context.options[0] || OPTIONS.always;\n\t\tconst APPLY_TO_METHODS =\n\t\t\tAPPLY === OPTIONS.methods || APPLY === OPTIONS.always;\n\t\tconst APPLY_TO_PROPS =\n\t\t\tAPPLY === OPTIONS.properties || APPLY === OPTIONS.always;\n\t\tconst APPLY_NEVER = APPLY === OPTIONS.never;\n\t\tconst APPLY_CONSISTENT = APPLY === OPTIONS.consistent;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 81 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 504 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 42,
            "lineCount": 141,
            "parameterCount": 1,
            "snippet": "\"Property:exit\"(node) {\n\t\t\t\tconst isConciseProperty = node.method || node.shorthand;\n\t\t\t\tif (node.parent.type === \"ObjectPattern\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (node.kind === \"get\" || node.kind === \"set\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 42 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 141 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "makeFunctionShorthand",
            "complexity": 12,
            "lineCount": 84,
            "parameterCount": 2,
            "snippet": "function makeFunctionShorthand(fixer, node) {\n\t\t\tconst firstKeyToken = node.computed\n\t\t\t\t? sourceCode.getFirstToken(node, astUtils.isOpeningBracketToken)\n\t\t\t\t: sourceCode.getFirstToken(node.key);\n\t\t\tconst lastKeyToken = node.computed\n\t\t\t\t? sourceCode.getFirstTokenBetween(\n\t\t\t\t\t\tnode.key,\n\t\t\t\t\t\tnode.value,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 84 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/one-var.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 92,
            "lineCount": 582,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst MODE_ALWAYS = \"always\";\n\t\tconst MODE_NEVER = \"never\";\n\t\tconst MODE_CONSECUTIVE = \"consecutive\";\n\t\tconst mode = context.options[0] || MODE_ALWAYS;\n\t\tconst options = {};\n\t\tif (typeof mode === \"string\") {\n\t\t\toptions.var = { uninitialized: mode, initialized: mode };\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 92 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 582 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkVariableDeclaration",
            "complexity": 42,
            "lineCount": 192,
            "parameterCount": 1,
            "snippet": "function checkVariableDeclaration(node) {\n\t\t\tconst parent = node.parent;\n\t\t\tconst type = node.kind;\n\t\t\tif (!options[type]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst declarations = node.declarations;\n\t\t\tconst declarationCounts = countDeclarations(declarations);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 42 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 192 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "hasOnlyOneStatement",
            "complexity": 16,
            "lineCount": 41,
            "parameterCount": 2,
            "snippet": "function hasOnlyOneStatement(statementType, declarations) {\n\t\t\tconst declarationCounts = countDeclarations(declarations);\n\t\t\tconst currentOptions = options[statementType] || {};\n\t\t\tconst currentScope = getCurrentScope(statementType);\n\t\t\tconst hasRequires = declarations.some(isRequire);\n\t\t\tif (\n\t\t\t\tcurrentOptions.uninitialized === MODE_ALWAYS &&\n\t\t\t\tcurrentOptions.initialized === MODE_ALWAYS\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "splitDeclarations",
            "complexity": 12,
            "lineCount": 92,
            "parameterCount": 1,
            "snippet": "function splitDeclarations(declaration) {\n\t\t\tconst { parent } = declaration;\n\t\t\tif (\n\t\t\t\t!isInStatementList(\n\t\t\t\t\tparent.type === \"ExportNamedDeclaration\"\n\t\t\t\t\t\t? parent\n\t\t\t\t\t\t: declaration,\n\t\t\t\t)\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 92 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 10,
            "lineCount": 77,
            "parameterCount": 1,
            "snippet": "fixer =>\n\t\t\t\tdeclaration.declarations\n\t\t\t\t\t.map(declarator => {\n\t\t\t\t\t\tconst tokenAfterDeclarator =\n\t\t\t\t\t\t\tsourceCode.getTokenAfter(declarator);\n\t\t\t\t\t\tif (tokenAfterDeclarator === null) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 77 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/operator-assignment.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 20,
            "lineCount": 181,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst never = context.options[0] === \"never\";\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Returns the operator token of an AssignmentExpression or BinaryExpression\n\t\t * @param {ASTNode} node An AssignmentExpression or BinaryExpression node\n\t\t * @returns {Token} The operator token in the node\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 181 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "verify",
            "complexity": 11,
            "lineCount": 72,
            "parameterCount": 1,
            "snippet": "function verify(node) {\n\t\t\tif (\n\t\t\t\tnode.operator !== \"=\" ||\n\t\t\t\tnode.right.type !== \"BinaryExpression\"\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst left = node.left;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "prohibit",
            "complexity": 9,
            "lineCount": 76,
            "parameterCount": 1,
            "snippet": "function prohibit(node) {\n\t\t\tif (\n\t\t\t\tnode.operator !== \"=\" &&\n\t\t\t\t!astUtils.isLogicalAssignmentOperator(node.operator)\n\t\t\t) {\n\t\t\t\tcontext.report({\n\t\t\t\t\tnode,\n\t\t\t\t\tmessageId: \"unexpected\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 76 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "fix",
            "complexity": 7,
            "lineCount": 64,
            "parameterCount": 1,
            "snippet": "fix(fixer) {\n\t\t\t\t\t\tif (canBeFixed(node.left)) {\n\t\t\t\t\t\t\tconst firstToken = sourceCode.getFirstToken(node);\n\t\t\t\t\t\t\tconst operatorToken = getOperatorToken(node);\n\t\t\t\t\t\t\tconst leftText = sourceCode\n\t\t\t\t\t\t\t\t.getText()\n\t\t\t\t\t\t\t\t.slice(node.range[0], operatorToken.range[0]);\n\t\t\t\t\t\t\tconst newOperator = node.operator.slice(0, -1);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/operator-linebreak.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 35,
            "lineCount": 233,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst usedDefaultGlobal = !context.options[0];\n\t\tconst globalStyle = context.options[0] || \"after\";\n\t\tconst options = context.options[1] || {};\n\t\tconst styleOverrides = options.overrides\n\t\t\t? Object.assign({}, options.overrides)\n\t\t\t: {};\n\t\tif (usedDefaultGlobal && !styleOverrides[\"?\"]) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 35 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 233 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getFixer",
            "complexity": 15,
            "lineCount": 87,
            "parameterCount": 2,
            "snippet": "function getFixer(operatorToken, desiredStyle) {\n\t\t\treturn fixer => {\n\t\t\t\tconst tokenBefore = sourceCode.getTokenBefore(operatorToken);\n\t\t\t\tconst tokenAfter = sourceCode.getTokenAfter(operatorToken);\n\t\t\t\tconst textBefore = sourceCode.text.slice(\n\t\t\t\t\ttokenBefore.range[1],\n\t\t\t\t\toperatorToken.range[0],\n\t\t\t\t);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 15,
            "lineCount": 85,
            "parameterCount": 1,
            "snippet": "fixer => {\n\t\t\t\tconst tokenBefore = sourceCode.getTokenBefore(operatorToken);\n\t\t\t\tconst tokenAfter = sourceCode.getTokenAfter(operatorToken);\n\t\t\t\tconst textBefore = sourceCode.text.slice(\n\t\t\t\t\ttokenBefore.range[1],\n\t\t\t\t\toperatorToken.range[0],\n\t\t\t\t);\n\t\t\t\tconst textAfter = sourceCode.text.slice(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 85 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "validateNode",
            "complexity": 12,
            "lineCount": 75,
            "parameterCount": 3,
            "snippet": "function validateNode(node, rightSide, operator) {\n\t\t\t/*\n\t\t\t * Find the operator token by searching from the right side, because between the left side and the operator\n\t\t\t * there could be additional tokens from type annotations. Search specifically for the token which\n\t\t\t * value equals the operator, in order to skip possible opening parentheses before the right side node.\n\t\t\t */\n\t\t\tconst operatorToken = sourceCode.getTokenBefore(\n\t\t\t\trightSide,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/padded-blocks.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 32,
            "lineCount": 272,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst options = {};\n\t\tconst typeOptions = context.options[0] || \"always\";\n\t\tconst exceptOptions = context.options[1] || {};\n\t\tif (typeof typeOptions === \"string\") {\n\t\t\tconst shouldHavePadding = typeOptions === \"always\";\n\t\t\toptions.blocks = shouldHavePadding;\n\t\t\toptions.switches = shouldHavePadding;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 272 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkPadding",
            "complexity": 8,
            "lineCount": 101,
            "parameterCount": 1,
            "snippet": "function checkPadding(node) {\n\t\t\tconst openBrace = getOpenBrace(node),\n\t\t\t\tfirstBlockToken = getFirstBlockToken(openBrace),\n\t\t\t\ttokenBeforeFirst = sourceCode.getTokenBefore(firstBlockToken, {\n\t\t\t\t\tincludeComments: true,\n\t\t\t\t}),\n\t\t\t\tcloseBrace = sourceCode.getLastToken(node),\n\t\t\t\tlastBlockToken = getLastBlockToken(closeBrace),\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 101 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/padding-line-between-statements.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 13,
            "lineCount": 153,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst configureList = context.options || [];\n\t\tlet scopeInfo = null;\n\t\t/**\n\t\t * Processes to enter to new scope.\n\t\t * This manages the current previous statement.\n\t\t * @returns {void}\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 153 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "verifyForAlways",
            "complexity": 5,
            "lineCount": 51,
            "parameterCount": 4,
            "snippet": "function verifyForAlways(context, prevNode, nextNode, paddingLines) {\n\tif (paddingLines.length > 0) {\n\t\treturn;\n\t}\n\tcontext.report({\n\t\tnode: nextNode,\n\t\tmessageId: \"expectedBlankLine\",\n\t\tfix(fixer) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/prefer-arrow-callback.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 37,
            "lineCount": 247,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ allowNamedFunctions, allowUnboundThis }] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/*\n\t\t * {Array<{this: boolean, super: boolean, meta: boolean}>}\n\t\t * - this - A flag which shows there are one or more ThisExpression.\n\t\t * - super - A flag which shows there are one or more Super.\n\t\t * - meta - A flag which shows there are one or more MethProperty.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 37 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 247 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 33,
            "lineCount": 180,
            "parameterCount": 1,
            "snippet": "\"FunctionExpression:exit\"(node) {\n\t\t\t\tconst scopeInfo = exitScope();\n\t\t\t\tif (allowNamedFunctions && node.id && node.id.name) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (node.generator) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 33 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 180 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "fix",
            "complexity": 19,
            "lineCount": 134,
            "parameterCount": 1,
            "snippet": "*fix(fixer) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t(!callbackInfo.isLexicalThis &&\n\t\t\t\t\t\t\t\t\tscopeInfo.this) ||\n\t\t\t\t\t\t\t\thasDuplicateParams(node.params)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t * If the callback function does not have .bind(this) and contains a reference to `this`, there\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 134 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getCallbackInfo",
            "complexity": 17,
            "lineCount": 64,
            "parameterCount": 1,
            "snippet": "function getCallbackInfo(node) {\n\tconst retv = { isCallback: false, isLexicalThis: false };\n\tlet currentNode = node;\n\tlet parent = node.parent;\n\tlet bound = false;\n\twhile (currentNode) {\n\t\tswitch (parent.type) {\n\t\t\tcase \"LogicalExpression\":\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/prefer-const.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 28,
            "lineCount": 172,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ destructuring, ignoreReadBeforeAssign }] = context.options;\n\t\tconst shouldMatchAnyDestructuredVariable = destructuring !== \"all\";\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst variables = [];\n\t\tlet reportCount = 0;\n\t\tlet checkedId = null;\n\t\tlet checkedName = \"\";\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 172 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkGroup",
            "complexity": 26,
            "lineCount": 135,
            "parameterCount": 1,
            "snippet": "function checkGroup(nodes) {\n\t\t\tconst nodesToReport = nodes.filter(Boolean);\n\t\t\tif (\n\t\t\t\tnodes.length &&\n\t\t\t\t(shouldMatchAnyDestructuredVariable ||\n\t\t\t\t\tnodesToReport.length === nodes.length)\n\t\t\t) {\n\t\t\t\tconst varDeclParent = findUp(\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 135 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getIdentifierIfShouldBeConst",
            "complexity": 21,
            "lineCount": 87,
            "parameterCount": 2,
            "snippet": "function getIdentifierIfShouldBeConst(variable, ignoreReadBeforeAssign) {\n\tif (variable.eslintUsed && variable.scope.type === \"global\") {\n\t\treturn null;\n\t}\n\tlet writer = null;\n\tlet isReadBeforeInit = false;\n\tconst references = variable.references;\n\tfor (let i = 0; i < references.length; ++i) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/prefer-destructuring.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 31,
            "lineCount": 219,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst enabledTypes = context.options[0];\n\t\tconst enforceForRenamedProperties =\n\t\t\tcontext.options[1] &&\n\t\t\tcontext.options[1].enforceForRenamedProperties;\n\t\tlet normalizedOptions = {\n\t\t\tVariableDeclarator: { array: true, object: true },\n\t\t\tAssignmentExpression: { array: true, object: true },\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 31 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 219 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/prefer-exponentiation-operator.js",
        "criticalFunctions": [
          {
            "name": "doesExponentiationExpressionNeedParens",
            "complexity": 16,
            "lineCount": 31,
            "parameterCount": 2,
            "snippet": "function doesExponentiationExpressionNeedParens(node, sourceCode) {\n\tconst parent =\n\t\tnode.parent.type === \"ChainExpression\"\n\t\t\t? node.parent.parent\n\t\t\t: node.parent;\n\tconst parentPrecedence = astUtils.getPrecedence(parent);\n\tconst needsParens =\n\t\tparent.type === \"ClassDeclaration\" ||\n  // ... more code ...",
            "issues": []
          },
          {
            "name": "create",
            "complexity": 14,
            "lineCount": 113,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Reports the given node.\n\t\t * @param {ASTNode} node 'Math.pow()' node to report.\n\t\t * @returns {void}\n\t\t */\n\t\tfunction report(node) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 113 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "report",
            "complexity": 13,
            "lineCount": 86,
            "parameterCount": 1,
            "snippet": "function report(node) {\n\t\t\tcontext.report({\n\t\t\t\tnode,\n\t\t\t\tmessageId: \"useExponentiation\",\n\t\t\t\tfix(fixer) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tnode.arguments.length !== 2 ||\n\t\t\t\t\t\tnode.arguments.some(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 86 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "fix",
            "complexity": 13,
            "lineCount": 80,
            "parameterCount": 1,
            "snippet": "fix(fixer) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tnode.arguments.length !== 2 ||\n\t\t\t\t\t\tnode.arguments.some(\n\t\t\t\t\t\t\targ => arg.type === \"SpreadElement\",\n\t\t\t\t\t\t) ||\n\t\t\t\t\t\tsourceCode.getCommentsInside(node).length > 0\n\t\t\t\t\t) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/prefer-named-capture-group.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 8,
            "lineCount": 82,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Function to check regular expression.\n\t\t * @param {string} pattern The regular expression pattern to be checked.\n\t\t * @param {ASTNode} node AST node which contains the regular expression or a call/new expression.\n\t\t * @param {ASTNode} regexNode AST node which contains the regular expression.\n\t\t * @param {string|null} flags The regular expression flags to be checked.\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 82 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/prefer-numeric-literals.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 15,
            "lineCount": 92,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\treturn {\n\t\t\t\"CallExpression[arguments.length=2]\"(node) {\n\t\t\t\tconst [strNode, radixNode] = node.arguments,\n\t\t\t\t\tstr = astUtils.getStaticStringValue(strNode),\n\t\t\t\t\tradix = radixNode.value;\n\t\t\t\tif (\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 92 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 15,
            "lineCount": 82,
            "parameterCount": 1,
            "snippet": "\"CallExpression[arguments.length=2]\"(node) {\n\t\t\t\tconst [strNode, radixNode] = node.arguments,\n\t\t\t\t\tstr = astUtils.getStaticStringValue(strNode),\n\t\t\t\t\tradix = radixNode.value;\n\t\t\t\tif (\n\t\t\t\t\tstr !== null &&\n\t\t\t\t\tastUtils.isStringLiteral(strNode) &&\n\t\t\t\t\tradixNode.type === \"Literal\" &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 82 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "fix",
            "complexity": 9,
            "lineCount": 57,
            "parameterCount": 1,
            "snippet": "fix(fixer) {\n\t\t\t\t\t\t\tif (sourceCode.getCommentsInside(node).length) {\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst replacement = `${literalPrefix}${str}`;\n\t\t\t\t\t\t\tif (+replacement !== parseInt(str, radix)) {\n\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t * If the newly-produced literal would be invalid, (e.g. 0b1234),\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/prefer-object-has-own.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 12,
            "lineCount": 75,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\treturn {\n\t\t\tCallExpression(node) {\n\t\t\t\tif (\n\t\t\t\t\t!(\n\t\t\t\t\t\tnode.callee.type === \"MemberExpression\" &&\n\t\t\t\t\t\tnode.callee.object.type === \"MemberExpression\"\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "CallExpression",
            "complexity": 12,
            "lineCount": 69,
            "parameterCount": 1,
            "snippet": "CallExpression(node) {\n\t\t\t\tif (\n\t\t\t\t\t!(\n\t\t\t\t\t\tnode.callee.type === \"MemberExpression\" &&\n\t\t\t\t\t\tnode.callee.object.type === \"MemberExpression\"\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 69 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/prefer-object-spread.js",
        "criticalFunctions": [
          {
            "name": "defineFixer",
            "complexity": 9,
            "lineCount": 72,
            "parameterCount": 2,
            "snippet": "function defineFixer(node, sourceCode) {\n\treturn function* (fixer) {\n\t\tconst leftParen = sourceCode.getTokenAfter(\n\t\t\tnode.callee,\n\t\t\tisOpeningParenToken,\n\t\t);\n\t\tconst rightParen = sourceCode.getLastToken(node);\n\t\tyield fixer.removeRange([node.range[0], leftParen.range[0]]);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 9,
            "lineCount": 70,
            "parameterCount": 1,
            "snippet": "function* (fixer) {\n\t\tconst leftParen = sourceCode.getTokenAfter(\n\t\t\tnode.callee,\n\t\t\tisOpeningParenToken,\n\t\t);\n\t\tconst rightParen = sourceCode.getLastToken(node);\n\t\tyield fixer.removeRange([node.range[0], leftParen.range[0]]);\n\t\tif (needsParens(node, sourceCode)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 70 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/prefer-regex-literals.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 65,
            "lineCount": 440,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ disallowRedundantWrapping }] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Determines whether the given node is a String.raw`` tagged template expression\n\t\t * with a static template literal.\n\t\t * @param {ASTNode} node Node to check.\n\t\t * @returns {boolean} True if the node is String.raw`` with a static template.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 65 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 440 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "Program",
            "complexity": 24,
            "lineCount": 201,
            "parameterCount": 1,
            "snippet": "Program(node) {\n\t\t\t\tconst scope = sourceCode.getScope(node);\n\t\t\t\tconst tracker = new ReferenceTracker(scope);\n\t\t\t\tconst traceMap = {\n\t\t\t\t\tRegExp: {\n\t\t\t\t\t\t[CALL]: true,\n\t\t\t\t\t\t[CONSTRUCT]: true,\n\t\t\t\t\t},\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 201 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/prefer-template.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 16,
            "lineCount": 193,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tlet done = Object.create(null);\n\t\t/**\n\t\t * Gets the non-token text between two nodes, ignoring any other tokens that appear between the two tokens.\n\t\t * @param {ASTNode} node1 The first node\n\t\t * @param {ASTNode} node2 The second node\n\t\t * @returns {string} The text between the nodes, excluding other tokens\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 193 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getTemplateLiteral",
            "complexity": 11,
            "lineCount": 98,
            "parameterCount": 3,
            "snippet": "function getTemplateLiteral(\n\t\t\tcurrentNode,\n\t\t\ttextBeforeNode,\n\t\t\ttextAfterNode,\n\t\t) {\n\t\t\tif (\n\t\t\t\tcurrentNode.type === \"Literal\" &&\n\t\t\t\ttypeof currentNode.value === \"string\"\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 98 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/quote-props.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 65,
            "lineCount": 274,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst MODE = context.options[0],\n\t\t\tKEYWORDS = context.options[1] && context.options[1].keywords,\n\t\t\tCHECK_UNNECESSARY =\n\t\t\t\t!context.options[1] || context.options[1].unnecessary !== false,\n\t\t\tNUMBERS = context.options[1] && context.options[1].numbers,\n\t\t\tsourceCode = context.sourceCode;\n\t\t/**\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 65 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 274 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkConsistency",
            "complexity": 24,
            "lineCount": 94,
            "parameterCount": 2,
            "snippet": "function checkConsistency(node, checkQuotesRedundancy) {\n\t\t\tconst quotedProps = [],\n\t\t\t\tunquotedProps = [];\n\t\t\tlet keywordKeyName = null,\n\t\t\t\tnecessaryQuotes = false;\n\t\t\tnode.properties.forEach(property => {\n\t\t\t\tconst key = property.key;\n\t\t\t\tif (\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 94 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkUnnecessaryQuotes",
            "complexity": 18,
            "lineCount": 62,
            "parameterCount": 1,
            "snippet": "function checkUnnecessaryQuotes(node) {\n\t\t\tconst key = node.key;\n\t\t\tif (node.method || node.computed || node.shorthand) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (key.type === \"Literal\" && typeof key.value === \"string\") {\n\t\t\t\tlet tokens;\n\t\t\t\ttry {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 16,
            "lineCount": 43,
            "parameterCount": 1,
            "snippet": "property => {\n\t\t\t\tconst key = property.key;\n\t\t\t\tif (\n\t\t\t\t\t!key ||\n\t\t\t\t\tproperty.method ||\n\t\t\t\t\tproperty.computed ||\n\t\t\t\t\tproperty.shorthand\n\t\t\t\t) {\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/quotes.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 48,
            "lineCount": 254,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst quoteOption = context.options[0],\n\t\t\tsettings = QUOTE_SETTINGS[quoteOption || \"double\"],\n\t\t\toptions = context.options[1],\n\t\t\tallowTemplateLiterals =\n\t\t\t\toptions && options.allowTemplateLiterals === true,\n\t\t\tsourceCode = context.sourceCode;\n\t\tlet avoidEscape = options && options.avoidEscape === true;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 48 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 254 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/radix.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 17,
            "lineCount": 104,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [mode] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Checks the arguments of a given CallExpression node and reports it if it\n\t\t * offends this rule.\n\t\t * @param {ASTNode} node A CallExpression node to check.\n\t\t * @returns {void}\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 104 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkArguments",
            "complexity": 9,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "function checkArguments(node) {\n\t\t\tconst args = node.arguments;\n\t\t\tswitch (args.length) {\n\t\t\t\tcase 0:\n\t\t\t\t\tcontext.report({\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tmessageId: \"missingParameters\",\n\t\t\t\t\t});\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/require-atomic-updates.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 21,
            "lineCount": 147,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ allowProperties }] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst assignmentReferences = new Map();\n\t\tconst segmentInfo = new SegmentInfo();\n\t\tlet stack = null;\n\t\treturn {\n\t\t\tonCodePathStart(codePath, node) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 147 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 9,
            "lineCount": 53,
            "parameterCount": 1,
            "snippet": "\":expression:exit\"(node) {\n\t\t\t\tif (!stack.referenceMap) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tnode.type === \"AwaitExpression\" ||\n\t\t\t\t\tnode.type === \"YieldExpression\"\n\t\t\t\t) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/require-await.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 19,
            "lineCount": 122,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tlet scopeInfo = null;\n\t\t/**\n\t\t * Push the scope info object to the stack.\n\t\t * @returns {void}\n\t\t */\n\t\tfunction enterFunction() {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 122 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "exitFunction",
            "complexity": 16,
            "lineCount": 74,
            "parameterCount": 1,
            "snippet": "function exitFunction(node) {\n\t\t\tif (\n\t\t\t\t!node.generator &&\n\t\t\t\tnode.async &&\n\t\t\t\t!scopeInfo.hasAwait &&\n\t\t\t\t!astUtils.isEmptyFunction(node)\n\t\t\t) {\n\t\t\t\t/*\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/require-unicode-regexp.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 30,
            "lineCount": 236,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst { requireFlag } = context.options[0] ?? {};\n\t\treturn {\n\t\t\t\"Literal[regex]\"(node) {\n\t\t\t\tconst flags = node.regex.flags || \"\";\n\t\t\t\tconst missingFlag = checkFlags(requireFlag, flags);\n\t\t\t\tif (missingFlag) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 30 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 236 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "Program",
            "complexity": 22,
            "lineCount": 157,
            "parameterCount": 1,
            "snippet": "Program(node) {\n\t\t\t\tconst scope = sourceCode.getScope(node);\n\t\t\t\tconst tracker = new ReferenceTracker(scope);\n\t\t\t\tconst trackMap = {\n\t\t\t\t\tRegExp: { [CALL]: true, [CONSTRUCT]: true },\n\t\t\t\t};\n\t\t\t\tfor (const { node: refNode } of tracker.iterateGlobalReferences(\n\t\t\t\t\ttrackMap,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 157 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "fix",
            "complexity": 13,
            "lineCount": 106,
            "parameterCount": 1,
            "snippet": "fix(fixer) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst replaceFlag =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequireFlag ?? \"u\";\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (flagsNode) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(flagsNode.type ===\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Literal\" &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttypeof flagsNode.value ===\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 106 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 9,
            "lineCount": 70,
            "parameterCount": 1,
            "snippet": "\"Literal[regex]\"(node) {\n\t\t\t\tconst flags = node.regex.flags || \"\";\n\t\t\t\tconst missingFlag = checkFlags(requireFlag, flags);\n\t\t\t\tif (missingFlag) {\n\t\t\t\t\tcontext.report({\n\t\t\t\t\t\tmessageId:\n\t\t\t\t\t\t\trequireFlag === \"v\"\n\t\t\t\t\t\t\t\t? \"requireVFlag\"\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 70 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/semi-spacing.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 22,
            "lineCount": 221,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst config = context.options[0],\n\t\t\tsourceCode = context.sourceCode;\n\t\tlet requireSpaceBefore = false,\n\t\t\trequireSpaceAfter = true;\n\t\tif (typeof config === \"object\") {\n\t\t\trequireSpaceBefore = config.before;\n\t\t\trequireSpaceAfter = config.after;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 221 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkSemicolonSpacing",
            "complexity": 11,
            "lineCount": 79,
            "parameterCount": 2,
            "snippet": "function checkSemicolonSpacing(token, node) {\n\t\t\tif (astUtils.isSemicolonToken(token)) {\n\t\t\t\tif (hasLeadingSpace(token)) {\n\t\t\t\t\tif (!requireSpaceBefore) {\n\t\t\t\t\t\tconst tokenBefore = sourceCode.getTokenBefore(token);\n\t\t\t\t\t\tconst loc = {\n\t\t\t\t\t\t\tstart: tokenBefore.loc.end,\n\t\t\t\t\t\t\tend: token.loc.start,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/semi-style.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 22,
            "lineCount": 93,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst option = context.options[0] || \"last\";\n\t\t/**\n\t\t * Check the given semicolon token.\n\t\t * @param {Token} semiToken The semicolon token to check.\n\t\t * @param {\"first\"|\"last\"} expected The expected location to check.\n\t\t * @returns {void}\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 93 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/semi.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 64,
            "lineCount": 375,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst OPT_OUT_PATTERN = /^[-[(/+`]/u; // One of [(/+-`\n\t\tconst unsafeClassFieldNames = new Set([\"get\", \"set\", \"static\"]);\n\t\tconst unsafeClassFieldFollowers = new Set([\"*\", \"in\", \"instanceof\"]);\n\t\tconst options = context.options[1];\n\t\tconst never = context.options[0] === \"never\";\n\t\tconst exceptOneLine = Boolean(\n\t\t\toptions && options.omitLastInOneLineBlock,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 64 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 375 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/sort-imports.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 25,
            "lineCount": 243,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [\n\t\t\t{\n\t\t\t\tignoreCase,\n\t\t\t\tignoreDeclarationSort,\n\t\t\t\tignoreMemberSort,\n\t\t\t\tmemberSyntaxSortOrder,\n\t\t\t\tallowSeparatedGroups,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 243 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ImportDeclaration",
            "complexity": 21,
            "lineCount": 170,
            "parameterCount": 1,
            "snippet": "ImportDeclaration(node) {\n\t\t\t\tif (!ignoreDeclarationSort) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tpreviousDeclaration &&\n\t\t\t\t\t\tallowSeparatedGroups &&\n\t\t\t\t\t\tgetNumberOfLinesBetween(previousDeclaration, node) > 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tpreviousDeclaration = null;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 170 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "fix",
            "complexity": 5,
            "lineCount": 67,
            "parameterCount": 1,
            "snippet": "fix(fixer) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\timportSpecifiers.some(\n\t\t\t\t\t\t\t\t\t\tspecifier =>\n\t\t\t\t\t\t\t\t\t\t\tsourceCode.getCommentsBefore(\n\t\t\t\t\t\t\t\t\t\t\t\tspecifier,\n\t\t\t\t\t\t\t\t\t\t\t).length ||\n\t\t\t\t\t\t\t\t\t\t\tsourceCode.getCommentsAfter(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/sort-keys.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 24,
            "lineCount": 133,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [\n\t\t\torder,\n\t\t\t{\n\t\t\t\tcaseSensitive,\n\t\t\t\tnatural,\n\t\t\t\tminKeys,\n\t\t\t\tallowLineSeparatedGroups,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 133 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "Property",
            "complexity": 21,
            "lineCount": 89,
            "parameterCount": 1,
            "snippet": "Property(node) {\n\t\t\t\tif (node.parent.type === \"ObjectPattern\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (ignoreComputedKeys && node.computed) {\n\t\t\t\t\tstack.prevName = null; // reset sort\n\t\t\t\t\treturn;\n\t\t\t\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 89 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/space-before-blocks.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 19,
            "lineCount": 129,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst config = context.options[0],\n\t\t\tsourceCode = context.sourceCode;\n\t\tlet alwaysFunctions = true,\n\t\t\talwaysKeywords = true,\n\t\t\talwaysClasses = true,\n\t\t\tneverFunctions = false,\n\t\t\tneverKeywords = false,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 129 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/space-before-function-paren.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 22,
            "lineCount": 121,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst baseConfig =\n\t\t\ttypeof context.options[0] === \"string\"\n\t\t\t\t? context.options[0]\n\t\t\t\t: \"always\";\n\t\tconst overrideConfig =\n\t\t\ttypeof context.options[0] === \"object\" ? context.options[0] : {};\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 121 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkFunction",
            "complexity": 7,
            "lineCount": 52,
            "parameterCount": 1,
            "snippet": "function checkFunction(node) {\n\t\t\tconst functionConfig = getConfigForFunction(node);\n\t\t\tif (functionConfig === \"ignore\") {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst rightToken = sourceCode.getFirstToken(\n\t\t\t\tnode,\n\t\t\t\tastUtils.isOpeningParenToken,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/space-in-parens.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 33,
            "lineCount": 299,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst ALWAYS = context.options[0] === \"always\",\n\t\t\texceptionsArrayOptions =\n\t\t\t\t(context.options[1] && context.options[1].exceptions) || [],\n\t\t\toptions = {};\n\t\tlet exceptions;\n\t\tif (exceptionsArrayOptions.length) {\n\t\t\toptions.braceException = exceptionsArrayOptions.includes(\"{}\");\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 33 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 299 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkParenSpaces",
            "complexity": 11,
            "lineCount": 89,
            "parameterCount": 1,
            "snippet": "function checkParenSpaces(node) {\n\t\t\t\texceptions = getExceptions();\n\t\t\t\tconst tokens = sourceCode.tokensAndComments;\n\t\t\t\ttokens.forEach((token, i) => {\n\t\t\t\t\tconst prevToken = tokens[i - 1];\n\t\t\t\t\tconst nextToken = tokens[i + 1];\n\t\t\t\t\tif (\n\t\t\t\t\t\t!astUtils.isOpeningParenToken(token) &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 89 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 11,
            "lineCount": 84,
            "parameterCount": 2,
            "snippet": "(token, i) => {\n\t\t\t\t\tconst prevToken = tokens[i - 1];\n\t\t\t\t\tconst nextToken = tokens[i + 1];\n\t\t\t\t\tif (\n\t\t\t\t\t\t!astUtils.isOpeningParenToken(token) &&\n\t\t\t\t\t\t!astUtils.isClosingParenToken(token)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 84 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/space-infix-ops.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 19,
            "lineCount": 186,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst int32Hint = context.options[0]\n\t\t\t? context.options[0].int32Hint === true\n\t\t\t: false;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Returns the first token which violates the rule\n\t\t * @param {ASTNode} left The left node of the main node\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 186 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/space-unary-ops.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 33,
            "lineCount": 309,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst options = context.options[0] || { words: true, nonwords: false };\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Check if the node is the first \"!\" in a \"!!\" convert to Boolean expression\n\t\t * @param {ASTnode} node AST node\n\t\t * @returns {boolean} Whether or not the node is first \"!\" in \"!!\"\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 33 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 309 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/spaced-comment.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 32,
            "lineCount": 189,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst requireSpace = context.options[0] !== \"never\";\n\t\t/*\n\t\t * Parse the second options.\n\t\t * If markers don't include `\"*\"`, it's added automatically for JSDoc\n\t\t * comments.\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 189 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkCommentForSpace",
            "complexity": 16,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "function checkCommentForSpace(node) {\n\t\t\tconst type = node.type.toLowerCase(),\n\t\t\t\trule = styleRules[type],\n\t\t\t\tcommentIdentifier = type === \"block\" ? \"/*\" : \"//\";\n\t\t\tif (node.value.length === 0 || rule.markers.has(node.value)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst beginMatch = rule.beginRegex.exec(node.value);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/strict.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 29,
            "lineCount": 210,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst ecmaFeatures = context.parserOptions.ecmaFeatures || {},\n\t\t\tscopes = [],\n\t\t\tclassScopes = [];\n\t\tlet [mode] = context.options;\n\t\tif (ecmaFeatures.impliedStrict) {\n\t\t\tmode = \"implied\";\n\t\t} else if (mode === \"safe\") {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 29 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 210 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/use-isnan.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 25,
            "lineCount": 177,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [{ enforceForIndexOf, enforceForSwitchCase }] = context.options;\n\t\tconst sourceCode = context.sourceCode;\n\t\tconst fixableOperators = new Set([\"==\", \"===\", \"!=\", \"!==\"]);\n\t\tconst castableOperators = new Set([\"==\", \"!=\"]);\n\t\t/**\n\t\t * Get a fixer for a binary expression that compares to NaN.\n\t\t * @param  {ASTNode} node The node to fix.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 177 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkCallExpression",
            "complexity": 10,
            "lineCount": 56,
            "parameterCount": 1,
            "snippet": "function checkCallExpression(node) {\n\t\t\tconst callee = astUtils.skipChainExpression(node.callee);\n\t\t\tif (callee.type === \"MemberExpression\") {\n\t\t\t\tconst methodName = astUtils.getStaticPropertyName(callee);\n\t\t\t\tif (\n\t\t\t\t\t(methodName === \"indexOf\" ||\n\t\t\t\t\t\tmethodName === \"lastIndexOf\") &&\n\t\t\t\t\tnode.arguments.length <= 2 &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/valid-typeof.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 18,
            "lineCount": 116,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst VALID_TYPES = new Set([\n\t\t\t\t\"symbol\",\n\t\t\t\t\"undefined\",\n\t\t\t\t\"object\",\n\t\t\t\t\"boolean\",\n\t\t\t\t\"number\",\n\t\t\t\t\"string\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 116 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "UnaryExpression",
            "complexity": 15,
            "lineCount": 61,
            "parameterCount": 1,
            "snippet": "UnaryExpression(node) {\n\t\t\t\tif (isTypeofExpression(node)) {\n\t\t\t\t\tconst { parent } = node;\n\t\t\t\t\tif (\n\t\t\t\t\t\tparent.type === \"BinaryExpression\" &&\n\t\t\t\t\t\tOPERATORS.has(parent.operator)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst sibling =\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/vars-on-top.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 24,
            "lineCount": 134,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\t/**\n\t\t * Has AST suggesting a directive.\n\t\t * @param {ASTNode} node any node\n\t\t * @returns {boolean} whether the given node structurally represents a directive\n\t\t */\n\t\tfunction looksLikeDirective(node) {\n\t\t\treturn (\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 134 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/wrap-iife.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 19,
            "lineCount": 139,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst style = context.options[0] || \"outside\";\n\t\tconst includeFunctionPrototypeMethods =\n\t\t\tcontext.options[1] && context.options[1].functionPrototypeMethods;\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Check if the node is wrapped in any (). All parens count: grouping parens and parens for constructs such as if()\n\t\t * @param {ASTNode} node node to evaluate\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 139 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "CallExpression",
            "complexity": 11,
            "lineCount": 84,
            "parameterCount": 1,
            "snippet": "CallExpression(node) {\n\t\t\t\tconst innerNode = getFunctionNodeFromIIFE(node);\n\t\t\t\tif (!innerNode) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst isCallExpressionWrapped = isWrappedInAnyParens(node),\n\t\t\t\t\tisFunctionExpressionWrapped =\n\t\t\t\t\t\tisWrappedInAnyParens(innerNode);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 84 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/yoda.js",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 40,
            "lineCount": 206,
            "parameterCount": 1,
            "snippet": "create(context) {\n\t\tconst [when, { exceptRange, onlyEquality }] = context.options;\n\t\tconst always = when === \"always\";\n\t\tconst sourceCode = context.sourceCode;\n\t\t/**\n\t\t * Determines whether node represents a range test.\n\t\t * A range test is a \"between\" test like `(0 <= x && x < 1)` or an \"outside\"\n\t\t * test like `(x < 0 || 1 <= x)`. It must be wrapped in parentheses, and\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 40 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 206 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isRangeTest",
            "complexity": 22,
            "lineCount": 79,
            "parameterCount": 1,
            "snippet": "function isRangeTest(node) {\n\t\t\tconst left = node.left,\n\t\t\t\tright = node.right;\n\t\t\t/**\n\t\t\t * Determines whether node is of the form `0 <= x && x < 1`.\n\t\t\t * @returns {boolean} Whether node is a \"between\" range test.\n\t\t\t */\n\t\t\tfunction isBetweenTest() {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getFlippedString",
            "complexity": 7,
            "lineCount": 59,
            "parameterCount": 1,
            "snippet": "function getFlippedString(node) {\n\t\t\tconst operatorToken = sourceCode.getFirstTokenBetween(\n\t\t\t\tnode.left,\n\t\t\t\tnode.right,\n\t\t\t\ttoken => token.value === node.operator,\n\t\t\t);\n\t\t\tconst lastLeftToken = sourceCode.getTokenBefore(operatorToken);\n\t\t\tconst firstRightToken = sourceCode.getTokenAfter(operatorToken);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/shared/serialization.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/shared/traverser.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/types/index.d.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/types/rules.d.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/bench/large.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 2079,
            "lineCount": 19497,
            "parameterCount": 0,
            "snippet": "function () {\n\tvar require;\n\trequire = (function e(t, n, r) {\n\t\tfunction s(o, u) {\n\t\t\tif (!n[o]) {\n\t\t\t\tif (!t[o]) {\n\t\t\t\t\tvar a = typeof require == \"function\" && require;\n\t\t\t\t\tif (!u && a) return a(o, !0);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 2079 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 19497 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1263,
            "lineCount": 6820,
            "parameterCount": 3,
            "snippet": "function (require, module, exports) {\n\t\t\t\t\t/*!\n\t\t\t\t\t * JSHint, by JSHint Community.\n\t\t\t\t\t *\n\t\t\t\t\t * This file (and this file only) was licensed under the same slightly modified\n\t\t\t\t\t * MIT license that JSLint is. After a relicensing in 2020 this is now MIT License (Expat).\n\t\t\t\t\t * Relicensing: https://jshint.com/relicensing-2020/\n\t\t\t\t\t * License-Url: https://github.com/jshint/jshint/blob/main/LICENSE\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 1263 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 6820 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1261,
            "lineCount": 6761,
            "parameterCount": 0,
            "snippet": "function () {\n\t\t\t\t\t\t\"use strict\";\n\t\t\t\t\t\tvar anonname, // The guessed name for anonymous functions.\n\t\t\t\t\t\t\tapi, // Extension API\n\t\t\t\t\t\t\tbang = {\n\t\t\t\t\t\t\t\t\"<\": true,\n\t\t\t\t\t\t\t\t\"<=\": true,\n\t\t\t\t\t\t\t\t\"==\": true,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 1261 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 6761 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 266,
            "lineCount": 1882,
            "parameterCount": 3,
            "snippet": "function (require, module, exports) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Lexical analysis and token construction.\n\t\t\t\t\t */\n\t\t\t\t\t\"use strict\";\n\t\t\t\t\tvar _ = require(\"underscore\");\n\t\t\t\t\tvar events = require(\"events\");\n\t\t\t\t\tvar reg = require(\"./reg.js\");\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 266 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1882 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 244,
            "lineCount": 1649,
            "parameterCount": 3,
            "snippet": "function (require, module, exports) {\n\t\t\t\t\t(function () {\n\t\t\t\t\t\tvar root = this;\n\t\t\t\t\t\tvar previousUnderscore = root._;\n\t\t\t\t\t\tvar breaker = {};\n\t\t\t\t\t\tvar ArrayProto = Array.prototype,\n\t\t\t\t\t\t\tObjProto = Object.prototype,\n\t\t\t\t\t\t\tFuncProto = Function.prototype;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 244 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1649 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/bin/eslint.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 5,
            "lineCount": 1291,
            "parameterCount": 0,
            "snippet": "() => {\n\tconst forkedProcesses = new Set();\n\t/**\n\t * Forks the process to run an instance of ESLint.\n\t * @param {string[]} [args] An array of arguments\n\t * @param {Object} [options] An object containing options for the resulting child process\n\t * @returns {ChildProcess} The resulting child process\n\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1291 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 3,
            "lineCount": 705,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tconst SUPPRESSIONS_PATH = \".temp-eslintsuppressions\";\n\t\tconst EXISTING_SUPPRESSIONS_PATH =\n\t\t\t\"tests/fixtures/suppressions/existing-eslintsuppressions.json\";\n\t\tconst SOURCE_PATH = \"tests/fixtures/suppressions/test-file.js\";\n\t\tconst ARGS_WITHOUT_SUPPRESSIONS = [\n\t\t\t\"--no-config-lookup\",\n\t\t\t\"--no-ignore\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 705 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 2,
            "lineCount": 156,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"has exit code 0 if no linting errors are reported\", () => {\n\t\t\tconst child = runESLint([\"--stdin\", \"--no-config-lookup\"]);\n\t\t\tchild.stdin.write(\"var foo = bar;\\n\");\n\t\t\tchild.stdin.end();\n\t\t\treturn assertExitCode(child, 0);\n\t\t});\n\t\tit(\"has exit code 0 if no linting errors are reported\", () => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 156 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 2,
            "lineCount": 129,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tconst CACHE_PATH = \".temp-eslintcache\";\n\t\tconst SOURCE_PATH = \"tests/fixtures/cache/src/test-file.js\";\n\t\tconst ARGS_WITHOUT_CACHE = [\n\t\t\t\"--no-config-lookup\",\n\t\t\t\"--no-ignore\",\n\t\t\tSOURCE_PATH,\n\t\t\t\"--cache-location\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 129 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 2,
            "lineCount": 75,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\tbeforeEach(() => {\n\t\t\t\tfs.writeFileSync(SUPPRESSIONS_PATH, \"This is not valid JSON.\");\n\t\t\t\tassert.throws(\n\t\t\t\t\t() =>\n\t\t\t\t\t\tJSON.parse(fs.readFileSync(SUPPRESSIONS_PATH, \"utf8\")),\n\t\t\t\t\tSyntaxError,\n\t\t\t\t\t/Unexpected token/u,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/cli.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 42,
            "lineCount": 3199,
            "parameterCount": 0,
            "snippet": "() => {\n\tdescribe(\"calculateInspectConfigFlags()\", () => {\n\t\tconst cli = require(\"../../lib/cli\");\n\t\tit(\"should return the config file in the project root when no argument is passed\", async () => {\n\t\t\tconst flags = await cli.calculateInspectConfigFlags();\n\t\t\tassert.deepStrictEqual(flags, [\n\t\t\t\t\"--config\",\n\t\t\t\tpath.resolve(process.cwd(), \"eslint.config.js\"),\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 42 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 3199 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 42,
            "lineCount": 3160,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tlet fixtureDir;\n\t\tconst log = {\n\t\t\tinfo: sinon.spy(),\n\t\t\twarn: sinon.spy(),\n\t\t\terror: sinon.spy(),\n\t\t};\n\t\tconst RuntimeInfo = {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 42 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 3160 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 41,
            "lineCount": 2239,
            "parameterCount": 1,
            "snippet": "configType => {\n\t\t\tconst useFlatConfig = configType === \"flat\";\n\t\t\tconst ActiveESLint = configType === \"flat\" ? ESLint : LegacyESLint;\n\t\t\tdescribe(\"execute()\", () => {\n\t\t\t\tit(`should return error when text with incorrect quotes is passed as argument with configType:${configType}`, async () => {\n\t\t\t\t\tconst flag = useFlatConfig\n\t\t\t\t\t\t? \"--no-config-lookup\"\n\t\t\t\t\t\t: \"--no-eslintrc\";\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 41 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 2239 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 16,
            "lineCount": 601,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\t\tconst originalCwd = process.cwd;\n\t\t\t\tbeforeEach(() => {\n\t\t\t\t\tprocess.cwd = () => getFixturePath();\n\t\t\t\t});\n\t\t\t\tafterEach(() => {\n\t\t\t\t\tprocess.cwd = originalCwd;\n\t\t\t\t});\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 601 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 13,
            "lineCount": 355,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\t\tdescribe(`config type: ${configType}`, () => {\n\t\t\t\t\tit(\"errors when --report-unused-disable-directives\", async () => {\n\t\t\t\t\t\tconst exitCode = await cli.execute(\n\t\t\t\t\t\t\t`${useFlatConfig ? \"--no-config-lookup\" : \"--no-eslintrc\"} --report-unused-disable-directives --rule \"'no-console': 'error'\"`,\n\t\t\t\t\t\t\t\"foo(); // eslint-disable-line no-console\",\n\t\t\t\t\t\t\tuseFlatConfig,\n\t\t\t\t\t\t);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 355 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "tests/performance/jshint.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 2164,
            "lineCount": 15210,
            "parameterCount": 0,
            "snippet": "function () {\n\tvar require;\n\trequire = (function (e, t, n) {\n\t\tfunction i(n, s) {\n\t\t\tif (!t[n]) {\n\t\t\t\tif (!e[n]) {\n\t\t\t\t\tvar o = typeof require == \"function\" && require;\n\t\t\t\t\tif (!s && o) return o(n, !0);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 2164 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 15210 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1165,
            "lineCount": 6763,
            "parameterCount": 3,
            "snippet": "function (require, module, exports) {\n\t\t\t\t\t(function () {\n\t\t\t\t\t\t/*!\n\t\t\t\t\t\t * JSHint, by JSHint Community.\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * This file (and this file only) was licensed under the same slightly modified\n\t\t\t\t\t\t * MIT license that JSLint is. After a relicensing in 2020 this is now MIT License (Expat).\n\t\t\t\t\t\t * Relicensing: https://jshint.com/relicensing-2020/\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 1165 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 6763 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1165,
            "lineCount": 6761,
            "parameterCount": 0,
            "snippet": "function () {\n\t\t\t\t\t\t/*!\n\t\t\t\t\t\t * JSHint, by JSHint Community.\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * This file (and this file only) was licensed under the same slightly modified\n\t\t\t\t\t\t * MIT license that JSLint is. After a relicensing in 2020 this is now MIT License (Expat).\n\t\t\t\t\t\t * Relicensing: https://jshint.com/relicensing-2020/\n\t\t\t\t\t\t * License-Url: https://github.com/jshint/jshint/blob/main/LICENSE\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 1165 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 6761 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1163,
            "lineCount": 6702,
            "parameterCount": 0,
            "snippet": "function () {\n\t\t\t\t\t\t\t\"use strict\";\n\t\t\t\t\t\t\tvar anonname, // The guessed name for anonymous functions.\n\t\t\t\t\t\t\t\tapi, // Extension API\n\t\t\t\t\t\t\t\tbang = {\n\t\t\t\t\t\t\t\t\t\"<\": true,\n\t\t\t\t\t\t\t\t\t\"<=\": true,\n\t\t\t\t\t\t\t\t\t\"==\": true,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 1163 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 6702 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 266,
            "lineCount": 2009,
            "parameterCount": 3,
            "snippet": "function (require, module, exports) {\n\t\t\t\t\t(function () {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * Lexical analysis and token construction.\n\t\t\t\t\t\t */\n\t\t\t\t\t\t\"use strict\";\n\t\t\t\t\t\tvar _ = require(\"underscore\");\n\t\t\t\t\t\tvar events = require(\"events\");\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 266 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 2009 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/cli-engine/formatters/html.js",
        "criticalFunctions": [
          {
            "name": "pageTemplate",
            "complexity": 1,
            "lineCount": 148,
            "parameterCount": 1,
            "snippet": "function pageTemplate(it) {\n\tconst { reportColor, reportSummary, date, results } = it;\n\treturn `\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>ESLint Report</title>\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 148 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/languages/js/index.js",
        "criticalFunctions": [
          {
            "name": "matchesSelectorClass",
            "complexity": 15,
            "lineCount": 67,
            "parameterCount": 3,
            "snippet": "matchesSelectorClass(className, node, ancestry) {\n\t\t/*\n\t\t * Copyright (c) 2013, Joel Feenstra\n\t\t * All rights reserved.\n\t\t *\n\t\t * Redistribution and use in source and binary forms, with or without\n\t\t * modification, are permitted provided that the following conditions are met:\n\t\t *    * Redistributions of source code must retain the above copyright\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              }
            ]
          },
          {
            "name": "parse",
            "complexity": 3,
            "lineCount": 70,
            "parameterCount": 2,
            "snippet": "parse(file, { languageOptions }) {\n\t\tconst { body: text, path: filePath } = file;\n\t\tconst textToParse = text.replace(\n\t\t\tastUtils.shebangPattern,\n\t\t\t(match, captured) => `//${captured}`,\n\t\t);\n\t\tconst { ecmaVersion, sourceType, parser } = languageOptions;\n\t\tconst parserOptions = Object.assign(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 70 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/languages/js/validate-language-options.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/code-path-analysis/code-path-analyzer.js",
        "criticalFunctions": [
          {
            "name": "preprocess",
            "complexity": 37,
            "lineCount": 125,
            "parameterCount": 2,
            "snippet": "function preprocess(analyzer, node) {\n\tconst codePath = analyzer.codePath;\n\tconst state = CodePath.getState(codePath);\n\tconst parent = node.parent;\n\tswitch (parent.type) {\n\t\tcase \"CallExpression\":\n\t\t\tif (\n\t\t\t\tparent.optional === true &&\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 37 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 125 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "processCodePathToExit",
            "complexity": 35,
            "lineCount": 116,
            "parameterCount": 2,
            "snippet": "function processCodePathToExit(analyzer, node) {\n\tconst codePath = analyzer.codePath;\n\tconst state = CodePath.getState(codePath);\n\tlet dontForward = false;\n\tswitch (node.type) {\n\t\tcase \"ChainExpression\":\n\t\t\tstate.popChainContext();\n\t\t\tbreak;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 35 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 116 lines, consider splitting"
              }
            ]
          },
          {
            "name": "processCodePathToEnter",
            "complexity": 32,
            "lineCount": 148,
            "parameterCount": 2,
            "snippet": "function processCodePathToEnter(analyzer, node) {\n\tlet codePath = analyzer.codePath;\n\tlet state = codePath && CodePath.getState(codePath);\n\tconst parent = node.parent;\n\t/**\n\t * Creates a new code path and trigger the onCodePathStart event\n\t * based on the currently selected node.\n\t * @param {string} origin The reason the code path was started.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 148 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isIdentifierReference",
            "complexity": 22,
            "lineCount": 35,
            "parameterCount": 1,
            "snippet": "function isIdentifierReference(node) {\n\tconst parent = node.parent;\n\tswitch (parent.type) {\n\t\tcase \"LabeledStatement\":\n\t\tcase \"BreakStatement\":\n\t\tcase \"ContinueStatement\":\n\t\tcase \"ArrayPattern\":\n\t\tcase \"RestElement\":\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              }
            ]
          },
          {
            "name": "postprocess",
            "complexity": 11,
            "lineCount": 67,
            "parameterCount": 2,
            "snippet": "function postprocess(analyzer, node) {\n\t/**\n\t * Ends the code path for the current node.\n\t * @returns {void}\n\t */\n\tfunction endCodePath() {\n\t\tlet codePath = analyzer.codePath;\n\t\tCodePath.getState(codePath).makeFinal();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/code-path-analysis/code-path-state.js",
        "criticalFunctions": [
          {
            "name": "popLoopContext",
            "complexity": 10,
            "lineCount": 85,
            "parameterCount": 0,
            "snippet": "popLoopContext() {\n\t\tconst context = this.loopContext;\n\t\tthis.loopContext = context.upper;\n\t\tconst forkContext = this.forkContext;\n\t\tconst brokenForkContext = this.popBreakContext().brokenForkContext;\n\t\tswitch (context.type) {\n\t\t\tcase \"WhileStatement\":\n\t\t\tcase \"ForStatement\":\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 85 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "popChoiceContext",
            "complexity": 9,
            "lineCount": 90,
            "parameterCount": 0,
            "snippet": "popChoiceContext() {\n\t\tconst poppedChoiceContext = this.choiceContext;\n\t\tconst forkContext = this.forkContext;\n\t\tconst head = forkContext.head;\n\t\tthis.choiceContext = poppedChoiceContext.upper;\n\t\tswitch (poppedChoiceContext.kind) {\n\t\t\tcase \"&&\":\n\t\t\tcase \"||\":\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 90 lines, consider splitting"
              }
            ]
          },
          {
            "name": "makeLogicalRight",
            "complexity": 8,
            "lineCount": 96,
            "parameterCount": 0,
            "snippet": "makeLogicalRight() {\n\t\tconst currentChoiceContext = this.choiceContext;\n\t\tconst forkContext = this.forkContext;\n\t\tif (currentChoiceContext.processed) {\n\t\t\t/*\n\t\t\t * This context was already assigned segments from a child\n\t\t\t * choice context. In this case, we are concerned only about\n\t\t\t * the path that does not short-circuit and so ends up on the\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 96 lines, consider splitting"
              }
            ]
          },
          {
            "name": "popTryContext",
            "complexity": 8,
            "lineCount": 68,
            "parameterCount": 0,
            "snippet": "popTryContext() {\n\t\tconst context = this.tryContext;\n\t\tthis.tryContext = context.upper;\n\t\t/*\n\t\t * If we're inside the `catch` block, that means there is no `finally`,\n\t\t * so we can process the `try` and `catch` blocks the simple way and\n\t\t * merge their two paths.\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              }
            ]
          },
          {
            "name": "makeFinallyBlock",
            "complexity": 7,
            "lineCount": 71,
            "parameterCount": 0,
            "snippet": "makeFinallyBlock() {\n\t\tconst context = this.tryContext;\n\t\tlet forkContext = this.forkContext;\n\t\tconst originalReturnedForkContext = context.returnedForkContext;\n\t\tconst originalThrownForContext = context.thrownForkContext;\n\t\tconst headOfLeavingSegments = forkContext.head;\n\t\tif (context.position === \"catch\") {\n\t\t\tthis.popForkContext();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 71 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/code-path-analysis/code-path.js",
        "criticalFunctions": [
          {
            "name": "traverseSegments",
            "complexity": 19,
            "lineCount": 184,
            "parameterCount": 2,
            "snippet": "traverseSegments(optionsOrCallback, callback) {\n\t\tlet resolvedOptions;\n\t\tlet resolvedCallback;\n\t\tif (typeof optionsOrCallback === \"function\") {\n\t\t\tresolvedCallback = optionsOrCallback;\n\t\t\tresolvedOptions = {};\n\t\t} else {\n\t\t\tresolvedOptions = optionsOrCallback || {};\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 184 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/code-path-analysis/debug-helpers.js",
        "criticalFunctions": [
          {
            "name": "makeDotArrows",
            "complexity": 9,
            "lineCount": 53,
            "parameterCount": 2,
            "snippet": "makeDotArrows(codePath, traceMap) {\n\t\tconst stack = [[codePath.initialSegment, 0]];\n\t\tconst done = traceMap || Object.create(null);\n\t\tlet lastId = codePath.initialSegment.id;\n\t\tlet text = `initial->${codePath.initialSegment.id}`;\n\t\twhile (stack.length > 0) {\n\t\t\tconst item = stack.pop();\n\t\t\tconst segment = item[0];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/config/config.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 851,
            "parameterCount": 0,
            "snippet": "() => {\n\tdescribe(\"static getRuleOptionsSchema\", () => {\n\t\tconst noOptionsSchema = {\n\t\t\ttype: \"array\",\n\t\t\tminItems: 0,\n\t\t\tmaxItems: 0,\n\t\t};\n\t\tit(\"should return schema that doesn't accept options if rule doesn't have `meta`\", () => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 851 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 87,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tconst noOptionsSchema = {\n\t\t\ttype: \"array\",\n\t\t\tminItems: 0,\n\t\t\tmaxItems: 0,\n\t\t};\n\t\tit(\"should return schema that doesn't accept options if rule doesn't have `meta`\", () => {\n\t\t\tconst rule = {};\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 54,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should return 0 for 'off'\", () => {\n\t\t\tconst result = Config.getRuleNumericSeverity(\"off\");\n\t\t\tassert.strictEqual(result, 0);\n\t\t});\n\t\tit(\"should return 1 for 'warn'\", () => {\n\t\t\tconst result = Config.getRuleNumericSeverity(\"warn\");\n\t\t\tassert.strictEqual(result, 1);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 220,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tlet mockLanguage;\n\t\tbeforeEach(() => {\n\t\t\tmockLanguage = createMockLanguage({\n\t\t\t\tvalidateLanguageOptions: sinon.stub(),\n\t\t\t\tnormalizeLanguageOptions: sinon.spy(options => options),\n\t\t\t});\n\t\t});\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 220 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 320,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should convert config to JSON representation\", () => {\n\t\t\tconst mockLanguage = createMockLanguage();\n\t\t\tconst mockProcessor = createMockProcessor();\n\t\t\tconst mockPlugin = createMockPlugin();\n\t\t\tconst config = new Config({\n\t\t\t\tlanguage: \"test/lang\",\n\t\t\t\tplugins: {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 320 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "tests/lib/config/flat-config-array.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 7,
            "lineCount": 2913,
            "parameterCount": 0,
            "snippet": "() => {\n\tit(\"should allow noniterable baseConfig objects\", () => {\n\t\tconst base = {\n\t\t\tlanguageOptions: {\n\t\t\t\tparserOptions: {\n\t\t\t\t\tfoo: true,\n\t\t\t\t},\n\t\t\t},\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 2913 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 7,
            "lineCount": 155,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should error on 'eslint:recommended' string config\", async () => {\n\t\t\tawait assertInvalidConfig(\n\t\t\t\t[\"eslint:recommended\"],\n\t\t\t\t\"Config (unnamed): Unexpected non-object config at original index 0.\",\n\t\t\t);\n\t\t});\n\t\tit(\"should error on 'eslint:all' string config\", async () => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 155 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 610,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should convert config into normalized JSON object\", () => {\n\t\t\tconst configs = new FlatConfigArray([\n\t\t\t\t{\n\t\t\t\t\tplugins: {\n\t\t\t\t\t\ta: {},\n\t\t\t\t\t\tb: {},\n\t\t\t\t\t},\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 610 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 2026,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tdescribe(\"settings\", () => {\n\t\t\tit(\"should merge two objects\", () =>\n\t\t\t\tassertMergedResult(\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsettings: {\n\t\t\t\t\t\t\t\ta: true,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 2026 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 136,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\tit(\"should merge two objects\", () =>\n\t\t\t\tassertMergedResult(\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsettings: {\n\t\t\t\t\t\t\t\ta: true,\n\t\t\t\t\t\t\t\tb: false,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 136 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/cli-engine/cli-engine.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 20,
            "lineCount": 8378,
            "parameterCount": 0,
            "snippet": "() => {\n\tconst examplePluginName = \"eslint-plugin-example\",\n\t\texamplePluginNameWithNamespace = \"@eslint/eslint-plugin-example\",\n\t\texamplePlugin = {\n\t\t\trules: {\n\t\t\t\t\"example-rule\": require(\"../../fixtures/rules/custom-rule\"),\n\t\t\t\t\"make-syntax-error\": require(\"../../fixtures/rules/make-syntax-error-rule\"),\n\t\t\t},\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 8378 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 14,
            "lineCount": 4195,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t/** @type {InstanceType<import(\"../../../lib/cli-engine\").CLIEngine>} */\n\t\tlet engine;\n\t\tit(\"should use correct parser when custom parser is specified\", () => {\n\t\t\tengine = new CLIEngine({\n\t\t\t\tcwd: originalDir,\n\t\t\t\tignore: false,\n\t\t\t});\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 4195 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 8,
            "lineCount": 113,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\tconst cwd = getFixturePath(\"module-not-found\");\n\t\t\tbeforeEach(() => {\n\t\t\t\tengine = new CLIEngine({ cwd });\n\t\t\t});\n\t\t\tit(\"should throw an error with a message template when 'extends' property has a non-existence JavaScript config.\", () => {\n\t\t\t\ttry {\n\t\t\t\t\tengine.executeOnText(\"test\", \"extends-js/test.js\");\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 113 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 3,
            "lineCount": 165,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\tit(\"should return fixed text on multiple files when in fix mode\", () => {\n\t\t\t\t/**\n\t\t\t\t * Converts CRLF to LF in output.\n\t\t\t\t * This is a workaround for git's autocrlf option on Windows.\n\t\t\t\t * @param {Object} result A result object to convert.\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 165 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 3,
            "lineCount": 130,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\t\t/**\n\t\t\t\t * Converts CRLF to LF in output.\n\t\t\t\t * This is a workaround for git's autocrlf option on Windows.\n\t\t\t\t * @param {Object} result A result object to convert.\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tfunction convertCRLF(result) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 130 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "async-heavy"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "lib/rules/utils/ast-utils.js",
        "criticalFunctions": [
          {
            "name": "isDefaultThisBinding",
            "complexity": 52,
            "lineCount": 199,
            "parameterCount": 3,
            "snippet": "isDefaultThisBinding(node, sourceCode, { capIsConstructor = true } = {}) {\n\t\t/*\n\t\t * Class field initializers are implicit functions, but ESTree doesn't have the AST node of field initializers.\n\t\t * Therefore, A expression node at `PropertyDefinition#value` is a function.\n\t\t * In this case, `this` is always not default binding.\n\t\t */\n\t\tif (\n\t\t\tnode.parent.type === \"PropertyDefinition\" &&\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 52 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 199 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isConstant",
            "complexity": 41,
            "lineCount": 135,
            "parameterCount": 3,
            "snippet": "function isConstant(scope, node, inBooleanPosition) {\n\tif (!node) {\n\t\treturn true;\n\t}\n\tswitch (node.type) {\n\t\tcase \"Literal\":\n\t\tcase \"ArrowFunctionExpression\":\n\t\tcase \"FunctionExpression\":\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 41 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 135 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getPrecedence",
            "complexity": 41,
            "lineCount": 93,
            "parameterCount": 1,
            "snippet": "getPrecedence(node) {\n\t\tswitch (node.type) {\n\t\t\tcase \"SequenceExpression\":\n\t\t\t\treturn 0;\n\t\t\tcase \"AssignmentExpression\":\n\t\t\tcase \"ArrowFunctionExpression\":\n\t\t\tcase \"YieldExpression\":\n\t\t\t\treturn 1;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 41 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 93 lines, consider splitting"
              }
            ]
          },
          {
            "name": "canTokensBeAdjacent",
            "complexity": 33,
            "lineCount": 127,
            "parameterCount": 2,
            "snippet": "canTokensBeAdjacent(leftValue, rightValue) {\n\t\tconst espreeOptions = {\n\t\t\tecmaVersion: espree.latestEcmaVersion,\n\t\t\tcomment: true,\n\t\t\trange: true,\n\t\t};\n\t\tlet leftToken;\n\t\tif (typeof leftValue === \"string\") {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 33 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 127 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getFunctionNameWithKind",
            "complexity": 23,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "getFunctionNameWithKind(node) {\n\t\tconst parent = node.parent;\n\t\tconst tokens = [];\n\t\tif (\n\t\t\tparent.type === \"MethodDefinition\" ||\n\t\t\tparent.type === \"PropertyDefinition\"\n\t\t) {\n\t\t\tif (parent.static) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/utils/char-source.js",
        "criticalFunctions": [
          {
            "name": "readEscapeSequenceOrLineContinuation",
            "complexity": 17,
            "lineCount": 38,
            "parameterCount": 1,
            "snippet": "function readEscapeSequenceOrLineContinuation(reader) {\n\tconst char = reader.read(1);\n\treader.advance(2);\n\tconst unitChar = SIMPLE_ESCAPE_SEQUENCES[char];\n\tif (unitChar) {\n\t\treturn unitChar;\n\t}\n\tswitch (char) {\n  // ... more code ...",
            "issues": []
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/eslint/eslint.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 36,
            "lineCount": 14922,
            "parameterCount": 0,
            "snippet": "() => {\n\tconst { ConfigLoader } = require(\"../../../lib/config/config-loader.js\");\n\tconst examplePluginName = \"eslint-plugin-example\";\n\tconst examplePluginNameWithNamespace = \"@eslint/eslint-plugin-example\";\n\tconst examplePlugin = {\n\t\trules: {\n\t\t\t\"example-rule\": require(\"../../fixtures/rules/custom-rule\"),\n\t\t\t\"make-syntax-error\": require(\"../../fixtures/rules/make-syntax-error-rule\"),\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 36 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 14922 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 28,
            "lineCount": 12695,
            "parameterCount": 1,
            "snippet": "flags => {\n\t\t/**\n\t\t * Configuration flags for TypeScript integration in Node.js,\n\t\t * including existing {@linkcode flags} and\n\t\t * `\"unstable_native_nodejs_ts_config\"`.\n\t\t * @satisfies {ESLintOptions['flags']}\n\t\t */\n\t\tconst nativeTSConfigFileFlags = [\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 12695 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 18,
            "lineCount": 7527,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\t/** @type {InstanceType<ESLint>} */\n\t\t\tlet eslint;\n\t\t\tit(\"should use correct parser when custom parser is specified\", async () => {\n\t\t\t\tconst filePath = path.resolve(\n\t\t\t\t\t__dirname,\n\t\t\t\t\t\"../../fixtures/configurations/parser/custom.js\",\n\t\t\t\t);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 7527 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 8,
            "lineCount": 1254,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tlet eslint;\n\t\t/**\n\t\t * helper method to delete a file without caring about exceptions\n\t\t * @param {string} filePath The file path\n\t\t * @returns {void}\n\t\t */\n\t\tfunction doDelete(filePath) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1254 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 7,
            "lineCount": 1041,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\t\tit(\"should report on a file in the node_modules folder passed explicitly, even if ignored by default\", async () => {\n\t\t\t\t\teslint = new ESLint({\n\t\t\t\t\t\tflags,\n\t\t\t\t\t\tcwd: getFixturePath(\"cli-engine\"),\n\t\t\t\t\t});\n\t\t\t\t\tconst results = await eslint.lintFiles([\n\t\t\t\t\t\t\"node_modules/foo.js\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1041 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "async-heavy"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "tests/lib/eslint/legacy-eslint.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 34,
            "lineCount": 9418,
            "parameterCount": 0,
            "snippet": "() => {\n\tconst examplePluginName = \"eslint-plugin-example\";\n\tconst examplePluginNameWithNamespace = \"@eslint/eslint-plugin-example\";\n\tconst examplePlugin = {\n\t\trules: {\n\t\t\t\"example-rule\": require(\"../../fixtures/rules/custom-rule\"),\n\t\t\t\"make-syntax-error\": require(\"../../fixtures/rules/make-syntax-error-rule\"),\n\t\t},\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 34 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 9418 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 22,
            "lineCount": 4874,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t/** @type {InstanceType<import(\"../../../lib/eslint/legacy-eslint\").LegacyESLint>} */\n\t\tlet eslint;\n\t\tit(\"should use correct parser when custom parser is specified\", async () => {\n\t\t\teslint = new LegacyESLint({\n\t\t\t\tcwd: originalDir,\n\t\t\t\tignore: false,\n\t\t\t});\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 4874 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 8,
            "lineCount": 1219,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\t/**\n\t\t\t * helper method to delete a file without caring about exceptions\n\t\t\t * @param {string} filePath The file path\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tfunction doDelete(filePath) {\n\t\t\t\ttry {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1219 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 8,
            "lineCount": 121,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\tconst cwd = getFixturePath(\"module-not-found\");\n\t\t\tbeforeEach(() => {\n\t\t\t\teslint = new LegacyESLint({ cwd });\n\t\t\t});\n\t\t\tit(\"should throw an error with a message template when 'extends' property has a non-existence JavaScript config.\", async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait eslint.lintText(\"test\", {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 121 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 3,
            "lineCount": 850,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tlet eslint;\n\t\tdescribe(\"when using local cwd .eslintrc\", () => {\n\t\t\tconst { prepare, cleanup, getPath } = createCustomTeardown({\n\t\t\t\tcwd: path.join(os.tmpdir(), \"eslint/multiple-rules-config\"),\n\t\t\t\tfiles: {\n\t\t\t\t\t\".eslintrc.json\": {\n\t\t\t\t\t\troot: true,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 850 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "async-heavy"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "tests/lib/rule-tester/rule-tester.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 3,
            "lineCount": 5263,
            "parameterCount": 0,
            "snippet": "() => {\n\tlet ruleTester;\n\tbefore(() => {\n\t\tRuleTester.describe = function (text, method) {\n\t\t\truleTesterTestEmitter.emit(\"describe\", text, method);\n\t\t\treturn method.call(this);\n\t\t};\n\t\tRuleTester.it = function (text, method) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 5263 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 2,
            "lineCount": 97,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should pass-through the parser to the rule\", () => {\n\t\t\tconst spy = sinon.spy(ruleTester.linter, \"verify\");\n\t\t\tconst esprima = require(\"esprima\");\n\t\t\truleTester.run(\n\t\t\t\t\"no-eval\",\n\t\t\t\trequire(\"../../fixtures/testers/rule-tester/no-eval\"),\n\t\t\t\t{\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 97 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 110,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tafterEach(() => {\n\t\t\tRuleTester.resetDefaultConfig();\n\t\t});\n\t\tit(\"should correctly set the globals configuration\", () => {\n\t\t\tconst config = { languageOptions: { globals: { test: true } } };\n\t\t\tRuleTester.setDefaultConfig(config);\n\t\t\tassert(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 110 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 297,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tdescribe(\"`itOnly` accessor\", () => {\n\t\t\tdescribe(\"when `itOnly` is set\", () => {\n\t\t\t\tbefore(() => {\n\t\t\t\t\tRuleTester.itOnly = sinon.spy();\n\t\t\t\t});\n\t\t\t\tafter(() => {\n\t\t\t\t\tRuleTester.itOnly = void 0;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 297 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 197,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\tdescribe(\"when `itOnly` is set\", () => {\n\t\t\t\tbefore(() => {\n\t\t\t\t\tRuleTester.itOnly = sinon.spy();\n\t\t\t\t});\n\t\t\t\tafter(() => {\n\t\t\t\t\tRuleTester.itOnly = void 0;\n\t\t\t\t});\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 197 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "tests/lib/linter/apply-disable-directives.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 4179,
            "parameterCount": 0,
            "snippet": "() => {\n\tdescribe(\"/* eslint-disable */ comments without rules\", () => {\n\t\tit(\"keeps problems before the comment on the same line\", () => {\n\t\t\tassert.deepStrictEqual(\n\t\t\t\tapplyDisableDirectives({\n\t\t\t\t\tlanguage: jslang,\n\t\t\t\t\tsourceCode,\n\t\t\t\t\tdirectives: [\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 4179 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 139,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"keeps problems before the comment on the same line\", () => {\n\t\t\tassert.deepStrictEqual(\n\t\t\t\tapplyDisableDirectives({\n\t\t\t\t\tlanguage: jslang,\n\t\t\t\t\tsourceCode,\n\t\t\t\t\tdirectives: [\n\t\t\t\t\t\t{\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 139 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 106,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"filters problems after the comment that have the same ruleId\", () => {\n\t\t\tassert.deepStrictEqual(\n\t\t\t\tapplyDisableDirectives({\n\t\t\t\t\tlanguage: jslang,\n\t\t\t\t\tsourceCode,\n\t\t\t\t\tdirectives: [\n\t\t\t\t\t\t{\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 106 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 216,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"keeps problems after the eslint-enable comment\", () => {\n\t\t\tassert.deepStrictEqual(\n\t\t\t\tapplyDisableDirectives({\n\t\t\t\t\tlanguage: jslang,\n\t\t\t\t\tsourceCode,\n\t\t\t\t\tdirectives: [\n\t\t\t\t\t\t{\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 216 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 166,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"keeps problems after the comment that have the same ruleId as the eslint-enable comment\", () => {\n\t\t\tassert.deepStrictEqual(\n\t\t\t\tapplyDisableDirectives({\n\t\t\t\t\tlanguage: jslang,\n\t\t\t\t\tsourceCode,\n\t\t\t\t\tdirectives: [\n\t\t\t\t\t\t{\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 166 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/linter/linter.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 49,
            "lineCount": 11540,
            "parameterCount": 0,
            "snippet": "() => {\n\tlet linter;\n\tlet warningService;\n\tconst filename = \"filename.js\";\n\t/**\n\t * Creates a config array with some default properties.\n\t * @param {FlatConfig|FlatConfig[]} value The value to base the\n\t *      config array on.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 49 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 11540 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 41,
            "lineCount": 8888,
            "parameterCount": 0,
            "snippet": "() => {\n\tconst filename = \"filename.js\";\n\t/** @type {InstanceType<import(\"../../../lib/linter/linter.js\").Linter>} */\n\tlet linter;\n\tlet warningService;\n\tbeforeEach(() => {\n\t\twarningService = sinon.stub(new WarningService());\n\t\tlinter = new Linter({ configType: \"eslintrc\", warningService });\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 41 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 8888 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 38,
            "lineCount": 8131,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should report warnings in order by line and column when called\", () => {\n\t\t\tconst code = \"foo()\\n    alert('test')\";\n\t\t\tconst config = {\n\t\t\t\trules: {\n\t\t\t\t\t\"no-mixed-spaces-and-tabs\": 1,\n\t\t\t\t\t\"eol-last\": 1,\n\t\t\t\t\tsemi: [1, \"always\"],\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 38 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 8131 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 30,
            "lineCount": 6196,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\tdescribe(\"/*global*/ Comments\", () => {\n\t\t\t\tdescribe(\"when evaluating code containing /*global */ and /*globals */ blocks\", () => {\n\t\t\t\t\t/**\n\t\t\t\t\t * Asserts the global variables in the provided code using the specified language options and data.\n\t\t\t\t\t * @param {string} code The code to verify.\n\t\t\t\t\t * @param {Object} languageOptions The language options to use.\n\t\t\t\t\t * @param {Object} [data={}] Additional data for the assertion.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 30 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 6196 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 10,
            "lineCount": 212,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"we should behave nicely when no matching variable is found\", () => {\n\t\t\tconst code = \"/* exported horse */\";\n\t\t\tconst config = { rules: {} };\n\t\t\tlinter.verify(code, config, filename);\n\t\t});\n\t\tit(\"variable should be exported \", () => {\n\t\t\tconst code = \"/* exported horse */\\n\\nvar horse;\";\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 212 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "tests/lib/linter/report-translator.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 2,
            "lineCount": 1382,
            "parameterCount": 0,
            "snippet": "() => {\n\t/**\n\t * Creates a SourceCode instance out of JavaScript text\n\t * @param {string} text Source text\n\t * @returns {SourceCode} A SourceCode instance for that text\n\t */\n\tfunction createSourceCode(text) {\n\t\treturn new SourceCode(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1382 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 2,
            "lineCount": 94,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should throw an error if node is not an object\", () => {\n\t\t\tassert.throws(\n\t\t\t\t() => translateReport(\"not a node\", \"hello world\"),\n\t\t\t\t\"Node must be an object\",\n\t\t\t);\n\t\t});\n\t\tit(\"should not throw an error if location is provided and node is not in an old-style call\", () => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 94 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 228,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should include the new-style options in the report\", () => {\n\t\t\tconst reportDescriptor = {\n\t\t\t\tnode,\n\t\t\t\tloc: location,\n\t\t\t\tmessage,\n\t\t\t\tfix: () => ({ range: [1, 2], text: \"foo\" }),\n\t\t\t\tsuggest: [\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 228 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 203,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should merge fixes to one if 'fix' function returns an array of fixes.\", () => {\n\t\t\tconst reportDescriptor = {\n\t\t\t\tnode,\n\t\t\t\tloc: location,\n\t\t\t\tmessage,\n\t\t\t\tfix: () => [\n\t\t\t\t\t{ range: [1, 2], text: \"foo\" },\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 203 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 301,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should support multiple suggestions.\", () => {\n\t\t\tconst reportDescriptor = {\n\t\t\t\tnode,\n\t\t\t\tloc: location,\n\t\t\t\tmessage,\n\t\t\t\tsuggest: [\n\t\t\t\t\t{\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 301 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/linter/source-code-fixer.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 758,
            "parameterCount": 0,
            "snippet": "() => {\n\tdescribe(\"constructor\", () => {\n\t\tit(\"Should not be able to add anything to this\", () => {\n\t\t\tconst result = new SourceCodeFixer();\n\t\t\tassert.throws(() => {\n\t\t\t\tresult.test = 1;\n\t\t\t});\n\t\t});\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 758 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 433,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tdescribe(\"shouldFix parameter\", () => {\n\t\t\tit(\"Should not perform any fixes if 'shouldFix' is false\", () => {\n\t\t\t\tconst result = SourceCodeFixer.applyFixes(\n\t\t\t\t\tTEST_CODE,\n\t\t\t\t\t[INSERT_AT_END],\n\t\t\t\t\tfalse,\n\t\t\t\t);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 433 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 92,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\tit(\"Should not perform any fixes if 'shouldFix' is false\", () => {\n\t\t\t\tconst result = SourceCodeFixer.applyFixes(\n\t\t\t\t\tTEST_CODE,\n\t\t\t\t\t[INSERT_AT_END],\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t\tassert.isFalse(result.fixed);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 92 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 64,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\tit(\"should insert text at the end of the code\", () => {\n\t\t\t\tconst result = SourceCodeFixer.applyFixes(TEST_CODE, [\n\t\t\t\t\tINSERT_AT_END,\n\t\t\t\t]);\n\t\t\t\tassert.strictEqual(\n\t\t\t\t\tresult.output,\n\t\t\t\t\tTEST_CODE + INSERT_AT_END.fix.text,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 52,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\tit(\"should remove text at the start of the code\", () => {\n\t\t\t\tconst result = SourceCodeFixer.applyFixes(TEST_CODE, [\n\t\t\t\t\tREMOVE_START,\n\t\t\t\t]);\n\t\t\t\tassert.strictEqual(result.messages.length, 0);\n\t\t\t\tassert.strictEqual(\n\t\t\t\t\tresult.output,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "tests/lib/linter/source-code-traverser.js",
        "criticalFunctions": [
          {
            "name": "createMockSourceCode",
            "complexity": 11,
            "lineCount": 58,
            "parameterCount": 1,
            "snippet": "function createMockSourceCode(ast) {\n\tconst steps = [];\n\t/**\n\t * Recursively builds traversal steps for the AST\n\t * @param {Object} node The current AST node\n\t * @param {Object[]} ancestors The ancestry of the current node\n\t * @returns {void}\n\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 2,
            "lineCount": 706,
            "parameterCount": 0,
            "snippet": "() => {\n\tdescribe(\"traverseSync\", () => {\n\t\tlet visitor, traverser;\n\t\tbeforeEach(() => {\n\t\t\tvisitor = Object.assign(new SourceCodeVisitor(), {\n\t\t\t\tcallSync: sinon.spy(),\n\t\t\t});\n\t\t\t[\"Foo\", \"Bar\", \"Foo > Bar\", \"Foo:exit\"].forEach(selector =>\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 706 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 2,
            "lineCount": 216,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tlet visitor, traverser;\n\t\tbeforeEach(() => {\n\t\t\tvisitor = Object.assign(new SourceCodeVisitor(), {\n\t\t\t\tcallSync: sinon.spy(),\n\t\t\t});\n\t\t\t[\"Foo\", \"Bar\", \"Foo > Bar\", \"Foo:exit\"].forEach(selector =>\n\t\t\t\tvisitor.add(selector, () => {}),\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 216 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 56,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\tconst fooNode = { type: \"Foo\", value: 1 };\n\t\t\tconst barNode = { type: \"Bar\", value: 2 };\n\t\t\tconst sourceCode = createMockSourceCode(fooNode);\n\t\t\tconst customSteps = [\n\t\t\t\t{\n\t\t\t\t\tkind: STEP_KIND_VISIT,\n\t\t\t\t\ttarget: barNode,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 312,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t/**\n\t\t * Gets a list of emitted types/selectors from the traverser, in emission order\n\t\t * @param {ASTNode} ast The AST to traverse\n\t\t * @param {Array<string>|Set<string>} possibleQueries Selectors to detect\n\t\t * @returns {Array[]} A list of emissions, in the order that they were emitted. Each emission is a two-element\n\t\t * array where the first element is a string, and the second element is the emitted AST node.\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 312 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "tests/lib/types/types.test.ts",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 2,
            "lineCount": 168,
            "parameterCount": 1,
            "snippet": "create(context: Rule.RuleContext) {\n\t\tcontext.getAncestors();\n\t\tcontext.getDeclaredVariables(AST);\n\t\tcontext.filename;\n\t\tcontext.getFilename();\n\t\tcontext.physicalFilename;\n\t\tcontext.getPhysicalFilename();\n\t\tcontext.cwd;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 168 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/accessor-pairs.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/array-bracket-newline.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/array-bracket-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/array-callback-return.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/array-element-newline.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/arrow-body-style.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/arrow-parens.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/arrow-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/block-scoped-var.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/block-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/brace-style.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/callback-return.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/camelcase.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/capitalized-comments.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/class-methods-use-this.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/comma-dangle.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/comma-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/comma-style.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/complexity.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/computed-property-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/curly.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/default-param-last.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/dot-location.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/eqeqeq.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/func-call-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/func-name-matching.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/func-names.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/func-style.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/function-call-argument-newline.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/function-paren-newline.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/generator-star-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/grouped-accessor-pairs.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/id-blacklist.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/id-denylist.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/id-length.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/id-match.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/implicit-arrow-linebreak.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/indent-legacy.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/indent.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/init-declarations.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/key-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/keyword-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/lines-around-comment.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/lines-around-directive.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/lines-between-class-members.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/logical-assignment-operators.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/max-len.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/max-lines-per-function.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/max-lines.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/max-statements-per-line.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/multiline-comment-style.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/multiline-ternary.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/newline-after-var.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/newline-per-chained-call.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-array-constructor.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-console.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-constant-binary-expression.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-constant-condition.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-dupe-class-members.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-dupe-else-if.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-duplicate-imports.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-else-return.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-empty-function.js",
        "criticalFunctions": [
          {
            "name": "toValidInvalid",
            "complexity": 5,
            "lineCount": 54,
            "parameterCount": 2,
            "snippet": "function toValidInvalid(patterns, item) {\n\tconst ecmaVersion =\n\t\titem.languageOptions && item.languageOptions.ecmaVersion\n\t\t\t? item.languageOptions.ecmaVersion\n\t\t\t: 6;\n\tconst allowOptions = Array.isArray(item.allow) ? item.allow : [item.allow];\n\tpatterns.valid.push(\n\t\t{\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-eval.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-extra-boolean-cast.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-extra-parens.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-fallthrough.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-implicit-coercion.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-implicit-globals.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-implied-eval.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-import-assign.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-inner-declarations.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-invalid-regexp.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-invalid-this.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-irregular-whitespace.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-lone-blocks.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-loop-func.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-magic-numbers.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-misleading-character-class.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-multi-spaces.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-nonoctal-decimal-escape.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-obj-calls.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-octal-escape.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-param-reassign.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-promise-executor-return.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-redeclare.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-restricted-exports.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-restricted-globals.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-restricted-imports.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-restricted-properties.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-return-await.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-setter-return.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-shadow-restricted-names.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-shadow.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-trailing-spaces.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-underscore-dangle.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-unneeded-ternary.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-unreachable.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-unused-expressions.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-unused-vars.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-use-before-define.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-useless-assignment.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-useless-backreference.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-useless-computed-key.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-useless-escape.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-useless-rename.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-useless-return.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/no-warning-comments.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/no-whitespace-before-property.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/object-curly-newline.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "mock-heavy"
          ]
        }
      },
      {
        "file": "tests/lib/rules/object-curly-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "mock-heavy"
          ]
        }
      },
      {
        "file": "tests/lib/rules/object-property-newline.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/object-shorthand.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/one-var.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/operator-assignment.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/operator-linebreak.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/padded-blocks.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/padding-line-between-statements.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/prefer-arrow-callback.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/prefer-const.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/prefer-destructuring.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/prefer-named-capture-group.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/prefer-numeric-literals.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/prefer-object-has-own.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/prefer-object-spread.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/prefer-regex-literals.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/quotes.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/require-atomic-updates.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/require-unicode-regexp.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/rest-spread-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/semi-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/semi-style.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/semi.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/sort-imports.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/sort-keys.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/space-before-blocks.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/space-before-function-paren.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/space-in-parens.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/space-infix-ops.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/space-unary-ops.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/strict.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/template-curly-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/template-tag-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/use-isnan.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/vars-on-top.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/wrap-iife.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/lib/rules/yoda.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/code-path-analysis/switch--precedence.js",
        "criticalFunctions": [
          {
            "name": "precedence",
            "complexity": 36,
            "lineCount": 73,
            "parameterCount": 1,
            "snippet": "function precedence(node) {\n    switch (node.type) {\n        case \"SequenceExpression\":\n            return 0;\n        case \"AssignmentExpression\":\n        case \"ArrowFunctionExpression\":\n        case \"YieldExpression\":\n            return 1;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 36 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 73 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "docs/src/assets/js/css-vars-ponyfill@2.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 327,
            "lineCount": 1447,
            "parameterCount": 0,
            "snippet": "function () {\n\t\"use strict\";\n\tfunction e() {\n\t\treturn (e =\n\t\t\tObject.assign ||\n\t\t\tfunction (e) {\n\t\t\t\tfor (var t = 1; t < arguments.length; t++) {\n\t\t\t\t\tvar r = arguments[t];\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 327 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1447 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "k",
            "complexity": 98,
            "lineCount": 537,
            "parameterCount": 0,
            "snippet": "function k() {\n\t\tvar r =\n\t\t\t\targuments.length > 0 && void 0 !== arguments[0]\n\t\t\t\t\t? arguments[0]\n\t\t\t\t\t: {},\n\t\t\to = \"cssVars(): \",\n\t\t\ts = e({}, b, r);\n\t\tfunction a(e, t, r, n) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 98 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 537 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "u",
            "complexity": 74,
            "lineCount": 225,
            "parameterCount": 1,
            "snippet": "function u(t) {\n\t\tvar r = e(\n\t\t\t{},\n\t\t\t{ preserveStatic: !0, removeComments: !1 },\n\t\t\targuments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n\t\t);\n\t\tfunction n(e) {\n\t\t\tthrow new Error(\"CSS parse error: \".concat(e));\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 74 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 225 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "n",
            "complexity": 39,
            "lineCount": 163,
            "parameterCount": 1,
            "snippet": "function n(e) {\n\t\tvar t = {\n\t\t\t\tcssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\n\t\t\t\tcssImports:\n\t\t\t\t\t/(?:@import\\s*)(?:url\\(\\s*)?(?:['\"])([^'\"]*)(?:['\"])(?:\\s*\\))?(?:[^;]*;)/g,\n\t\t\t},\n\t\t\tn = {\n\t\t\t\trootElement: e.rootElement || document,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 39 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 163 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "onComplete",
            "complexity": 35,
            "lineCount": 232,
            "parameterCount": 2,
            "snippet": "function (r, n) {\n\t\t\t\t\t\t\t\t\tvar o =\n\t\t\t\t\t\t\t\t\t\t\targuments.length > 2 &&\n\t\t\t\t\t\t\t\t\t\t\tvoid 0 !== arguments[2]\n\t\t\t\t\t\t\t\t\t\t\t\t? arguments[2]\n\t\t\t\t\t\t\t\t\t\t\t\t: [],\n\t\t\t\t\t\t\t\t\t\ti = {},\n\t\t\t\t\t\t\t\t\t\td = s.updateDOM\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 35 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 232 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "docs/src/assets/js/focus-visible.js",
        "criticalFunctions": [
          {
            "name": "applyFocusVisiblePolyfill",
            "complexity": 32,
            "lineCount": 267,
            "parameterCount": 1,
            "snippet": "function applyFocusVisiblePolyfill(scope) {\n\tvar hadKeyboardEvent = true;\n\tvar hadFocusVisibleRecently = false;\n\tvar hadFocusVisibleRecentlyTimeout = null;\n\tvar inputTypesWhitelist = {\n\t\ttext: true,\n\t\tsearch: true,\n\t\turl: true,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 267 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "docs/src/assets/js/inert-polyfill.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 24,
            "lineCount": 93,
            "parameterCount": 0,
            "snippet": "function () {\n\tfunction h(a, b, c) {\n\t\tif (0 > b) {\n\t\t\tif (a.previousElementSibling) {\n\t\t\t\tfor (a = a.previousElementSibling; a.lastElementChild; )\n\t\t\t\t\ta = a.lastElementChild;\n\t\t\t\treturn a;\n\t\t\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 93 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "docs/src/assets/js/main.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 4,
            "lineCount": 75,
            "parameterCount": 3,
            "snippet": "function (w, doc, undefined) {\n\tvar CollapsibleIndexOptions = {\n\t\tallCollapsed: false,\n\t\ticon: '<svg class=\"index-icon\" width=\"12\" height=\"8\" aria-hidden=\"true\" focusable=\"false\" viewBox=\"0 0 12 8\"><g fill=\"none\"><path fill=\"currentColor\" d=\"M1.41.59l4.59 4.58 4.59-4.58 1.41 1.41-6 6-6-6z\"/><path d=\"M-6-8h24v24h-24z\"/></g></svg>',\n\t};\n\tvar CollapsibleIndex = function (inst, options) {\n\t\tvar _options = Object.assign(CollapsibleIndexOptions, options);\n\t\tvar el = inst;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "CollapsibleIndex",
            "complexity": 4,
            "lineCount": 67,
            "parameterCount": 2,
            "snippet": "function (inst, options) {\n\t\tvar _options = Object.assign(CollapsibleIndexOptions, options);\n\t\tvar el = inst;\n\t\tvar indexToggles = el.querySelectorAll(\n\t\t\t\".docs-index .docs__index__panel > ul > .docs-index__item[data-has-children] > a\",\n\t\t); // only top-most level\n\t\tvar indexPanels = el.querySelectorAll(\n\t\t\t\".docs-index .docs__index__panel > ul > .docs-index__item>[data-child-list]\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "docs/src/assets/js/search.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 16,
            "lineCount": 50,
            "parameterCount": 1,
            "snippet": "function (e) {\n\tconst searchResults = Array.from(\n\t\tdocument.querySelectorAll(\".search-results__item\"),\n\t);\n\tconst isArrowKey = e.key === \"ArrowUp\" || e.key === \"ArrowDown\";\n\tif (e.key === \"Escape\") {\n\t\te.preventDefault();\n\t\tif (searchResults.length) {\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "docs/src/assets/js/tabs.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 22,
            "lineCount": 249,
            "parameterCount": 3,
            "snippet": "function (w, doc, undefined) {\n\tvar ARIAaccOptions = {\n\t\tmanual: true,\n\t\topen: 0,\n\t};\n\tvar ARIAtabs = function (inst, options) {\n\t\tvar _options = Object.assign(ARIAaccOptions, options);\n\t\tvar el = inst;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 249 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ARIAtabs",
            "complexity": 22,
            "lineCount": 240,
            "parameterCount": 2,
            "snippet": "function (inst, options) {\n\t\tvar _options = Object.assign(ARIAaccOptions, options);\n\t\tvar el = inst;\n\t\tvar tablist = el.querySelector(\"[data-tablist]\");\n\t\tvar tabs = Array.from(el.querySelectorAll(\"[data-tab]\"));\n\t\tvar tabpanels = Array.from(el.querySelectorAll(\"[data-tabpanel]\"));\n\t\tvar tabsID = util.generateID(\"ps__tabs-\");\n\t\tvar orientation = el.getAttribute(\"data-tabs-orientation\");\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 240 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "tabKeyboardRespond",
            "complexity": 13,
            "lineCount": 65,
            "parameterCount": 2,
            "snippet": "function (e, tab) {\n\t\t\tvar firstTab = tabs[0];\n\t\t\tvar lastTab = tabs[tabs.length - 1];\n\t\t\tvar keyCode = e.keyCode || e.which;\n\t\t\tswitch (keyCode) {\n\t\t\t\tcase util.keyCodes.UP:\n\t\t\t\tcase util.keyCodes.LEFT:\n\t\t\t\t\te.preventDefault();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/languages/js/source-code/source-code.js",
        "criticalFunctions": [
          {
            "name": "getJSDocComment",
            "complexity": 22,
            "lineCount": 72,
            "parameterCount": 1,
            "snippet": "getJSDocComment(node) {\n\t\t/**\n\t\t * Checks for the presence of a JSDoc comment for the given node and returns it.\n\t\t * @param {ASTNode} astNode The AST node to get the comment for.\n\t\t * @returns {Token|null} The Block comment token containing the JSDoc comment\n\t\t *      for the given node or null if not found.\n\t\t * @private\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "addDeclaredGlobals",
            "complexity": 13,
            "lineCount": 94,
            "parameterCount": 3,
            "snippet": "function addDeclaredGlobals(\n\tglobalScope,\n\tconfigGlobals = {},\n\tinlineGlobals = {},\n) {\n\tfor (const id of new Set([\n\t\t...Object.keys(configGlobals),\n\t\t...Object.keys(inlineGlobals),\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 94 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getIndexFromLoc",
            "complexity": 13,
            "lineCount": 58,
            "parameterCount": 1,
            "snippet": "getIndexFromLoc(loc) {\n\t\tif (\n\t\t\tloc === null ||\n\t\t\ttypeof loc !== \"object\" ||\n\t\t\ttypeof loc.line !== \"number\" ||\n\t\t\ttypeof loc.column !== \"number\"\n\t\t) {\n\t\t\tthrow new TypeError(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              }
            ]
          },
          {
            "name": "getDisableDirectives",
            "complexity": 10,
            "lineCount": 71,
            "parameterCount": 0,
            "snippet": "getDisableDirectives() {\n\t\tconst cachedDirectives = this[caches].get(\"disableDirectives\");\n\t\tif (cachedDirectives) {\n\t\t\treturn cachedDirectives;\n\t\t}\n\t\tconst problems = [];\n\t\tconst directives = [];\n\t\tthis.getInlineConfigNodes().forEach(comment => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 71 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 9,
            "lineCount": 53,
            "parameterCount": 1,
            "snippet": "comment => {\n\t\t\tconst {\n\t\t\t\tlabel,\n\t\t\t\tvalue,\n\t\t\t\tjustification: justificationPart,\n\t\t\t} = commentParser.parseDirective(comment.value);\n\t\t\tconst lineCommentSupported = /^eslint-disable-(next-)?line$/u.test(\n\t\t\t\tlabel,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/cli-engine/formatters/html.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 780,
            "parameterCount": 0,
            "snippet": "() => {\n\tdescribe(\"when passed a single error message\", () => {\n\t\tconst rulesMeta = {\n\t\t\tfoo: {\n\t\t\t\ttype: \"problem\",\n\t\t\t\tdocs: {\n\t\t\t\t\tdescription: \"This is rule 'foo'\",\n\t\t\t\t\tcategory: \"error\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 780 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 113,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tconst rulesMeta = {\n\t\t\tfoo: {\n\t\t\t\ttype: \"problem\",\n\t\t\t\tdocs: {\n\t\t\t\t\tdescription: \"This is rule 'foo'\",\n\t\t\t\t\tcategory: \"error\",\n\t\t\t\t\trecommended: true,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 113 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 76,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tconst rulesMeta = {\n\t\t\tfoo: {\n\t\t\t\ttype: \"problem\",\n\t\t\t\tdocs: {\n\t\t\t\t\tdescription: \"This is rule 'foo'\",\n\t\t\t\t\tcategory: \"error\",\n\t\t\t\t\trecommended: true,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 76 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 76,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tconst rulesMeta = {\n\t\t\tfoo: {\n\t\t\t\ttype: \"problem\",\n\t\t\t\tdocs: {\n\t\t\t\t\tdescription: \"This is rule 'foo'\",\n\t\t\t\t\tcategory: \"error\",\n\t\t\t\t\trecommended: true,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 76 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 104,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tconst rulesMeta = {\n\t\t\tfoo: {\n\t\t\t\ttype: \"problem\",\n\t\t\t\tdocs: {\n\t\t\t\t\tdescription: \"This is rule 'foo'\",\n\t\t\t\t\tcategory: \"error\",\n\t\t\t\t\trecommended: true,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 104 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/cli-engine/formatters/stylish.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 461,
            "parameterCount": 0,
            "snippet": "() => {\n\tconst originalColorLevel = chalk.level;\n\tbeforeEach(() => {\n\t\tchalk.level = 0;\n\t\tsinon.spy(chalkStub, \"reset\");\n\t\tsinon.spy(chalkStub.yellow, \"bold\");\n\t\tsinon.spy(chalkStub.red, \"bold\");\n\t});\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 461 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 78,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tconst code = [\n\t\t\t{\n\t\t\t\tfilePath: \"foo.js\",\n\t\t\t\terrorCount: 1,\n\t\t\t\twarningCount: 0,\n\t\t\t\tmessages: [\n\t\t\t\t\t{\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 78 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 114,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should not output fixable problems message when no errors or warnings are fixable\", () => {\n\t\t\tconst code = [\n\t\t\t\t{\n\t\t\t\t\tfilePath: \"foo.js\",\n\t\t\t\t\terrorCount: 1,\n\t\t\t\t\twarningCount: 0,\n\t\t\t\t\tfixableErrorCount: 0,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 114 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "tests/lib/linter/code-path-analysis/code-path-analyzer.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 28,
            "lineCount": 1002,
            "parameterCount": 0,
            "snippet": "() => {\n\tdescribe(\"interface of code paths\", () => {\n\t\tlet actual = [];\n\t\tbeforeEach(() => {\n\t\t\tactual = [];\n\t\t\tlinter.verify(\n\t\t\t\t\"function foo(a) { if (a) return 0; else throw new Error(); }\",\n\t\t\t\t{\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1002 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 7,
            "lineCount": 216,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should be fired in `while` loops\", () => {\n\t\t\tlet count = 0;\n\t\t\tlinter.verify(\"while (a) { foo(); }\", {\n\t\t\t\tplugins: {\n\t\t\t\t\t\"test-plugin\": {\n\t\t\t\t\t\trules: {\n\t\t\t\t\t\t\t\"test-rule\": {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 216 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 5,
            "lineCount": 73,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should be fired at the head of programs/functions\", () => {\n\t\t\tlet count = 0;\n\t\t\tlet lastCodePathNodeType = null;\n\t\t\tlinter.verify(\n\t\t\t\t\"foo(); function bar() {} var baz = function() {}; var qux = () => {};\",\n\t\t\t\t{\n\t\t\t\t\tplugins: {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 73 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 5,
            "lineCount": 71,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\tlet count = 0;\n\t\t\tlet lastCodePathNodeType = null;\n\t\t\tlinter.verify(\n\t\t\t\t\"foo(); function bar() {} var baz = function() {}; var qux = () => {};\",\n\t\t\t\t{\n\t\t\t\t\tplugins: {\n\t\t\t\t\t\t\"test-plugin\": {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 71 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 5,
            "lineCount": 63,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should be fired at the end of programs/functions\", () => {\n\t\t\tlet count = 0;\n\t\t\tlet lastNodeType = null;\n\t\t\tlinter.verify(\n\t\t\t\t\"foo(); function bar() {} var baz = function() {}; var qux = () => {};\",\n\t\t\t\t{\n\t\t\t\t\tplugins: {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 63 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/rules/utils/ast-utils.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 8,
            "lineCount": 2461,
            "parameterCount": 0,
            "snippet": "() => {\n\tlet callCounts;\n\tbeforeEach(() => {\n\t\tcallCounts = new Map();\n\t});\n\t/**\n\t * Asserts that a given function is called at least once during a test\n\t * @param {Function} func The function that must be called at least once\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 2461 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 3,
            "lineCount": 59,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tconst expectedResults = {\n\t\t\t\"\": [[1, 0], null],\n\t\t\t\"\\n\": [[1, 0], [2, 0], null],\n\t\t\t\"\\r\\n\": [[1, 0], [2, 0], null],\n\t\t\tfoo: [[1, 0], [1, 1], [1, 2], [1, 3], null],\n\t\t\t\"foo\\n\": [[1, 0], [1, 1], [1, 2], [1, 3], [2, 0], null],\n\t\t\t\"foo\\r\\n\": [[1, 0], [1, 1], [1, 2], [1, 3], [2, 0], null],\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 3,
            "lineCount": 133,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tdescribe(\"should return true if two regex values are same, even if it's not supported natively.\", () => {\n\t\t\tconst patterns = [\n\t\t\t\t{\n\t\t\t\t\tnodeA: {\n\t\t\t\t\t\ttype: \"Literal\",\n\t\t\t\t\t\tvalue: /(?:)/u,\n\t\t\t\t\t\tregex: { pattern: \"(?:)\", flags: \"u\" },\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 133 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 3,
            "lineCount": 61,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tconst expectedResults = [\n\t\t\t{ code: '\"use strict\";', expectedRetVal: true },\n\t\t\t{\n\t\t\t\tcode: '\"use strict\"; \"use asm\";',\n\t\t\t\tnodeText: '\"use asm\";',\n\t\t\t\texpectedRetVal: true,\n\t\t\t},\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 2,
            "lineCount": 65,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\tconst patterns = [\n\t\t\t\t{\n\t\t\t\t\tnodeA: {\n\t\t\t\t\t\ttype: \"Literal\",\n\t\t\t\t\t\tvalue: /(?:)/u,\n\t\t\t\t\t\tregex: { pattern: \"(?:)\", flags: \"u\" },\n\t\t\t\t\t},\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/fixtures/parsers/array-bracket-spacing/flow-destructuring-1.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 563,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"start\": 0,\n    \"end\": 28,\n    \"loc\": {\n        \"start\": {\n            \"line\": 1,\n            \"column\": 0\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 563 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/array-bracket-spacing/flow-destructuring-2.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 563,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"start\": 0,\n    \"end\": 28,\n    \"loc\": {\n        \"start\": {\n            \"line\": 1,\n            \"column\": 0\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 563 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/babel-eslint5/destructuring-object-spread.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 1719,
            "parameterCount": 0,
            "snippet": "function() {\n    return {\n        type: \"Program\",\n        start: 0,\n        end: 53,\n        loc: {\n            start: {\n                line: 1,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1719 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/babel-eslint7/function-type-annotation.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 517,
            "parameterCount": 0,
            "snippet": "() => ({\n    type: \"Program\",\n    start: 0,\n    end: 66,\n    loc: {\n        start: {\n            line: 1,\n            column: 0\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 517 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/babel-eslint7/object-pattern-with-annotation.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 430,
            "parameterCount": 0,
            "snippet": "() => ({\n    type: \"Program\",\n    start: 0,\n    end: 29,\n    loc: {\n        start: {\n            line: 1,\n            column: 0\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 430 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/babel-eslint7/object-pattern-with-object-annotation.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 431,
            "parameterCount": 0,
            "snippet": "() => ({\n    type: \"Program\",\n    start: 0,\n    end: 28,\n    loc: {\n        start: {\n            line: 1,\n            column: 0\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 431 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/comma-dangle/object-pattern-1.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 1141,
            "parameterCount": 0,
            "snippet": "() => ({\n    type: \"Program\",\n    start: 0,\n    end: 34,\n    loc: {\n        start: {\n            line: 1,\n            column: 0\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1141 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/comma-dangle/object-pattern-2.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 1141,
            "parameterCount": 0,
            "snippet": "() => ({\n    type: \"Program\",\n    start: 0,\n    end: 34,\n    loc: {\n        start: {\n            line: 1,\n            column: 0\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1141 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/comma-dangle/return-type-1.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 900,
            "parameterCount": 0,
            "snippet": "() => ({\n    type: \"Program\",\n    start: 0,\n    end: 33,\n    loc: {\n        start: {\n            line: 1,\n            column: 0\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 900 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/comma-dangle/return-type-2.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 900,
            "parameterCount": 0,
            "snippet": "() => ({\n    type: \"Program\",\n    start: 0,\n    end: 33,\n    loc: {\n        start: {\n            line: 1,\n            column: 0\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 900 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/function-paren-newline/arrow-function-return-type.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 645,
            "parameterCount": 0,
            "snippet": "() => ({\n  type: \"Program\",\n  body: [\n      {\n          type: \"VariableDeclaration\",\n          declarations: [\n              {\n                  type: \"VariableDeclarator\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 645 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/object-curly-newline/flow-stub-parser-multiline-type-literal.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 810,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"start\": 0,\n    \"end\": 57,\n    \"loc\": {\n        \"start\": {\n            \"line\": 1,\n            \"column\": 0\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 810 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/object-curly-newline/flow-stub-parser-multiline.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 580,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"start\": 0,\n    \"end\": 37,\n    \"loc\": {\n        \"start\": {\n            \"line\": 1,\n            \"column\": 0\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 580 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/object-curly-newline/flow-stub-parser-singleline-type-literal.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 810,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"start\": 0,\n    \"end\": 55,\n    \"loc\": {\n        \"start\": {\n            \"line\": 1,\n            \"column\": 0\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 810 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/object-curly-newline/flow-stub-parser-singleline.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 580,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"start\": 0,\n    \"end\": 35,\n    \"loc\": {\n        \"start\": {\n            \"line\": 1,\n            \"column\": 0\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 580 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/object-curly-spacing/flow-stub-parser-never-invalid.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 598,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"start\": 0,\n    \"end\": 34,\n    \"loc\": {\n        \"start\": {\n            \"line\": 1,\n            \"column\": 0\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 598 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/object-curly-spacing/flow-stub-parser-never-valid.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 598,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"start\": 0,\n    \"end\": 32,\n    \"loc\": {\n        \"start\": {\n            \"line\": 1,\n            \"column\": 0\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 598 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/type-annotations/function-declaration-type-annotation-no-space.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 481,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"range\": [\n        0,\n        34\n    ],\n    \"loc\": {\n        \"start\": {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 481 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/type-annotations/function-expression-type-annotation.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 579,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"range\": [\n        0,\n        45\n    ],\n    \"loc\": {\n        \"start\": {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 579 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/abstract-class-invalid.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 1188,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"range\": [\n        0,\n        147\n    ],\n    \"loc\": {\n        \"start\": {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1188 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/abstract-class-valid.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 1188,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"range\": [\n        0,\n        159\n    ],\n    \"loc\": {\n        \"start\": {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1188 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/functions-with-abstract-class-invalid.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 1046,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"range\": [\n        0,\n        160\n    ],\n    \"loc\": {\n        \"start\": {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1046 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/functions-with-abstract-class-valid.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 1046,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"range\": [\n        0,\n        196\n    ],\n    \"loc\": {\n        \"start\": {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1046 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/interface.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 438,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"range\": [\n        0,\n        51\n    ],\n    \"loc\": {\n        \"start\": {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 438 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/namespace-invalid.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 815,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"range\": [\n        0,\n        91\n    ],\n    \"loc\": {\n        \"start\": {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 815 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/namespace-valid.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 815,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"range\": [\n        0,\n        99\n    ],\n    \"loc\": {\n        \"start\": {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 815 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/namespace-with-functions-with-abstract-class-invalid.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 1180,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"range\": [\n        0,\n        254\n    ],\n    \"loc\": {\n        \"start\": {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1180 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/fixtures/parsers/unknown-nodes/namespace-with-functions-with-abstract-class-valid.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 1180,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"range\": [\n        0,\n        262\n    ],\n    \"loc\": {\n        \"start\": {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1180 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/decorator-with-class-methods.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 881,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"range\": [\n        0,\n        72\n    ],\n    \"loc\": {\n        \"start\": {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 881 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/decorator-with-keywords-class-method.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 1175,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"range\": [\n        0,\n        80\n    ],\n    \"loc\": {\n        \"start\": {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1175 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/decorator-with-static-class-methods.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 1178,
            "parameterCount": 0,
            "snippet": "() => ({\n    \"type\": \"Program\",\n    \"range\": [\n        0,\n        111\n    ],\n    \"loc\": {\n        \"start\": {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1178 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/global-for-await-of.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 460,
            "parameterCount": 0,
            "snippet": "() => ({\n    type: \"Program\",\n    body: [\n        {\n            type: \"ForOfStatement\",\n            left: {\n                type: \"VariableDeclaration\",\n                declarations: [\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 460 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/logical-with-assignment-with-assertion-1.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 530,
            "parameterCount": 0,
            "snippet": "() => ({\n  type: \"Program\",\n  body: [\n    {\n      type: \"ExpressionStatement\",\n      expression: {\n        type: \"LogicalExpression\",\n        operator: \"||\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 530 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/logical-with-assignment-with-assertion-2.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 560,
            "parameterCount": 0,
            "snippet": "() => ({\n  type: \"Program\",\n  body: [\n    {\n      type: \"ExpressionStatement\",\n      expression: {\n        type: \"LogicalExpression\",\n        operator: \"||\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 560 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/logical-with-assignment-with-assertion-3.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 560,
            "parameterCount": 0,
            "snippet": "() => ({\n  type: \"Program\",\n  body: [\n    {\n      type: \"ExpressionStatement\",\n      expression: {\n        type: \"TSAsExpression\",\n        expression: {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 560 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/object-with-arrow-fn-props.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 8902,
            "parameterCount": 0,
            "snippet": "() => ({\n    type: 'Program',\n    body: [\n        {\n            type: 'VariableDeclaration',\n            declarations: [\n                {\n                    type: 'VariableDeclarator',\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 8902 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/fixtures/parsers/typescript-parsers/object-with-generic-arrow-fn-props.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 2122,
            "parameterCount": 0,
            "snippet": "() => ({\n    type: \"Program\",\n    body: [\n        {\n            type: \"VariableDeclaration\",\n            declarations: [\n                {\n                    type: \"VariableDeclarator\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 2122 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/fixtures/rules/indent/indent-invalid-fixture-1.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/fixtures/rules/indent/indent-valid-fixture-1.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/fixtures/rules/indent-legacy/indent-invalid-fixture-1.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/fixtures/rules/indent-legacy/indent-valid-fixture-1.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/languages/js/source-code/token-store/index.js",
        "criticalFunctions": [
          {
            "name": "createCursorWithCount",
            "complexity": 7,
            "lineCount": 43,
            "parameterCount": 7,
            "snippet": "function createCursorWithCount(\n\tfactory,\n\ttokens,\n\tcomments,\n\tindexMap,\n\tstartLoc,\n\tendLoc,\n\topts,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createCursorWithSkip",
            "complexity": 6,
            "lineCount": 40,
            "parameterCount": 7,
            "snippet": "function createCursorWithSkip(\n\tfactory,\n\ttokens,\n\tcomments,\n\tindexMap,\n\tstartLoc,\n\tendLoc,\n\topts,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createCursorWithPadding",
            "complexity": 5,
            "lineCount": 42,
            "parameterCount": 7,
            "snippet": "function createCursorWithPadding(\n\ttokens,\n\tcomments,\n\tindexMap,\n\tstartLoc,\n\tendLoc,\n\tbeforeCount,\n\tafterCount,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "tests/lib/languages/js/source-code/source-code.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 52,
            "lineCount": 4468,
            "parameterCount": 0,
            "snippet": "() => {\n\tdescribe(\"new SourceCode()\", () => {\n\t\tit(\"should create a new instance when called with valid data\", () => {\n\t\t\tconst ast = { comments: [], tokens: [], loc: {}, range: [] };\n\t\t\tconst sourceCode = new SourceCode(\"foo;\", ast);\n\t\t\tassert.isObject(sourceCode);\n\t\t\tassert.strictEqual(sourceCode.text, \"foo;\");\n\t\t\tassert.strictEqual(sourceCode.ast, ast);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 52 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 4468 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 35,
            "lineCount": 671,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should throw an error when argument is missing\", () => {\n\t\t\tlinter.defineRule(\"is-global-reference\", {\n\t\t\t\tcreate: context => ({\n\t\t\t\t\tProgram() {\n\t\t\t\t\t\tcontext.sourceCode.isGlobalReference();\n\t\t\t\t\t},\n\t\t\t\t}),\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 35 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 671 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 8,
            "lineCount": 167,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should mark variables in current scope as used\", () => {\n\t\t\tconst code = \"var a = 1, b = 2;\";\n\t\t\tlet spy;\n\t\t\tlinter.defineRule(\"checker\", {\n\t\t\t\tcreate(context) {\n\t\t\t\t\tconst sourceCode = context.sourceCode;\n\t\t\t\t\tspy = sinon.spy(node => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 167 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 8,
            "lineCount": 67,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\tconst code = \"String; String.length; Math; obj.Math;\";\n\t\t\tlet identifierSpy;\n\t\t\tconst config = {\n\t\t\t\tplugins: {\n\t\t\t\t\ttest: {\n\t\t\t\t\t\trules: {\n\t\t\t\t\t\t\tchecker: {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 8,
            "lineCount": 55,
            "parameterCount": 0,
            "snippet": "() => {\n\t\t\tconst code =\n\t\t\t\t\"class MyClass { method() { Math.random(); this.Math = 5; } }\";\n\t\t\tlet spy;\n\t\t\tconst config = {\n\t\t\t\tplugins: {\n\t\t\t\t\ttest: {\n\t\t\t\t\t\trules: {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "tests/lib/languages/js/source-code/token-store.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 5,
            "lineCount": 1782,
            "parameterCount": 0,
            "snippet": "() => {\n\tconst store = new TokenStore(TOKENS, COMMENTS);\n\tdescribe(\"when calling getTokens\", () => {\n\t\tit(\"should retrieve all tokens for root node\", () => {\n\t\t\tcheck(store.getTokens(Program), [\n\t\t\t\t\"var\",\n\t\t\t\t\"answer\",\n\t\t\t\t\"=\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1782 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 3,
            "lineCount": 69,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should retrieve all tokens and comments in the node\", () => {\n\t\t\tconst code = \"(function(a, /*b,*/ c){})\";\n\t\t\tconst ast = espree.parse(code, {\n\t\t\t\tloc: true,\n\t\t\t\trange: true,\n\t\t\t\ttokens: true,\n\t\t\t\tcomment: true,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 69 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 3,
            "lineCount": 69,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should retrieve all tokens and comments in the node\", () => {\n\t\t\tconst code = \"(function(a, /*b,*/ c){})\";\n\t\t\tconst ast = espree.parse(code, {\n\t\t\t\tloc: true,\n\t\t\t\trange: true,\n\t\t\t\ttokens: true,\n\t\t\t\tcomment: true,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 69 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 94,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should retrieve all tokens for root node\", () => {\n\t\t\tcheck(store.getTokens(Program), [\n\t\t\t\t\"var\",\n\t\t\t\t\"answer\",\n\t\t\t\t\"=\",\n\t\t\t\t\"a\",\n\t\t\t\t\"*\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 94 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 80,
            "parameterCount": 0,
            "snippet": "() => {\n\t\tit(\"should retrieve zero tokens before a node\", () => {\n\t\t\tcheck(store.getTokensBefore(BinaryExpression, 0), []);\n\t\t});\n\t\tit(\"should retrieve one token before a node\", () => {\n\t\t\tcheck(store.getTokensBefore(BinaryExpression, 1), [\"=\"]);\n\t\t});\n\t\tit(\"should retrieve more than one token before a node\", () => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      }
    ]
  },
  "durationMs": 84774
}