{
  "project": "vue",
  "repo": "https://github.com/vuejs/core.git",
  "type": "frontend framework",
  "stars": "50.7k",
  "stableVersion": "v3.5.17",
  "description": "Progressive JavaScript framework",
  "category": "medium",
  "emblematicFiles": {
    "coreFiles": [
      "packages/runtime-core/src/component.ts",
      "packages/runtime-core/src/renderer.ts",
      "packages/reactivity/src/reactive.ts"
    ],
    "architecturalFiles": [
      "packages/compiler-core/src/compile.ts",
      "packages/runtime-core/src/apiCreateApp.ts"
    ],
    "performanceCriticalFiles": [
      "packages/runtime-core/src/scheduler.ts",
      "packages/reactivity/src/effect.ts"
    ],
    "complexAlgorithmFiles": [
      "packages/compiler-core/src/transform.ts",
      "packages/runtime-core/src/componentRenderContext.ts"
    ]
  },
  "analysis": {
    "context": {
      "project": {
        "name": "vue",
        "path": ".",
        "version": "3.5.17"
      },
      "analysis": {
        "timestamp": "2025-07-11T23:16:18.198Z",
        "durationMs": 17732,
        "toolVersion": "0.6.0",
        "filesAnalyzed": 253,
        "duplicationMode": "legacy"
      }
    },
    "overview": {
      "grade": "F",
      "statistics": {
        "totalFiles": 253,
        "totalLOC": 43916,
        "avgComplexity": 32.7,
        "avgLOC": 174,
        "avgDuplicationRatio": 0.03
      },
      "scores": {
        "complexity": 35,
        "duplication": 98,
        "maintainability": 53,
        "overall": 56
      },
      "summary": "132 critical files found requiring attention"
    },
    "details": [
      {
        "file": "packages/global.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 28,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-core/index.js",
        "metrics": {
          "complexity": 2,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-dom/index.js",
        "metrics": {
          "complexity": 2,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/reactivity/index.js",
        "metrics": {
          "complexity": 2,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/index.js",
        "metrics": {
          "complexity": 2,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-dom/index.js",
        "metrics": {
          "complexity": 2,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/server-renderer/index.js",
        "metrics": {
          "complexity": 2,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-test/index.js",
        "metrics": {
          "complexity": 2,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/shared/index.js",
        "metrics": {
          "complexity": 2,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/vue/index.js",
        "metrics": {
          "complexity": 2,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/vue/jsx.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 16,
          "functionCount": 0,
          "duplicationRatio": 0.7
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/vue-compat/index.js",
        "metrics": {
          "complexity": 2,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-core/src/ast.ts",
        "metrics": {
          "complexity": 12,
          "loc": 711,
          "functionCount": 21,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 25,
          "instability": 0.11,
          "cohesionScore": 0.7,
          "percentileUsageRank": 99,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.37
          }
        ],
        "healthScore": 55
      },
      {
        "file": "packages/compiler-core/src/babelUtils.ts",
        "metrics": {
          "complexity": 132,
          "loc": 378,
          "functionCount": 24,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 65,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.6
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.26
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-core/src/codegen.ts",
        "metrics": {
          "complexity": 210,
          "loc": 992,
          "functionCount": 50,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.75,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 10.5
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 3.31
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-core/src/compile.ts",
        "metrics": {
          "complexity": 24,
          "loc": 107,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 19,
          "incomingDependencies": 1,
          "instability": 0.95,
          "cohesionScore": 0.65,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/compiler-core/src/errors.ts",
        "metrics": {
          "complexity": 6,
          "loc": 160,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 17,
          "instability": 0.06,
          "cohesionScore": 0.75,
          "percentileUsageRank": 96,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-core/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 72,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 22,
          "incomingDependencies": 1,
          "instability": 0.96,
          "cohesionScore": 0.67,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-core/src/options.ts",
        "metrics": {
          "complexity": 1,
          "loc": 102,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 8,
          "instability": 0.33,
          "cohesionScore": 0.71,
          "percentileUsageRank": 87,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-core/src/parser.ts",
        "metrics": {
          "complexity": 235,
          "loc": 955,
          "functionCount": 47,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 4,
          "instability": 0.6,
          "cohesionScore": 0.72,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 11.75
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 3.18
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-core/src/runtimeHelpers.ts",
        "metrics": {
          "complexity": 40,
          "loc": 121,
          "functionCount": 2,
          "duplicationRatio": 0.13
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 19,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2
          }
        ],
        "healthScore": 32
      },
      {
        "file": "packages/compiler-core/src/tokenizer.ts",
        "metrics": {
          "complexity": 231,
          "loc": 985,
          "functionCount": 57,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 11.55
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 3.28
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-core/src/transform.ts",
        "metrics": {
          "complexity": 64,
          "loc": 444,
          "functionCount": 22,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 23,
          "instability": 0.23,
          "cohesionScore": 0.71,
          "percentileUsageRank": 98,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.2
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.48
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-core/src/utils.ts",
        "metrics": {
          "complexity": 137,
          "loc": 498,
          "functionCount": 34,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 17,
          "instability": 0.23,
          "cohesionScore": 0.72,
          "percentileUsageRank": 96,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.85
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.66
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-core/src/validateExpression.ts",
        "metrics": {
          "complexity": 6,
          "loc": 50,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 4,
          "instability": 0.43,
          "cohesionScore": 0.75,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-dom/src/decodeHtmlBrowser.ts",
        "metrics": {
          "complexity": 3,
          "loc": 13,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-dom/src/errors.ts",
        "metrics": {
          "complexity": 5,
          "loc": 55,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-dom/src/htmlNesting.ts",
        "metrics": {
          "complexity": 8,
          "loc": 157,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-dom/src/index.ts",
        "metrics": {
          "complexity": 5,
          "loc": 68,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 13,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.63,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-dom/src/parserOptions.ts",
        "metrics": {
          "complexity": 30,
          "loc": 64,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 46
      },
      {
        "file": "packages/compiler-dom/src/runtimeHelpers.ts",
        "metrics": {
          "complexity": 11,
          "loc": 35,
          "functionCount": 0,
          "duplicationRatio": 0.44
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 6,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 82,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.47
          }
        ],
        "healthScore": 38
      },
      {
        "file": "packages/compiler-sfc/src/cache.ts",
        "metrics": {
          "complexity": 3,
          "loc": 9,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 65,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-sfc/src/compileScript.ts",
        "metrics": {
          "complexity": 300,
          "loc": 1101,
          "functionCount": 28,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 17,
          "incomingDependencies": 4,
          "instability": 0.81,
          "cohesionScore": 0.63,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 15
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-sfc/src/compileStyle.ts",
        "metrics": {
          "complexity": 28,
          "loc": 210,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.6,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 40
      },
      {
        "file": "packages/compiler-sfc/src/compileTemplate.ts",
        "metrics": {
          "complexity": 43,
          "loc": 294,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 3,
          "instability": 0.57,
          "cohesionScore": 0.64,
          "percentileUsageRank": 65,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.15
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.47
          }
        ],
        "healthScore": 14
      },
      {
        "file": "packages/compiler-sfc/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 68,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-sfc/src/parse.ts",
        "metrics": {
          "complexity": 69,
          "loc": 411,
          "functionCount": 22,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 7,
          "instability": 0.42,
          "cohesionScore": 0.69,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.45
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.37
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-sfc/src/rewriteDefault.ts",
        "metrics": {
          "complexity": 23,
          "loc": 109,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler-sfc/src/shims.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-sfc/src/warn.ts",
        "metrics": {
          "complexity": 5,
          "loc": 14,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-ssr/src/errors.ts",
        "metrics": {
          "complexity": 3,
          "loc": 34,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 65,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-ssr/src/index.ts",
        "metrics": {
          "complexity": 5,
          "loc": 76,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.61,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-ssr/src/runtimeHelpers.ts",
        "metrics": {
          "complexity": 1,
          "loc": 50,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 9,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-ssr/src/ssrCodegenTransform.ts",
        "metrics": {
          "complexity": 26,
          "loc": 218,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 10,
          "instability": 0.41,
          "cohesionScore": 0.64,
          "percentileUsageRank": 91,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.09
          }
        ],
        "healthScore": 41
      },
      {
        "file": "packages/reactivity/src/arrayInstrumentations.ts",
        "metrics": {
          "complexity": 21,
          "loc": 247,
          "functionCount": 42,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.24
          }
        ],
        "healthScore": 41
      },
      {
        "file": "packages/reactivity/src/baseHandlers.ts",
        "metrics": {
          "complexity": 47,
          "loc": 209,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.75,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.35
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.04
          }
        ],
        "healthScore": 11
      },
      {
        "file": "packages/reactivity/src/collectionHandlers.ts",
        "metrics": {
          "complexity": 56,
          "loc": 286,
          "functionCount": 22,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.75,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.8
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.43
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/reactivity/src/computed.ts",
        "metrics": {
          "complexity": 12,
          "loc": 116,
          "functionCount": 7,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 5,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 77,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/reactivity/src/constants.ts",
        "metrics": {
          "complexity": 1,
          "loc": 19,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 10,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/reactivity/src/dep.ts",
        "metrics": {
          "complexity": 61,
          "loc": 267,
          "functionCount": 11,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 7,
          "instability": 0.3,
          "cohesionScore": 0.75,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.05
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/reactivity/src/effect.ts",
        "metrics": {
          "complexity": 69,
          "loc": 383,
          "functionCount": 25,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 6,
          "instability": 0.45,
          "cohesionScore": 0.75,
          "percentileUsageRank": 82,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.45
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.28
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/reactivity/src/effectScope.ts",
        "metrics": {
          "complexity": 31,
          "loc": 125,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.75,
          "percentileUsageRank": 65,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          }
        ],
        "healthScore": 45
      },
      {
        "file": "packages/reactivity/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 97,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/reactivity/src/reactive.ts",
        "metrics": {
          "complexity": 31,
          "loc": 201,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 6,
          "instability": 0.45,
          "cohesionScore": 0.75,
          "percentileUsageRank": 82,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1
          }
        ],
        "healthScore": 39
      },
      {
        "file": "packages/reactivity/src/ref.ts",
        "metrics": {
          "complexity": 30,
          "loc": 300,
          "functionCount": 36,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 5,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 77,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.5
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 33
      },
      {
        "file": "packages/reactivity/src/warning.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 8,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/reactivity/src/watch.ts",
        "metrics": {
          "complexity": 69,
          "loc": 299,
          "functionCount": 22,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.75,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.45
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/types/globalComponents.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/types/scriptSetupHelpers.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 16,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/apiAsyncComponent.ts",
        "metrics": {
          "complexity": 43,
          "loc": 229,
          "functionCount": 29,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 8,
          "instability": 0.53,
          "cohesionScore": 0.72,
          "percentileUsageRank": 87,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.15
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 18
      },
      {
        "file": "packages/runtime-core/src/apiComputed.ts",
        "metrics": {
          "complexity": 4,
          "loc": 15,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.75,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/apiCreateApp.ts",
        "metrics": {
          "complexity": 47,
          "loc": 360,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 16,
          "incomingDependencies": 11,
          "instability": 0.59,
          "cohesionScore": 0.74,
          "percentileUsageRank": 93,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.35
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/apiDefineComponent.ts",
        "metrics": {
          "complexity": 2,
          "loc": 278,
          "functionCount": 5,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 5,
          "instability": 0.64,
          "cohesionScore": 0.75,
          "percentileUsageRank": 77,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.39
          }
        ],
        "healthScore": 89
      },
      {
        "file": "packages/runtime-core/src/apiInject.ts",
        "metrics": {
          "complexity": 23,
          "loc": 66,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 5,
          "instability": 0.44,
          "cohesionScore": 0.75,
          "percentileUsageRank": 77,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/runtime-core/src/apiLifecycle.ts",
        "metrics": {
          "complexity": 9,
          "loc": 100,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 4,
          "instability": 0.6,
          "cohesionScore": 0.72,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/apiSetupHelpers.ts",
        "metrics": {
          "complexity": 31,
          "loc": 296,
          "functionCount": 30,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 5,
          "instability": 0.55,
          "cohesionScore": 0.75,
          "percentileUsageRank": 77,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.48
          }
        ],
        "healthScore": 33
      },
      {
        "file": "packages/runtime-core/src/apiWatch.ts",
        "metrics": {
          "complexity": 35,
          "loc": 235,
          "functionCount": 18,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 5,
          "instability": 0.58,
          "cohesionScore": 0.73,
          "percentileUsageRank": 77,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.18
          }
        ],
        "healthScore": 32
      },
      {
        "file": "packages/runtime-core/src/component.ts",
        "metrics": {
          "complexity": 119,
          "loc": 823,
          "functionCount": 44,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 25,
          "incomingDependencies": 52,
          "instability": 0.32,
          "cohesionScore": 0.71,
          "percentileUsageRank": 100,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.95
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.74
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/componentEmits.ts",
        "metrics": {
          "complexity": 53,
          "loc": 275,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 10,
          "instability": 0.5,
          "cohesionScore": 0.7,
          "percentileUsageRank": 91,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.65
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.38
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/componentOptions.ts",
        "metrics": {
          "complexity": 127,
          "loc": 1100,
          "functionCount": 36,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 19,
          "incomingDependencies": 12,
          "instability": 0.61,
          "cohesionScore": 0.73,
          "percentileUsageRank": 94,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.35
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/componentProps.ts",
        "metrics": {
          "complexity": 157,
          "loc": 651,
          "functionCount": 19,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 9,
          "instability": 0.47,
          "cohesionScore": 0.69,
          "percentileUsageRank": 89,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 7.85
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.17
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/componentPublicInstance.ts",
        "metrics": {
          "complexity": 88,
          "loc": 602,
          "functionCount": 36,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 16,
          "instability": 0.41,
          "cohesionScore": 0.74,
          "percentileUsageRank": 96,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.4
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.01
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/componentRenderContext.ts",
        "metrics": {
          "complexity": 15,
          "loc": 66,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 11,
          "instability": 0.21,
          "cohesionScore": 0.75,
          "percentileUsageRank": 93,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/runtime-core/src/componentRenderUtils.ts",
        "metrics": {
          "complexity": 106,
          "loc": 403,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 6,
          "instability": 0.63,
          "cohesionScore": 0.72,
          "percentileUsageRank": 82,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.3
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.34
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/componentSlots.ts",
        "metrics": {
          "complexity": 40,
          "loc": 208,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 14,
          "instability": 0.36,
          "cohesionScore": 0.71,
          "percentileUsageRank": 95,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.04
          }
        ],
        "healthScore": 25
      },
      {
        "file": "packages/runtime-core/src/customFormatter.ts",
        "metrics": {
          "complexity": 40,
          "loc": 195,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2
          }
        ],
        "healthScore": 32
      },
      {
        "file": "packages/runtime-core/src/devtools.ts",
        "metrics": {
          "complexity": 13,
          "loc": 138,
          "functionCount": 13,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 8,
          "instability": 0.27,
          "cohesionScore": 0.75,
          "percentileUsageRank": 87,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/runtime-core/src/directives.ts",
        "metrics": {
          "complexity": 15,
          "loc": 165,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 13,
          "instability": 0.35,
          "cohesionScore": 0.73,
          "percentileUsageRank": 95,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/runtime-core/src/enums.ts",
        "metrics": {
          "complexity": 1,
          "loc": 16,
          "functionCount": 0,
          "duplicationRatio": 0.67
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 77,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/errorHandling.ts",
        "metrics": {
          "complexity": 26,
          "loc": 164,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 18,
          "instability": 0.18,
          "cohesionScore": 0.75,
          "percentileUsageRank": 97,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/runtime-core/src/featureFlags.ts",
        "metrics": {
          "complexity": 11,
          "loc": 28,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/runtime-core/src/h.ts",
        "metrics": {
          "complexity": 8,
          "loc": 152,
          "functionCount": 24,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.71,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/hmr.ts",
        "metrics": {
          "complexity": 21,
          "loc": 149,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 6,
          "instability": 0.25,
          "cohesionScore": 0.75,
          "percentileUsageRank": 82,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/runtime-core/src/hydration.ts",
        "metrics": {
          "complexity": 215,
          "loc": 863,
          "functionCount": 26,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 4,
          "instability": 0.73,
          "cohesionScore": 0.72,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 10.75
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.88
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/hydrationStrategies.ts",
        "metrics": {
          "complexity": 29,
          "loc": 116,
          "functionCount": 21,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.75,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.45
          }
        ],
        "healthScore": 46
      },
      {
        "file": "packages/runtime-core/src/index.ts",
        "metrics": {
          "complexity": 13,
          "loc": 395,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 45,
          "incomingDependencies": 2,
          "instability": 0.96,
          "cohesionScore": 0.69,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.32
          }
        ],
        "healthScore": 60
      },
      {
        "file": "packages/runtime-core/src/internalObject.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 65,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/profiling.ts",
        "metrics": {
          "complexity": 14,
          "loc": 50,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/runtime-core/src/renderer.ts",
        "metrics": {
          "complexity": 420,
          "loc": 2155,
          "functionCount": 68,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 21,
          "incomingDependencies": 12,
          "instability": 0.64,
          "cohesionScore": 0.71,
          "percentileUsageRank": 94,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 21
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 2.15
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/rendererTemplateRef.ts",
        "metrics": {
          "complexity": 45,
          "loc": 145,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 2,
          "instability": 0.82,
          "cohesionScore": 0.72,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.25
          }
        ],
        "healthScore": 22
      },
      {
        "file": "packages/runtime-core/src/scheduler.ts",
        "metrics": {
          "complexity": 58,
          "loc": 211,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 11,
          "instability": 0.15,
          "cohesionScore": 0.75,
          "percentileUsageRank": 93,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.9
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 2
      },
      {
        "file": "packages/runtime-core/src/vnode.ts",
        "metrics": {
          "complexity": 126,
          "loc": 642,
          "functionCount": 25,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 18,
          "incomingDependencies": 33,
          "instability": 0.35,
          "cohesionScore": 0.69,
          "percentileUsageRank": 99,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.3
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.14
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/warning.ts",
        "metrics": {
          "complexity": 34,
          "loc": 148,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 35,
          "instability": 0.08,
          "cohesionScore": 0.75,
          "percentileUsageRank": 100,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          }
        ],
        "healthScore": 41
      },
      {
        "file": "packages/runtime-dom/src/apiCustomElement.ts",
        "metrics": {
          "complexity": 118,
          "loc": 569,
          "functionCount": 41,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.75,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.9
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-dom/src/index.ts",
        "metrics": {
          "complexity": 33,
          "loc": 245,
          "functionCount": 18,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 1,
          "instability": 0.92,
          "cohesionScore": 0.65,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.23
          }
        ],
        "healthScore": 33
      },
      {
        "file": "packages/runtime-dom/src/jsx.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1097,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 56
      },
      {
        "file": "packages/runtime-dom/src/nodeOps.ts",
        "metrics": {
          "complexity": 30,
          "loc": 96,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 46
      },
      {
        "file": "packages/runtime-dom/src/patchProp.ts",
        "metrics": {
          "complexity": 43,
          "loc": 113,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.63,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.15
          }
        ],
        "healthScore": 26
      },
      {
        "file": "packages/server-renderer/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.65,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/server-renderer/src/internal.ts",
        "metrics": {
          "complexity": 1,
          "loc": 22,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 2,
          "instability": 0.83,
          "cohesionScore": 0.61,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/server-renderer/src/render.ts",
        "metrics": {
          "complexity": 79,
          "loc": 362,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 9,
          "instability": 0.31,
          "cohesionScore": 0.51,
          "percentileUsageRank": 89,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.95
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.21
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/server-renderer/src/renderToStream.ts",
        "metrics": {
          "complexity": 19,
          "loc": 183,
          "functionCount": 23,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 61
      },
      {
        "file": "packages/server-renderer/src/renderToString.ts",
        "metrics": {
          "complexity": 14,
          "loc": 88,
          "functionCount": 8,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/runtime-test/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 24,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-test/src/nodeOps.ts",
        "metrics": {
          "complexity": 11,
          "loc": 235,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.18
          }
        ],
        "healthScore": 83
      },
      {
        "file": "packages/runtime-test/src/patchProp.ts",
        "metrics": {
          "complexity": 4,
          "loc": 21,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-test/src/serialize.ts",
        "metrics": {
          "complexity": 11,
          "loc": 65,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/runtime-test/src/triggerEvent.ts",
        "metrics": {
          "complexity": 5,
          "loc": 21,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/shared/src/codeframe.ts",
        "metrics": {
          "complexity": 16,
          "loc": 50,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/shared/src/domAttrConfig.ts",
        "metrics": {
          "complexity": 7,
          "loc": 111,
          "functionCount": 3,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/shared/src/domTagConfig.ts",
        "metrics": {
          "complexity": 1,
          "loc": 38,
          "functionCount": 0,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/shared/src/escapeHtml.ts",
        "metrics": {
          "complexity": 13,
          "loc": 53,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/shared/src/general.ts",
        "metrics": {
          "complexity": 28,
          "loc": 159,
          "functionCount": 35,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.75,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 47
      },
      {
        "file": "packages/shared/src/globalsAllowList.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/shared/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 14,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/shared/src/looseEqual.ts",
        "metrics": {
          "complexity": 26,
          "loc": 54,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/shared/src/makeMap.ts",
        "metrics": {
          "complexity": 2,
          "loc": 5,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 77,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/shared/src/normalizeProp.ts",
        "metrics": {
          "complexity": 27,
          "loc": 87,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/shared/src/patchFlags.ts",
        "metrics": {
          "complexity": 1,
          "loc": 32,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/shared/src/shapeFlags.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0.2
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 87
      },
      {
        "file": "packages/shared/src/slotFlags.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/shared/src/toDisplayString.ts",
        "metrics": {
          "complexity": 17,
          "loc": 54,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/shared/src/typeUtils.ts",
        "metrics": {
          "complexity": 1,
          "loc": 36,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/vue/compiler-sfc/index.browser.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/vue/compiler-sfc/index.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/vue/compiler-sfc/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/vue/compiler-sfc/register-ts.js",
        "metrics": {
          "complexity": 2,
          "loc": 3,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/vue/jsx-runtime/index.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 15,
          "functionCount": 0,
          "duplicationRatio": 0.58
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.17
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/vue/jsx-runtime/index.js",
        "metrics": {
          "complexity": 2,
          "loc": 13,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/vue/server-renderer/index.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/vue/server-renderer/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/vue/src/dev.ts",
        "metrics": {
          "complexity": 3,
          "loc": 12,
          "functionCount": 1,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/vue/src/index.ts",
        "metrics": {
          "complexity": 18,
          "loc": 82,
          "functionCount": 4,
          "duplicationRatio": 0.49
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 10,
          "instability": 0.09,
          "cohesionScore": 0.75,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.64
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/vue/src/runtime.ts",
        "metrics": {
          "complexity": 6,
          "loc": 20,
          "functionCount": 1,
          "duplicationRatio": 0.38
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 60
      },
      {
        "file": "packages/vue-compat/src/createCompatVue.ts",
        "metrics": {
          "complexity": 3,
          "loc": 33,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.75,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/vue-compat/src/dev.ts",
        "metrics": {
          "complexity": 3,
          "loc": 12,
          "functionCount": 1,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/vue-compat/src/esm-index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/vue-compat/src/esm-runtime.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/vue-compat/src/index.ts",
        "metrics": {
          "complexity": 19,
          "loc": 88,
          "functionCount": 3,
          "duplicationRatio": 0.45
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.47,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 6
      },
      {
        "file": "packages/vue-compat/src/runtime.ts",
        "metrics": {
          "complexity": 5,
          "loc": 18,
          "functionCount": 1,
          "duplicationRatio": 0.43
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.43
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler-core/src/compat/compatConfig.ts",
        "metrics": {
          "complexity": 11,
          "loc": 130,
          "functionCount": 5,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 6,
          "instability": 0.4,
          "cohesionScore": 0.6,
          "percentileUsageRank": 82,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/compiler-core/src/compat/transformFilter.ts",
        "metrics": {
          "complexity": 55,
          "loc": 176,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.64,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.75
          }
        ],
        "healthScore": 10
      },
      {
        "file": "packages/compiler-core/src/transforms/cacheStatic.ts",
        "metrics": {
          "complexity": 126,
          "loc": 417,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 4,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.3
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.39
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-core/src/transforms/noopDirectiveTransform.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-core/src/transforms/transformElement.ts",
        "metrics": {
          "complexity": 214,
          "loc": 773,
          "functionCount": 19,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 5,
          "instability": 0.67,
          "cohesionScore": 0.66,
          "percentileUsageRank": 77,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 10.7
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.58
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-core/src/transforms/transformExpression.ts",
        "metrics": {
          "complexity": 96,
          "loc": 328,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 8,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 87,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.8
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.09
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-core/src/transforms/transformSlotOutlet.ts",
        "metrics": {
          "complexity": 22,
          "loc": 111,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 2,
          "instability": 0.78,
          "cohesionScore": 0.66,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler-core/src/transforms/transformText.ts",
        "metrics": {
          "complexity": 27,
          "loc": 93,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.64,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/compiler-core/src/transforms/vBind.ts",
        "metrics": {
          "complexity": 19,
          "loc": 101,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 3,
          "instability": 0.63,
          "cohesionScore": 0.64,
          "percentileUsageRank": 65,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 61
      },
      {
        "file": "packages/compiler-core/src/transforms/vFor.ts",
        "metrics": {
          "complexity": 72,
          "loc": 353,
          "functionCount": 10,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 3,
          "instability": 0.73,
          "cohesionScore": 0.65,
          "percentileUsageRank": 65,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.6
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.18
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-core/src/transforms/vIf.ts",
        "metrics": {
          "complexity": 65,
          "loc": 306,
          "functionCount": 11,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 2,
          "instability": 0.8,
          "cohesionScore": 0.62,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.02
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-core/src/transforms/vMemo.ts",
        "metrics": {
          "complexity": 8,
          "loc": 39,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-core/src/transforms/vModel.ts",
        "metrics": {
          "complexity": 33,
          "loc": 134,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 2,
          "instability": 0.75,
          "cohesionScore": 0.6,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          }
        ],
        "healthScore": 42
      },
      {
        "file": "packages/compiler-core/src/transforms/vOn.ts",
        "metrics": {
          "complexity": 45,
          "loc": 137,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 2,
          "instability": 0.78,
          "cohesionScore": 0.63,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.25
          }
        ],
        "healthScore": 22
      },
      {
        "file": "packages/compiler-core/src/transforms/vOnce.ts",
        "metrics": {
          "complexity": 7,
          "loc": 26,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-core/src/transforms/vSlot.ts",
        "metrics": {
          "complexity": 78,
          "loc": 359,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 3,
          "instability": 0.67,
          "cohesionScore": 0.63,
          "percentileUsageRank": 65,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-dom/src/transforms/Transition.ts",
        "metrics": {
          "complexity": 15,
          "loc": 63,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/compiler-dom/src/transforms/ignoreSideEffectTags.ts",
        "metrics": {
          "complexity": 6,
          "loc": 18,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-dom/src/transforms/stringifyStatic.ts",
        "metrics": {
          "complexity": 85,
          "loc": 319,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.06
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-dom/src/transforms/transformStyle.ts",
        "metrics": {
          "complexity": 5,
          "loc": 37,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-dom/src/transforms/vHtml.ts",
        "metrics": {
          "complexity": 4,
          "loc": 28,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-dom/src/transforms/vModel.ts",
        "metrics": {
          "complexity": 26,
          "loc": 109,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/compiler-dom/src/transforms/vOn.ts",
        "metrics": {
          "complexity": 22,
          "loc": 132,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler-dom/src/transforms/vShow.ts",
        "metrics": {
          "complexity": 2,
          "loc": 15,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-dom/src/transforms/vText.ts",
        "metrics": {
          "complexity": 5,
          "loc": 39,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-dom/src/transforms/validateHtmlNesting.ts",
        "metrics": {
          "complexity": 7,
          "loc": 26,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-sfc/src/script/analyzeScriptBindings.ts",
        "metrics": {
          "complexity": 34,
          "loc": 100,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.8,
          "percentileUsageRank": 65,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          }
        ],
        "healthScore": 41
      },
      {
        "file": "packages/compiler-sfc/src/script/context.ts",
        "metrics": {
          "complexity": 35,
          "loc": 169,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 13,
          "instability": 0.35,
          "cohesionScore": 0.63,
          "percentileUsageRank": 95,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          }
        ],
        "healthScore": 40
      },
      {
        "file": "packages/compiler-sfc/src/script/defineEmits.ts",
        "metrics": {
          "complexity": 22,
          "loc": 115,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 65,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler-sfc/src/script/defineExpose.ts",
        "metrics": {
          "complexity": 3,
          "loc": 17,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-sfc/src/script/defineModel.ts",
        "metrics": {
          "complexity": 48,
          "loc": 149,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 65,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.4
          }
        ],
        "healthScore": 15
      },
      {
        "file": "packages/compiler-sfc/src/script/defineOptions.ts",
        "metrics": {
          "complexity": 19,
          "loc": 78,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.8,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 61
      },
      {
        "file": "packages/compiler-sfc/src/script/defineProps.ts",
        "metrics": {
          "complexity": 80,
          "loc": 333,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 5,
          "instability": 0.55,
          "cohesionScore": 0.8,
          "percentileUsageRank": 77,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-sfc/src/script/definePropsDestructure.ts",
        "metrics": {
          "complexity": 65,
          "loc": 257,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.8,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.25
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.28
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-sfc/src/script/defineSlots.ts",
        "metrics": {
          "complexity": 5,
          "loc": 28,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-sfc/src/script/importUsageCheck.ts",
        "metrics": {
          "complexity": 22,
          "loc": 77,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler-sfc/src/script/normalScript.ts",
        "metrics": {
          "complexity": 11,
          "loc": 51,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.68,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/compiler-sfc/src/script/resolveType.ts",
        "metrics": {
          "complexity": 454,
          "loc": 1791,
          "functionCount": 74,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 5,
          "instability": 0.5,
          "cohesionScore": 0.68,
          "percentileUsageRank": 77,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 22.7
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.79
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-sfc/src/script/topLevelAwait.ts",
        "metrics": {
          "complexity": 7,
          "loc": 32,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-sfc/src/script/utils.ts",
        "metrics": {
          "complexity": 22,
          "loc": 97,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 10,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler-sfc/src/style/cssVars.ts",
        "metrics": {
          "complexity": 28,
          "loc": 188,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 5,
          "instability": 0.17,
          "cohesionScore": 0.6,
          "percentileUsageRank": 77,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 47
      },
      {
        "file": "packages/compiler-sfc/src/style/pluginScoped.ts",
        "metrics": {
          "complexity": 57,
          "loc": 250,
          "functionCount": 21,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.85
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-sfc/src/style/pluginTrim.ts",
        "metrics": {
          "complexity": 6,
          "loc": 16,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-sfc/src/style/preprocessors.ts",
        "metrics": {
          "complexity": 13,
          "loc": 140,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/compiler-sfc/src/template/templateUtils.ts",
        "metrics": {
          "complexity": 6,
          "loc": 25,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-sfc/src/template/transformAssetUrl.ts",
        "metrics": {
          "complexity": 32,
          "loc": 168,
          "functionCount": 9,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.8,
          "percentileUsageRank": 65,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 44
      },
      {
        "file": "packages/compiler-sfc/src/template/transformSrcset.ts",
        "metrics": {
          "complexity": 28,
          "loc": 153,
          "functionCount": 10,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.8,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 47
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrInjectCssVars.ts",
        "metrics": {
          "complexity": 16,
          "loc": 59,
          "functionCount": 2,
          "duplicationRatio": 0.1
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrInjectFallthroughAttrs.ts",
        "metrics": {
          "complexity": 28,
          "loc": 77,
          "functionCount": 5,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 47
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrTransformComponent.ts",
        "metrics": {
          "complexity": 35,
          "loc": 308,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 2,
          "instability": 0.78,
          "cohesionScore": 0.74,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.03
          }
        ],
        "healthScore": 21
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrTransformElement.ts",
        "metrics": {
          "complexity": 83,
          "loc": 407,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 4,
          "instability": 0.43,
          "cohesionScore": 0.6,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.15
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.36
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrTransformSlotOutlet.ts",
        "metrics": {
          "complexity": 17,
          "loc": 76,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrTransformSuspense.ts",
        "metrics": {
          "complexity": 4,
          "loc": 75,
          "functionCount": 4,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrTransformTeleport.ts",
        "metrics": {
          "complexity": 8,
          "loc": 66,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrTransformTransition.ts",
        "metrics": {
          "complexity": 2,
          "loc": 34,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrTransformTransitionGroup.ts",
        "metrics": {
          "complexity": 11,
          "loc": 96,
          "functionCount": 4,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrVFor.ts",
        "metrics": {
          "complexity": 5,
          "loc": 46,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrVIf.ts",
        "metrics": {
          "complexity": 9,
          "loc": 67,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrVModel.ts",
        "metrics": {
          "complexity": 24,
          "loc": 185,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrVShow.ts",
        "metrics": {
          "complexity": 2,
          "loc": 34,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/compat/attrsFallthrough.ts",
        "metrics": {
          "complexity": 9,
          "loc": 27,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.7,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/compat/compatConfig.ts",
        "metrics": {
          "complexity": 51,
          "loc": 538,
          "functionCount": 21,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 21,
          "instability": 0.09,
          "cohesionScore": 0.6,
          "percentileUsageRank": 98,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.55
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.79
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/compat/component.ts",
        "metrics": {
          "complexity": 10,
          "loc": 44,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.75,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/compat/componentAsync.ts",
        "metrics": {
          "complexity": 7,
          "loc": 51,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/compat/componentFunctional.ts",
        "metrics": {
          "complexity": 7,
          "loc": 58,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.68,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/compat/componentVModel.ts",
        "metrics": {
          "complexity": 16,
          "loc": 71,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 3,
          "instability": 0.63,
          "cohesionScore": 0.64,
          "percentileUsageRank": 65,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/runtime-core/src/compat/customDirective.ts",
        "metrics": {
          "complexity": 6,
          "loc": 57,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.67,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/compat/data.ts",
        "metrics": {
          "complexity": 6,
          "loc": 15,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/compat/global.ts",
        "metrics": {
          "complexity": 84,
          "loc": 511,
          "functionCount": 40,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 15,
          "incomingDependencies": 3,
          "instability": 0.83,
          "cohesionScore": 0.65,
          "percentileUsageRank": 65,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.2
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.7
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/compat/globalConfig.ts",
        "metrics": {
          "complexity": 5,
          "loc": 59,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.7,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/compat/instance.ts",
        "metrics": {
          "complexity": 12,
          "loc": 174,
          "functionCount": 41,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 13,
          "incomingDependencies": 2,
          "instability": 0.87,
          "cohesionScore": 0.71,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/runtime-core/src/compat/instanceChildren.ts",
        "metrics": {
          "complexity": 5,
          "loc": 26,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.65,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/compat/instanceEventEmitter.ts",
        "metrics": {
          "complexity": 11,
          "loc": 99,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.65,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/runtime-core/src/compat/instanceListeners.ts",
        "metrics": {
          "complexity": 4,
          "loc": 19,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.7,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/compat/props.ts",
        "metrics": {
          "complexity": 8,
          "loc": 39,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.65,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/compat/renderFn.ts",
        "metrics": {
          "complexity": 63,
          "loc": 301,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 4,
          "instability": 0.64,
          "cohesionScore": 0.66,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.15
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/compat/renderHelpers.ts",
        "metrics": {
          "complexity": 36,
          "loc": 165,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.8
          }
        ],
        "healthScore": 39
      },
      {
        "file": "packages/runtime-core/src/components/BaseTransition.ts",
        "metrics": {
          "complexity": 82,
          "loc": 474,
          "functionCount": 27,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 6,
          "instability": 0.6,
          "cohesionScore": 0.64,
          "percentileUsageRank": 82,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.1
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.58
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/components/KeepAlive.ts",
        "metrics": {
          "complexity": 68,
          "loc": 373,
          "functionCount": 31,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 12,
          "incomingDependencies": 7,
          "instability": 0.63,
          "cohesionScore": 0.63,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.4
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.24
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/components/Suspense.ts",
        "metrics": {
          "complexity": 105,
          "loc": 751,
          "functionCount": 26,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 9,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 89,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.5
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/components/Teleport.ts",
        "metrics": {
          "complexity": 89,
          "loc": 448,
          "functionCount": 16,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 7,
          "instability": 0.46,
          "cohesionScore": 0.63,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.45
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.49
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-core/src/helpers/createSlots.ts",
        "metrics": {
          "complexity": 7,
          "loc": 34,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/helpers/renderList.ts",
        "metrics": {
          "complexity": 21,
          "loc": 95,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/runtime-core/src/helpers/renderSlot.ts",
        "metrics": {
          "complexity": 32,
          "loc": 96,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 2,
          "instability": 0.75,
          "cohesionScore": 0.6,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 44
      },
      {
        "file": "packages/runtime-core/src/helpers/resolveAssets.ts",
        "metrics": {
          "complexity": 24,
          "loc": 99,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 5,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 77,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/runtime-core/src/helpers/toHandlers.ts",
        "metrics": {
          "complexity": 6,
          "loc": 20,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/helpers/useId.ts",
        "metrics": {
          "complexity": 4,
          "loc": 20,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 4,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/helpers/useModel.ts",
        "metrics": {
          "complexity": 28,
          "loc": 111,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.6,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 47
      },
      {
        "file": "packages/runtime-core/src/helpers/useSsrContext.ts",
        "metrics": {
          "complexity": 5,
          "loc": 18,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/helpers/useTemplateRef.ts",
        "metrics": {
          "complexity": 9,
          "loc": 39,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-core/src/helpers/withMemo.ts",
        "metrics": {
          "complexity": 8,
          "loc": 32,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-dom/src/components/Transition.ts",
        "metrics": {
          "complexity": 70,
          "loc": 411,
          "functionCount": 41,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 65,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.5
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.37
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-dom/src/components/TransitionGroup.ts",
        "metrics": {
          "complexity": 31,
          "loc": 197,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          }
        ],
        "healthScore": 45
      },
      {
        "file": "packages/runtime-dom/src/directives/vModel.ts",
        "metrics": {
          "complexity": 78,
          "loc": 337,
          "functionCount": 39,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.12
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/runtime-dom/src/directives/vOn.ts",
        "metrics": {
          "complexity": 28,
          "loc": 144,
          "functionCount": 20,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 47
      },
      {
        "file": "packages/runtime-dom/src/directives/vShow.ts",
        "metrics": {
          "complexity": 12,
          "loc": 56,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/runtime-dom/src/helpers/useCssModule.ts",
        "metrics": {
          "complexity": 9,
          "loc": 28,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-dom/src/helpers/useCssVars.ts",
        "metrics": {
          "complexity": 21,
          "loc": 86,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/server-renderer/src/helpers/ssrCompile.ts",
        "metrics": {
          "complexity": 9,
          "loc": 80,
          "functionCount": 4,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.47,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/server-renderer/src/helpers/ssrGetDirectiveProps.ts",
        "metrics": {
          "complexity": 4,
          "loc": 25,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.2,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/server-renderer/src/helpers/ssrInterpolate.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/server-renderer/src/helpers/ssrRenderAttrs.ts",
        "metrics": {
          "complexity": 21,
          "loc": 88,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 65,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/server-renderer/src/helpers/ssrRenderComponent.ts",
        "metrics": {
          "complexity": 1,
          "loc": 21,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.53,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/server-renderer/src/helpers/ssrRenderList.ts",
        "metrics": {
          "complexity": 12,
          "loc": 33,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/server-renderer/src/helpers/ssrRenderSlot.ts",
        "metrics": {
          "complexity": 19,
          "loc": 114,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.4,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 61
      },
      {
        "file": "packages/server-renderer/src/helpers/ssrRenderSuspense.ts",
        "metrics": {
          "complexity": 2,
          "loc": 11,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/server-renderer/src/helpers/ssrRenderTeleport.ts",
        "metrics": {
          "complexity": 4,
          "loc": 36,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.4,
          "percentileUsageRank": 46,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/server-renderer/src/helpers/ssrVModelHelpers.ts",
        "metrics": {
          "complexity": 13,
          "loc": 38,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/runtime-dom/src/modules/attrs.ts",
        "metrics": {
          "complexity": 23,
          "loc": 86,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/runtime-dom/src/modules/class.ts",
        "metrics": {
          "complexity": 5,
          "loc": 20,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/runtime-dom/src/modules/events.ts",
        "metrics": {
          "complexity": 19,
          "loc": 124,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 46,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 61
      },
      {
        "file": "packages/runtime-dom/src/modules/props.ts",
        "metrics": {
          "complexity": 33,
          "loc": 87,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          }
        ],
        "healthScore": 42
      },
      {
        "file": "packages/runtime-dom/src/modules/style.ts",
        "metrics": {
          "complexity": 29,
          "loc": 112,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.6,
          "percentileUsageRank": 10,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.45
          }
        ],
        "healthScore": 46
      }
    ],
    "codeContext": [
      {
        "file": "packages/vue/jsx.d.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-core/src/ast.ts",
        "criticalFunctions": [
          {
            "name": "createVNodeCall",
            "complexity": 4,
            "lineCount": 39,
            "parameterCount": 11,
            "snippet": "export function createVNodeCall(\n  context: TransformContext | null,\n  tag: VNodeCall['tag'],\n  props?: VNodeCall['props'],\n  children?: VNodeCall['children'],\n  patchFlag?: VNodeCall['patchFlag'],\n  dynamicProps?: VNodeCall['dynamicProps'],\n  directives?: VNodeCall['directives'],\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "11 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-core/src/babelUtils.ts",
        "criticalFunctions": [
          {
            "name": "isReferenced",
            "complexity": 45,
            "lineCount": 169,
            "parameterCount": 3,
            "snippet": "function isReferenced(node: Node, parent: Node, grandparent?: Node): boolean {\n  switch (parent.type) {\n    case 'MemberExpression':\n    case 'OptionalMemberExpression':\n      if (parent.property === node) {\n        return !!parent.computed\n      }\n      return parent.object === node\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 45 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 169 lines, consider splitting"
              }
            ]
          },
          {
            "name": "walkIdentifiers",
            "complexity": 27,
            "lineCount": 87,
            "parameterCount": 5,
            "snippet": "export function walkIdentifiers(\n  root: Node,\n  onIdentifier: (\n    node: Identifier,\n    parent: Node | null,\n    parentStack: Node[],\n    isReference: boolean,\n    isLocal: boolean,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "enter",
            "complexity": 19,
            "lineCount": 51,
            "parameterCount": 2,
            "snippet": "enter(node: Node & { scopeIds?: Set<string> }, parent: Node | null) {\n      parent && parentStack.push(parent)\n      if (\n        parent &&\n        parent.type.startsWith('TS') &&\n        !TS_NODE_TYPES.includes(parent.type)\n      ) {\n        return this.skip()\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-core/src/codegen.ts",
        "criticalFunctions": [
          {
            "name": "generate",
            "complexity": 38,
            "lineCount": 124,
            "parameterCount": 2,
            "snippet": "export function generate(\n  ast: RootNode,\n  options: CodegenOptions & {\n    onContextCreated?: (context: CodegenContext) => void\n  } = {},\n): CodegenResult {\n  const context = createCodegenContext(ast, options)\n  if (options.onContextCreated) options.onContextCreated(context)\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 38 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 124 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "genNode",
            "complexity": 33,
            "lineCount": 96,
            "parameterCount": 2,
            "snippet": "function genNode(node: CodegenNode | symbol | string, context: CodegenContext) {\n  if (isString(node)) {\n    context.push(node, NewlineType.Unknown)\n    return\n  }\n  if (isSymbol(node)) {\n    context.push(context.helper(node))\n    return\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 33 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 96 lines, consider splitting"
              }
            ]
          },
          {
            "name": "createCodegenContext",
            "complexity": 26,
            "lineCount": 141,
            "parameterCount": 2,
            "snippet": "function createCodegenContext(\n  ast: RootNode,\n  {\n    mode = 'function',\n    prefixIdentifiers = mode === 'module',\n    sourceMap = false,\n    filename = `template.vue.html`,\n    scopeId = null,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 141 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "push",
            "complexity": 21,
            "lineCount": 55,
            "parameterCount": 3,
            "snippet": "push(code, newlineIndex = NewlineType.None, node) {\n      context.code += code\n      if (!__BROWSER__ && context.map) {\n        if (node) {\n          let name\n          if (node.type === NodeTypes.SIMPLE_EXPRESSION && !node.isStatic) {\n            const content = node.content.replace(/^_ctx\\./, '')\n            if (content !== node.content && isSimpleIdentifier(content)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "genVNodeCall",
            "complexity": 12,
            "lineCount": 62,
            "parameterCount": 2,
            "snippet": "function genVNodeCall(node: VNodeCall, context: CodegenContext) {\n  const { push, helper, pure } = context\n  const {\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-core/src/compile.ts",
        "criticalFunctions": [
          {
            "name": "baseCompile",
            "complexity": 19,
            "lineCount": 56,
            "parameterCount": 2,
            "snippet": "export function baseCompile(\n  source: string | RootNode,\n  options: CompilerOptions = {},\n): CodegenResult {\n  const onError = options.onError || defaultOnError\n  const isModuleMode = options.mode === 'module'\n  /* v8 ignore start */\n  if (__BROWSER__) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-core/src/parser.ts",
        "criticalFunctions": [
          {
            "name": "onCloseTag",
            "complexity": 38,
            "lineCount": 138,
            "parameterCount": 3,
            "snippet": "function onCloseTag(el: ElementNode, end: number, isImplied = false) {\n  if (isImplied) {\n    setLocEnd(el.loc, backTrack(end, CharCodes.Lt))\n  } else {\n    setLocEnd(el.loc, lookAhead(end, CharCodes.Gt) + 1)\n  }\n  if (tokenizer.inSFCRoot) {\n    if (el.children.length) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 38 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 138 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "onattribend",
            "complexity": 28,
            "lineCount": 99,
            "parameterCount": 2,
            "snippet": "onattribend(quote, end) {\n    if (currentOpenTag && currentProp) {\n      setLocEnd(currentProp.loc, end)\n      if (quote !== QuoteType.NoValue) {\n        if (__BROWSER__ && currentAttrValue.includes('&')) {\n          currentAttrValue = currentOptions.decodeEntities!(\n            currentAttrValue,\n            true,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 99 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "onend",
            "complexity": 25,
            "lineCount": 49,
            "parameterCount": 0,
            "snippet": "onend() {\n    const end = currentInput.length\n    if ((__DEV__ || !__BROWSER__) && tokenizer.state !== State.Text) {\n      switch (tokenizer.state) {\n        case State.BeforeTagName:\n        case State.BeforeClosingTagName:\n          emitError(ErrorCodes.EOF_BEFORE_TAG_NAME, end)\n          break\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isComponent",
            "complexity": 20,
            "lineCount": 49,
            "parameterCount": 1,
            "snippet": "function isComponent({ tag, props }: ElementNode): boolean {\n  if (currentOptions.isCustomElement(tag)) {\n    return false\n  }\n  if (\n    tag === 'component' ||\n    isUpperCase(tag.charCodeAt(0)) ||\n    isCoreComponent(tag) ||\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "condenseWhitespace",
            "complexity": 19,
            "lineCount": 47,
            "parameterCount": 1,
            "snippet": "function condenseWhitespace(nodes: TemplateChildNode[]): TemplateChildNode[] {\n  const shouldCondense = currentOptions.whitespace !== 'preserve'\n  let removedWhitespace = false\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i]\n    if (node.type === NodeTypes.TEXT) {\n      if (!inPre) {\n        if (isAllWhitespace(node.content)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-core/src/runtimeHelpers.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-core/src/tokenizer.ts",
        "criticalFunctions": [
          {
            "name": "parse",
            "complexity": 38,
            "lineCount": 150,
            "parameterCount": 1,
            "snippet": "public parse(input: string): void {\n    this.buffer = input\n    while (this.index < this.buffer.length) {\n      const c = this.buffer.charCodeAt(this.index)\n      if (c === CharCodes.NewLine && this.state !== State.InEntity) {\n        this.newlines.push(this.index)\n      }\n      switch (this.state) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 38 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 150 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "handleTrailingData",
            "complexity": 17,
            "lineCount": 37,
            "parameterCount": 0,
            "snippet": "private handleTrailingData() {\n    const endIndex = this.buffer.length\n    if (this.sectionStart >= endIndex) {\n      return\n    }\n    if (this.state === State.InCommentLike) {\n      if (this.currentSequence === Sequences.CdataEnd) {\n        this.cbs.oncdata(this.sectionStart, endIndex)\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-core/src/transform.ts",
        "criticalFunctions": [
          {
            "name": "createTransformContext",
            "complexity": 28,
            "lineCount": 204,
            "parameterCount": 2,
            "snippet": "export function createTransformContext(\n  root: RootNode,\n  {\n    filename = '',\n    prefixIdentifiers = false,\n    hoistStatic = false,\n    hmr = false,\n    cacheHandlers = false,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 204 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "traverseNode",
            "complexity": 16,
            "lineCount": 62,
            "parameterCount": 2,
            "snippet": "export function traverseNode(\n  node: RootNode | TemplateChildNode,\n  context: TransformContext,\n): void {\n  context.currentNode = node\n  const { nodeTransforms } = context\n  const exitFns = []\n  for (let i = 0; i < nodeTransforms.length; i++) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-core/src/utils.ts",
        "criticalFunctions": [
          {
            "name": "isMemberExpressionBrowser",
            "complexity": 25,
            "lineCount": 70,
            "parameterCount": 1,
            "snippet": "(exp: ExpressionNode): boolean => {\n  const path = getExpSource(exp)\n    .trim()\n    .replace(whitespaceRE, s => s.trim())\n  let state = MemberExpLexState.inMemberExp\n  let stateStack: MemberExpLexState[] = []\n  let currentOpenBracketCount = 0\n  let currentOpenParensCount = 0\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 70 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "hasScopeRef",
            "complexity": 24,
            "lineCount": 59,
            "parameterCount": 2,
            "snippet": "export function hasScopeRef(\n  node:\n    | TemplateChildNode\n    | IfBranchNode\n    | ExpressionNode\n    | CacheExpression\n    | undefined,\n  ids: TransformContext['identifiers'],\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "injectProp",
            "complexity": 20,
            "lineCount": 85,
            "parameterCount": 3,
            "snippet": "export function injectProp(\n  node: VNodeCall | RenderSlotCall,\n  prop: Property,\n  context: TransformContext,\n): void {\n  let propsWithInjection: ObjectExpression | CallExpression | undefined\n  /**\n   * 1. mergeProps(...)\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 85 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-dom/src/parserOptions.ts",
        "criticalFunctions": [
          {
            "name": "getNamespace",
            "complexity": 22,
            "lineCount": 46,
            "parameterCount": 3,
            "snippet": "getNamespace(tag, parent, rootNamespace) {\n    let ns = parent ? parent.ns : rootNamespace\n    if (parent && ns === Namespaces.MATH_ML) {\n      if (parent.tag === 'annotation-xml') {\n        if (tag === 'svg') {\n          return Namespaces.SVG\n        }\n        if (\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-dom/src/runtimeHelpers.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-sfc/src/compileScript.ts",
        "criticalFunctions": [
          {
            "name": "compileScript",
            "complexity": 211,
            "lineCount": 892,
            "parameterCount": 2,
            "snippet": "export function compileScript(\n  sfc: SFCDescriptor,\n  options: SFCScriptCompileOptions,\n): SFCScriptBlock {\n  if (!options.id) {\n    warnOnce(\n      `compileScript now requires passing the \\`id\\` option.\\n` +\n        `Upgrade your vite or vue-loader version for compatibility with ` +\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 211 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 892 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "walkDeclaration",
            "complexity": 39,
            "lineCount": 104,
            "parameterCount": 6,
            "snippet": "function walkDeclaration(\n  from: 'script' | 'scriptSetup',\n  node: Declaration,\n  bindings: Record<string, BindingTypes>,\n  userImportAliases: Record<string, string>,\n  hoistStatic: boolean,\n  isPropsDestructureEnabled = false,\n): boolean {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 39 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 104 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isStaticNode",
            "complexity": 16,
            "lineCount": 36,
            "parameterCount": 1,
            "snippet": "function isStaticNode(node: Node): boolean {\n  node = unwrapTSNode(node)\n  switch (node.type) {\n    case 'UnaryExpression': // void 0, !true\n      return isStaticNode(node.argument)\n    case 'LogicalExpression': // 1 > 2\n    case 'BinaryExpression': // 1 + 2\n      return isStaticNode(node.left) && isStaticNode(node.right)\n  // ... more code ...",
            "issues": []
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-sfc/src/compileStyle.ts",
        "criticalFunctions": [
          {
            "name": "doCompileStyle",
            "complexity": 24,
            "lineCount": 132,
            "parameterCount": 1,
            "snippet": "export function doCompileStyle(\n  options: SFCAsyncStyleCompileOptions,\n): SFCStyleCompileResults | Promise<SFCStyleCompileResults> {\n  const {\n    filename,\n    id,\n    scoped = false,\n    trim = true,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 132 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-sfc/src/compileTemplate.ts",
        "criticalFunctions": [
          {
            "name": "doCompileTemplate",
            "complexity": 24,
            "lineCount": 114,
            "parameterCount": 1,
            "snippet": "function doCompileTemplate({\n  filename,\n  id,\n  scoped,\n  slotted,\n  inMap,\n  source,\n  ast: inAST,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 114 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "compileTemplate",
            "complexity": 11,
            "lineCount": 54,
            "parameterCount": 1,
            "snippet": "export function compileTemplate(\n  options: SFCTemplateCompileOptions,\n): SFCTemplateCompileResults {\n  const { preprocessLang, preprocessCustomRequire } = options\n  if (\n    (__ESM_BROWSER__ || __GLOBAL__) &&\n    preprocessLang &&\n    !preprocessCustomRequire\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "mapLines",
            "complexity": 6,
            "lineCount": 52,
            "parameterCount": 2,
            "snippet": "function mapLines(oldMap: RawSourceMap, newMap: RawSourceMap): RawSourceMap {\n  if (!oldMap) return newMap\n  if (!newMap) return oldMap\n  const oldMapConsumer = new SourceMapConsumer(oldMap)\n  const newMapConsumer = new SourceMapConsumer(newMap)\n  const mergedMapGenerator = new SourceMapGenerator()\n  newMapConsumer.eachMapping(m => {\n    if (m.originalLine == null) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-sfc/src/parse.ts",
        "criticalFunctions": [
          {
            "name": "parse",
            "complexity": 35,
            "lineCount": 193,
            "parameterCount": 2,
            "snippet": "export function parse(\n  source: string,\n  options: SFCParseOptions = {},\n): SFCParseResult {\n  const sourceKey = genCacheKey(source, {\n    ...options,\n    compiler: { parse: options.compiler?.parse },\n  })\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 35 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 193 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 18,
            "lineCount": 74,
            "parameterCount": 1,
            "snippet": "node => {\n    if (node.type !== NodeTypes.ELEMENT) {\n      return\n    }\n    if (\n      ignoreEmpty &&\n      node.tag !== 'template' &&\n      isEmpty(node) &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-sfc/src/rewriteDefault.ts",
        "criticalFunctions": [
          {
            "name": "rewriteDefaultAST",
            "complexity": 14,
            "lineCount": 64,
            "parameterCount": 3,
            "snippet": "export function rewriteDefaultAST(\n  ast: Statement[],\n  s: MagicString,\n  as: string,\n): void {\n  if (!hasDefaultExport(ast)) {\n    s.append(`\\nconst ${as} = {}`)\n    return\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 13,
            "lineCount": 51,
            "parameterCount": 1,
            "snippet": "node => {\n    if (node.type === 'ExportDefaultDeclaration') {\n      if (node.declaration.type === 'ClassDeclaration' && node.declaration.id) {\n        const start: number =\n          node.declaration.decorators && node.declaration.decorators.length > 0\n            ? node.declaration.decorators[\n                node.declaration.decorators.length - 1\n              ].end!\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-ssr/src/ssrCodegenTransform.ts",
        "criticalFunctions": [
          {
            "name": "processChildren",
            "complexity": 18,
            "lineCount": 87,
            "parameterCount": 5,
            "snippet": "export function processChildren(\n  parent: Container,\n  context: SSRTransformContext,\n  asFragment = false,\n  disableNestedFragments = false,\n  disableComment = false,\n): void {\n  if (asFragment) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/reactivity/src/arrayInstrumentations.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/reactivity/src/baseHandlers.ts",
        "criticalFunctions": [
          {
            "name": "get",
            "complexity": 25,
            "lineCount": 79,
            "parameterCount": 3,
            "snippet": "get(target: Target, key: string | symbol, receiver: object): any {\n    if (key === ReactiveFlags.SKIP) return target[ReactiveFlags.SKIP]\n    const isReadonly = this._isReadonly,\n      isShallow = this._isShallow\n    if (key === ReactiveFlags.IS_REACTIVE) {\n      return !isReadonly\n    } else if (key === ReactiveFlags.IS_READONLY) {\n      return isReadonly\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/reactivity/src/collectionHandlers.ts",
        "criticalFunctions": [
          {
            "name": "createInstrumentations",
            "complexity": 35,
            "lineCount": 166,
            "parameterCount": 2,
            "snippet": "function createInstrumentations(\n  readonly: boolean,\n  shallow: boolean,\n): Instrumentations {\n  const instrumentations: Instrumentations = {\n    get(this: MapTypes, key: unknown) {\n      const target = this[ReactiveFlags.RAW]\n      const rawTarget = toRaw(target)\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 35 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 166 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/reactivity/src/dep.ts",
        "criticalFunctions": [
          {
            "name": "trigger",
            "complexity": 24,
            "lineCount": 96,
            "parameterCount": 6,
            "snippet": "export function trigger(\n  target: object,\n  type: TriggerOpTypes,\n  key?: unknown,\n  newValue?: unknown,\n  oldValue?: unknown,\n  oldTarget?: Map<unknown, unknown> | Set<unknown>,\n): void {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 96 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "track",
            "complexity": 13,
            "lineCount": 58,
            "parameterCount": 1,
            "snippet": "track(debugInfo?: DebuggerEventExtraInfo): Link | undefined {\n    if (!activeSub || !shouldTrack || activeSub === this.computed) {\n      return\n    }\n    let link = this.activeLink\n    if (link === undefined || link.sub !== activeSub) {\n      link = this.activeLink = new Link(activeSub, this)\n      if (!activeSub.deps) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/reactivity/src/effect.ts",
        "criticalFunctions": [
          {
            "name": "refreshComputed",
            "complexity": 12,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "export function refreshComputed(computed: ComputedRefImpl): undefined {\n  if (\n    computed.flags & EffectFlags.TRACKING &&\n    !(computed.flags & EffectFlags.DIRTY)\n  ) {\n    return\n  }\n  computed.flags &= ~EffectFlags.DIRTY\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/reactivity/src/effectScope.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/reactivity/src/reactive.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/reactivity/src/ref.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/reactivity/src/watch.ts",
        "criticalFunctions": [
          {
            "name": "watch",
            "complexity": 51,
            "lineCount": 210,
            "parameterCount": 3,
            "snippet": "export function watch(\n  source: WatchSource | WatchSource[] | WatchEffect | object,\n  cb?: WatchCallback | null,\n  options: WatchOptions = EMPTY_OBJ,\n): WatchHandle {\n  const { immediate, deep, once, scheduler, augmentJob, call } = options\n  const warnInvalidSource = (s: unknown) => {\n    ;(options.onWarn || warn)(\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 51 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 210 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/apiAsyncComponent.ts",
        "criticalFunctions": [
          {
            "name": "defineAsyncComponent",
            "complexity": 43,
            "lineCount": 201,
            "parameterCount": 1,
            "snippet": "export function defineAsyncComponent<\n  T extends Component = { new (): ComponentPublicInstance },\n>(source: AsyncComponentLoader<T> | AsyncComponentOptions<T>): T {\n  if (isFunction(source)) {\n    source = { loader: source }\n  }\n  const {\n    loader,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 43 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 201 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "setup",
            "complexity": 20,
            "lineCount": 87,
            "parameterCount": 0,
            "snippet": "setup() {\n      const instance = currentInstance!\n      markAsyncBoundary(instance)\n      if (resolvedComp) {\n        return () => createInnerComp(resolvedComp!, instance)\n      }\n      const onError = (err: Error) => {\n        pendingRequest = null\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/apiCreateApp.ts",
        "criticalFunctions": [
          {
            "name": "createAppAPI",
            "complexity": 47,
            "lineCount": 235,
            "parameterCount": 2,
            "snippet": "export function createAppAPI<HostElement>(\n  render: RootRenderFunction<HostElement>,\n  hydrate?: RootHydrateFunction,\n): CreateAppFunction<HostElement> {\n  return function createApp(rootComponent, rootProps = null) {\n    if (!isFunction(rootComponent)) {\n      rootComponent = extend({}, rootComponent)\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 47 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 235 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createApp",
            "complexity": 47,
            "lineCount": 230,
            "parameterCount": 2,
            "snippet": "function createApp(rootComponent, rootProps = null) {\n    if (!isFunction(rootComponent)) {\n      rootComponent = extend({}, rootComponent)\n    }\n    if (rootProps != null && !isObject(rootProps)) {\n      __DEV__ && warn(`root props passed to app.mount() must be an object.`)\n      rootProps = null\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 47 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 230 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "mount",
            "complexity": 13,
            "lineCount": 62,
            "parameterCount": 3,
            "snippet": "mount(\n        rootContainer: HostElement,\n        isHydrate?: boolean,\n        namespace?: boolean | ElementNamespace,\n      ): any {\n        if (!isMounted) {\n          if (__DEV__ && (rootContainer as any).__vue_app__) {\n            warn(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/apiInject.ts",
        "criticalFunctions": [
          {
            "name": "inject",
            "complexity": 17,
            "lineCount": 39,
            "parameterCount": 3,
            "snippet": "export function inject(\n  key: InjectionKey<any> | string,\n  defaultValue?: unknown,\n  treatDefaultAsFactory = false,\n) {\n  const instance = currentInstance || currentRenderingInstance\n  if (instance || currentApp) {\n    let provides = currentApp\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/apiSetupHelpers.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/apiWatch.ts",
        "criticalFunctions": [
          {
            "name": "doWatch",
            "complexity": 26,
            "lineCount": 97,
            "parameterCount": 3,
            "snippet": "function doWatch(\n  source: WatchSource | WatchSource[] | WatchEffect | object,\n  cb: WatchCallback | null,\n  options: WatchOptions = EMPTY_OBJ,\n): WatchHandle {\n  const { immediate, deep, flush, once } = options\n  if (__DEV__ && !cb) {\n    if (immediate !== undefined) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 97 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/component.ts",
        "criticalFunctions": [
          {
            "name": "finishComponentSetup",
            "complexity": 32,
            "lineCount": 103,
            "parameterCount": 3,
            "snippet": "export function finishComponentSetup(\n  instance: ComponentInternalInstance,\n  isSSR: boolean,\n  skipOptions?: boolean,\n): void {\n  const Component = instance.type as ComponentOptions\n  if (__COMPAT__) {\n    convertLegacyRenderFn(instance)\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 103 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "setupStatefulComponent",
            "complexity": 22,
            "lineCount": 99,
            "parameterCount": 2,
            "snippet": "function setupStatefulComponent(\n  instance: ComponentInternalInstance,\n  isSSR: boolean,\n) {\n  const Component = instance.type as ComponentOptions\n  if (__DEV__) {\n    if (Component.name) {\n      validateComponentName(Component.name, instance.appContext.config)\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 99 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createSetupContext",
            "complexity": 12,
            "lineCount": 56,
            "parameterCount": 1,
            "snippet": "export function createSetupContext(\n  instance: ComponentInternalInstance,\n): SetupContext {\n  const expose: SetupContext['expose'] = exposed => {\n    if (__DEV__) {\n      if (instance.exposed) {\n        warn(`expose() should be called only once per setup().`)\n      }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createComponentInstance",
            "complexity": 9,
            "lineCount": 103,
            "parameterCount": 3,
            "snippet": "export function createComponentInstance(\n  vnode: VNode,\n  parent: ComponentInternalInstance | null,\n  suspense: SuspenseBoundary | null,\n): ComponentInternalInstance {\n  const type = vnode.type as ConcreteComponent\n  const appContext =\n    (parent ? parent.appContext : vnode.appContext) || emptyAppContext\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 103 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/componentEmits.ts",
        "criticalFunctions": [
          {
            "name": "emit",
            "complexity": 34,
            "lineCount": 123,
            "parameterCount": 3,
            "snippet": "export function emit(\n  instance: ComponentInternalInstance,\n  event: string,\n  ...rawArgs: any[]\n): ComponentPublicInstance | null | undefined {\n  if (instance.isUnmounted) return\n  const props = instance.vnode.props || EMPTY_OBJ\n  if (__DEV__) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 34 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 123 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "normalizeEmitsOptions",
            "complexity": 14,
            "lineCount": 53,
            "parameterCount": 3,
            "snippet": "export function normalizeEmitsOptions(\n  comp: ConcreteComponent,\n  appContext: AppContext,\n  asMixin = false,\n): ObjectEmitsOptions | null {\n  const cache = appContext.emitsCache\n  const cached = cache.get(comp)\n  if (cached !== undefined) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/componentOptions.ts",
        "criticalFunctions": [
          {
            "name": "applyOptions",
            "complexity": 59,
            "lineCount": 272,
            "parameterCount": 1,
            "snippet": "export function applyOptions(instance: ComponentInternalInstance): void {\n  const options = resolveMergedOptions(instance)\n  const publicThis = instance.proxy! as any\n  const ctx = instance.ctx\n  shouldCacheAccess = false\n  if (options.beforeCreate) {\n    callHook(options.beforeCreate, instance, LifecycleHooks.BEFORE_CREATE)\n  }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 59 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 272 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createWatcher",
            "complexity": 22,
            "lineCount": 72,
            "parameterCount": 4,
            "snippet": "export function createWatcher(\n  raw: ComponentWatchOptionItem,\n  ctx: Data,\n  publicThis: ComponentPublicInstance,\n  key: string,\n): void {\n  let getter = key.includes('.')\n    ? createPathGetter(publicThis, key)\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/componentProps.ts",
        "criticalFunctions": [
          {
            "name": "normalizePropsOptions",
            "complexity": 37,
            "lineCount": 107,
            "parameterCount": 3,
            "snippet": "export function normalizePropsOptions(\n  comp: ConcreteComponent,\n  appContext: AppContext,\n  asMixin = false,\n): NormalizedPropsOptions {\n  const cache =\n    __FEATURE_OPTIONS_API__ && asMixin ? mixinPropsCache : appContext.propsCache\n  const cached = cache.get(comp)\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 37 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 107 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "updateProps",
            "complexity": 36,
            "lineCount": 133,
            "parameterCount": 4,
            "snippet": "export function updateProps(\n  instance: ComponentInternalInstance,\n  rawProps: Data | null,\n  rawPrevProps: Data | null,\n  optimized: boolean,\n): void {\n  const {\n    props,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 36 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 133 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "setFullProps",
            "complexity": 22,
            "lineCount": 76,
            "parameterCount": 4,
            "snippet": "function setFullProps(\n  instance: ComponentInternalInstance,\n  rawProps: Data | null,\n  props: Data,\n  attrs: Data,\n) {\n  const [options, needCastKeys] = instance.propsOptions\n  let hasAttrsChanged = false\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 76 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "resolvePropValue",
            "complexity": 17,
            "lineCount": 55,
            "parameterCount": 6,
            "snippet": "function resolvePropValue(\n  options: NormalizedProps,\n  props: Data,\n  key: string,\n  value: unknown,\n  instance: ComponentInternalInstance,\n  isAbsent: boolean,\n) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/componentPublicInstance.ts",
        "criticalFunctions": [
          {
            "name": "get",
            "complexity": 40,
            "lineCount": 117,
            "parameterCount": 2,
            "snippet": "get({ _: instance }: ComponentRenderContext, key: string) {\n    if (key === ReactiveFlags.SKIP) {\n      return true\n    }\n    const { ctx, setupState, data, props, accessCache, type, appContext } =\n      instance\n    if (__DEV__ && key === '__isVue') {\n      return true\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 40 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 117 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/componentRenderContext.ts",
        "criticalFunctions": [
          {
            "name": "withCtx",
            "complexity": 9,
            "lineCount": 53,
            "parameterCount": 3,
            "snippet": "export function withCtx(\n  fn: Function,\n  ctx: ComponentInternalInstance | null = currentRenderingInstance,\n  isNonScopedSlot?: boolean, // __COMPAT__ only\n): Function {\n  if (!ctx) return fn\n  if ((fn as ContextualRenderFn)._n) {\n    return fn\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/componentRenderUtils.ts",
        "criticalFunctions": [
          {
            "name": "renderComponentRoot",
            "complexity": 50,
            "lineCount": 224,
            "parameterCount": 1,
            "snippet": "export function renderComponentRoot(\n  instance: ComponentInternalInstance,\n): VNode {\n  const {\n    type: Component,\n    vnode,\n    proxy,\n    withProxy,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 50 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 224 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "shouldUpdateComponent",
            "complexity": 23,
            "lineCount": 67,
            "parameterCount": 3,
            "snippet": "export function shouldUpdateComponent(\n  prevVNode: VNode,\n  nextVNode: VNode,\n  optimized?: boolean,\n): boolean {\n  const { props: prevProps, children: prevChildren, component } = prevVNode\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode\n  const emits = component!.emitsOptions\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/componentSlots.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/runtime-core/src/customFormatter.ts",
        "criticalFunctions": [
          {
            "name": "initCustomFormatter",
            "complexity": 40,
            "lineCount": 198,
            "parameterCount": 0,
            "snippet": "export function initCustomFormatter(): void {\n  /* eslint-disable no-restricted-globals */\n  if (!__DEV__ || typeof window === 'undefined') {\n    return\n  }\n  const vueStyle = { style: 'color:#3ba776' }\n  const numberStyle = { style: 'color:#1677ff' }\n  const stringStyle = { style: 'color:#f5222d' }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 40 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 198 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/runtime-core/src/directives.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/enums.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/runtime-core/src/errorHandling.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/hmr.ts",
        "criticalFunctions": [
          {
            "name": "reload",
            "complexity": 11,
            "lineCount": 72,
            "parameterCount": 2,
            "snippet": "function reload(id: string, newComp: HMRComponent): void {\n  const record = map.get(id)\n  if (!record) return\n  newComp = normalizeClassComponent(newComp)\n  updateComponentDef(record.initialDef, newComp)\n  const instances = [...record.instances]\n  for (let i = 0; i < instances.length; i++) {\n    const instance = instances[i]\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/hydration.ts",
        "criticalFunctions": [
          {
            "name": "createHydrationFunctions",
            "complexity": 152,
            "lineCount": 695,
            "parameterCount": 1,
            "snippet": "export function createHydrationFunctions(\n  rendererInternals: RendererInternals<Node, Element>,\n): [\n  RootHydrateFunction,\n  (\n    node: Node,\n    vnode: VNode,\n    parentComponent: ComponentInternalInstance | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 152 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 695 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "hydrateElement",
            "complexity": 63,
            "lineCount": 185,
            "parameterCount": 6,
            "snippet": "(\n    el: Element,\n    vnode: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n  ) => {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 63 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 185 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "hydrateNode",
            "complexity": 47,
            "lineCount": 230,
            "parameterCount": 6,
            "snippet": "(\n    node: Node,\n    vnode: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    optimized = false,\n  ): Node | null => {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 47 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 230 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "propHasMismatch",
            "complexity": 30,
            "lineCount": 101,
            "parameterCount": 5,
            "snippet": "function propHasMismatch(\n  el: Element & { $cls?: string },\n  key: string,\n  clientValue: any,\n  vnode: VNode,\n  instance: ComponentInternalInstance | null,\n): boolean {\n  let mismatchType: MismatchTypes | undefined\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 30 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 101 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "hydrateChildren",
            "complexity": 15,
            "lineCount": 80,
            "parameterCount": 7,
            "snippet": "(\n    node: Node | null,\n    parentVNode: VNode,\n    container: Element,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/hydrationStrategies.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/renderer.ts",
        "criticalFunctions": [
          {
            "name": "baseCreateRenderer",
            "complexity": 378,
            "lineCount": 2097,
            "parameterCount": 2,
            "snippet": "function baseCreateRenderer(\n  options: RendererOptions,\n  createHydrationFns?: typeof createHydrationFunctions,\n): any {\n  if (__ESM_BUNDLER__ && !__TEST__) {\n    initFeatureFlags()\n  }\n  const target = getGlobalThis()\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 378 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 2097 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "setupRenderEffect",
            "complexity": 65,
            "lineCount": 310,
            "parameterCount": 7,
            "snippet": "(\n    instance,\n    initialVNode,\n    container,\n    anchor,\n    parentSuspense,\n    namespace: ElementNamespace,\n    optimized,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 65 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 310 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "componentUpdateFn",
            "complexity": 62,
            "lineCount": 274,
            "parameterCount": 0,
            "snippet": "() => {\n      if (!instance.isMounted) {\n        let vnodeHook: VNodeHook | null | undefined\n        const { el, props } = initialVNode\n        const { bm, m, parent, root, type } = instance\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode)\n        toggleRecurse(instance, false)\n        if (bm) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 62 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 274 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "patchKeyedChildren",
            "complexity": 37,
            "lineCount": 239,
            "parameterCount": 9,
            "snippet": "(\n    c1: VNode[],\n    c2: VNodeArrayChildren,\n    container: RendererElement,\n    parentAnchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    namespace: ElementNamespace,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 37 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 239 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "9 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "patchElement",
            "complexity": 35,
            "lineCount": 139,
            "parameterCount": 7,
            "snippet": "(\n    n1: VNode,\n    n2: VNode,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    namespace: ElementNamespace,\n    slotScopeIds: string[] | null,\n    optimized: boolean,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 35 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 139 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/rendererTemplateRef.ts",
        "criticalFunctions": [
          {
            "name": "setRef",
            "complexity": 45,
            "lineCount": 142,
            "parameterCount": 5,
            "snippet": "export function setRef(\n  rawRef: VNodeNormalizedRef,\n  oldRawRef: VNodeNormalizedRef | null,\n  parentSuspense: SuspenseBoundary | null,\n  vnode: VNode,\n  isUnmount = false,\n): void {\n  if (isArray(rawRef)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 45 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 142 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "doSet",
            "complexity": 16,
            "lineCount": 36,
            "parameterCount": 0,
            "snippet": "() => {\n        if (rawRef.f) {\n          const existing = _isString\n            ? canSetSetupRef(ref)\n              ? setupState[ref]\n              : refs[ref]\n            : ref.value\n          if (isUnmount) {\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/scheduler.ts",
        "criticalFunctions": [
          {
            "name": "flushJobs",
            "complexity": 16,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "function flushJobs(seen?: CountMap) {\n  if (__DEV__) {\n    seen = seen || new Map()\n  }\n  const check = __DEV__\n    ? (job: SchedulerJob) => checkRecursiveUpdates(seen!, job)\n    : NOOP\n  try {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/vnode.ts",
        "criticalFunctions": [
          {
            "name": "_createVNode",
            "complexity": 28,
            "lineCount": 98,
            "parameterCount": 6,
            "snippet": "function _createVNode(\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\n  props: (Data & VNodeProps) | null = null,\n  children: unknown = null,\n  patchFlag: number = 0,\n  dynamicProps: string[] | null = null,\n  isBlockNode = false,\n): VNode {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 98 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "cloneVNode",
            "complexity": 20,
            "lineCount": 84,
            "parameterCount": 4,
            "snippet": "export function cloneVNode<T, U>(\n  vnode: VNode<T, U>,\n  extraProps?: (Data & VNodeProps) | null,\n  mergeRef = false,\n  cloneTransition = false,\n): VNode<T, U> {\n  const { props, ref, patchFlag, children, transition } = vnode\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 84 lines, consider splitting"
              }
            ]
          },
          {
            "name": "createBaseVNode",
            "complexity": 18,
            "lineCount": 85,
            "parameterCount": 8,
            "snippet": "function createBaseVNode(\n  type: VNodeTypes | ClassComponent | typeof NULL_DYNAMIC_COMPONENT,\n  props: (Data & VNodeProps) | null = null,\n  children: unknown = null,\n  patchFlag = 0,\n  dynamicProps: string[] | null = null,\n  shapeFlag: number = type === Fragment ? 0 : ShapeFlags.ELEMENT,\n  isBlockNode = false,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 85 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "normalizeChildren",
            "complexity": 15,
            "lineCount": 54,
            "parameterCount": 2,
            "snippet": "export function normalizeChildren(vnode: VNode, children: unknown): void {\n  let type = 0\n  const { shapeFlag } = vnode\n  if (children == null) {\n    children = null\n  } else if (isArray(children)) {\n    type = ShapeFlags.ARRAY_CHILDREN\n  } else if (typeof children === 'object') {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/warning.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-dom/src/apiCustomElement.ts",
        "criticalFunctions": [
          {
            "name": "_resolveDef",
            "complexity": 16,
            "lineCount": 67,
            "parameterCount": 0,
            "snippet": "private _resolveDef() {\n    if (this._pendingResolve) {\n      return\n    }\n    for (let i = 0; i < this.attributes.length; i++) {\n      this._setAttr(this.attributes[i].name)\n    }\n    this._ob = new MutationObserver(mutations => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_createVNode",
            "complexity": 7,
            "lineCount": 52,
            "parameterCount": 0,
            "snippet": "private _createVNode(): VNode<any, any> {\n    const baseProps: VNodeProps = {}\n    if (!this.shadowRoot) {\n      baseProps.onVnodeMounted = baseProps.onVnodeUpdated =\n        this._renderSlots.bind(this)\n    }\n    const vnode = createVNode(this._def, extend(baseProps, this._props))\n    if (!this._instance) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "defineCustomElement",
            "complexity": 1,
            "lineCount": 73,
            "parameterCount": 2,
            "snippet": "export function defineCustomElement<\n  RuntimePropsOptions extends\n    ComponentObjectPropsOptions = ComponentObjectPropsOptions,\n  PropsKeys extends string = string,\n  RuntimeEmitsOptions extends EmitsOptions = {},\n  EmitsKeys extends string = string,\n  Data = {},\n  SetupBindings = {},\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 73 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-dom/src/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-dom/src/jsx.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-dom/src/nodeOps.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/runtime-dom/src/patchProp.ts",
        "criticalFunctions": [
          {
            "name": "shouldSetAsProp",
            "complexity": 24,
            "lineCount": 70,
            "parameterCount": 4,
            "snippet": "function shouldSetAsProp(\n  el: Element,\n  key: string,\n  value: unknown,\n  isSVG: boolean,\n) {\n  if (isSVG) {\n    if (key === 'innerHTML' || key === 'textContent') {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 70 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "patchProp",
            "complexity": 17,
            "lineCount": 54,
            "parameterCount": 6,
            "snippet": "(\n  el,\n  key,\n  prevValue,\n  nextValue,\n  namespace,\n  parentComponent,\n) => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/server-renderer/src/render.ts",
        "criticalFunctions": [
          {
            "name": "renderComponentSubTree",
            "complexity": 29,
            "lineCount": 97,
            "parameterCount": 2,
            "snippet": "function renderComponentSubTree(\n  instance: ComponentInternalInstance,\n  slotScopeId?: string,\n): SSRBuffer | Promise<SSRBuffer> {\n  if (__DEV__) pushWarningContext(instance.vnode)\n  const comp = instance.type as Component\n  const { getBuffer, push } = createBuffer()\n  if (isFunction(comp)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 29 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 97 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "renderElementVNode",
            "complexity": 16,
            "lineCount": 61,
            "parameterCount": 4,
            "snippet": "function renderElementVNode(\n  push: PushFn,\n  vnode: VNode,\n  parentComponent: ComponentInternalInstance,\n  slotScopeId?: string,\n) {\n  const tag = vnode.type as string\n  let { props, children, shapeFlag, scopeId } = vnode\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "renderVNode",
            "complexity": 13,
            "lineCount": 57,
            "parameterCount": 4,
            "snippet": "export function renderVNode(\n  push: PushFn,\n  vnode: VNode,\n  parentComponent: ComponentInternalInstance,\n  slotScopeId?: string,\n): void {\n  const { type, shapeFlag, children, dirs, props } = vnode\n  if (dirs) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/server-renderer/src/renderToStream.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/shared/src/codeframe.ts",
        "criticalFunctions": [
          {
            "name": "generateCodeFrame",
            "complexity": 16,
            "lineCount": 62,
            "parameterCount": 3,
            "snippet": "export function generateCodeFrame(\n  source: string,\n  start = 0,\n  end: number = source.length,\n): string {\n  start = Math.max(0, Math.min(start, source.length))\n  end = Math.max(0, Math.min(end, source.length))\n  if (start > end) return ''\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/shared/src/general.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/shared/src/looseEqual.ts",
        "criticalFunctions": [
          {
            "name": "looseEqual",
            "complexity": 23,
            "lineCount": 42,
            "parameterCount": 2,
            "snippet": "export function looseEqual(a: any, b: any): boolean {\n  if (a === b) return true\n  let aValidType = isDate(a)\n  let bValidType = isDate(b)\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false\n  }\n  aValidType = isSymbol(a)\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/shared/src/normalizeProp.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/shared/src/toDisplayString.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/vue/jsx-runtime/index.d.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/vue/src/dev.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/vue/src/index.ts",
        "criticalFunctions": [
          {
            "name": "compileToFunction",
            "complexity": 17,
            "lineCount": 73,
            "parameterCount": 2,
            "snippet": "function compileToFunction(\n  template: string | HTMLElement,\n  options?: CompilerOptions,\n): RenderFunction {\n  if (!isString(template)) {\n    if (template.nodeType) {\n      template = template.innerHTML\n    } else {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 73 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/vue/src/runtime.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/vue-compat/src/dev.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/vue-compat/src/index.ts",
        "criticalFunctions": [
          {
            "name": "compileToFunction",
            "complexity": 19,
            "lineCount": 75,
            "parameterCount": 2,
            "snippet": "function compileToFunction(\n  template: string | HTMLElement,\n  options?: CompilerOptions,\n): RenderFunction {\n  if (!isString(template)) {\n    if (template.nodeType) {\n      template = template.innerHTML\n    } else {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/vue-compat/src/runtime.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-core/src/compat/transformFilter.ts",
        "criticalFunctions": [
          {
            "name": "parseFilter",
            "complexity": 40,
            "lineCount": 114,
            "parameterCount": 2,
            "snippet": "function parseFilter(node: SimpleExpressionNode, context: TransformContext) {\n  const exp = node.content\n  let inSingle = false\n  let inDouble = false\n  let inTemplateString = false\n  let inRegex = false\n  let curly = 0\n  let square = 0\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 40 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 114 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-core/src/transforms/cacheStatic.ts",
        "criticalFunctions": [
          {
            "name": "walk",
            "complexity": 67,
            "lineCount": 201,
            "parameterCount": 5,
            "snippet": "function walk(\n  node: ParentNode,\n  parent: ParentNode | undefined,\n  context: TransformContext,\n  doNotHoistNode: boolean = false,\n  inFor = false,\n) {\n  const { children } = node\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 67 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 201 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getConstantType",
            "complexity": 41,
            "lineCount": 140,
            "parameterCount": 2,
            "snippet": "export function getConstantType(\n  node: TemplateChildNode | SimpleExpressionNode | CacheExpression,\n  context: TransformContext,\n): ConstantTypes {\n  const { constantCache } = context\n  switch (node.type) {\n    case NodeTypes.ELEMENT:\n      if (node.tagType !== ElementTypes.ELEMENT) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 41 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 140 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-core/src/transforms/transformElement.ts",
        "criticalFunctions": [
          {
            "name": "buildProps",
            "complexity": 124,
            "lineCount": 458,
            "parameterCount": 6,
            "snippet": "export function buildProps(\n  node: ElementNode,\n  context: TransformContext,\n  props: ElementNode['props'] | undefined = node.props,\n  isComponent: boolean,\n  isDynamicComponent: boolean,\n  ssr = false,\n): {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 124 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 458 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "transformElement",
            "complexity": 34,
            "lineCount": 153,
            "parameterCount": 2,
            "snippet": "(node, context) => {\n  return function postTransformElement() {\n    node = context.currentNode!\n    if (\n      !(\n        node.type === NodeTypes.ELEMENT &&\n        (node.tagType === ElementTypes.ELEMENT ||\n          node.tagType === ElementTypes.COMPONENT)\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 34 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 153 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "postTransformElement",
            "complexity": 34,
            "lineCount": 149,
            "parameterCount": 0,
            "snippet": "function postTransformElement() {\n    node = context.currentNode!\n    if (\n      !(\n        node.type === NodeTypes.ELEMENT &&\n        (node.tagType === ElementTypes.ELEMENT ||\n          node.tagType === ElementTypes.COMPONENT)\n      )\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 34 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 149 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "analyzePatchFlag",
            "complexity": 25,
            "lineCount": 60,
            "parameterCount": 1,
            "snippet": "({ key, value }: Property) => {\n    if (isStaticExp(key)) {\n      const name = key.content\n      const isEventHandler = isOn(name)\n      if (\n        isEventHandler &&\n        (!isComponent || isDynamicComponent) &&\n        name.toLowerCase() !== 'onclick' &&\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 60 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "resolveComponentType",
            "complexity": 22,
            "lineCount": 94,
            "parameterCount": 3,
            "snippet": "export function resolveComponentType(\n  node: ComponentNode,\n  context: TransformContext,\n  ssr = false,\n): string | symbol | CallExpression {\n  let { tag } = node\n  const isExplicitDynamic = isComponentTag(tag)\n  const isProp = findProp(node, 'is', false, true /* allow empty */)\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 94 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-core/src/transforms/transformExpression.ts",
        "criticalFunctions": [
          {
            "name": "processExpression",
            "complexity": 75,
            "lineCount": 287,
            "parameterCount": 5,
            "snippet": "export function processExpression(\n  node: SimpleExpressionNode,\n  context: TransformContext,\n  asParams = false,\n  asRawStatements = false,\n  localVars: Record<string, number> = Object.create(context.identifiers),\n): ExpressionNode {\n  if (__BROWSER__) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 75 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 287 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "rewriteIdentifier",
            "complexity": 33,
            "lineCount": 107,
            "parameterCount": 3,
            "snippet": "(\n    raw: string,\n    parent?: Node | null,\n    id?: Identifier,\n  ) => {\n    const type = hasOwn(bindingMetadata, raw) && bindingMetadata[raw]\n    if (inline) {\n      const isAssignmentLVal =\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 33 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 107 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "transformExpression",
            "complexity": 17,
            "lineCount": 43,
            "parameterCount": 2,
            "snippet": "(node, context) => {\n  if (node.type === NodeTypes.INTERPOLATION) {\n    node.content = processExpression(\n      node.content as SimpleExpressionNode,\n      context,\n    )\n  } else if (node.type === NodeTypes.ELEMENT) {\n    const memo = findDir(node, 'memo')\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-core/src/transforms/transformSlotOutlet.ts",
        "criticalFunctions": [
          {
            "name": "processSlotOutlet",
            "complexity": 16,
            "lineCount": 64,
            "parameterCount": 2,
            "snippet": "export function processSlotOutlet(\n  node: SlotOutletNode,\n  context: TransformContext,\n): SlotOutletProcessResult {\n  let slotName: string | ExpressionNode = `\"default\"`\n  let slotProps: PropsExpression | undefined = undefined\n  const nonNameProps = []\n  for (let i = 0; i < node.props.length; i++) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-core/src/transforms/transformText.ts",
        "criticalFunctions": [
          {
            "name": "transformText",
            "complexity": 27,
            "lineCount": 102,
            "parameterCount": 2,
            "snippet": "(node, context) => {\n  if (\n    node.type === NodeTypes.ROOT ||\n    node.type === NodeTypes.ELEMENT ||\n    node.type === NodeTypes.FOR ||\n    node.type === NodeTypes.IF_BRANCH\n  ) {\n    return () => {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 102 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 23,
            "lineCount": 91,
            "parameterCount": 0,
            "snippet": "() => {\n      const children = node.children\n      let currentContainer: CompoundExpressionNode | undefined = undefined\n      let hasText = false\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i]\n        if (isText(child)) {\n          hasText = true\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 91 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-core/src/transforms/vBind.ts",
        "criticalFunctions": [
          {
            "name": "transformBind",
            "complexity": 16,
            "lineCount": 80,
            "parameterCount": 3,
            "snippet": "(dir, _node, context) => {\n  const { modifiers, loc } = dir\n  const arg = dir.arg!\n  let { exp } = dir\n  if (exp && exp.type === NodeTypes.SIMPLE_EXPRESSION && !exp.content.trim()) {\n    if (!__BROWSER__) {\n      context.onError(\n        createCompilerError(ErrorCodes.X_V_BIND_NO_EXPRESSION, loc),\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-core/src/transforms/vFor.ts",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 43,
            "lineCount": 203,
            "parameterCount": 3,
            "snippet": "(node, dir, context) => {\n    const { helper, removeHelper } = context\n    return processFor(node, dir, context, forNode => {\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\n        forNode.source,\n      ]) as ForRenderListExpression\n      const isTemplate = isTemplateNode(node)\n      const memo = findDir(node, 'memo')\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 43 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 203 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 43,
            "lineCount": 200,
            "parameterCount": 1,
            "snippet": "forNode => {\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\n        forNode.source,\n      ]) as ForRenderListExpression\n      const isTemplate = isTemplateNode(node)\n      const memo = findDir(node, 'memo')\n      const keyProp = findProp(node, `key`, false, true)\n      const isDirKey = keyProp && keyProp.type === NodeTypes.DIRECTIVE\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 43 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 200 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 23,
            "lineCount": 124,
            "parameterCount": 0,
            "snippet": "() => {\n        let childBlock: BlockCodegenNode\n        const { children } = forNode\n        if ((__DEV__ || !__BROWSER__) && isTemplate) {\n          node.children.some(c => {\n            if (c.type === NodeTypes.ELEMENT) {\n              const key = findProp(c, 'key')\n              if (key) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 124 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "processFor",
            "complexity": 16,
            "lineCount": 62,
            "parameterCount": 4,
            "snippet": "export function processFor(\n  node: ElementNode,\n  dir: DirectiveNode,\n  context: TransformContext,\n  processCodegen?: (forNode: ForNode) => (() => void) | undefined,\n): (() => void) | undefined {\n  if (!dir.exp) {\n    context.onError(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "finalizeForParseResult",
            "complexity": 12,
            "lineCount": 59,
            "parameterCount": 2,
            "snippet": "export function finalizeForParseResult(\n  result: ForParseResult,\n  context: TransformContext,\n): void {\n  if (result.finalized) return\n  if (!__BROWSER__ && context.prefixIdentifiers) {\n    result.source = processExpression(\n      result.source as SimpleExpressionNode,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-core/src/transforms/vIf.ts",
        "criticalFunctions": [
          {
            "name": "processIf",
            "complexity": 36,
            "lineCount": 128,
            "parameterCount": 4,
            "snippet": "export function processIf(\n  node: ElementNode,\n  dir: DirectiveNode,\n  context: TransformContext,\n  processCodegen?: (\n    node: IfNode,\n    branch: IfBranchNode,\n    isRoot: boolean,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 36 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 128 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createChildrenCodegenNode",
            "complexity": 9,
            "lineCount": 65,
            "parameterCount": 3,
            "snippet": "function createChildrenCodegenNode(\n  branch: IfBranchNode,\n  keyIndex: number,\n  context: TransformContext,\n): BlockCodegenNode | MemoExpression {\n  const { helper } = context\n  const keyProperty = createObjectProperty(\n    `key`,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-core/src/transforms/vModel.ts",
        "criticalFunctions": [
          {
            "name": "transformModel",
            "complexity": 33,
            "lineCount": 134,
            "parameterCount": 3,
            "snippet": "(dir, node, context) => {\n  const { exp, arg } = dir\n  if (!exp) {\n    context.onError(\n      createCompilerError(ErrorCodes.X_V_MODEL_NO_EXPRESSION, dir.loc),\n    )\n    return createTransformProps()\n  }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 33 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 134 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-core/src/transforms/vOn.ts",
        "criticalFunctions": [
          {
            "name": "transformOn",
            "complexity": 45,
            "lineCount": 152,
            "parameterCount": 4,
            "snippet": "(\n  dir,\n  node,\n  context,\n  augmentor,\n) => {\n  const { loc, modifiers, arg } = dir as VOnDirectiveNode\n  if (!dir.exp && !modifiers.length) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 45 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 152 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-core/src/transforms/vSlot.ts",
        "criticalFunctions": [
          {
            "name": "buildSlots",
            "complexity": 43,
            "lineCount": 255,
            "parameterCount": 3,
            "snippet": "export function buildSlots(\n  node: ElementNode,\n  context: TransformContext,\n  buildSlotFn: SlotFnBuilder = buildClientSlotFn,\n): {\n  slots: SlotsExpression\n  hasDynamicSlots: boolean\n} {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 43 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 255 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-dom/src/transforms/Transition.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-dom/src/transforms/stringifyStatic.ts",
        "criticalFunctions": [
          {
            "name": "analyzeNode",
            "complexity": 27,
            "lineCount": 77,
            "parameterCount": 1,
            "snippet": "function analyzeNode(node: StringifiableNode): [number, number] | false {\n  if (node.type === NodeTypes.ELEMENT && isNonStringifiable(node.tag)) {\n    return false\n  }\n  if (node.type === NodeTypes.TEXT_CALL) {\n    return [1, 0]\n  }\n  let nc = 1 // node count\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 77 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "walk",
            "complexity": 22,
            "lineCount": 53,
            "parameterCount": 1,
            "snippet": "function walk(node: ElementNode): boolean {\n    const isOptionTag = node.tag === 'option' && node.ns === Namespaces.HTML\n    for (let i = 0; i < node.props.length; i++) {\n      const p = node.props[i]\n      if (\n        p.type === NodeTypes.ATTRIBUTE &&\n        !isStringifiableAttr(p.name, node.ns)\n      ) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "stringifyElement",
            "complexity": 19,
            "lineCount": 71,
            "parameterCount": 2,
            "snippet": "function stringifyElement(\n  node: ElementNode,\n  context: TransformContext,\n): string {\n  let res = `<${node.tag}`\n  let innerHTML = ''\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i]\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 71 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "stringifyStatic",
            "complexity": 18,
            "lineCount": 97,
            "parameterCount": 3,
            "snippet": "(children, context, parent) => {\n  if (context.scopes.vSlot > 0) {\n    return\n  }\n  const isParentCached =\n    parent.type === NodeTypes.ELEMENT &&\n    parent.codegenNode &&\n    parent.codegenNode.type === NodeTypes.VNODE_CALL &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 97 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "stringifyCurrentChunk",
            "complexity": 8,
            "lineCount": 51,
            "parameterCount": 1,
            "snippet": "(currentIndex: number): number => {\n    if (\n      nc >= StringifyThresholds.NODE_COUNT ||\n      ec >= StringifyThresholds.ELEMENT_WITH_BINDING_COUNT\n    ) {\n      const staticCall = createCallExpression(context.helper(CREATE_STATIC), [\n        JSON.stringify(\n          currentChunk.map(node => stringifyNode(node, context)).join(''),\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-dom/src/transforms/vModel.ts",
        "criticalFunctions": [
          {
            "name": "transformModel",
            "complexity": 25,
            "lineCount": 108,
            "parameterCount": 3,
            "snippet": "(dir, node, context) => {\n  const baseResult = baseTransform(dir, node, context)\n  if (!baseResult.props.length || node.tagType === ElementTypes.COMPONENT) {\n    return baseResult\n  }\n  if (dir.arg) {\n    context.onError(\n      createDOMCompilerError(\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 108 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-dom/src/transforms/vOn.ts",
        "criticalFunctions": [
          {
            "name": "resolveModifiers",
            "complexity": 10,
            "lineCount": 58,
            "parameterCount": 4,
            "snippet": "(\n  key: ExpressionNode,\n  modifiers: SimpleExpressionNode[],\n  context: TransformContext,\n  loc: SourceLocation,\n) => {\n  const keyModifiers = []\n  const nonKeyModifiers = []\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-sfc/src/script/analyzeScriptBindings.ts",
        "criticalFunctions": [
          {
            "name": "analyzeBindingsFromOptions",
            "complexity": 23,
            "lineCount": 75,
            "parameterCount": 1,
            "snippet": "function analyzeBindingsFromOptions(node: ObjectExpression): BindingMetadata {\n  const bindings: BindingMetadata = {}\n  Object.defineProperty(bindings, '__isScriptSetup', {\n    enumerable: false,\n    value: false,\n  })\n  for (const property of node.properties) {\n    if (\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-sfc/src/script/context.ts",
        "criticalFunctions": [
          {
            "name": "resolveParserPlugins",
            "complexity": 17,
            "lineCount": 35,
            "parameterCount": 3,
            "snippet": "export function resolveParserPlugins(\n  lang: string,\n  userPlugins?: ParserPlugin[],\n  dts = false,\n): ParserPlugin[] {\n  const plugins: ParserPlugin[] = []\n  if (\n    !userPlugins ||\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-sfc/src/script/defineEmits.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-sfc/src/script/defineModel.ts",
        "criticalFunctions": [
          {
            "name": "processDefineModel",
            "complexity": 30,
            "lineCount": 100,
            "parameterCount": 3,
            "snippet": "export function processDefineModel(\n  ctx: ScriptCompileContext,\n  node: Node,\n  declId?: LVal,\n): boolean {\n  if (!isCallOf(node, DEFINE_MODEL)) {\n    return false\n  }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 30 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 100 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "genModelProps",
            "complexity": 19,
            "lineCount": 60,
            "parameterCount": 1,
            "snippet": "export function genModelProps(ctx: ScriptCompileContext) {\n  if (!ctx.hasDefineModelCall) return\n  const isProd = !!ctx.options.isProd\n  let modelPropsDecl = ''\n  for (const [name, { type, options: runtimeOptions }] of Object.entries(\n    ctx.modelDecls,\n  )) {\n    let skipCheck = false\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 60 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-sfc/src/script/defineOptions.ts",
        "criticalFunctions": [
          {
            "name": "processDefineOptions",
            "complexity": 18,
            "lineCount": 76,
            "parameterCount": 2,
            "snippet": "export function processDefineOptions(\n  ctx: ScriptCompileContext,\n  node: Node,\n): boolean {\n  if (!isCallOf(node, DEFINE_OPTIONS)) {\n    return false\n  }\n  if (ctx.hasDefineOptionsCall) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 76 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-sfc/src/script/defineProps.ts",
        "criticalFunctions": [
          {
            "name": "genRuntimePropFromType",
            "complexity": 18,
            "lineCount": 68,
            "parameterCount": 3,
            "snippet": "function genRuntimePropFromType(\n  ctx: TypeResolveContext,\n  { key, required, type, skipCheck }: PropTypeData,\n  hasStaticDefaults: boolean,\n): string {\n  let defaultString: string | undefined\n  const destructured = genDestructuredDefaultValue(ctx, key, type)\n  if (destructured) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-sfc/src/script/definePropsDestructure.ts",
        "criticalFunctions": [
          {
            "name": "transformDestructuredProps",
            "complexity": 55,
            "lineCount": 204,
            "parameterCount": 2,
            "snippet": "export function transformDestructuredProps(\n  ctx: ScriptCompileContext,\n  vueImportAliases: Record<string, string>,\n): void {\n  if (ctx.options.propsDestructure === false) {\n    return\n  }\n  const rootScope: Scope = Object.create(null)\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 55 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 204 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "enter",
            "complexity": 16,
            "lineCount": 53,
            "parameterCount": 2,
            "snippet": "enter(node: Node, parent: Node | null) {\n      parent && parentStack.push(parent)\n      if (\n        parent &&\n        parent.type.startsWith('TS') &&\n        !TS_NODE_TYPES.includes(parent.type)\n      ) {\n        return this.skip()\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "processPropsDestructure",
            "complexity": 11,
            "lineCount": 64,
            "parameterCount": 2,
            "snippet": "export function processPropsDestructure(\n  ctx: ScriptCompileContext,\n  declId: ObjectPattern,\n): void {\n  if (ctx.options.propsDestructure === 'error') {\n    ctx.error(`Props destructure is explicitly prohibited via config.`, declId)\n  } else if (ctx.options.propsDestructure === false) {\n    return\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-sfc/src/script/importUsageCheck.ts",
        "criticalFunctions": [
          {
            "name": "resolveTemplateUsedIdentifiers",
            "complexity": 19,
            "lineCount": 63,
            "parameterCount": 1,
            "snippet": "function resolveTemplateUsedIdentifiers(sfc: SFCDescriptor): Set<string> {\n  const { content, ast } = sfc.template!\n  const cached = templateUsageCheckCache.get(content)\n  if (cached) {\n    return cached\n  }\n  const ids = new Set<string>()\n  ast!.children.forEach(walk)\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 63 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "walk",
            "complexity": 18,
            "lineCount": 48,
            "parameterCount": 1,
            "snippet": "function walk(node: TemplateChildNode) {\n    switch (node.type) {\n      case NodeTypes.ELEMENT:\n        let tag = node.tag\n        if (tag.includes('.')) tag = tag.split('.')[0].trim()\n        if (\n          !parserOptions.isNativeTag!(tag) &&\n          !parserOptions.isBuiltInComponent!(tag)\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-sfc/src/script/resolveType.ts",
        "criticalFunctions": [
          {
            "name": "inferRuntimeType",
            "complexity": 122,
            "lineCount": 307,
            "parameterCount": 4,
            "snippet": "export function inferRuntimeType(\n  ctx: TypeResolveContext,\n  node: Node & MaybeWithScope,\n  scope: TypeScope = node._ownerScope || ctxToScope(ctx),\n  isKeyOf = false,\n): string[] {\n  try {\n    switch (node.type) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 122 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 307 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "innerResolveTypeElements",
            "complexity": 41,
            "lineCount": 160,
            "parameterCount": 4,
            "snippet": "function innerResolveTypeElements(\n  ctx: TypeResolveContext,\n  node: Node,\n  scope: TypeScope,\n  typeParameters?: Record<string, Node>,\n): ResolvedElements {\n  if (\n    node.leadingComments &&\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 41 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 160 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "recordTypes",
            "complexity": 25,
            "lineCount": 89,
            "parameterCount": 4,
            "snippet": "function recordTypes(\n  ctx: TypeResolveContext,\n  body: Statement[],\n  scope: TypeScope,\n  asGlobal = false,\n) {\n  const { types, declares, exportedTypes, exportedDeclares, imports } = scope\n  const isAmbient = asGlobal\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 89 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "recordType",
            "complexity": 24,
            "lineCount": 65,
            "parameterCount": 4,
            "snippet": "function recordType(\n  node: Node,\n  types: Record<string, Node>,\n  declares: Record<string, Node>,\n  overwriteId?: string,\n) {\n  switch (node.type) {\n    case 'TSInterfaceDeclaration':\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "resolveWithTS",
            "complexity": 19,
            "lineCount": 82,
            "parameterCount": 4,
            "snippet": "function resolveWithTS(\n  containingFile: string,\n  source: string,\n  ts: typeof TS,\n  fs: FS,\n): string | undefined {\n  if (!__CJS__) return\n  const configPath = ts.findConfigFile(containingFile, fs.fileExists)\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 82 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-sfc/src/script/utils.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-sfc/src/style/cssVars.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-sfc/src/style/pluginScoped.ts",
        "criticalFunctions": [
          {
            "name": "rewriteSelector",
            "complexity": 38,
            "lineCount": 183,
            "parameterCount": 6,
            "snippet": "function rewriteSelector(\n  id: string,\n  rule: Rule,\n  selector: selectorParser.Selector,\n  selectorRoot: selectorParser.Root,\n  deep: boolean,\n  slotted = false,\n) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 38 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 183 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 28,
            "lineCount": 125,
            "parameterCount": 1,
            "snippet": "n => {\n    if (\n      n.type === 'combinator' &&\n      (n.value === '>>>' || n.value === '/deep/')\n    ) {\n      n.value = ' '\n      n.spaces.before = n.spaces.after = ''\n      warn(\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 125 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "scopedPlugin",
            "complexity": 8,
            "lineCount": 53,
            "parameterCount": 1,
            "snippet": "(id = '') => {\n  const keyframes = Object.create(null)\n  const shortId = id.replace(/^data-v-/, '')\n  return {\n    postcssPlugin: 'vue-sfc-scoped',\n    Rule(rule) {\n      processRule(id, rule)\n    },\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-sfc/src/template/transformAssetUrl.ts",
        "criticalFunctions": [
          {
            "name": "transformAssetUrl",
            "complexity": 23,
            "lineCount": 64,
            "parameterCount": 3,
            "snippet": "(\n  node,\n  context,\n  options: AssetURLOptions = defaultAssetUrlOptions,\n) => {\n  if (node.type === NodeTypes.ELEMENT) {\n    if (!node.props.length) {\n      return\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 16,
            "lineCount": 44,
            "parameterCount": 2,
            "snippet": "(attr, index) => {\n      if (\n        attr.type !== NodeTypes.ATTRIBUTE ||\n        !assetAttrs.includes(attr.name) ||\n        !attr.value ||\n        isExternalUrl(attr.value.content) ||\n        isDataUrl(attr.value.content) ||\n        attr.value.content[0] === '#' ||\n  // ... more code ...",
            "issues": []
          },
          {
            "name": "getImportsExpressionExp",
            "complexity": 9,
            "lineCount": 67,
            "parameterCount": 4,
            "snippet": "function getImportsExpressionExp(\n  path: string | null,\n  hash: string | null,\n  loc: SourceLocation,\n  context: TransformContext,\n): ExpressionNode {\n  if (path) {\n    let name: string\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-sfc/src/template/transformSrcset.ts",
        "criticalFunctions": [
          {
            "name": "transformSrcset",
            "complexity": 28,
            "lineCount": 134,
            "parameterCount": 3,
            "snippet": "(\n  node,\n  context,\n  options: Required<AssetURLOptions> = defaultAssetUrlOptions,\n) => {\n  if (node.type === NodeTypes.ELEMENT) {\n    if (srcsetTags.includes(node.tag) && node.props.length) {\n      node.props.forEach((attr, index) => {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 134 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 25,
            "lineCount": 124,
            "parameterCount": 2,
            "snippet": "(attr, index) => {\n        if (attr.name === 'srcset' && attr.type === NodeTypes.ATTRIBUTE) {\n          if (!attr.value) return\n          const value = attr.value.content\n          if (!value) return\n          const imageCandidates: ImageCandidate[] = value.split(',').map(s => {\n            const [url, descriptor] = s\n              .replace(escapedSpaceCharacters, ' ')\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 124 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrInjectCssVars.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrInjectFallthroughAttrs.ts",
        "criticalFunctions": [
          {
            "name": "ssrInjectFallthroughAttrs",
            "complexity": 24,
            "lineCount": 55,
            "parameterCount": 2,
            "snippet": "(node, context) => {\n  if (node.type === NodeTypes.ROOT) {\n    context.identifiers._attrs = 1\n  }\n  if (\n    node.type === NodeTypes.ELEMENT &&\n    node.tagType === ElementTypes.COMPONENT &&\n    (node.tag === 'transition' ||\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrTransformComponent.ts",
        "criticalFunctions": [
          {
            "name": "ssrTransformComponent",
            "complexity": 16,
            "lineCount": 112,
            "parameterCount": 2,
            "snippet": "(node, context) => {\n  if (\n    node.type !== NodeTypes.ELEMENT ||\n    node.tagType !== ElementTypes.COMPONENT\n  ) {\n    return\n  }\n  const component = resolveComponentType(node, context, true /* ssr */)\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 112 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ssrProcessComponent",
            "complexity": 11,
            "lineCount": 66,
            "parameterCount": 3,
            "snippet": "export function ssrProcessComponent(\n  node: ComponentNode,\n  context: SSRTransformContext,\n  parent: { children: TemplateChildNode[] },\n): void {\n  const component = componentTypeMap.get(node)!\n  if (!node.ssrCodegenNode) {\n    if (component === TELEPORT) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ssrPostTransformComponent",
            "complexity": 9,
            "lineCount": 78,
            "parameterCount": 0,
            "snippet": "function ssrPostTransformComponent() {\n    if (clonedNode.children.length) {\n      buildSlots(clonedNode, context, (props, vFor, children) => {\n        vnodeBranches.push(\n          createVNodeSlotBranch(props, vFor, children, context),\n        )\n        return createFunctionExpression(undefined)\n      })\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 78 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createVNodeSlotBranch",
            "complexity": 5,
            "lineCount": 52,
            "parameterCount": 4,
            "snippet": "function createVNodeSlotBranch(\n  slotProps: ExpressionNode | undefined,\n  vFor: DirectiveNode | undefined,\n  children: TemplateChildNode[],\n  parentContext: TransformContext,\n): ReturnStatement {\n  const rawOptions = rawOptionsMap.get(parentContext.root)!\n  const subOptions = {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrTransformElement.ts",
        "criticalFunctions": [
          {
            "name": "ssrTransformElement",
            "complexity": 59,
            "lineCount": 290,
            "parameterCount": 2,
            "snippet": "(node, context) => {\n  if (\n    node.type !== NodeTypes.ELEMENT ||\n    node.tagType !== ElementTypes.ELEMENT\n  ) {\n    return\n  }\n  return function ssrPostTransformElement() {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 59 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 290 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ssrPostTransformElement",
            "complexity": 57,
            "lineCount": 281,
            "parameterCount": 0,
            "snippet": "function ssrPostTransformElement() {\n    const openTag: TemplateLiteral['elements'] = [`<${node.tag}`]\n    const needTagForRuntime =\n      node.tag === 'textarea' || node.tag.indexOf('-') > 0\n    const hasDynamicVBind = hasDynamicKeyVBind(node)\n    const hasCustomDir = node.props.some(\n      p => p.type === NodeTypes.DIRECTIVE && !isBuiltInDirective(p.name),\n    )\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 57 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 281 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrTransformSlotOutlet.ts",
        "criticalFunctions": [
          {
            "name": "ssrTransformSlotOutlet",
            "complexity": 14,
            "lineCount": 52,
            "parameterCount": 2,
            "snippet": "(node, context) => {\n  if (isSlotOutlet(node)) {\n    const { slotName, slotProps } = processSlotOutlet(node, context)\n    const args = [\n      `_ctx.$slots`,\n      slotName,\n      slotProps || `{}`,\n      `null`,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-ssr/src/transforms/ssrVModel.ts",
        "criticalFunctions": [
          {
            "name": "ssrTransformModel",
            "complexity": 21,
            "lineCount": 165,
            "parameterCount": 3,
            "snippet": "(dir, node, context) => {\n  const model = dir.exp!\n  function checkDuplicatedValue() {\n    const value = findProp(node, 'value')\n    if (value) {\n      context.onError(\n        createDOMCompilerError(\n          DOMErrorCodes.X_V_MODEL_UNNECESSARY_VALUE,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 165 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/runtime-core/src/compat/compatConfig.ts",
        "criticalFunctions": [
          {
            "name": "warnDeprecation",
            "complexity": 16,
            "lineCount": 56,
            "parameterCount": 3,
            "snippet": "export function warnDeprecation(\n  key: DeprecationTypes,\n  instance: ComponentInternalInstance | null,\n  ...args: any[]\n): void {\n  if (!__DEV__) {\n    return\n  }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/compat/componentVModel.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/runtime-core/src/compat/global.ts",
        "criticalFunctions": [
          {
            "name": "installCompatMount",
            "complexity": 32,
            "lineCount": 153,
            "parameterCount": 3,
            "snippet": "function installCompatMount(\n  app: App,\n  context: AppContext,\n  render: RootRenderFunction,\n) {\n  let isMounted = false\n  /**\n   * Vue 2 supports the behavior of creating a component instance but not\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 153 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 32,
            "lineCount": 140,
            "parameterCount": 1,
            "snippet": "options => {\n    const component = app._component\n    const vnode = createVNode(component, options.propsData || null)\n    vnode.appContext = context\n    const hasNoRender =\n      !isFunction(component) && !component.render && !component.template\n    const emptyRender = () => {}\n    const instance = createComponentInstance(vnode, null, null)\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 140 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createCompatVue",
            "complexity": 20,
            "lineCount": 188,
            "parameterCount": 2,
            "snippet": "export function createCompatVue(\n  createApp: CreateAppFunction<Element>,\n  createSingletonApp: CreateAppFunction<Element>,\n): CompatVue {\n  singletonApp = createSingletonApp({})\n  const Vue: CompatVue = (singletonCtor = function Vue(\n    options: ComponentOptions = {},\n  ) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 188 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 20,
            "lineCount": 81,
            "parameterCount": 1,
            "snippet": "(selectorOrEl?: string | Element) => {\n      if (isMounted) {\n        __DEV__ && warn(`Root instance is already mounted.`)\n        return\n      }\n      let container: Element\n      if (typeof selectorOrEl === 'string') {\n        const result = document.querySelector(selectorOrEl)\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 81 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "extendCtor",
            "complexity": 7,
            "lineCount": 56,
            "parameterCount": 2,
            "snippet": "function extendCtor(this: any, extendOptions: ComponentOptions = {}) {\n    assertCompatEnabled(DeprecationTypes.GLOBAL_EXTEND, null)\n    if (isFunction(extendOptions)) {\n      extendOptions = extendOptions.options\n    }\n    if (extendCache.has(extendOptions)) {\n      return extendCache.get(extendOptions)\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/compat/renderFn.ts",
        "criticalFunctions": [
          {
            "name": "convertLegacyProps",
            "complexity": 18,
            "lineCount": 49,
            "parameterCount": 2,
            "snippet": "function convertLegacyProps(\n  legacyProps: LegacyVNodeProps | undefined,\n  type: any,\n): (Data & VNodeProps) | null {\n  if (!legacyProps) {\n    return null\n  }\n  const converted: Data & VNodeProps = {}\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "convertLegacySlots",
            "complexity": 16,
            "lineCount": 44,
            "parameterCount": 1,
            "snippet": "function convertLegacySlots(vnode: VNode): VNode {\n  const { props, children } = vnode\n  let slots: Record<string, any> | undefined\n  if (vnode.shapeFlag & ShapeFlags.COMPONENT && isArray(children)) {\n    slots = {}\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i]\n      const slotName =\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "compatH",
            "complexity": 12,
            "lineCount": 52,
            "parameterCount": 3,
            "snippet": "export function compatH(\n  type: any,\n  propsOrChildren?: any,\n  children?: any,\n): VNode {\n  if (!type) {\n    type = Comment\n  }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/compat/renderHelpers.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/components/BaseTransition.ts",
        "criticalFunctions": [
          {
            "name": "resolveTransitionHooks",
            "complexity": 28,
            "lineCount": 160,
            "parameterCount": 5,
            "snippet": "export function resolveTransitionHooks(\n  vnode: VNode,\n  props: BaseTransitionProps<any>,\n  state: TransitionState,\n  instance: ComponentInternalInstance,\n  postClone?: (hooks: TransitionHooks) => void,\n): TransitionHooks {\n  const {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 160 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "setup",
            "complexity": 23,
            "lineCount": 117,
            "parameterCount": 2,
            "snippet": "setup(props: BaseTransitionProps, { slots }: SetupContext) {\n    const instance = getCurrentInstance()!\n    const state = useTransitionState()\n    return () => {\n      const children =\n        slots.default && getTransitionRawChildren(slots.default(), true)\n      if (!children || !children.length) {\n        return\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 117 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 23,
            "lineCount": 112,
            "parameterCount": 0,
            "snippet": "() => {\n      const children =\n        slots.default && getTransitionRawChildren(slots.default(), true)\n      if (!children || !children.length) {\n        return\n      }\n      const child: VNode = findNonCommentChild(children)\n      const rawProps = toRaw(props)\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 112 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/components/KeepAlive.ts",
        "criticalFunctions": [
          {
            "name": "setup",
            "complexity": 56,
            "lineCount": 275,
            "parameterCount": 2,
            "snippet": "setup(props: KeepAliveProps, { slots }: SetupContext) {\n    const instance = getCurrentInstance()!\n    const sharedContext = instance.ctx as KeepAliveContext\n    if (__SSR__ && !sharedContext.renderer) {\n      return () => {\n        const children = slots.default && slots.default()\n        return children && children.length === 1 ? children[0] : children\n      }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 56 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 275 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 24,
            "lineCount": 96,
            "parameterCount": 0,
            "snippet": "() => {\n      pendingCacheKey = null\n      if (!slots.default) {\n        return (current = null)\n      }\n      const children = slots.default()\n      const rawVNode = children[0]\n      if (children.length > 1) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 96 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/components/Suspense.ts",
        "criticalFunctions": [
          {
            "name": "createSuspenseBoundary",
            "complexity": 57,
            "lineCount": 320,
            "parameterCount": 11,
            "snippet": "function createSuspenseBoundary(\n  vnode: VNode,\n  parentSuspense: SuspenseBoundary | null,\n  parentComponent: ComponentInternalInstance | null,\n  container: RendererElement,\n  hiddenContainer: RendererElement,\n  anchor: RendererNode | null,\n  namespace: ElementNamespace,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 57 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 320 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "11 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "resolve",
            "complexity": 25,
            "lineCount": 109,
            "parameterCount": 2,
            "snippet": "resolve(resume = false, sync = false) {\n      if (__DEV__) {\n        if (!resume && !suspense.pendingBranch) {\n          throw new Error(\n            `suspense.resolve() is called without a pending branch.`,\n          )\n        }\n        if (suspense.isUnmounted) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 109 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "patchSuspense",
            "complexity": 19,
            "lineCount": 194,
            "parameterCount": 9,
            "snippet": "function patchSuspense(\n  n1: VNode,\n  n2: VNode,\n  container: RendererElement,\n  anchor: RendererNode | null,\n  parentComponent: ComponentInternalInstance | null,\n  namespace: ElementNamespace,\n  slotScopeIds: string[] | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 194 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "9 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "registerDep",
            "complexity": 14,
            "lineCount": 60,
            "parameterCount": 3,
            "snippet": "registerDep(instance, setupRenderEffect, optimized) {\n      const isInPendingSuspense = !!suspense.pendingBranch\n      if (isInPendingSuspense) {\n        suspense.deps++\n      }\n      const hydratedEl = instance.vnode.el\n      instance\n        .asyncDep!.catch(err => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 60 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "process",
            "complexity": 5,
            "lineCount": 57,
            "parameterCount": 10,
            "snippet": "process(\n    n1: VNode | null,\n    n2: VNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    namespace: ElementNamespace,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "10 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/components/Teleport.ts",
        "criticalFunctions": [
          {
            "name": "process",
            "complexity": 40,
            "lineCount": 217,
            "parameterCount": 10,
            "snippet": "process(\n    n1: TeleportVNode | null,\n    n2: TeleportVNode,\n    container: RendererElement,\n    anchor: RendererNode | null,\n    parentComponent: ComponentInternalInstance | null,\n    parentSuspense: SuspenseBoundary | null,\n    namespace: ElementNamespace,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 40 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 217 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "10 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "hydrateTeleport",
            "complexity": 15,
            "lineCount": 87,
            "parameterCount": 8,
            "snippet": "function hydrateTeleport(\n  node: Node,\n  vnode: TeleportVNode,\n  parentComponent: ComponentInternalInstance | null,\n  parentSuspense: SuspenseBoundary | null,\n  slotScopeIds: string[] | null,\n  optimized: boolean,\n  {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/helpers/renderList.ts",
        "criticalFunctions": [
          {
            "name": "renderList",
            "complexity": 21,
            "lineCount": 62,
            "parameterCount": 4,
            "snippet": "export function renderList(\n  source: any,\n  renderItem: (...args: any[]) => VNodeChild,\n  cache?: any[],\n  index?: number,\n): VNodeChild[] {\n  let ret: VNodeChild[]\n  const cached = (cache && cache[index!]) as VNode[] | undefined\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/helpers/renderSlot.ts",
        "criticalFunctions": [
          {
            "name": "renderSlot",
            "complexity": 27,
            "lineCount": 76,
            "parameterCount": 5,
            "snippet": "export function renderSlot(\n  slots: Slots,\n  name: string,\n  props: Data = {},\n  fallback?: () => VNodeArrayChildren,\n  noSlotted?: boolean,\n): VNode {\n  if (\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 76 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/helpers/resolveAssets.ts",
        "criticalFunctions": [
          {
            "name": "resolveAsset",
            "complexity": 17,
            "lineCount": 55,
            "parameterCount": 4,
            "snippet": "function resolveAsset(\n  type: AssetTypes,\n  name: string,\n  warnMissing = true,\n  maybeSelfReference = false,\n) {\n  const instance = currentRenderingInstance || currentInstance\n  if (instance) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-core/src/helpers/useModel.ts",
        "criticalFunctions": [
          {
            "name": "useModel",
            "complexity": 24,
            "lineCount": 99,
            "parameterCount": 3,
            "snippet": "export function useModel(\n  props: Record<string, any>,\n  name: string,\n  options: DefineModelOptions = EMPTY_OBJ,\n): Ref {\n  const i = getCurrentInstance()!\n  if (__DEV__ && !i) {\n    warn(`useModel() called without active instance.`)\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 99 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 17,
            "lineCount": 62,
            "parameterCount": 2,
            "snippet": "(track, trigger) => {\n    let localValue: any\n    let prevSetValue: any = EMPTY_OBJ\n    let prevEmittedValue: any\n    watchSyncEffect(() => {\n      const propValue = props[camelizedName]\n      if (hasChanged(localValue, propValue)) {\n        localValue = propValue\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-dom/src/components/Transition.ts",
        "criticalFunctions": [
          {
            "name": "resolveTransitionProps",
            "complexity": 39,
            "lineCount": 178,
            "parameterCount": 1,
            "snippet": "export function resolveTransitionProps(\n  rawProps: TransitionProps,\n): BaseTransitionProps<Element> {\n  const baseProps: BaseTransitionProps<Element> = {}\n  for (const key in rawProps) {\n    if (!(key in DOMTransitionPropsValidators)) {\n      ;(baseProps as any)[key] = (rawProps as any)[key]\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 39 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 178 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getTransitionInfo",
            "complexity": 11,
            "lineCount": 59,
            "parameterCount": 2,
            "snippet": "export function getTransitionInfo(\n  el: Element,\n  expectedType?: TransitionProps['type'],\n): CSSTransitionInfo {\n  const styles = window.getComputedStyle(el) as Pick<\n    CSSStyleDeclaration,\n    StylePropertiesKey\n  >\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-dom/src/components/TransitionGroup.ts",
        "criticalFunctions": [
          {
            "name": "setup",
            "complexity": 22,
            "lineCount": 109,
            "parameterCount": 2,
            "snippet": "setup(props: TransitionGroupProps, { slots }: SetupContext) {\n    const instance = getCurrentInstance()!\n    const state = useTransitionState()\n    let prevChildren: VNode[]\n    let children: VNode[]\n    onUpdated(() => {\n      if (!prevChildren.length) {\n        return\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 109 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 14,
            "lineCount": 55,
            "parameterCount": 0,
            "snippet": "() => {\n      const rawProps = toRaw(props)\n      const cssTransitionProps = resolveTransitionProps(rawProps)\n      let tag = rawProps.tag || Fragment\n      if (\n        __COMPAT__ &&\n        !rawProps.tag &&\n        compatUtils.checkCompatEnabled(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-dom/src/directives/vModel.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-dom/src/directives/vOn.ts",
        "criticalFunctions": [
          {
            "name": "withKeys",
            "complexity": 19,
            "lineCount": 72,
            "parameterCount": 2,
            "snippet": "<T extends (event: KeyboardEvent) => any>(\n  fn: T & { _withKeys?: { [k: string]: T } },\n  modifiers: string[],\n): T => {\n  let globalKeyCodes: LegacyConfig['keyCodes']\n  let instance: ComponentInternalInstance | null = null\n  if (__COMPAT__) {\n    instance = getCurrentInstance()\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-dom/src/helpers/useCssVars.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/server-renderer/src/helpers/ssrRenderAttrs.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/server-renderer/src/helpers/ssrRenderSlot.ts",
        "criticalFunctions": [
          {
            "name": "ssrRenderSlotInner",
            "complexity": 16,
            "lineCount": 79,
            "parameterCount": 8,
            "snippet": "export function ssrRenderSlotInner(\n  slots: Slots | SSRSlots,\n  slotName: string,\n  slotProps: Props,\n  fallbackRenderFn: (() => void) | null,\n  push: PushFn,\n  parentComponent: ComponentInternalInstance,\n  slotScopeId?: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ssrRenderSlot",
            "complexity": 1,
            "lineCount": 22,
            "parameterCount": 7,
            "snippet": "export function ssrRenderSlot(\n  slots: Slots | SSRSlots,\n  slotName: string,\n  slotProps: Props,\n  fallbackRenderFn: (() => void) | null,\n  push: PushFn,\n  parentComponent: ComponentInternalInstance,\n  slotScopeId?: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-dom/src/modules/attrs.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/runtime-dom/src/modules/events.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/runtime-dom/src/modules/props.ts",
        "criticalFunctions": [
          {
            "name": "patchDOMProp",
            "complexity": 33,
            "lineCount": 106,
            "parameterCount": 5,
            "snippet": "export function patchDOMProp(\n  el: any,\n  key: string,\n  value: any,\n  parentComponent: any,\n  attrName?: string,\n): void {\n  if (key === 'innerHTML' || key === 'textContent') {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 33 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 106 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/runtime-dom/src/modules/style.ts",
        "criticalFunctions": [
          {
            "name": "patchStyle",
            "complexity": 18,
            "lineCount": 52,
            "parameterCount": 3,
            "snippet": "export function patchStyle(el: Element, prev: Style, next: Style): void {\n  const style = (el as HTMLElement).style\n  const isCssString = isString(next)\n  let hasControlledDisplay = false\n  if (next && !isCssString) {\n    if (prev) {\n      if (!isString(prev)) {\n        for (const key in prev) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      }
    ]
  },
  "durationMs": 18442
}