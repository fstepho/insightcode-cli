{
  "project": "eslint",
  "repo": "https://github.com/eslint/eslint.git",
  "type": "code analysis tool",
  "stars": "26k",
  "stableVersion": "v9.30.1",
  "description": "JavaScript linter",
  "category": "large",
  "emblematicFiles": {
    "coreFiles": [
      "lib/linter/linter.js",
      "lib/eslint/eslint.js",
      "lib/cli-engine/cli-engine.js"
    ],
    "architecturalFiles": [
      "lib/config/config-array-factory.js",
      "lib/rule-tester/rule-tester.js"
    ],
    "performanceCriticalFiles": [
      "lib/source-code/source-code.js",
      "lib/linter/node-event-generator.js"
    ],
    "complexAlgorithmFiles": [
      "lib/linter/code-path-analysis/code-path-analyzer.js",
      "lib/config/flat-config-array.js"
    ]
  },
  "analysis": {
    "details": [
      {
        "file": "Makefile.js",
        "metrics": {
          "complexity": 48,
          "loc": 782,
          "functionCount": 29,
          "duplicationRatio": 0.01
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 1.92
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 400,
            "excessRatio": 1.96
          }
        ],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "cypress.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 48,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "eslint.config.js",
        "metrics": {
          "complexity": 2,
          "loc": 137,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "webpack.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 49,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "conf/default-cli-options.js",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "conf/ecma-version.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "conf/globals.js",
        "metrics": {
          "complexity": 1,
          "loc": 137,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "bin/eslint.js",
        "metrics": {
          "complexity": 10,
          "loc": 89,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/api.js",
        "metrics": {
          "complexity": 2,
          "loc": 18,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.31,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/cli.js",
        "metrics": {
          "complexity": 43,
          "loc": 550,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.15
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.83
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 118,
            "threshold": 10,
            "excessRatio": 2.7,
            "function": "translateOptions"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 1,
          "instability": 0.91,
          "cohesionScore": 0.35,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/config-api.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/options.js",
        "metrics": {
          "complexity": 1,
          "loc": 418,
          "functionCount": 0,
          "duplicationRatio": 0.03
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.39
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 73
      },
      {
        "file": "lib/universal.js",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.33,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/unsupported-api.js",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.33,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/all-files-ignored.js",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/all-matched-files-ignored.js",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/config-file-missing.js",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/config-plugin-missing.js",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/config-serialize-function.js",
        "metrics": {
          "complexity": 1,
          "loc": 24,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/eslintrc-incompat.js",
        "metrics": {
          "complexity": 1,
          "loc": 78,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/eslintrc-plugins.js",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/extend-config-missing.js",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/failed-to-read-json.js",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/file-not-found.js",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/invalid-rule-options.js",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/invalid-rule-severity.js",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/no-config-found.js",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/plugin-conflict.js",
        "metrics": {
          "complexity": 1,
          "loc": 15,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/plugin-invalid.js",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/plugin-missing.js",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/print-config-with-directory-path.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/shared.js",
        "metrics": {
          "complexity": 2,
          "loc": 10,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "messages/whitespace-found.js",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": ".trunk/configs/svgo.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 15,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/base.js",
        "metrics": {
          "complexity": 1,
          "loc": 287,
          "functionCount": 0,
          "duplicationRatio": 0.09
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.44
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 88
      },
      {
        "file": "packages/eslint-config-eslint/cjs.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/formatting.js",
        "metrics": {
          "complexity": 1,
          "loc": 133,
          "functionCount": 0,
          "duplicationRatio": 0.05
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/nodejs.js",
        "metrics": {
          "complexity": 1,
          "loc": 35,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/config/config-loader.js",
        "metrics": {
          "complexity": 78,
          "loc": 369,
          "functionCount": 26,
          "duplicationRatio": 0.01
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.23
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.5,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/config/config.js",
        "metrics": {
          "complexity": 97,
          "loc": 373,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.85
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.24
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 68,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "throwRuleNotFoundError"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 5,
          "instability": 0.38,
          "cohesionScore": 0.44,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/config/default-config.js",
        "metrics": {
          "complexity": 1,
          "loc": 48,
          "functionCount": 0,
          "duplicationRatio": 0.02
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.29,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/config/flat-config-array.js",
        "metrics": {
          "complexity": 17,
          "loc": 90,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "healthScore": 67
      },
      {
        "file": "lib/config/flat-config-schema.js",
        "metrics": {
          "complexity": 38,
          "loc": 335,
          "functionCount": 15,
          "duplicationRatio": 0.03
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.12
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.33,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "healthScore": 15
      },
      {
        "file": "lib/eslint/eslint-helpers.js",
        "metrics": {
          "complexity": 113,
          "loc": 581,
          "functionCount": 22,
          "duplicationRatio": 0.17
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.65
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.94
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 755,
            "threshold": 10,
            "excessRatio": 4.8,
            "function": "processOptions"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.14
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.33,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/eslint/eslint.js",
        "metrics": {
          "complexity": 126,
          "loc": 681,
          "functionCount": 25,
          "duplicationRatio": 0.11
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.3
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.27
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 146,
            "threshold": 10,
            "excessRatio": 1.4,
            "function": "getOrFindUsedDeprecatedRules"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 4,
          "instability": 0.69,
          "cohesionScore": 0.37,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/eslint/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/eslint/legacy-eslint.js",
        "metrics": {
          "complexity": 129,
          "loc": 471,
          "functionCount": 23,
          "duplicationRatio": 0.2
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.45
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.57
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 171,
            "threshold": 10,
            "excessRatio": 4.7,
            "function": "processOptions"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.31
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.33,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rule-tester/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rule-tester/rule-tester.js",
        "metrics": {
          "complexity": 147,
          "loc": 1069,
          "functionCount": 30,
          "duplicationRatio": 0.01
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 7.35
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.07
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 678,
            "threshold": 10,
            "excessRatio": 2.3,
            "function": "runRuleForItem"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 1041,
            "threshold": 10,
            "excessRatio": 4,
            "function": "testInvalidTemplate"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 1,
          "instability": 0.91,
          "cohesionScore": 0.31,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/linter/apply-disable-directives.js",
        "metrics": {
          "complexity": 33,
          "loc": 361,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.2
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 311,
            "threshold": 10,
            "excessRatio": 1.4,
            "function": "applyDirectives"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 13
      },
      {
        "file": "lib/linter/esquery.js",
        "metrics": {
          "complexity": 41,
          "loc": 165,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.05
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 157,
            "threshold": 10,
            "excessRatio": 1.8,
            "function": "analyzeSelector"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 18
      },
      {
        "file": "lib/linter/file-context.js",
        "metrics": {
          "complexity": 6,
          "loc": 47,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/linter/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 4,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/linter/interpolate.js",
        "metrics": {
          "complexity": 3,
          "loc": 21,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/linter/linter.js",
        "metrics": {
          "complexity": 229,
          "loc": 1814,
          "functionCount": 51,
          "duplicationRatio": 0.03
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 11.45
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.81
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 908,
            "threshold": 10,
            "excessRatio": 1.4,
            "function": "normalizeVerifyOptions"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 24,
          "incomingDependencies": 2,
          "instability": 0.92,
          "cohesionScore": 0.44,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/linter/report-translator.js",
        "metrics": {
          "complexity": 41,
          "loc": 237,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.05
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.19
          }
        ],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.56,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 22
      },
      {
        "file": "lib/linter/rule-fixer.js",
        "metrics": {
          "complexity": 10,
          "loc": 48,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/linter/rules.js",
        "metrics": {
          "complexity": 8,
          "loc": 29,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/linter/source-code-fixer.js",
        "metrics": {
          "complexity": 12,
          "loc": 80,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 88
      },
      {
        "file": "lib/linter/source-code-traverser.js",
        "metrics": {
          "complexity": 28,
          "loc": 156,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 47
      },
      {
        "file": "lib/linter/source-code-visitor.js",
        "metrics": {
          "complexity": 7,
          "loc": 29,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/linter/timing.js",
        "metrics": {
          "complexity": 10,
          "loc": 92,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/linter/vfile.js",
        "metrics": {
          "complexity": 8,
          "loc": 30,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/cli-engine/cli-engine.js",
        "metrics": {
          "complexity": 127,
          "loc": 620,
          "functionCount": 24,
          "duplicationRatio": 0.14
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.35
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.07
          }
        ],
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 2,
          "instability": 0.78,
          "cohesionScore": 0.48,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/cli-engine/file-enumerator.js",
        "metrics": {
          "complexity": 63,
          "loc": 279,
          "functionCount": 15,
          "duplicationRatio": 0.02
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.15
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.4
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/cli-engine/hash.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/cli-engine/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/cli-engine/lint-result-cache.js",
        "metrics": {
          "complexity": 17,
          "loc": 92,
          "functionCount": 6,
          "duplicationRatio": 0.03
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 67
      },
      {
        "file": "lib/cli-engine/load-rules.js",
        "metrics": {
          "complexity": 1,
          "loc": 19,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/services/parser-service.js",
        "metrics": {
          "complexity": 4,
          "loc": 31,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/services/processor-service.js",
        "metrics": {
          "complexity": 5,
          "loc": 48,
          "functionCount": 2,
          "duplicationRatio": 0.02
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/services/suppressions-service.js",
        "metrics": {
          "complexity": 33,
          "loc": 163,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 42
      },
      {
        "file": "lib/services/warning-service.js",
        "metrics": {
          "complexity": 6,
          "loc": 36,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/types/config-api.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/types/index.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1577,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.58
          }
        ],
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 51
      },
      {
        "file": "lib/types/rules.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1841,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.84
          }
        ],
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 48
      },
      {
        "file": "lib/types/universal.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/types/use-at-your-own-risk.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 40,
          "functionCount": 0,
          "duplicationRatio": 0.14
        },
        "issues": [],
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/shared/ajv.js",
        "metrics": {
          "complexity": 1,
          "loc": 17,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/shared/assert.js",
        "metrics": {
          "complexity": 3,
          "loc": 7,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/shared/ast-utils.js",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/shared/deep-merge-arrays.js",
        "metrics": {
          "complexity": 14,
          "loc": 31,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 82
      },
      {
        "file": "lib/shared/directives.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/shared/flags.js",
        "metrics": {
          "complexity": 3,
          "loc": 67,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/shared/logging.js",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/shared/naming.js",
        "metrics": {
          "complexity": 13,
          "loc": 57,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 85
      },
      {
        "file": "lib/shared/option-utils.js",
        "metrics": {
          "complexity": 10,
          "loc": 42,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/shared/relative-module-resolver.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/shared/runtime-info.js",
        "metrics": {
          "complexity": 25,
          "loc": 93,
          "functionCount": 7,
          "duplicationRatio": 0.07
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 100,
            "threshold": 10,
            "excessRatio": 1.3,
            "function": "getNpmPackageVersion"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 43
      },
      {
        "file": "lib/shared/serialization.js",
        "metrics": {
          "complexity": 18,
          "loc": 45,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 33,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "isSerializable"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 58
      },
      {
        "file": "lib/shared/severity.js",
        "metrics": {
          "complexity": 10,
          "loc": 29,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/shared/stats.js",
        "metrics": {
          "complexity": 2,
          "loc": 12,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/shared/string-utils.js",
        "metrics": {
          "complexity": 5,
          "loc": 24,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 100,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/shared/text-table.js",
        "metrics": {
          "complexity": 1,
          "loc": 30,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/shared/traverser.js",
        "metrics": {
          "complexity": 29,
          "loc": 96,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.45
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "healthScore": 46
      },
      {
        "file": "lib/rules/accessor-pairs.js",
        "metrics": {
          "complexity": 54,
          "loc": 230,
          "functionCount": 12,
          "duplicationRatio": 0.38
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.7
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.15
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 258,
            "threshold": 10,
            "excessRatio": 1.8,
            "function": "checkList"
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.27
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/array-bracket-newline.js",
        "metrics": {
          "complexity": 27,
          "loc": 200,
          "functionCount": 7,
          "duplicationRatio": 0.32
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 227,
            "threshold": 10,
            "excessRatio": 1.5,
            "function": "check"
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.08
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 7
      },
      {
        "file": "lib/rules/array-bracket-spacing.js",
        "metrics": {
          "complexity": 39,
          "loc": 214,
          "functionCount": 8,
          "duplicationRatio": 0.53
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.95
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.07
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 227,
            "threshold": 10,
            "excessRatio": 2.7,
            "function": "validateArraySpacing"
          },
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.07
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/array-callback-return.js",
        "metrics": {
          "complexity": 45,
          "loc": 340,
          "functionCount": 8,
          "duplicationRatio": 0.3
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.13
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 69,
            "threshold": 10,
            "excessRatio": 1.6,
            "function": "getArrayMethodName"
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 293,
            "threshold": 10,
            "excessRatio": 1.3,
            "function": "checkLastSegment"
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.01
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/array-element-newline.js",
        "metrics": {
          "complexity": 29,
          "loc": 263,
          "functionCount": 5,
          "duplicationRatio": 0.23
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.45
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.31
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 256,
            "threshold": 10,
            "excessRatio": 1.3,
            "function": "check"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.55
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 11
      },
      {
        "file": "lib/rules/arrow-body-style.js",
        "metrics": {
          "complexity": 31,
          "loc": 336,
          "functionCount": 4,
          "duplicationRatio": 0.14
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.12
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 140,
            "threshold": 10,
            "excessRatio": 2.1,
            "function": "validate"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 12
      },
      {
        "file": "lib/rules/arrow-parens.js",
        "metrics": {
          "complexity": 9,
          "loc": 163,
          "functionCount": 5,
          "duplicationRatio": 0.29
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.93
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 73
      },
      {
        "file": "lib/rules/arrow-spacing.js",
        "metrics": {
          "complexity": 9,
          "loc": 134,
          "functionCount": 3,
          "duplicationRatio": 0.35
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.18
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 62
      },
      {
        "file": "lib/rules/block-scoped-var.js",
        "metrics": {
          "complexity": 8,
          "loc": 79,
          "functionCount": 5,
          "duplicationRatio": 0.13
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/block-spacing.js",
        "metrics": {
          "complexity": 18,
          "loc": 144,
          "functionCount": 3,
          "duplicationRatio": 0.2
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 107,
            "threshold": 10,
            "excessRatio": 1.2,
            "function": "checkSpacingInsideBraces"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.34
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 44
      },
      {
        "file": "lib/rules/brace-style.js",
        "metrics": {
          "complexity": 20,
          "loc": 218,
          "functionCount": 3,
          "duplicationRatio": 0.24
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.09
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 116,
            "threshold": 10,
            "excessRatio": 1.3,
            "function": "validateCurlyPair"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.57
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 26
      },
      {
        "file": "lib/rules/callback-return.js",
        "metrics": {
          "complexity": 17,
          "loc": 138,
          "functionCount": 4,
          "duplicationRatio": 0.19
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.24
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 56
      },
      {
        "file": "lib/rules/camelcase.js",
        "metrics": {
          "complexity": 35,
          "loc": 271,
          "functionCount": 7,
          "duplicationRatio": 0.14
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.35
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 166,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "equalsToOriginalName"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 23
      },
      {
        "file": "lib/rules/capitalized-comments.js",
        "metrics": {
          "complexity": 28,
          "loc": 168,
          "functionCount": 7,
          "duplicationRatio": 0.07
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 207,
            "threshold": 10,
            "excessRatio": 1.5,
            "function": "isCommentValid"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 41
      },
      {
        "file": "lib/rules/class-methods-use-this.js",
        "metrics": {
          "complexity": 32,
          "loc": 158,
          "functionCount": 8,
          "duplicationRatio": 0.16
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 142,
            "threshold": 10,
            "excessRatio": 1.5,
            "function": "isIncludedInstanceMethod"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.08
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 30
      },
      {
        "file": "lib/rules/comma-dangle.js",
        "metrics": {
          "complexity": 51,
          "loc": 280,
          "functionCount": 10,
          "duplicationRatio": 0.13
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.55
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.4
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 181,
            "threshold": 10,
            "excessRatio": 1.3,
            "function": "getLastItem"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/comma-spacing.js",
        "metrics": {
          "complexity": 3,
          "loc": 145,
          "functionCount": 2,
          "duplicationRatio": 0.3
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.99
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 72
      },
      {
        "file": "lib/rules/comma-style.js",
        "metrics": {
          "complexity": 24,
          "loc": 288,
          "functionCount": 4,
          "duplicationRatio": 0.16
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.44
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 173,
            "threshold": 10,
            "excessRatio": 1.2,
            "function": "validateCommaItemSpacing"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.1
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 23
      },
      {
        "file": "lib/rules/complexity.js",
        "metrics": {
          "complexity": 1,
          "loc": 133,
          "functionCount": 1,
          "duplicationRatio": 0.18
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.19
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 90
      },
      {
        "file": "lib/rules/computed-property-spacing.js",
        "metrics": {
          "complexity": 5,
          "loc": 181,
          "functionCount": 5,
          "duplicationRatio": 0.47
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.56
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 40
      },
      {
        "file": "lib/rules/consistent-return.js",
        "metrics": {
          "complexity": 19,
          "loc": 151,
          "functionCount": 3,
          "duplicationRatio": 0.17
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 94,
            "threshold": 10,
            "excessRatio": 1.2,
            "function": "checkLastSegment"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.16
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 45
      },
      {
        "file": "lib/rules/consistent-this.js",
        "metrics": {
          "complexity": 14,
          "loc": 115,
          "functionCount": 4,
          "duplicationRatio": 0.05
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 82
      },
      {
        "file": "lib/rules/constructor-super.js",
        "metrics": {
          "complexity": 32,
          "loc": 256,
          "functionCount": 5,
          "duplicationRatio": 0.12
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.28
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 32,
            "threshold": 10,
            "excessRatio": 2.4,
            "function": "isPossibleConstructor"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 22
      },
      {
        "file": "lib/rules/curly.js",
        "metrics": {
          "complexity": 31,
          "loc": 295,
          "functionCount": 5,
          "duplicationRatio": 0.08
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.48
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 127,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "needsSemicolon"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 27
      },
      {
        "file": "lib/rules/default-case-last.js",
        "metrics": {
          "complexity": 1,
          "loc": 34,
          "functionCount": 0,
          "duplicationRatio": 0.31
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.03
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 65
      },
      {
        "file": "lib/rules/default-case.js",
        "metrics": {
          "complexity": 1,
          "loc": 62,
          "functionCount": 1,
          "duplicationRatio": 0.34
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.13
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 64
      },
      {
        "file": "lib/rules/default-param-last.js",
        "metrics": {
          "complexity": 8,
          "loc": 52,
          "functionCount": 2,
          "duplicationRatio": 0.16
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.06
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 93
      },
      {
        "file": "lib/rules/dot-location.js",
        "metrics": {
          "complexity": 6,
          "loc": 101,
          "functionCount": 2,
          "duplicationRatio": 0.38
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.25
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 59
      },
      {
        "file": "lib/rules/dot-notation.js",
        "metrics": {
          "complexity": 7,
          "loc": 169,
          "functionCount": 1,
          "duplicationRatio": 0.17
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.12
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 91
      },
      {
        "file": "lib/rules/eol-last.js",
        "metrics": {
          "complexity": 1,
          "loc": 103,
          "functionCount": 0,
          "duplicationRatio": 0.28
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.86
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 75
      },
      {
        "file": "lib/rules/eqeqeq.js",
        "metrics": {
          "complexity": 12,
          "loc": 146,
          "functionCount": 5,
          "duplicationRatio": 0.16
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.08
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 80
      },
      {
        "file": "lib/rules/for-direction.js",
        "metrics": {
          "complexity": 14,
          "loc": 111,
          "functionCount": 4,
          "duplicationRatio": 0.09
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 82
      },
      {
        "file": "lib/rules/func-call-spacing.js",
        "metrics": {
          "complexity": 9,
          "loc": 202,
          "functionCount": 1,
          "duplicationRatio": 0.29
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.01
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.93
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 67
      },
      {
        "file": "lib/rules/func-name-matching.js",
        "metrics": {
          "complexity": 24,
          "loc": 253,
          "functionCount": 6,
          "duplicationRatio": 0.08
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.26
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 39
      },
      {
        "file": "lib/rules/func-names.js",
        "metrics": {
          "complexity": 38,
          "loc": 119,
          "functionCount": 7,
          "duplicationRatio": 0.07
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.9
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 108,
            "threshold": 10,
            "excessRatio": 1.4,
            "function": "hasInferredName"
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 161,
            "threshold": 10,
            "excessRatio": 1.2,
            "function": "handleFunction"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 24
      },
      {
        "file": "lib/rules/func-style.js",
        "metrics": {
          "complexity": 4,
          "loc": 185,
          "functionCount": 1,
          "duplicationRatio": 0.15
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.01
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 94
      },
      {
        "file": "lib/rules/function-call-argument-newline.js",
        "metrics": {
          "complexity": 11,
          "loc": 126,
          "functionCount": 2,
          "duplicationRatio": 0.25
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.65
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 70
      },
      {
        "file": "lib/rules/function-paren-newline.js",
        "metrics": {
          "complexity": 36,
          "loc": 286,
          "functionCount": 4,
          "duplicationRatio": 0.17
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.8
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.43
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 251,
            "threshold": 10,
            "excessRatio": 1.7,
            "function": "getParenTokens"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.13
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 6
      },
      {
        "file": "lib/rules/generator-star-spacing.js",
        "metrics": {
          "complexity": 21,
          "loc": 174,
          "functionCount": 6,
          "duplicationRatio": 0.31
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.04
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 15
      },
      {
        "file": "lib/rules/getter-return.js",
        "metrics": {
          "complexity": 21,
          "loc": 173,
          "functionCount": 3,
          "duplicationRatio": 0.29
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 121,
            "threshold": 10,
            "excessRatio": 1.4,
            "function": "isGetter"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.95
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 17
      },
      {
        "file": "lib/rules/global-require.js",
        "metrics": {
          "complexity": 5,
          "loc": 83,
          "functionCount": 2,
          "duplicationRatio": 0.57
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.14
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/grouped-accessor-pairs.js",
        "metrics": {
          "complexity": 35,
          "loc": 141,
          "functionCount": 5,
          "duplicationRatio": 0.48
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 157,
            "threshold": 10,
            "excessRatio": 2.2,
            "function": "checkList"
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.61
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/guard-for-in.js",
        "metrics": {
          "complexity": 1,
          "loc": 56,
          "functionCount": 0,
          "duplicationRatio": 0.15
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.03
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 93
      },
      {
        "file": "lib/rules/handle-callback-err.js",
        "metrics": {
          "complexity": 8,
          "loc": 78,
          "functionCount": 4,
          "duplicationRatio": 0.32
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.05
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 65
      },
      {
        "file": "lib/rules/id-blacklist.js",
        "metrics": {
          "complexity": 39,
          "loc": 136,
          "functionCount": 8,
          "duplicationRatio": 0.59
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.95
          },
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.18
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/id-denylist.js",
        "metrics": {
          "complexity": 36,
          "loc": 118,
          "functionCount": 7,
          "duplicationRatio": 0.52
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.8
          },
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.05
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/id-length.js",
        "metrics": {
          "complexity": 1,
          "loc": 167,
          "functionCount": 1,
          "duplicationRatio": 0.17
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.13
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 91
      },
      {
        "file": "lib/rules/id-match.js",
        "metrics": {
          "complexity": 14,
          "loc": 247,
          "functionCount": 5,
          "duplicationRatio": 0.18
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.24
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.21
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 62
      },
      {
        "file": "lib/rules/implicit-arrow-linebreak.js",
        "metrics": {
          "complexity": 6,
          "loc": 97,
          "functionCount": 1,
          "duplicationRatio": 0.46
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.54
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 41
      },
      {
        "file": "lib/rules/indent-legacy.js",
        "metrics": {
          "complexity": 162,
          "loc": 985,
          "functionCount": 24,
          "duplicationRatio": 0.09
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 8.1
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 3.28
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 455,
            "threshold": 10,
            "excessRatio": 1.4,
            "function": "checkNodeIndent"
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 682,
            "threshold": 10,
            "excessRatio": 1.5,
            "function": "isOuterIIFE"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 723,
            "threshold": 10,
            "excessRatio": 1.9,
            "function": "checkIndentInFunctionBlock"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 826,
            "threshold": 10,
            "excessRatio": 3,
            "function": "checkIndentInArrayOrObjectBlock"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 992,
            "threshold": 10,
            "excessRatio": 1.6,
            "function": "blockIndentationCheck"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/indent.js",
        "metrics": {
          "complexity": 99,
          "loc": 1646,
          "functionCount": 30,
          "duplicationRatio": 0.06
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.95
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.65
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 843,
            "threshold": 10,
            "excessRatio": 1.3,
            "function": "isOuterIIFE"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 320,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.07
          }
        ],
        "dependencies": {
          "outgoingDependencies": 291,
          "incomingDependencies": 6,
          "instability": 0.98,
          "cohesionScore": 0.67,
          "percentileUsageRank": 100,
          "isInCycle": false
        },
        "healthScore": 80
      },
      {
        "file": "lib/rules/init-declarations.js",
        "metrics": {
          "complexity": 6,
          "loc": 125,
          "functionCount": 2,
          "duplicationRatio": 0.34
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.13
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 64
      },
      {
        "file": "lib/rules/jsx-quotes.js",
        "metrics": {
          "complexity": 2,
          "loc": 93,
          "functionCount": 1,
          "duplicationRatio": 0.38
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.28
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 58
      },
      {
        "file": "lib/rules/key-spacing.js",
        "metrics": {
          "complexity": 75,
          "loc": 594,
          "functionCount": 20,
          "duplicationRatio": 0.14
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.75
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.98
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 496,
            "threshold": 10,
            "excessRatio": 2.1,
            "function": "report"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/keyword-spacing.js",
        "metrics": {
          "complexity": 97,
          "loc": 429,
          "functionCount": 26,
          "duplicationRatio": 0.07
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.85
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.43
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 279,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "parseOptions"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/line-comment-position.js",
        "metrics": {
          "complexity": 1,
          "loc": 129,
          "functionCount": 0,
          "duplicationRatio": 0.46
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.55
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 41
      },
      {
        "file": "lib/rules/linebreak-style.js",
        "metrics": {
          "complexity": 1,
          "loc": 85,
          "functionCount": 1,
          "duplicationRatio": 0.43
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.45
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 49
      },
      {
        "file": "lib/rules/lines-around-comment.js",
        "metrics": {
          "complexity": 84,
          "loc": 397,
          "functionCount": 16,
          "duplicationRatio": 0.13
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.2
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.32
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 423,
            "threshold": 10,
            "excessRatio": 3.6,
            "function": "checkForEmptyLine"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/lines-around-directive.js",
        "metrics": {
          "complexity": 26,
          "loc": 167,
          "functionCount": 5,
          "duplicationRatio": 0.23
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 171,
            "threshold": 10,
            "excessRatio": 1.8,
            "function": "checkDirectives"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.52
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 18
      },
      {
        "file": "lib/rules/lines-between-class-members.js",
        "metrics": {
          "complexity": 16,
          "loc": 247,
          "functionCount": 6,
          "duplicationRatio": 0.17
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.24
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.15
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 51
      },
      {
        "file": "lib/rules/logical-assignment-operators.js",
        "metrics": {
          "complexity": 73,
          "loc": 508,
          "functionCount": 13,
          "duplicationRatio": 0.04
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.65
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.69
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 144,
            "threshold": 10,
            "excessRatio": 1.6,
            "function": "getExistence"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/max-classes-per-file.js",
        "metrics": {
          "complexity": 1,
          "loc": 71,
          "functionCount": 0,
          "duplicationRatio": 0.37
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.22
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 61
      },
      {
        "file": "lib/rules/max-depth.js",
        "metrics": {
          "complexity": 5,
          "loc": 106,
          "functionCount": 4,
          "duplicationRatio": 0.3
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.98
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 72
      },
      {
        "file": "lib/rules/max-len.js",
        "metrics": {
          "complexity": 32,
          "loc": 321,
          "functionCount": 12,
          "duplicationRatio": 0.16
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.07
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.05
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 17
      },
      {
        "file": "lib/rules/max-lines-per-function.js",
        "metrics": {
          "complexity": 31,
          "loc": 160,
          "functionCount": 5,
          "duplicationRatio": 0.21
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 182,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "processFunction"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.39
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 24
      },
      {
        "file": "lib/rules/max-lines.js",
        "metrics": {
          "complexity": 12,
          "loc": 127,
          "functionCount": 3,
          "duplicationRatio": 0.22
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.48
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 71
      },
      {
        "file": "lib/rules/max-nested-callbacks.js",
        "metrics": {
          "complexity": 4,
          "loc": 70,
          "functionCount": 2,
          "duplicationRatio": 0.47
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.56
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 40
      },
      {
        "file": "lib/rules/max-params.js",
        "metrics": {
          "complexity": 7,
          "loc": 99,
          "functionCount": 1,
          "duplicationRatio": 0.31
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.02
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 65
      },
      {
        "file": "lib/rules/max-statements-per-line.js",
        "metrics": {
          "complexity": 12,
          "loc": 157,
          "functionCount": 4,
          "duplicationRatio": 0.29
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.93
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 61
      },
      {
        "file": "lib/rules/max-statements.js",
        "metrics": {
          "complexity": 8,
          "loc": 118,
          "functionCount": 4,
          "duplicationRatio": 0.34
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.14
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 63
      },
      {
        "file": "lib/rules/multiline-comment-style.js",
        "metrics": {
          "complexity": 23,
          "loc": 499,
          "functionCount": 11,
          "duplicationRatio": 0.11
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.66
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 18
      },
      {
        "file": "lib/rules/multiline-ternary.js",
        "metrics": {
          "complexity": 1,
          "loc": 223,
          "functionCount": 0,
          "duplicationRatio": 0.2
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.11
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.35
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 79
      },
      {
        "file": "lib/rules/new-cap.js",
        "metrics": {
          "complexity": 19,
          "loc": 178,
          "functionCount": 6,
          "duplicationRatio": 0.19
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.25
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 49
      },
      {
        "file": "lib/rules/new-parens.js",
        "metrics": {
          "complexity": 1,
          "loc": 90,
          "functionCount": 0,
          "duplicationRatio": 0.44
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.48
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 46
      },
      {
        "file": "lib/rules/newline-after-var.js",
        "metrics": {
          "complexity": 35,
          "loc": 174,
          "functionCount": 8,
          "duplicationRatio": 0.17
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 200,
            "threshold": 10,
            "excessRatio": 1.5,
            "function": "checkForBlankLine"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.13
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 25
      },
      {
        "file": "lib/rules/newline-before-return.js",
        "metrics": {
          "complexity": 16,
          "loc": 136,
          "functionCount": 6,
          "duplicationRatio": 0.14
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 70
      },
      {
        "file": "lib/rules/newline-per-chained-call.js",
        "metrics": {
          "complexity": 7,
          "loc": 118,
          "functionCount": 2,
          "duplicationRatio": 0.31
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.03
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 65
      },
      {
        "file": "lib/rules/no-alert.js",
        "metrics": {
          "complexity": 13,
          "loc": 91,
          "functionCount": 4,
          "duplicationRatio": 0.19
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.27
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 73
      },
      {
        "file": "lib/rules/no-array-constructor.js",
        "metrics": {
          "complexity": 21,
          "loc": 128,
          "functionCount": 3,
          "duplicationRatio": 0.08
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 111,
            "threshold": 10,
            "excessRatio": 1.3,
            "function": "check"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 44
      },
      {
        "file": "lib/rules/no-async-promise-executor.js",
        "metrics": {
          "complexity": 1,
          "loc": 32,
          "functionCount": 0,
          "duplicationRatio": 0.35
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.16
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 63
      },
      {
        "file": "lib/rules/no-await-in-loop.js",
        "metrics": {
          "complexity": 21,
          "loc": 66,
          "functionCount": 3,
          "duplicationRatio": 0.11
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 50
      },
      {
        "file": "lib/rules/no-bitwise.js",
        "metrics": {
          "complexity": 12,
          "loc": 92,
          "functionCount": 5,
          "duplicationRatio": 0.23
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.54
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 70
      },
      {
        "file": "lib/rules/no-buffer-constructor.js",
        "metrics": {
          "complexity": 1,
          "loc": 54,
          "functionCount": 0,
          "duplicationRatio": 0.76
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.53
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-caller.js",
        "metrics": {
          "complexity": 1,
          "loc": 36,
          "functionCount": 0,
          "duplicationRatio": 0.54
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.07
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 11
      },
      {
        "file": "lib/rules/no-case-declarations.js",
        "metrics": {
          "complexity": 5,
          "loc": 58,
          "functionCount": 1,
          "duplicationRatio": 0.11
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-catch-shadow.js",
        "metrics": {
          "complexity": 1,
          "loc": 53,
          "functionCount": 1,
          "duplicationRatio": 0.44
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.46
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 48
      },
      {
        "file": "lib/rules/no-class-assign.js",
        "metrics": {
          "complexity": 2,
          "loc": 37,
          "functionCount": 2,
          "duplicationRatio": 0.63
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.27
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-compare-neg-zero.js",
        "metrics": {
          "complexity": 4,
          "loc": 50,
          "functionCount": 1,
          "duplicationRatio": 0.27
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.79
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 76
      },
      {
        "file": "lib/rules/no-cond-assign.js",
        "metrics": {
          "complexity": 21,
          "loc": 110,
          "functionCount": 5,
          "duplicationRatio": 0.16
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.04
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 43
      },
      {
        "file": "lib/rules/no-confusing-arrow.js",
        "metrics": {
          "complexity": 9,
          "loc": 89,
          "functionCount": 2,
          "duplicationRatio": 0.4
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.32
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 56
      },
      {
        "file": "lib/rules/no-console.js",
        "metrics": {
          "complexity": 22,
          "loc": 123,
          "functionCount": 6,
          "duplicationRatio": 0.14
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 50
      },
      {
        "file": "lib/rules/no-const-assign.js",
        "metrics": {
          "complexity": 1,
          "loc": 39,
          "functionCount": 1,
          "duplicationRatio": 0.63
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.27
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-constant-binary-expression.js",
        "metrics": {
          "complexity": 135,
          "loc": 401,
          "functionCount": 7,
          "duplicationRatio": 0.05
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.75
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.34
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 64,
            "threshold": 10,
            "excessRatio": 3,
            "function": "hasConstantNullishness"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 192,
            "threshold": 10,
            "excessRatio": 2.7,
            "function": "hasConstantLooseBooleanComparison"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 312,
            "threshold": 10,
            "excessRatio": 3.1,
            "function": "hasConstantStrictBooleanComparison"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 405,
            "threshold": 10,
            "excessRatio": 1.8,
            "function": "isAlwaysNew"
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 465,
            "threshold": 10,
            "excessRatio": 1.3,
            "function": "findBinaryExpressionConstantOperand"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-constant-condition.js",
        "metrics": {
          "complexity": 13,
          "loc": 103,
          "functionCount": 6,
          "duplicationRatio": 0.06
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 85
      },
      {
        "file": "lib/rules/no-constructor-return.js",
        "metrics": {
          "complexity": 1,
          "loc": 43,
          "functionCount": 0,
          "duplicationRatio": 0.1
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-continue.js",
        "metrics": {
          "complexity": 1,
          "loc": 23,
          "functionCount": 0,
          "duplicationRatio": 0.53
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.07
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 12
      },
      {
        "file": "lib/rules/no-control-regex.js",
        "metrics": {
          "complexity": 11,
          "loc": 98,
          "functionCount": 1,
          "duplicationRatio": 0.08
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 92,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "getRegExp"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 85
      },
      {
        "file": "lib/rules/no-debugger.js",
        "metrics": {
          "complexity": 1,
          "loc": 26,
          "functionCount": 0,
          "duplicationRatio": 0.41
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.37
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 53
      },
      {
        "file": "lib/rules/no-delete-var.js",
        "metrics": {
          "complexity": 1,
          "loc": 27,
          "functionCount": 0,
          "duplicationRatio": 0.37
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.23
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 60
      },
      {
        "file": "lib/rules/no-div-regex.js",
        "metrics": {
          "complexity": 1,
          "loc": 42,
          "functionCount": 0,
          "duplicationRatio": 0.28
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.88
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 74
      },
      {
        "file": "lib/rules/no-dupe-args.js",
        "metrics": {
          "complexity": 4,
          "loc": 40,
          "functionCount": 2,
          "duplicationRatio": 0.33
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.11
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 64
      },
      {
        "file": "lib/rules/no-dupe-class-members.js",
        "metrics": {
          "complexity": 3,
          "loc": 76,
          "functionCount": 1,
          "duplicationRatio": 0.15
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-dupe-else-if.js",
        "metrics": {
          "complexity": 13,
          "loc": 89,
          "functionCount": 3,
          "duplicationRatio": 0.1
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 85
      },
      {
        "file": "lib/rules/no-dupe-keys.js",
        "metrics": {
          "complexity": 10,
          "loc": 86,
          "functionCount": 4,
          "duplicationRatio": 0.08
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-duplicate-case.js",
        "metrics": {
          "complexity": 2,
          "loc": 47,
          "functionCount": 1,
          "duplicationRatio": 0.26
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.75
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 77
      },
      {
        "file": "lib/rules/no-duplicate-imports.js",
        "metrics": {
          "complexity": 50,
          "loc": 266,
          "functionCount": 8,
          "duplicationRatio": 0.11
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.5
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.33
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 65,
            "threshold": 10,
            "excessRatio": 1.9,
            "function": "isImportExportCanBeMerged"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-else-return.js",
        "metrics": {
          "complexity": 38,
          "loc": 239,
          "functionCount": 11,
          "duplicationRatio": 0.07
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.9
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 27
      },
      {
        "file": "lib/rules/no-empty-character-class.js",
        "metrics": {
          "complexity": 1,
          "loc": 53,
          "functionCount": 0,
          "duplicationRatio": 0.42
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.42
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 51
      },
      {
        "file": "lib/rules/no-empty-function.js",
        "metrics": {
          "complexity": 31,
          "loc": 144,
          "functionCount": 4,
          "duplicationRatio": 0.08
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 45,
            "threshold": 10,
            "excessRatio": 1.2,
            "function": "getKind"
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 146,
            "threshold": 10,
            "excessRatio": 1.3,
            "function": "isAllowedEmptyFunction"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 33
      },
      {
        "file": "lib/rules/no-empty-pattern.js",
        "metrics": {
          "complexity": 1,
          "loc": 65,
          "functionCount": 0,
          "duplicationRatio": 0.42
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.4
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 51
      },
      {
        "file": "lib/rules/no-empty-static-block.js",
        "metrics": {
          "complexity": 1,
          "loc": 33,
          "functionCount": 0,
          "duplicationRatio": 0.38
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.27
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 59
      },
      {
        "file": "lib/rules/no-empty.js",
        "metrics": {
          "complexity": 1,
          "loc": 86,
          "functionCount": 0,
          "duplicationRatio": 0.32
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.07
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 65
      },
      {
        "file": "lib/rules/no-eq-null.js",
        "metrics": {
          "complexity": 1,
          "loc": 34,
          "functionCount": 0,
          "duplicationRatio": 0.35
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.15
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 63
      },
      {
        "file": "lib/rules/no-eval.js",
        "metrics": {
          "complexity": 18,
          "loc": 176,
          "functionCount": 6,
          "duplicationRatio": 0.1
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 64
      },
      {
        "file": "lib/rules/no-ex-assign.js",
        "metrics": {
          "complexity": 1,
          "loc": 34,
          "functionCount": 1,
          "duplicationRatio": 0.67
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.33
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-extend-native.js",
        "metrics": {
          "complexity": 18,
          "loc": 106,
          "functionCount": 5,
          "duplicationRatio": 0.16
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.06
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 57
      },
      {
        "file": "lib/rules/no-extra-bind.js",
        "metrics": {
          "complexity": 17,
          "loc": 122,
          "functionCount": 7,
          "duplicationRatio": 0.09
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 67
      },
      {
        "file": "lib/rules/no-extra-boolean-cast.js",
        "metrics": {
          "complexity": 49,
          "loc": 290,
          "functionCount": 6,
          "duplicationRatio": 0.05
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.45
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.45
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 121,
            "threshold": 10,
            "excessRatio": 1.6,
            "function": "isInFlaggedContext"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 205,
            "threshold": 10,
            "excessRatio": 2.1,
            "function": "needsParens"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-extra-label.js",
        "metrics": {
          "complexity": 16,
          "loc": 108,
          "functionCount": 5,
          "duplicationRatio": 0.12
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 70
      },
      {
        "file": "lib/rules/no-extra-parens.js",
        "metrics": {
          "complexity": 187,
          "loc": 1210,
          "functionCount": 36,
          "duplicationRatio": 0.06
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 9.35
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.21
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 200,
            "threshold": 10,
            "excessRatio": 1.3,
            "function": "ruleApplies"
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 656,
            "threshold": 10,
            "excessRatio": 1.3,
            "function": "checkCallNew"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 700,
            "threshold": 10,
            "excessRatio": 2.1,
            "function": "checkBinaryLogical"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 793,
            "threshold": 10,
            "excessRatio": 2.1,
            "function": "checkExpressionOrExportStatement"
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 892,
            "threshold": 10,
            "excessRatio": 1.5,
            "function": "isSafelyEnclosingInExpression"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-extra-semi.js",
        "metrics": {
          "complexity": 9,
          "loc": 100,
          "functionCount": 3,
          "duplicationRatio": 0.32
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.08
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 65
      },
      {
        "file": "lib/rules/no-fallthrough.js",
        "metrics": {
          "complexity": 13,
          "loc": 175,
          "functionCount": 4,
          "duplicationRatio": 0.24
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.58
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 66
      },
      {
        "file": "lib/rules/no-floating-decimal.js",
        "metrics": {
          "complexity": 1,
          "loc": 77,
          "functionCount": 0,
          "duplicationRatio": 0.37
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.24
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 60
      },
      {
        "file": "lib/rules/no-func-assign.js",
        "metrics": {
          "complexity": 4,
          "loc": 42,
          "functionCount": 3,
          "duplicationRatio": 0.27
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.8
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 76
      },
      {
        "file": "lib/rules/no-global-assign.js",
        "metrics": {
          "complexity": 8,
          "loc": 64,
          "functionCount": 2,
          "duplicationRatio": 0.64
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.29
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-implicit-coercion.js",
        "metrics": {
          "complexity": 52,
          "loc": 307,
          "functionCount": 13,
          "duplicationRatio": 0.05
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.6
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.02
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-implicit-globals.js",
        "metrics": {
          "complexity": 1,
          "loc": 146,
          "functionCount": 1,
          "duplicationRatio": 0.25
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.67
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 79
      },
      {
        "file": "lib/rules/no-implied-eval.js",
        "metrics": {
          "complexity": 13,
          "loc": 110,
          "functionCount": 3,
          "duplicationRatio": 0.08
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 85
      },
      {
        "file": "lib/rules/no-import-assign.js",
        "metrics": {
          "complexity": 40,
          "loc": 139,
          "functionCount": 6,
          "duplicationRatio": 0.05
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 32
      },
      {
        "file": "lib/rules/no-inline-comments.js",
        "metrics": {
          "complexity": 12,
          "loc": 77,
          "functionCount": 1,
          "duplicationRatio": 0.25
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 56,
            "threshold": 10,
            "excessRatio": 1.2,
            "function": "testCodeAroundComment"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.69
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 60
      },
      {
        "file": "lib/rules/no-inner-declarations.js",
        "metrics": {
          "complexity": 9,
          "loc": 102,
          "functionCount": 2,
          "duplicationRatio": 0.23
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.56
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 82
      },
      {
        "file": "lib/rules/no-invalid-regexp.js",
        "metrics": {
          "complexity": 18,
          "loc": 157,
          "functionCount": 5,
          "duplicationRatio": 0.11
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 64
      },
      {
        "file": "lib/rules/no-invalid-this.js",
        "metrics": {
          "complexity": 2,
          "loc": 112,
          "functionCount": 1,
          "duplicationRatio": 0.12
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-irregular-whitespace.js",
        "metrics": {
          "complexity": 19,
          "loc": 182,
          "functionCount": 8,
          "duplicationRatio": 0.13
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 61
      },
      {
        "file": "lib/rules/no-iterator.js",
        "metrics": {
          "complexity": 1,
          "loc": 28,
          "functionCount": 0,
          "duplicationRatio": 0.5
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.67
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 31
      },
      {
        "file": "lib/rules/no-label-var.js",
        "metrics": {
          "complexity": 1,
          "loc": 35,
          "functionCount": 1,
          "duplicationRatio": 0.4
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.33
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 56
      },
      {
        "file": "lib/rules/no-labels.js",
        "metrics": {
          "complexity": 10,
          "loc": 106,
          "functionCount": 3,
          "duplicationRatio": 0.31
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.03
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 65
      },
      {
        "file": "lib/rules/no-lone-blocks.js",
        "metrics": {
          "complexity": 12,
          "loc": 93,
          "functionCount": 3,
          "duplicationRatio": 0.09
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 88
      },
      {
        "file": "lib/rules/no-lonely-if.js",
        "metrics": {
          "complexity": 1,
          "loc": 97,
          "functionCount": 0,
          "duplicationRatio": 0.15
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-loop-func.js",
        "metrics": {
          "complexity": 46,
          "loc": 157,
          "functionCount": 6,
          "duplicationRatio": 0.09
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.3
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 66,
            "threshold": 10,
            "excessRatio": 1.4,
            "function": "getContainingLoopNode"
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 142,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "isSafe"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 8
      },
      {
        "file": "lib/rules/no-loss-of-precision.js",
        "metrics": {
          "complexity": 25,
          "loc": 136,
          "functionCount": 12,
          "duplicationRatio": 0.07
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 49
      },
      {
        "file": "lib/rules/no-magic-numbers.js",
        "metrics": {
          "complexity": 27,
          "loc": 233,
          "functionCount": 11,
          "duplicationRatio": 0.11
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.17
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 40
      },
      {
        "file": "lib/rules/no-misleading-character-class.js",
        "metrics": {
          "complexity": 34,
          "loc": 426,
          "functionCount": 8,
          "duplicationRatio": 0.06
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.42
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 14
      },
      {
        "file": "lib/rules/no-mixed-operators.js",
        "metrics": {
          "complexity": 22,
          "loc": 161,
          "functionCount": 8,
          "duplicationRatio": 0.2
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.34
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 36
      },
      {
        "file": "lib/rules/no-mixed-requires.js",
        "metrics": {
          "complexity": 21,
          "loc": 187,
          "functionCount": 5,
          "duplicationRatio": 0.28
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.84
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 25
      },
      {
        "file": "lib/rules/no-mixed-spaces-and-tabs.js",
        "metrics": {
          "complexity": 1,
          "loc": 108,
          "functionCount": 0,
          "duplicationRatio": 0.27
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.82
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 76
      },
      {
        "file": "lib/rules/no-multi-assign.js",
        "metrics": {
          "complexity": 1,
          "loc": 48,
          "functionCount": 0,
          "duplicationRatio": 0.54
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.08
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 10
      },
      {
        "file": "lib/rules/no-multi-spaces.js",
        "metrics": {
          "complexity": 3,
          "loc": 138,
          "functionCount": 1,
          "duplicationRatio": 0.32
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.07
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 65
      },
      {
        "file": "lib/rules/no-multi-str.js",
        "metrics": {
          "complexity": 1,
          "loc": 36,
          "functionCount": 1,
          "duplicationRatio": 0.43
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.43
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 50
      },
      {
        "file": "lib/rules/no-multiple-empty-lines.js",
        "metrics": {
          "complexity": 1,
          "loc": 166,
          "functionCount": 0,
          "duplicationRatio": 0.28
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.9
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 74
      },
      {
        "file": "lib/rules/no-native-reassign.js",
        "metrics": {
          "complexity": 8,
          "loc": 76,
          "functionCount": 2,
          "duplicationRatio": 0.7
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.39
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-negated-condition.js",
        "metrics": {
          "complexity": 9,
          "loc": 57,
          "functionCount": 4,
          "duplicationRatio": 0.14
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-negated-in-lhs.js",
        "metrics": {
          "complexity": 1,
          "loc": 43,
          "functionCount": 0,
          "duplicationRatio": 0.66
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.31
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-nested-ternary.js",
        "metrics": {
          "complexity": 1,
          "loc": 31,
          "functionCount": 0,
          "duplicationRatio": 0.45
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.5
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 45
      },
      {
        "file": "lib/rules/no-new-func.js",
        "metrics": {
          "complexity": 1,
          "loc": 66,
          "functionCount": 0,
          "duplicationRatio": 0.27
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.79
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 76
      },
      {
        "file": "lib/rules/no-new-native-nonconstructor.js",
        "metrics": {
          "complexity": 1,
          "loc": 46,
          "functionCount": 0,
          "duplicationRatio": 0.42
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.39
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 52
      },
      {
        "file": "lib/rules/no-new-object.js",
        "metrics": {
          "complexity": 1,
          "loc": 51,
          "functionCount": 0,
          "duplicationRatio": 0.41
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.35
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 55
      },
      {
        "file": "lib/rules/no-new-require.js",
        "metrics": {
          "complexity": 1,
          "loc": 50,
          "functionCount": 0,
          "duplicationRatio": 0.71
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.42
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-new-symbol.js",
        "metrics": {
          "complexity": 1,
          "loc": 54,
          "functionCount": 0,
          "duplicationRatio": 0.79
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.59
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-new-wrappers.js",
        "metrics": {
          "complexity": 1,
          "loc": 39,
          "functionCount": 0,
          "duplicationRatio": 0.23
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.56
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 82
      },
      {
        "file": "lib/rules/no-new.js",
        "metrics": {
          "complexity": 1,
          "loc": 26,
          "functionCount": 0,
          "duplicationRatio": 0.53
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.05
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 14
      },
      {
        "file": "lib/rules/no-nonoctal-decimal-escape.js",
        "metrics": {
          "complexity": 2,
          "loc": 114,
          "functionCount": 2,
          "duplicationRatio": 0.12
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-obj-calls.js",
        "metrics": {
          "complexity": 3,
          "loc": 64,
          "functionCount": 1,
          "duplicationRatio": 0.2
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.33
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 87
      },
      {
        "file": "lib/rules/no-object-constructor.js",
        "metrics": {
          "complexity": 12,
          "loc": 83,
          "functionCount": 2,
          "duplicationRatio": 0.23
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.55
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 70
      },
      {
        "file": "lib/rules/no-octal-escape.js",
        "metrics": {
          "complexity": 1,
          "loc": 35,
          "functionCount": 0,
          "duplicationRatio": 0.25
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.67
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 79
      },
      {
        "file": "lib/rules/no-octal.js",
        "metrics": {
          "complexity": 1,
          "loc": 30,
          "functionCount": 0,
          "duplicationRatio": 0.39
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.3
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 57
      },
      {
        "file": "lib/rules/no-param-reassign.js",
        "metrics": {
          "complexity": 34,
          "loc": 167,
          "functionCount": 5,
          "duplicationRatio": 0.13
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 89,
            "threshold": 10,
            "excessRatio": 2,
            "function": "isModifyingProp"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 29
      },
      {
        "file": "lib/rules/no-path-concat.js",
        "metrics": {
          "complexity": 1,
          "loc": 57,
          "functionCount": 0,
          "duplicationRatio": 0.68
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.37
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-plusplus.js",
        "metrics": {
          "complexity": 4,
          "loc": 59,
          "functionCount": 2,
          "duplicationRatio": 0.34
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.13
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 64
      },
      {
        "file": "lib/rules/no-process-env.js",
        "metrics": {
          "complexity": 1,
          "loc": 51,
          "functionCount": 0,
          "duplicationRatio": 0.81
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.62
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-process-exit.js",
        "metrics": {
          "complexity": 1,
          "loc": 47,
          "functionCount": 0,
          "duplicationRatio": 0.85
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.71
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-promise-executor-return.js",
        "metrics": {
          "complexity": 15,
          "loc": 176,
          "functionCount": 4,
          "duplicationRatio": 0.44
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.47
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 26
      },
      {
        "file": "lib/rules/no-proto.js",
        "metrics": {
          "complexity": 1,
          "loc": 25,
          "functionCount": 0,
          "duplicationRatio": 0.53
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.06
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 13
      },
      {
        "file": "lib/rules/no-prototype-builtins.js",
        "metrics": {
          "complexity": 8,
          "loc": 115,
          "functionCount": 2,
          "duplicationRatio": 0.06
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-redeclare.js",
        "metrics": {
          "complexity": 15,
          "loc": 107,
          "functionCount": 3,
          "duplicationRatio": 0.06
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 79
      },
      {
        "file": "lib/rules/no-regex-spaces.js",
        "metrics": {
          "complexity": 18,
          "loc": 143,
          "functionCount": 4,
          "duplicationRatio": 0.13
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 64
      },
      {
        "file": "lib/rules/no-restricted-exports.js",
        "metrics": {
          "complexity": 18,
          "loc": 180,
          "functionCount": 1,
          "duplicationRatio": 0.15
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 118,
            "threshold": 10,
            "excessRatio": 1.8,
            "function": "checkExportedName"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.03
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 45
      },
      {
        "file": "lib/rules/no-restricted-globals.js",
        "metrics": {
          "complexity": 4,
          "loc": 104,
          "functionCount": 3,
          "duplicationRatio": 0.32
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.06
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 65
      },
      {
        "file": "lib/rules/no-restricted-imports.js",
        "metrics": {
          "complexity": 22,
          "loc": 570,
          "functionCount": 4,
          "duplicationRatio": 0.08
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.9
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 18
      },
      {
        "file": "lib/rules/no-restricted-modules.js",
        "metrics": {
          "complexity": 11,
          "loc": 176,
          "functionCount": 5,
          "duplicationRatio": 0.22
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.43
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 75
      },
      {
        "file": "lib/rules/no-restricted-properties.js",
        "metrics": {
          "complexity": 13,
          "loc": 188,
          "functionCount": 2,
          "duplicationRatio": 0.12
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 140,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "checkPropertyAccess"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 79
      },
      {
        "file": "lib/rules/no-restricted-syntax.js",
        "metrics": {
          "complexity": 1,
          "loc": 57,
          "functionCount": 0,
          "duplicationRatio": 0.47
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.56
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 40
      },
      {
        "file": "lib/rules/no-return-assign.js",
        "metrics": {
          "complexity": 1,
          "loc": 56,
          "functionCount": 0,
          "duplicationRatio": 0.26
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.74
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 77
      },
      {
        "file": "lib/rules/no-return-await.js",
        "metrics": {
          "complexity": 18,
          "loc": 114,
          "functionCount": 3,
          "duplicationRatio": 0.02
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 64
      },
      {
        "file": "lib/rules/no-script-url.js",
        "metrics": {
          "complexity": 3,
          "loc": 44,
          "functionCount": 1,
          "duplicationRatio": 0.19
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.3
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 87
      },
      {
        "file": "lib/rules/no-self-assign.js",
        "metrics": {
          "complexity": 35,
          "loc": 127,
          "functionCount": 2,
          "duplicationRatio": 0.12
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 30,
            "threshold": 10,
            "excessRatio": 3.4,
            "function": "eachSelfAssignment"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 28
      },
      {
        "file": "lib/rules/no-self-compare.js",
        "metrics": {
          "complexity": 2,
          "loc": 51,
          "functionCount": 1,
          "duplicationRatio": 0.24
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.63
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 80
      },
      {
        "file": "lib/rules/no-sequences.js",
        "metrics": {
          "complexity": 11,
          "loc": 96,
          "functionCount": 3,
          "duplicationRatio": 0.17
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.15
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 82
      },
      {
        "file": "lib/rules/no-setter-return.js",
        "metrics": {
          "complexity": 25,
          "loc": 135,
          "functionCount": 6,
          "duplicationRatio": 0.05
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 49
      },
      {
        "file": "lib/rules/no-shadow-restricted-names.js",
        "metrics": {
          "complexity": 3,
          "loc": 83,
          "functionCount": 1,
          "duplicationRatio": 0.28
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.87
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 75
      },
      {
        "file": "lib/rules/no-shadow.js",
        "metrics": {
          "complexity": 106,
          "loc": 405,
          "functionCount": 20,
          "duplicationRatio": 0.09
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.3
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.35
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 264,
            "threshold": 10,
            "excessRatio": 1.3,
            "function": "isInitPatternNode"
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 357,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "isOnInitializer"
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 417,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "isInTdz"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 547,
            "threshold": 10,
            "excessRatio": 2.4,
            "function": "checkForShadows"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-spaced-func.js",
        "metrics": {
          "complexity": 7,
          "loc": 76,
          "functionCount": 1,
          "duplicationRatio": 0.38
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.26
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 59
      },
      {
        "file": "lib/rules/no-sparse-arrays.js",
        "metrics": {
          "complexity": 1,
          "loc": 44,
          "functionCount": 0,
          "duplicationRatio": 0.32
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.08
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 65
      },
      {
        "file": "lib/rules/no-sync.js",
        "metrics": {
          "complexity": 1,
          "loc": 63,
          "functionCount": 0,
          "duplicationRatio": 0.69
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.37
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-tabs.js",
        "metrics": {
          "complexity": 1,
          "loc": 87,
          "functionCount": 0,
          "duplicationRatio": 0.57
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.15
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-template-curly-in-string.js",
        "metrics": {
          "complexity": 1,
          "loc": 30,
          "functionCount": 0,
          "duplicationRatio": 0.4
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.33
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 56
      },
      {
        "file": "lib/rules/no-ternary.js",
        "metrics": {
          "complexity": 1,
          "loc": 23,
          "functionCount": 0,
          "duplicationRatio": 0.6
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-this-before-super.js",
        "metrics": {
          "complexity": 19,
          "loc": 187,
          "functionCount": 7,
          "duplicationRatio": 0.14
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 61
      },
      {
        "file": "lib/rules/no-throw-literal.js",
        "metrics": {
          "complexity": 1,
          "loc": 30,
          "functionCount": 0,
          "duplicationRatio": 0.38
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.27
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 59
      },
      {
        "file": "lib/rules/no-trailing-spaces.js",
        "metrics": {
          "complexity": 2,
          "loc": 142,
          "functionCount": 2,
          "duplicationRatio": 0.29
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.96
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 73
      },
      {
        "file": "lib/rules/no-unassigned-vars.js",
        "metrics": {
          "complexity": 1,
          "loc": 64,
          "functionCount": 0,
          "duplicationRatio": 0.21
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.41
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 85
      },
      {
        "file": "lib/rules/no-undef-init.js",
        "metrics": {
          "complexity": 1,
          "loc": 69,
          "functionCount": 0,
          "duplicationRatio": 0.23
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.53
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 82
      },
      {
        "file": "lib/rules/no-undef.js",
        "metrics": {
          "complexity": 2,
          "loc": 55,
          "functionCount": 1,
          "duplicationRatio": 0.42
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.41
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 51
      },
      {
        "file": "lib/rules/no-undefined.js",
        "metrics": {
          "complexity": 3,
          "loc": 48,
          "functionCount": 2,
          "duplicationRatio": 0.28
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.83
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 75
      },
      {
        "file": "lib/rules/no-underscore-dangle.js",
        "metrics": {
          "complexity": 44,
          "loc": 270,
          "functionCount": 11,
          "duplicationRatio": 0.13
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.2
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.35
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 283,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "checkForDanglingUnderscoreInMemberExpression"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 7
      },
      {
        "file": "lib/rules/no-unexpected-multiline.js",
        "metrics": {
          "complexity": 2,
          "loc": 89,
          "functionCount": 1,
          "duplicationRatio": 0.17
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.12
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 91
      },
      {
        "file": "lib/rules/no-unmodified-loop-condition.js",
        "metrics": {
          "complexity": 41,
          "loc": 187,
          "functionCount": 12,
          "duplicationRatio": 0.05
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.05
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 30
      },
      {
        "file": "lib/rules/no-unneeded-ternary.js",
        "metrics": {
          "complexity": 13,
          "loc": 175,
          "functionCount": 4,
          "duplicationRatio": 0.22
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.45
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 69
      },
      {
        "file": "lib/rules/no-unreachable-loop.js",
        "metrics": {
          "complexity": 13,
          "loc": 116,
          "functionCount": 3,
          "duplicationRatio": 0.22
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.48
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 68
      },
      {
        "file": "lib/rules/no-unreachable.js",
        "metrics": {
          "complexity": 21,
          "loc": 176,
          "functionCount": 10,
          "duplicationRatio": 0.15
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.02
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 44
      },
      {
        "file": "lib/rules/no-unsafe-finally.js",
        "metrics": {
          "complexity": 16,
          "loc": 79,
          "functionCount": 3,
          "duplicationRatio": 0.14
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 59,
            "threshold": 10,
            "excessRatio": 1.2,
            "function": "isInFinallyBlock"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 64
      },
      {
        "file": "lib/rules/no-unsafe-negation.js",
        "metrics": {
          "complexity": 8,
          "loc": 104,
          "functionCount": 3,
          "duplicationRatio": 0.29
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.92
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 73
      },
      {
        "file": "lib/rules/no-unsafe-optional-chaining.js",
        "metrics": {
          "complexity": 17,
          "loc": 172,
          "functionCount": 6,
          "duplicationRatio": 0.18
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 98,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "checkUndefinedShortCircuit"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.19
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 51
      },
      {
        "file": "lib/rules/no-unused-expressions.js",
        "metrics": {
          "complexity": 11,
          "loc": 162,
          "functionCount": 6,
          "duplicationRatio": 0.21
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.41
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 76
      },
      {
        "file": "lib/rules/no-unused-labels.js",
        "metrics": {
          "complexity": 18,
          "loc": 95,
          "functionCount": 4,
          "duplicationRatio": 0.1
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 64
      },
      {
        "file": "lib/rules/no-unused-private-class-members.js",
        "metrics": {
          "complexity": 8,
          "loc": 133,
          "functionCount": 1,
          "duplicationRatio": 0.06
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-unused-vars.js",
        "metrics": {
          "complexity": 247,
          "loc": 1078,
          "functionCount": 35,
          "duplicationRatio": 0.03
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 12.35
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.08
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 547,
            "threshold": 10,
            "excessRatio": 1.2,
            "function": "isStorableFunction"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 734,
            "threshold": 10,
            "excessRatio": 4.8,
            "function": "collectUnusedVariables"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 945,
            "threshold": 10,
            "excessRatio": 6.2,
            "function": "handleFixes"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-use-before-define.js",
        "metrics": {
          "complexity": 64,
          "loc": 255,
          "functionCount": 10,
          "duplicationRatio": 0.08
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.2
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.27
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 160,
            "threshold": 10,
            "excessRatio": 1.2,
            "function": "isEvaluatedDuringInitialization"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 339,
            "threshold": 10,
            "excessRatio": 2.5,
            "function": "shouldCheck"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-useless-assignment.js",
        "metrics": {
          "complexity": 48,
          "loc": 390,
          "functionCount": 8,
          "duplicationRatio": 0.02
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.4
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.3
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 232,
            "threshold": 10,
            "excessRatio": 1.6,
            "function": "verifyAssignmentIsUsed"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/no-useless-backreference.js",
        "metrics": {
          "complexity": 9,
          "loc": 180,
          "functionCount": 4,
          "duplicationRatio": 0.1
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-useless-call.js",
        "metrics": {
          "complexity": 10,
          "loc": 57,
          "functionCount": 2,
          "duplicationRatio": 0.22
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.44
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 84
      },
      {
        "file": "lib/rules/no-useless-catch.js",
        "metrics": {
          "complexity": 1,
          "loc": 42,
          "functionCount": 0,
          "duplicationRatio": 0.25
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.67
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 79
      },
      {
        "file": "lib/rules/no-useless-computed-key.js",
        "metrics": {
          "complexity": 17,
          "loc": 123,
          "functionCount": 3,
          "duplicationRatio": 0.16
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 42,
            "threshold": 10,
            "excessRatio": 1.4,
            "function": "hasUselessComputedKey"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.09
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 53
      },
      {
        "file": "lib/rules/no-useless-concat.js",
        "metrics": {
          "complexity": 8,
          "loc": 66,
          "functionCount": 4,
          "duplicationRatio": 0.28
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.86
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 75
      },
      {
        "file": "lib/rules/no-useless-constructor.js",
        "metrics": {
          "complexity": 40,
          "loc": 146,
          "functionCount": 11,
          "duplicationRatio": 0.04
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 32
      },
      {
        "file": "lib/rules/no-useless-escape.js",
        "metrics": {
          "complexity": 26,
          "loc": 282,
          "functionCount": 5,
          "duplicationRatio": 0.05
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.41
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 360,
            "threshold": 10,
            "excessRatio": 1.4,
            "function": "check"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 31
      },
      {
        "file": "lib/rules/no-useless-rename.js",
        "metrics": {
          "complexity": 21,
          "loc": 131,
          "functionCount": 4,
          "duplicationRatio": 0.14
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 119,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "checkDestructured"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 44
      },
      {
        "file": "lib/rules/no-useless-return.js",
        "metrics": {
          "complexity": 24,
          "loc": 244,
          "functionCount": 8,
          "duplicationRatio": 0.06
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.22
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 40
      },
      {
        "file": "lib/rules/no-var.js",
        "metrics": {
          "complexity": 37,
          "loc": 175,
          "functionCount": 14,
          "duplicationRatio": 0.03
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.85
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 288,
            "threshold": 10,
            "excessRatio": 1.5,
            "function": "canFix"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 31
      },
      {
        "file": "lib/rules/no-void.js",
        "metrics": {
          "complexity": 1,
          "loc": 49,
          "functionCount": 0,
          "duplicationRatio": 0.35
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.17
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 63
      },
      {
        "file": "lib/rules/no-warning-comments.js",
        "metrics": {
          "complexity": 8,
          "loc": 124,
          "functionCount": 3,
          "duplicationRatio": 0.13
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/no-whitespace-before-property.js",
        "metrics": {
          "complexity": 1,
          "loc": 100,
          "functionCount": 1,
          "duplicationRatio": 0.32
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.06
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 65
      },
      {
        "file": "lib/rules/no-with.js",
        "metrics": {
          "complexity": 1,
          "loc": 22,
          "functionCount": 0,
          "duplicationRatio": 0.5
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.67
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 31
      },
      {
        "file": "lib/rules/nonblock-statement-body-position.js",
        "metrics": {
          "complexity": 12,
          "loc": 120,
          "functionCount": 2,
          "duplicationRatio": 0.32
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.07
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 53
      },
      {
        "file": "lib/rules/object-curly-newline.js",
        "metrics": {
          "complexity": 37,
          "loc": 280,
          "functionCount": 6,
          "duplicationRatio": 0.18
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.85
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.4
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 233,
            "threshold": 10,
            "excessRatio": 1.9,
            "function": "check"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.23
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 3
      },
      {
        "file": "lib/rules/object-curly-spacing.js",
        "metrics": {
          "complexity": 36,
          "loc": 249,
          "functionCount": 10,
          "duplicationRatio": 0.41
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.8
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.25
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 205,
            "threshold": 10,
            "excessRatio": 2.1,
            "function": "validateBraceSpacing"
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.37
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/object-property-newline.js",
        "metrics": {
          "complexity": 1,
          "loc": 124,
          "functionCount": 0,
          "duplicationRatio": 0.38
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.28
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 58
      },
      {
        "file": "lib/rules/object-shorthand.js",
        "metrics": {
          "complexity": 39,
          "loc": 452,
          "functionCount": 11,
          "duplicationRatio": 0.13
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.95
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.51
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 269,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "makeFunctionShorthand"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/one-var-declaration-per-line.js",
        "metrics": {
          "complexity": 5,
          "loc": 76,
          "functionCount": 2,
          "duplicationRatio": 0.54
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.08
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 9
      },
      {
        "file": "lib/rules/one-var.js",
        "metrics": {
          "complexity": 87,
          "loc": 511,
          "functionCount": 13,
          "duplicationRatio": 0.08
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.35
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.7
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 279,
            "threshold": 10,
            "excessRatio": 1.6,
            "function": "hasOnlyOneStatement"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 461,
            "threshold": 10,
            "excessRatio": 4.2,
            "function": "checkVariableDeclaration"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/operator-assignment.js",
        "metrics": {
          "complexity": 20,
          "loc": 186,
          "functionCount": 6,
          "duplicationRatio": 0.09
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 58
      },
      {
        "file": "lib/rules/operator-linebreak.js",
        "metrics": {
          "complexity": 14,
          "loc": 232,
          "functionCount": 3,
          "duplicationRatio": 0.14
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.16
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 206,
            "threshold": 10,
            "excessRatio": 1.2,
            "function": "validateNode"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 68
      },
      {
        "file": "lib/rules/padded-blocks.js",
        "metrics": {
          "complexity": 27,
          "loc": 279,
          "functionCount": 7,
          "duplicationRatio": 0.22
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.4
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.44
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 21
      },
      {
        "file": "lib/rules/padding-line-between-statements.js",
        "metrics": {
          "complexity": 47,
          "loc": 362,
          "functionCount": 18,
          "duplicationRatio": 0.06
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.35
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.21
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/prefer-arrow-callback.js",
        "metrics": {
          "complexity": 31,
          "loc": 276,
          "functionCount": 7,
          "duplicationRatio": 0.09
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.38
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 67,
            "threshold": 10,
            "excessRatio": 1.9,
            "function": "getCallbackInfo"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 22
      },
      {
        "file": "lib/rules/prefer-const.js",
        "metrics": {
          "complexity": 72,
          "loc": 329,
          "functionCount": 9,
          "duplicationRatio": 0.03
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.6
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.1
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 178,
            "threshold": 10,
            "excessRatio": 2,
            "function": "getIdentifierIfShouldBeConst"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 396,
            "threshold": 10,
            "excessRatio": 2.3,
            "function": "checkGroup"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/prefer-destructuring.js",
        "metrics": {
          "complexity": 34,
          "loc": 201,
          "functionCount": 8,
          "duplicationRatio": 0.19
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 241,
            "threshold": 10,
            "excessRatio": 1.5,
            "function": "performCheck"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.26
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 17
      },
      {
        "file": "lib/rules/prefer-exponentiation-operator.js",
        "metrics": {
          "complexity": 23,
          "loc": 164,
          "functionCount": 5,
          "duplicationRatio": 0.1
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 55,
            "threshold": 10,
            "excessRatio": 1.6,
            "function": "doesExponentiationExpressionNeedParens"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 38
      },
      {
        "file": "lib/rules/prefer-named-capture-group.js",
        "metrics": {
          "complexity": 12,
          "loc": 137,
          "functionCount": 2,
          "duplicationRatio": 0.15
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 88
      },
      {
        "file": "lib/rules/prefer-numeric-literals.js",
        "metrics": {
          "complexity": 2,
          "loc": 96,
          "functionCount": 1,
          "duplicationRatio": 0.1
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/prefer-object-has-own.js",
        "metrics": {
          "complexity": 7,
          "loc": 105,
          "functionCount": 1,
          "duplicationRatio": 0.11
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/prefer-object-spread.js",
        "metrics": {
          "complexity": 35,
          "loc": 204,
          "functionCount": 10,
          "duplicationRatio": 0.07
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.02
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 34
      },
      {
        "file": "lib/rules/prefer-promise-reject-errors.js",
        "metrics": {
          "complexity": 8,
          "loc": 93,
          "functionCount": 2,
          "duplicationRatio": 0.17
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.16
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 90
      },
      {
        "file": "lib/rules/prefer-reflect.js",
        "metrics": {
          "complexity": 1,
          "loc": 121,
          "functionCount": 1,
          "duplicationRatio": 0.13
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/prefer-regex-literals.js",
        "metrics": {
          "complexity": 58,
          "loc": 448,
          "functionCount": 14,
          "duplicationRatio": 0.11
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.49
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 282,
            "threshold": 10,
            "excessRatio": 1.3,
            "function": "resolveEscapes"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/prefer-rest-params.js",
        "metrics": {
          "complexity": 10,
          "loc": 58,
          "functionCount": 4,
          "duplicationRatio": 0.22
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.44
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 84
      },
      {
        "file": "lib/rules/prefer-spread.js",
        "metrics": {
          "complexity": 6,
          "loc": 54,
          "functionCount": 2,
          "duplicationRatio": 0.13
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/prefer-template.js",
        "metrics": {
          "complexity": 45,
          "loc": 218,
          "functionCount": 11,
          "duplicationRatio": 0.07
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.25
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.09
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 15
      },
      {
        "file": "lib/rules/quote-props.js",
        "metrics": {
          "complexity": 47,
          "loc": 309,
          "functionCount": 7,
          "duplicationRatio": 0.24
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.35
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.03
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 188,
            "threshold": 10,
            "excessRatio": 1.8,
            "function": "checkUnnecessaryQuotes"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.58
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/quotes.js",
        "metrics": {
          "complexity": 33,
          "loc": 281,
          "functionCount": 5,
          "duplicationRatio": 0.14
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.41
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 255,
            "threshold": 10,
            "excessRatio": 1.5,
            "function": "isAllowedAsNonBacktick"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 25
      },
      {
        "file": "lib/rules/radix.js",
        "metrics": {
          "complexity": 19,
          "loc": 140,
          "functionCount": 5,
          "duplicationRatio": 0.07
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 61
      },
      {
        "file": "lib/rules/require-atomic-updates.js",
        "metrics": {
          "complexity": 30,
          "loc": 245,
          "functionCount": 8,
          "duplicationRatio": 0.11
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.5
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.23
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 37
      },
      {
        "file": "lib/rules/require-await.js",
        "metrics": {
          "complexity": 17,
          "loc": 114,
          "functionCount": 3,
          "duplicationRatio": 0.05
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 74,
            "threshold": 10,
            "excessRatio": 1.5,
            "function": "exitFunction"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 61
      },
      {
        "file": "lib/rules/require-unicode-regexp.js",
        "metrics": {
          "complexity": 4,
          "loc": 261,
          "functionCount": 1,
          "duplicationRatio": 0.04
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.3
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 90
      },
      {
        "file": "lib/rules/require-yield.js",
        "metrics": {
          "complexity": 6,
          "loc": 43,
          "functionCount": 2,
          "duplicationRatio": 0.2
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.33
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 87
      },
      {
        "file": "lib/rules/rest-spread-spacing.js",
        "metrics": {
          "complexity": 12,
          "loc": 119,
          "functionCount": 1,
          "duplicationRatio": 0.33
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 74,
            "threshold": 10,
            "excessRatio": 1.2,
            "function": "checkWhiteSpace"
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.11
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 46
      },
      {
        "file": "lib/rules/semi-spacing.js",
        "metrics": {
          "complexity": 25,
          "loc": 210,
          "functionCount": 7,
          "duplicationRatio": 0.24
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.05
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 175,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "checkSemicolonSpacing"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.62
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 16
      },
      {
        "file": "lib/rules/semi-style.js",
        "metrics": {
          "complexity": 20,
          "loc": 161,
          "functionCount": 3,
          "duplicationRatio": 0.16
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.04
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 51
      },
      {
        "file": "lib/rules/semi.js",
        "metrics": {
          "complexity": 69,
          "loc": 315,
          "functionCount": 12,
          "duplicationRatio": 0.17
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.45
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.05
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 395,
            "threshold": 10,
            "excessRatio": 1.5,
            "function": "checkForSemicolon"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.14
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/rules/sort-imports.js",
        "metrics": {
          "complexity": 8,
          "loc": 246,
          "functionCount": 4,
          "duplicationRatio": 0.13
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.23
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 91
      },
      {
        "file": "lib/rules/sort-keys.js",
        "metrics": {
          "complexity": 3,
          "loc": 198,
          "functionCount": 1,
          "duplicationRatio": 0.17
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.15
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 91
      },
      {
        "file": "lib/rules/sort-vars.js",
        "metrics": {
          "complexity": 1,
          "loc": 112,
          "functionCount": 0,
          "duplicationRatio": 0.27
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.83
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 75
      },
      {
        "file": "lib/rules/space-before-blocks.js",
        "metrics": {
          "complexity": 22,
          "loc": 170,
          "functionCount": 4,
          "duplicationRatio": 0.31
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.04
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 15
      },
      {
        "file": "lib/rules/space-before-function-paren.js",
        "metrics": {
          "complexity": 21,
          "loc": 154,
          "functionCount": 3,
          "duplicationRatio": 0.4
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.34
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 5
      },
      {
        "file": "lib/rules/space-in-parens.js",
        "metrics": {
          "complexity": 26,
          "loc": 275,
          "functionCount": 7,
          "duplicationRatio": 0.22
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.38
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.49
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 20
      },
      {
        "file": "lib/rules/space-infix-ops.js",
        "metrics": {
          "complexity": 17,
          "loc": 174,
          "functionCount": 5,
          "duplicationRatio": 0.21
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.41
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 52
      },
      {
        "file": "lib/rules/space-unary-ops.js",
        "metrics": {
          "complexity": 41,
          "loc": 285,
          "functionCount": 11,
          "duplicationRatio": 0.21
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.05
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.43
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.41
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 3
      },
      {
        "file": "lib/rules/spaced-comment.js",
        "metrics": {
          "complexity": 29,
          "loc": 143,
          "functionCount": 9,
          "duplicationRatio": 0.19
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.45
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 371,
            "threshold": 10,
            "excessRatio": 1.6,
            "function": "checkCommentForSpace"
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.29
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 21
      },
      {
        "file": "lib/rules/strict.js",
        "metrics": {
          "complexity": 32,
          "loc": 195,
          "functionCount": 11,
          "duplicationRatio": 0.05
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 44
      },
      {
        "file": "lib/rules/switch-colon-spacing.js",
        "metrics": {
          "complexity": 7,
          "loc": 112,
          "functionCount": 3,
          "duplicationRatio": 0.25
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.65
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 79
      },
      {
        "file": "lib/rules/symbol-description.js",
        "metrics": {
          "complexity": 2,
          "loc": 42,
          "functionCount": 1,
          "duplicationRatio": 0.09
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/rules/template-curly-spacing.js",
        "metrics": {
          "complexity": 14,
          "loc": 125,
          "functionCount": 2,
          "duplicationRatio": 0.31
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.02
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 47
      },
      {
        "file": "lib/rules/template-tag-spacing.js",
        "metrics": {
          "complexity": 5,
          "loc": 93,
          "functionCount": 1,
          "duplicationRatio": 0.38
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.28
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 58
      },
      {
        "file": "lib/rules/unicode-bom.js",
        "metrics": {
          "complexity": 1,
          "loc": 53,
          "functionCount": 0,
          "duplicationRatio": 0.3
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.97
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 72
      },
      {
        "file": "lib/rules/use-isnan.js",
        "metrics": {
          "complexity": 27,
          "loc": 187,
          "functionCount": 5,
          "duplicationRatio": 0.13
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 48
      },
      {
        "file": "lib/rules/valid-typeof.js",
        "metrics": {
          "complexity": 5,
          "loc": 127,
          "functionCount": 2,
          "duplicationRatio": 0.28
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.9
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 74
      },
      {
        "file": "lib/rules/vars-on-top.js",
        "metrics": {
          "complexity": 27,
          "loc": 98,
          "functionCount": 6,
          "duplicationRatio": 0.16
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.05
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 41
      },
      {
        "file": "lib/rules/wrap-iife.js",
        "metrics": {
          "complexity": 12,
          "loc": 154,
          "functionCount": 4,
          "duplicationRatio": 0.28
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.9
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 62
      },
      {
        "file": "lib/rules/wrap-regex.js",
        "metrics": {
          "complexity": 1,
          "loc": 72,
          "functionCount": 0,
          "duplicationRatio": 0.52
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.03
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 17
      },
      {
        "file": "lib/rules/yield-star-spacing.js",
        "metrics": {
          "complexity": 8,
          "loc": 121,
          "functionCount": 2,
          "duplicationRatio": 0.47
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.57
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 39
      },
      {
        "file": "lib/rules/yoda.js",
        "metrics": {
          "complexity": 45,
          "loc": 234,
          "functionCount": 11,
          "duplicationRatio": 0.13
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.25
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.17
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 14
      },
      {
        "file": "packages/js/src/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.6,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "packages/js/types/index.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/types/base.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/types/cjs.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/types/formatting.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/types/index.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "packages/eslint-config-eslint/types/nodejs.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/index.js",
        "metrics": {
          "complexity": 15,
          "loc": 180,
          "functionCount": 3,
          "duplicationRatio": 0.14
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 3,
          "instability": 0.57,
          "cohesionScore": 0.4,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "healthScore": 79
      },
      {
        "file": "lib/languages/js/validate-language-options.js",
        "metrics": {
          "complexity": 42,
          "loc": 111,
          "functionCount": 8,
          "duplicationRatio": 0.08
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.1
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 153,
            "threshold": 10,
            "excessRatio": 1.2,
            "function": "validateLanguageOptions"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 22
      },
      {
        "file": "lib/linter/code-path-analysis/code-path-analyzer.js",
        "metrics": {
          "complexity": 186,
          "loc": 492,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 9.3
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.64
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 131,
            "threshold": 10,
            "excessRatio": 2.3,
            "function": "isIdentifierReference"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 258,
            "threshold": 10,
            "excessRatio": 3.8,
            "function": "preprocess"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 390,
            "threshold": 10,
            "excessRatio": 3.2,
            "function": "processCodePathToEnter"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 545,
            "threshold": 10,
            "excessRatio": 3.6,
            "function": "processCodePathToExit"
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 668,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "postprocess"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.58,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/linter/code-path-analysis/code-path-segment.js",
        "metrics": {
          "complexity": 20,
          "loc": 91,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.75,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "healthScore": 58
      },
      {
        "file": "lib/linter/code-path-analysis/code-path-state.js",
        "metrics": {
          "complexity": 180,
          "loc": 872,
          "functionCount": 63,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.91
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/linter/code-path-analysis/code-path.js",
        "metrics": {
          "complexity": 28,
          "loc": 120,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 47
      },
      {
        "file": "lib/linter/code-path-analysis/debug-helpers.js",
        "metrics": {
          "complexity": 7,
          "loc": 132,
          "functionCount": 2,
          "duplicationRatio": 0.01
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/linter/code-path-analysis/fork-context.js",
        "metrics": {
          "complexity": 25,
          "loc": 122,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.5,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 49
      },
      {
        "file": "lib/linter/code-path-analysis/id-generator.js",
        "metrics": {
          "complexity": 3,
          "loc": 15,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 90,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/cli-engine/formatters/html.js",
        "metrics": {
          "complexity": 14,
          "loc": 255,
          "functionCount": 8,
          "duplicationRatio": 0.01
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.27
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 72
      },
      {
        "file": "lib/cli-engine/formatters/json-with-metadata.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/cli-engine/formatters/json.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/cli-engine/formatters/stylish.js",
        "metrics": {
          "complexity": 2,
          "loc": 89,
          "functionCount": 1,
          "duplicationRatio": 0.02
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.25,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "packages/js/src/configs/eslint-all.js",
        "metrics": {
          "complexity": 1,
          "loc": 203,
          "functionCount": 0,
          "duplicationRatio": 0.29
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.01
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.9
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 67
      },
      {
        "file": "packages/js/src/configs/eslint-recommended.js",
        "metrics": {
          "complexity": 1,
          "loc": 66,
          "functionCount": 0,
          "duplicationRatio": 0.11
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.8,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/source-code.js",
        "metrics": {
          "complexity": 181,
          "loc": 736,
          "functionCount": 35,
          "duplicationRatio": 0.03
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 9.05
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.45
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 49,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "validate"
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 142,
            "threshold": 10,
            "excessRatio": 1.3,
            "function": "normalizeConfigGlobal"
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 194,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "isSpaceBetween"
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 272,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "addDeclaredGlobals"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.24,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "lib/languages/js/source-code/token-store/backward-token-comment-cursor.js",
        "metrics": {
          "complexity": 1,
          "loc": 32,
          "functionCount": 0,
          "duplicationRatio": 0.16
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.04
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.83,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 93
      },
      {
        "file": "lib/languages/js/source-code/token-store/backward-token-cursor.js",
        "metrics": {
          "complexity": 1,
          "loc": 22,
          "functionCount": 0,
          "duplicationRatio": 0.16
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.07
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.83,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 93
      },
      {
        "file": "lib/languages/js/source-code/token-store/cursor.js",
        "metrics": {
          "complexity": 1,
          "loc": 19,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/cursors.js",
        "metrics": {
          "complexity": 7,
          "loc": 64,
          "functionCount": 3,
          "duplicationRatio": 0.08
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.83,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/decorative-cursor.js",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.83,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/filter-cursor.js",
        "metrics": {
          "complexity": 1,
          "loc": 17,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/forward-token-comment-cursor.js",
        "metrics": {
          "complexity": 1,
          "loc": 36,
          "functionCount": 0,
          "duplicationRatio": 0.11
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.83,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/forward-token-cursor.js",
        "metrics": {
          "complexity": 1,
          "loc": 25,
          "functionCount": 0,
          "duplicationRatio": 0.14
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.83,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/index.js",
        "metrics": {
          "complexity": 30,
          "loc": 401,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.5
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.34
          }
        ],
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.7,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 21
      },
      {
        "file": "lib/languages/js/source-code/token-store/limit-cursor.js",
        "metrics": {
          "complexity": 1,
          "loc": 15,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/padded-token-cursor.js",
        "metrics": {
          "complexity": 1,
          "loc": 17,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/skip-cursor.js",
        "metrics": {
          "complexity": 1,
          "loc": 17,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 8,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "lib/languages/js/source-code/token-store/utils.js",
        "metrics": {
          "complexity": 1,
          "loc": 54,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "healthScore": 100
      }
    ],
    "overview": {
      "grade": "D",
      "statistics": {
        "totalFiles": 425,
        "totalLOC": 66858,
        "avgComplexity": 18.8,
        "avgLOC": 157,
        "avgDuplicationRatio": 0.18
      },
      "scores": {
        "complexity": 52,
        "duplication": 97,
        "maintainability": 69,
        "overall": 68
      },
      "summary": "193 critical files found requiring attention"
    },
    "context": {
      "project": {
        "name": "eslint",
        "path": "/Users/fstepho/dev/insightcode-cli/temp-analysis/eslint",
        "version": "9.30.1",
        "repository": "eslint/eslint"
      },
      "analysis": {
        "timestamp": "2025-07-13T00:47:24.171Z",
        "durationMs": 68626,
        "toolVersion": "0.6.0",
        "filesAnalyzed": 425,
        "duplicationMode": "legacy"
      }
    },
    "codeContext": [
      {
        "file": "Makefile.js",
        "criticalFunctions": [
          {
            "name": "updateVersions",
            "complexity": 4,
            "lineCount": 58,
            "parameterCount": 2,
            "snippet": "function updateVersions(oldVersion, newVersion) {\n\techo(\"Updating ESLint versions list in docs package\");\n\tconst filePath = path.join(\n\t\t__dirname,\n\t\t\"docs\",\n\t\t\"src\",\n\t\t\"_data\",\n\t\t\"versions.json\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "generateRuleIndexPage",
            "complexity": 1,
            "lineCount": 60,
            "parameterCount": 0,
            "snippet": "function generateRuleIndexPage() {\n\tconst docsSiteOutputFile = path.join(DOCS_DATA_DIR, \"rules.json\"),\n\t\tdocsSiteMetaOutputFile = path.join(DOCS_DATA_DIR, \"rules_meta.json\"),\n\t\truleTypes = \"conf/rule-type-list.json\",\n\t\truleTypesData = JSON.parse(cat(path.resolve(ruleTypes)));\n\tconst meta = {};\n\tRULE_FILES.map(filename => [filename, path.basename(filename, \".js\")])\n\t\t.sort((a, b) => a[1].localeCompare(b[1]))\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 60 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getFormatterResults",
            "complexity": 1,
            "lineCount": 59,
            "parameterCount": 0,
            "snippet": "function getFormatterResults() {\n\tconst util = require(\"node:util\");\n\tconst formattersMetadata = require(\"./lib/cli-engine/formatters/formatters-meta.json\");\n\tconst formatterFiles = fs\n\t\t\t.readdirSync(\"./lib/cli-engine/formatters/\")\n\t\t\t.filter(fileName => !fileName.includes(\"formatters-meta.json\")),\n\t\trules = {\n\t\t\t\"no-else-return\": \"warn\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/cli.js",
        "criticalFunctions": [
          {
            "name": "translateOptions",
            "complexity": 27,
            "lineCount": 187,
            "parameterCount": 2,
            "snippet": "async function translateOptions(\n\t{\n\t\tcache,\n\t\tcacheFile,\n\t\tcacheLocation,\n\t\tcacheStrategy,\n\t\tconfig,\n\t\tconfigLookup,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 187 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/options.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/config/config-loader.js",
        "criticalFunctions": [
          {
            "name": "calculateConfigArray",
            "complexity": 15,
            "lineCount": 102,
            "parameterCount": 3,
            "snippet": "static async calculateConfigArray(configFilePath, basePath, options) {\n\t\tconst {\n\t\t\tcwd,\n\t\t\tbaseConfig,\n\t\t\tignoreEnabled,\n\t\t\tignorePatterns,\n\t\t\toverrideConfig,\n\t\t\thasUnstableNativeNodeJsTSConfigFlag = false,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 102 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "loadConfigFile",
            "complexity": 10,
            "lineCount": 79,
            "parameterCount": 2,
            "snippet": "async function loadConfigFile(filePath, hasUnstableNativeNodeJsTSConfigFlag) {\n\tdebug(`Loading config from ${filePath}`);\n\tconst fileURL = pathToFileURL(filePath);\n\tdebug(`Config file URL is ${fileURL}`);\n\tconst mtime = (await fs.stat(filePath)).mtime.getTime();\n\t/*\n\t * Append a query with the config file's modification time (`mtime`) in order\n\t * to import the current version of the config file. Without the query, `import()` would\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/config/config.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 22,
            "lineCount": 107,
            "parameterCount": 1,
            "snippet": "constructor(config) {\n\t\tconst { plugins, language, languageOptions, processor, ...otherKeys } =\n\t\t\tconfig;\n\t\tconst schema = new ObjectSchema(flatConfigSchema);\n\t\tschema.validate(config);\n\t\tObject.assign(this, otherKeys);\n\t\tif (!language) {\n\t\t\tthrow new TypeError(\"Key 'language' is required.\");\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 107 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "validateRulesConfig",
            "complexity": 10,
            "lineCount": 62,
            "parameterCount": 1,
            "snippet": "validateRulesConfig(rulesConfig) {\n\t\tif (!rulesConfig) {\n\t\t\tthrow new TypeError(\"Config is required for validation.\");\n\t\t}\n\t\tfor (const [ruleId, ruleOptions] of Object.entries(rulesConfig)) {\n\t\t\tif (ruleId === \"__proto__\") {\n\t\t\t\tcontinue;\n\t\t\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/config/flat-config-array.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/config/flat-config-schema.js",
        "criticalFunctions": [
          {
            "name": "deepMerge",
            "complexity": 9,
            "lineCount": 52,
            "parameterCount": 3,
            "snippet": "function deepMerge(first, second, mergeMap = new Map()) {\n\tlet secondMergeMap = mergeMap.get(first);\n\tif (secondMergeMap) {\n\t\tconst result = secondMergeMap.get(second);\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\t} else {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/eslint/eslint-helpers.js",
        "criticalFunctions": [
          {
            "name": "processOptions",
            "complexity": 48,
            "lineCount": 194,
            "parameterCount": 1,
            "snippet": "function processOptions({\n\tallowInlineConfig = true, // ← we cannot use `overrideConfig.noInlineConfig` instead because `allowInlineConfig` has side-effect that suppress warnings that show inline configs are ignored.\n\tbaseConfig = null,\n\tcache = false,\n\tcacheLocation = \".eslintcache\",\n\tcacheStrategy = \"metadata\",\n\tcwd = process.cwd(),\n\terrorOnUnmatchedPattern = true,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 48 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 194 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "globSearch",
            "complexity": 7,
            "lineCount": 124,
            "parameterCount": 1,
            "snippet": "async function globSearch({\n\tbasePath,\n\tpatterns,\n\trawPatterns,\n\tconfigLoader,\n\terrorOnUnmatchedPattern,\n}) {\n\tif (patterns.length === 0) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 124 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "globMultiSearch",
            "complexity": 6,
            "lineCount": 66,
            "parameterCount": 1,
            "snippet": "async function globMultiSearch({\n\tsearches,\n\tconfigLoader,\n\terrorOnUnmatchedPattern,\n}) {\n\t/*\n\t * For convenience, we normalized the search map into an array of objects.\n\t * Next, we filter out all searches that have no patterns. This happens\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getCacheFile",
            "complexity": 6,
            "lineCount": 58,
            "parameterCount": 3,
            "snippet": "function getCacheFile(cacheFile, cwd, { prefix = \".cache_\" } = {}) {\n\t/*\n\t * make sure the path separators are normalized for the environment/os\n\t * keeping the trailing path separator if present\n\t */\n\tconst normalizedCacheFile = path.normalize(cacheFile);\n\tconst resolvedCacheFile = path.resolve(cwd, normalizedCacheFile);\n\tconst looksLikeADirectory = normalizedCacheFile.slice(-1) === path.sep;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "findFiles",
            "complexity": 4,
            "lineCount": 118,
            "parameterCount": 1,
            "snippet": "async function findFiles({\n\tpatterns,\n\tglobInputPaths,\n\tcwd,\n\tconfigLoader,\n\terrorOnUnmatchedPattern,\n}) {\n\tconst results = [];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 118 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/eslint/eslint.js",
        "criticalFunctions": [
          {
            "name": "lintText",
            "complexity": 21,
            "lineCount": 102,
            "parameterCount": 2,
            "snippet": "async lintText(code, options = {}) {\n\t\tif (typeof code !== \"string\") {\n\t\t\tthrow new Error(\"'code' must be a string\");\n\t\t}\n\t\tif (typeof options !== \"object\") {\n\t\t\tthrow new Error(\"'options' must be an object, null, or undefined\");\n\t\t}\n\t\tconst { filePath, warnIgnored, ...unknownOptions } = options || {};\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 102 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "lintFiles",
            "complexity": 17,
            "lineCount": 208,
            "parameterCount": 1,
            "snippet": "async lintFiles(patterns) {\n\t\tlet normalizedPatterns = patterns;\n\t\tconst {\n\t\t\tcacheFilePath,\n\t\t\tlintResultCache,\n\t\t\tlinter,\n\t\t\toptions: eslintOptions,\n\t\t} = privateMembers.get(this);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 208 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getRulesMetaForResults",
            "complexity": 11,
            "lineCount": 58,
            "parameterCount": 1,
            "snippet": "getRulesMetaForResults(results) {\n\t\tif (results.length === 0) {\n\t\t\treturn {};\n\t\t}\n\t\tconst resultRules = new Map();\n\t\tconst {\n\t\t\tconfigLoader,\n\t\t\toptions: { cwd },\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "loadFormatter",
            "complexity": 11,
            "lineCount": 86,
            "parameterCount": 1,
            "snippet": "async loadFormatter(name = \"stylish\") {\n\t\tif (typeof name !== \"string\") {\n\t\t\tthrow new Error(\"'name' must be a string\");\n\t\t}\n\t\tconst normalizedFormatName = name.replace(/\\\\/gu, \"/\");\n\t\tconst namespace = getNamespaceFromTerm(normalizedFormatName);\n\t\tconst { cwd } = privateMembers.get(this).options;\n\t\tlet formatterPath;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 86 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "verifyText",
            "complexity": 8,
            "lineCount": 67,
            "parameterCount": 1,
            "snippet": "function verifyText({\n\ttext,\n\tcwd,\n\tfilePath: providedFilePath,\n\tconfigs,\n\tfix,\n\tallowInlineConfig,\n\truleFilter,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/eslint/legacy-eslint.js",
        "criticalFunctions": [
          {
            "name": "processOptions",
            "complexity": 47,
            "lineCount": 188,
            "parameterCount": 1,
            "snippet": "function processOptions({\n\tallowInlineConfig = true, // ← we cannot use `overrideConfig.noInlineConfig` instead because `allowInlineConfig` has side-effect that suppress warnings that show inline configs are ignored.\n\tbaseConfig = null,\n\tcache = false,\n\tcacheLocation = \".eslintcache\",\n\tcacheStrategy = \"metadata\",\n\tcwd = process.cwd(),\n\terrorOnUnmatchedPattern = true,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 47 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 188 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rule-tester/rule-tester.js",
        "criticalFunctions": [
          {
            "name": "testInvalidTemplate",
            "complexity": 40,
            "lineCount": 483,
            "parameterCount": 1,
            "snippet": "function testInvalidTemplate(item) {\n\t\t\tassert.ok(\n\t\t\t\ttypeof item.code === \"string\",\n\t\t\t\t\"Test case must specify a string value for 'code'\",\n\t\t\t);\n\t\t\tif (item.name) {\n\t\t\t\tassert.ok(\n\t\t\t\t\ttypeof item.name === \"string\",\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 40 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 483 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "runRuleForItem",
            "complexity": 23,
            "lineCount": 247,
            "parameterCount": 1,
            "snippet": "function runRuleForItem(item) {\n\t\t\tconst flatConfigArrayOptions = {\n\t\t\t\tbaseConfig,\n\t\t\t};\n\t\t\tif (item.filename) {\n\t\t\t\tflatConfigArrayOptions.basePath =\n\t\t\t\t\tpath.parse(item.filename).root || void 0;\n\t\t\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 247 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "run",
            "complexity": 10,
            "lineCount": 1008,
            "parameterCount": 3,
            "snippet": "run(ruleName, rule, test) {\n\t\tconst testerConfig = this.testerConfig,\n\t\t\trequiredScenarios = [\"valid\", \"invalid\"],\n\t\t\tscenarioErrors = [],\n\t\t\tlinter = this.linter,\n\t\t\truleId = `rule-to-test/${ruleName}`;\n\t\tconst seenValidTestCases = new Set();\n\t\tconst seenInvalidTestCases = new Set();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 1008 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/apply-disable-directives.js",
        "criticalFunctions": [
          {
            "name": "applyDirectives",
            "complexity": 14,
            "lineCount": 128,
            "parameterCount": 1,
            "snippet": "function applyDirectives(options) {\n\tconst problems = [];\n\tconst usedDisableDirectives = new Set();\n\tconst { sourceCode } = options;\n\tfor (const problem of options.problems) {\n\t\tlet disableDirectivesForProblem = [];\n\t\tlet nextDirectiveIndex = 0;\n\t\twhile (\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 128 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "collectUsedEnableDirectives",
            "complexity": 10,
            "lineCount": 79,
            "parameterCount": 1,
            "snippet": "function collectUsedEnableDirectives(directives) {\n\t/**\n\t * A Map of `eslint-enable` keyed by ruleIds that may be marked as used.\n\t * If `eslint-enable` does not have a ruleId, the key will be `null`.\n\t * @type {Map<string|null, Directive>}\n\t */\n\tconst enabledRules = new Map();\n\t/**\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createIndividualDirectivesRemoval",
            "complexity": 1,
            "lineCount": 91,
            "parameterCount": 3,
            "snippet": "function createIndividualDirectivesRemoval(\n\tdirectives,\n\tparentDirective,\n\tsourceCode,\n) {\n\t/*\n\t * Get the list of the rules text without any surrounding whitespace. In order to preserve the original\n\t * formatting, we don't want to change that whitespace.\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 91 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/esquery.js",
        "criticalFunctions": [
          {
            "name": "analyzeSelector",
            "complexity": 18,
            "lineCount": 66,
            "parameterCount": 1,
            "snippet": "function analyzeSelector(selector) {\n\t\tswitch (selector.type) {\n\t\t\tcase \"identifier\":\n\t\t\t\tidentifierCount++;\n\t\t\t\treturn [selector.value];\n\t\t\tcase \"not\":\n\t\t\t\tselector.selectors.map(analyzeSelector);\n\t\t\t\treturn null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "analyzeParsedSelector",
            "complexity": 1,
            "lineCount": 84,
            "parameterCount": 1,
            "snippet": "function analyzeParsedSelector(parsedSelector) {\n\tlet attributeCount = 0;\n\tlet identifierCount = 0;\n\t/**\n\t * Analyzes a selector and returns the node types that could possibly trigger it.\n\t * @param {ESQuerySelector} selector The selector to analyze.\n\t * @returns {string[]|null} The node types that could possibly trigger this selector, or `null` if all node types could trigger it\n\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 84 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/linter.js",
        "criticalFunctions": [
          {
            "name": "verifyAndFix",
            "complexity": 22,
            "lineCount": 134,
            "parameterCount": 3,
            "snippet": "verifyAndFix(text, config, options) {\n\t\tlet messages,\n\t\t\tfixedResult,\n\t\t\tfixed = false,\n\t\t\tpassNumber = 0,\n\t\t\tcurrentText = text,\n\t\t\tsecondPreviousText,\n\t\t\tpreviousText;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 134 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "#eslintrcVerifyWithoutProcessors",
            "complexity": 21,
            "lineCount": 194,
            "parameterCount": 3,
            "snippet": "#eslintrcVerifyWithoutProcessors(file, providedConfig, providedOptions) {\n\t\tconst slots = internalSlotsMap.get(this);\n\t\tconst config = providedConfig || {};\n\t\tconst options = normalizeVerifyOptions(providedOptions, config);\n\t\tlet parserName = DEFAULT_PARSER_NAME;\n\t\tlet parser = espree;\n\t\tif (typeof config.parser === \"object\" && config.parser !== null) {\n\t\t\tparserName = config.parser.filePath;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 194 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "#flatVerifyWithoutProcessors",
            "complexity": 18,
            "lineCount": 347,
            "parameterCount": 3,
            "snippet": "#flatVerifyWithoutProcessors(file, providedConfig, providedOptions) {\n\t\tconst slots = internalSlotsMap.get(this);\n\t\tconst config = providedConfig || {};\n\t\tconst { settings = {}, languageOptions } = config;\n\t\tconst options = normalizeVerifyOptions(providedOptions, config);\n\t\tif (!slots.lastSourceCode) {\n\t\t\tlet t;\n\t\t\tif (options.stats) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 347 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "normalizeVerifyOptions",
            "complexity": 14,
            "lineCount": 59,
            "parameterCount": 2,
            "snippet": "function normalizeVerifyOptions(providedOptions, config) {\n\tconst linterOptions = config.linterOptions || config;\n\tconst disableInlineConfig = linterOptions.noInlineConfig === true;\n\tconst ignoreInlineConfig = providedOptions.allowInlineConfig === false;\n\tconst configNameOfNoInlineConfig = config.configNameOfNoInlineConfig\n\t\t? ` (${config.configNameOfNoInlineConfig})`\n\t\t: \"\";\n\tlet reportUnusedDisableDirectives =\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "addProblemIfSameSeverityAndOptions",
            "complexity": 10,
            "lineCount": 55,
            "parameterCount": 7,
            "snippet": "function addProblemIfSameSeverityAndOptions(\n\tconfig,\n\tloc,\n\tproblems,\n\truleId,\n\truleOptions,\n\truleOptionsInline,\n\tseverity,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/report-translator.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/source-code-traverser.js",
        "criticalFunctions": [
          {
            "name": "calculateSelectors",
            "complexity": 13,
            "lineCount": 65,
            "parameterCount": 3,
            "snippet": "calculateSelectors(node, ancestry, isExit) {\n\t\tconst nodeTypeKey = this.esqueryOptions?.nodeTypeKey || \"type\";\n\t\tconst selectors = [];\n\t\t/*\n\t\t * Get the selectors that may match this node. First, check\n\t\t * to see if the node type has specific selectors,\n\t\t * then gather the \"any type\" selectors.\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "traverseSync",
            "complexity": 9,
            "lineCount": 56,
            "parameterCount": 3,
            "snippet": "traverseSync(sourceCode, visitor, { steps } = {}) {\n\t\tconst esquery = new ESQueryHelper(visitor, {\n\t\t\tvisitorKeys: sourceCode.visitorKeys ?? this.#language.visitorKeys,\n\t\t\tfallback: vk.getKeys,\n\t\t\tmatchClass: this.#language.matchesSelectorClass ?? (() => false),\n\t\t\tnodeTypeKey: this.#language.nodeTypeKey,\n\t\t});\n\t\tconst currentAncestry = [];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 1,
            "lineCount": 85,
            "parameterCount": 2,
            "snippet": "constructor(visitor, esqueryOptions) {\n\t\t/**\n\t\t * The emitter to use during traversal.\n\t\t * @type {SourceCodeVisitor}\n\t\t */\n\t\tthis.visitor = visitor;\n\t\t/**\n\t\t * The options for `esquery` to use during matching.\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 85 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/cli-engine/cli-engine.js",
        "criticalFunctions": [
          {
            "name": "executeOnFiles",
            "complexity": 18,
            "lineCount": 132,
            "parameterCount": 1,
            "snippet": "executeOnFiles(patterns) {\n\t\tconst {\n\t\t\tcacheFilePath,\n\t\t\tfileEnumerator,\n\t\t\tlastConfigArrays,\n\t\t\tlintResultCache,\n\t\t\tlinter,\n\t\t\toptions: {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 132 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 11,
            "lineCount": 88,
            "parameterCount": 2,
            "snippet": "constructor(providedOptions, { preloadedPlugins } = {}) {\n\t\tconst options = Object.assign(\n\t\t\tObject.create(null),\n\t\t\tdefaultOptions,\n\t\t\t{ cwd: process.cwd() },\n\t\t\tprovidedOptions,\n\t\t);\n\t\tif (options.fix === void 0) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 88 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getFormatter",
            "complexity": 10,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "getFormatter(format) {\n\t\tconst resolvedFormatName = format || \"stylish\";\n\t\tif (typeof resolvedFormatName === \"string\") {\n\t\t\tconst normalizedFormatName = resolvedFormatName.replace(\n\t\t\t\t/\\\\/gu,\n\t\t\t\t\"/\",\n\t\t\t);\n\t\t\tconst slots = internalSlotsMap.get(this);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "verifyText",
            "complexity": 6,
            "lineCount": 58,
            "parameterCount": 1,
            "snippet": "function verifyText({\n\ttext,\n\tcwd,\n\tfilePath: providedFilePath,\n\tconfig,\n\tfix,\n\tallowInlineConfig,\n\treportUnusedDisableDirectives,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              }
            ]
          },
          {
            "name": "getCacheFile",
            "complexity": 6,
            "lineCount": 58,
            "parameterCount": 2,
            "snippet": "function getCacheFile(cacheFile, cwd) {\n\t/*\n\t * make sure the path separators are normalized for the environment/os\n\t * keeping the trailing path separator if present\n\t */\n\tconst normalizedCacheFile = path.normalize(cacheFile);\n\tconst resolvedCacheFile = path.resolve(cwd, normalizedCacheFile);\n\tconst looksLikeADirectory = normalizedCacheFile.slice(-1) === path.sep;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/cli-engine/file-enumerator.js",
        "criticalFunctions": [
          {
            "name": "_iterateFilesRecursive",
            "complexity": 14,
            "lineCount": 80,
            "parameterCount": 2,
            "snippet": "*_iterateFilesRecursive(directoryPath, options) {\n\t\tdebug(`Enter the directory: ${directoryPath}`);\n\t\tconst { configArrayFactory } = internalSlotsMap.get(this);\n\t\t/** @type {ConfigArray|null} */\n\t\tlet config = null;\n\t\tfor (const entry of readdirSafeSync(directoryPath)) {\n\t\t\tconst filePath = path.join(directoryPath, entry.name);\n\t\t\tconst fileInfo = entry.isSymbolicLink()\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "iterateFiles",
            "complexity": 13,
            "lineCount": 58,
            "parameterCount": 1,
            "snippet": "*iterateFiles(patternOrPatterns) {\n\t\tconst { globInputPaths, errorOnUnmatchedPattern } =\n\t\t\tinternalSlotsMap.get(this);\n\t\tconst patterns = Array.isArray(patternOrPatterns)\n\t\t\t? patternOrPatterns\n\t\t\t: [patternOrPatterns];\n\t\tdebug(\"Start to iterate files: %o\", patterns);\n\t\tconst set = new Set();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/cli-engine/lint-result-cache.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/services/suppressions-service.js",
        "criticalFunctions": [
          {
            "name": "applySuppressions",
            "complexity": 10,
            "lineCount": 67,
            "parameterCount": 2,
            "snippet": "applySuppressions(results, suppressions) {\n\t\t/**\n\t\t * We copy the results to avoid modifying the original objects\n\t\t * We remove only result messages that are matched and hence suppressed\n\t\t * We leave the rest untouched to minimize the risk of losing parts of the original data\n\t\t */\n\t\tconst filtered = structuredClone(results);\n\t\tconst unused = {};\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/types/index.d.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/types/rules.d.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/shared/runtime-info.js",
        "criticalFunctions": [
          {
            "name": "environment",
            "complexity": 1,
            "lineCount": 134,
            "parameterCount": 0,
            "snippet": "function environment() {\n\tconst cache = new Map();\n\t/**\n\t * Checks if a path is a child of a directory.\n\t * @param {string} parentPath The parent path to check.\n\t * @param {string} childPath The path to check.\n\t * @returns {boolean} Whether or not the given path is a child of a directory.\n\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 134 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/shared/serialization.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/shared/traverser.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/accessor-pairs.js",
        "criticalFunctions": [
          {
            "name": "checkList",
            "complexity": 18,
            "lineCount": 48,
            "parameterCount": 1,
            "snippet": "function checkList(nodes) {\n\t\t\tconst accessors = [];\n\t\t\tlet found = false;\n\t\t\tfor (let i = 0; i < nodes.length; i++) {\n\t\t\t\tconst node = nodes[i];\n\t\t\t\tif (isAccessorKind(node)) {\n\t\t\t\t\tconst name = astUtils.getStaticPropertyName(node);\n\t\t\t\t\tconst key =\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/array-bracket-newline.js",
        "criticalFunctions": [
          {
            "name": "check",
            "complexity": 15,
            "lineCount": 54,
            "parameterCount": 1,
            "snippet": "function check(node) {\n\t\t\tconst elements = node.elements;\n\t\t\tconst normalizedOptions = normalizeOptions(context.options[0]);\n\t\t\tconst options = normalizedOptions[node.type];\n\t\t\tconst openBracket = sourceCode.getFirstToken(node);\n\t\t\tconst closeBracket = sourceCode.getLastToken(node);\n\t\t\tconst firstIncComment = sourceCode.getTokenAfter(openBracket, {\n\t\t\t\tincludeComments: true,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/array-bracket-spacing.js",
        "criticalFunctions": [
          {
            "name": "validateArraySpacing",
            "complexity": 27,
            "lineCount": 64,
            "parameterCount": 1,
            "snippet": "function validateArraySpacing(node) {\n\t\t\tif (options.spaced && node.elements.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst first = sourceCode.getFirstToken(node),\n\t\t\t\tsecond = sourceCode.getFirstToken(node, 1),\n\t\t\t\tlast = node.typeAnnotation\n\t\t\t\t\t? sourceCode.getTokenBefore(node.typeAnnotation)\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/array-callback-return.js",
        "criticalFunctions": [
          {
            "name": "getArrayMethodName",
            "complexity": 16,
            "lineCount": 68,
            "parameterCount": 1,
            "snippet": "function getArrayMethodName(node) {\n\tlet currentNode = node;\n\twhile (currentNode) {\n\t\tconst parent = currentNode.parent;\n\t\tswitch (parent.type) {\n\t\t\t/*\n\t\t\t * Looks up the destination. e.g.,\n\t\t\t * foo.every(nativeFoo || function foo() { ... });\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkLastSegment",
            "complexity": 13,
            "lineCount": 90,
            "parameterCount": 1,
            "snippet": "function checkLastSegment(node) {\n\t\t\tif (!funcInfo.shouldCheck) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst messageAndSuggestions = { messageId: \"\", suggest: [] };\n\t\t\tif (funcInfo.arrayMethodName === \"forEach\") {\n\t\t\t\tif (\n\t\t\t\t\toptions.checkForEach &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 90 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/array-element-newline.js",
        "criticalFunctions": [
          {
            "name": "check",
            "complexity": 13,
            "lineCount": 108,
            "parameterCount": 1,
            "snippet": "function check(node) {\n\t\t\tconst elements = node.elements;\n\t\t\tconst normalizedOptions = normalizeOptions(context.options[0]);\n\t\t\tconst options = normalizedOptions[node.type];\n\t\t\tif (!options) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet elementBreak = false;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 108 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "reportNoLineBreak",
            "complexity": 1,
            "lineCount": 53,
            "parameterCount": 1,
            "snippet": "function reportNoLineBreak(token) {\n\t\t\tconst tokenBefore = sourceCode.getTokenBefore(token, {\n\t\t\t\tincludeComments: true,\n\t\t\t});\n\t\t\tcontext.report({\n\t\t\t\tloc: {\n\t\t\t\t\tstart: tokenBefore.loc.end,\n\t\t\t\t\tend: token.loc.start,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/arrow-body-style.js",
        "criticalFunctions": [
          {
            "name": "validate",
            "complexity": 21,
            "lineCount": 256,
            "parameterCount": 1,
            "snippet": "function validate(node) {\n\t\t\tconst arrowBody = node.body;\n\t\t\tif (arrowBody.type === \"BlockStatement\") {\n\t\t\t\tconst blockBody = arrowBody.body;\n\t\t\t\tif (blockBody.length !== 1 && !never) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 256 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/arrow-parens.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/arrow-spacing.js",
        "criticalFunctions": [
          {
            "name": "spaces",
            "complexity": 7,
            "lineCount": 58,
            "parameterCount": 1,
            "snippet": "function spaces(node) {\n\t\t\tconst tokens = getTokens(node);\n\t\t\tconst countSpace = countSpaces(tokens);\n\t\t\tif (rule.before) {\n\t\t\t\tif (countSpace.before === 0) {\n\t\t\t\t\tcontext.report({\n\t\t\t\t\t\tnode: tokens.before,\n\t\t\t\t\t\tmessageId: \"expectedBefore\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/block-spacing.js",
        "criticalFunctions": [
          {
            "name": "checkSpacingInsideBraces",
            "complexity": 12,
            "lineCount": 88,
            "parameterCount": 1,
            "snippet": "function checkSpacingInsideBraces(node) {\n\t\t\tconst openBrace = getOpenBrace(node);\n\t\t\tconst closeBrace = sourceCode.getLastToken(node);\n\t\t\tconst firstToken = sourceCode.getTokenAfter(openBrace, {\n\t\t\t\tincludeComments: true,\n\t\t\t});\n\t\t\tconst lastToken = sourceCode.getTokenBefore(closeBrace, {\n\t\t\t\tincludeComments: true,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 88 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/brace-style.js",
        "criticalFunctions": [
          {
            "name": "validateCurlyPair",
            "complexity": 13,
            "lineCount": 73,
            "parameterCount": 2,
            "snippet": "function validateCurlyPair(openingCurly, closingCurly) {\n\t\t\tconst tokenBeforeOpeningCurly =\n\t\t\t\tsourceCode.getTokenBefore(openingCurly);\n\t\t\tconst tokenAfterOpeningCurly =\n\t\t\t\tsourceCode.getTokenAfter(openingCurly);\n\t\t\tconst tokenBeforeClosingCurly =\n\t\t\t\tsourceCode.getTokenBefore(closingCurly);\n\t\t\tconst singleLineException =\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 73 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/callback-return.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/camelcase.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/capitalized-comments.js",
        "criticalFunctions": [
          {
            "name": "isCommentValid",
            "complexity": 15,
            "lineCount": 66,
            "parameterCount": 2,
            "snippet": "function isCommentValid(comment, options) {\n\t\t\tif (DEFAULT_IGNORE_PATTERN.test(comment.value)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst commentWithoutAsterisks = comment.value.replace(/\\*/gu, \"\");\n\t\t\tif (\n\t\t\t\toptions.ignorePatternRegExp &&\n\t\t\t\toptions.ignorePatternRegExp.test(commentWithoutAsterisks)\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/class-methods-use-this.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/comma-dangle.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/comma-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/comma-style.js",
        "criticalFunctions": [
          {
            "name": "validateCommaItemSpacing",
            "complexity": 12,
            "lineCount": 68,
            "parameterCount": 4,
            "snippet": "function validateCommaItemSpacing(\n\t\t\tpreviousItemToken,\n\t\t\tcommaToken,\n\t\t\tcurrentItemToken,\n\t\t\treportItem,\n\t\t) {\n\t\t\tif (\n\t\t\t\tastUtils.isTokenOnSameLine(commaToken, currentItemToken) &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "validateComma",
            "complexity": 6,
            "lineCount": 77,
            "parameterCount": 2,
            "snippet": "function validateComma(node, property) {\n\t\t\tconst items = node[property],\n\t\t\t\tarrayLiteral =\n\t\t\t\t\tnode.type === \"ArrayExpression\" ||\n\t\t\t\t\tnode.type === \"ArrayPattern\";\n\t\t\tif (items.length > 1 || arrayLiteral) {\n\t\t\t\tlet previousItemToken = sourceCode.getFirstToken(node);\n\t\t\t\titems.forEach(item => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 77 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/computed-property-spacing.js",
        "criticalFunctions": [
          {
            "name": "checkSpacing",
            "complexity": 1,
            "lineCount": 54,
            "parameterCount": 1,
            "snippet": "function checkSpacing(propertyName) {\n\t\t\treturn function (node) {\n\t\t\t\tif (!node.computed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst property = node[propertyName];\n\t\t\t\tconst before = sourceCode.getTokenBefore(\n\t\t\t\t\t\tproperty,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/consistent-return.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/constructor-super.js",
        "criticalFunctions": [
          {
            "name": "isPossibleConstructor",
            "complexity": 24,
            "lineCount": 72,
            "parameterCount": 1,
            "snippet": "function isPossibleConstructor(node) {\n\tif (!node) {\n\t\treturn false;\n\t}\n\tswitch (node.type) {\n\t\tcase \"ClassExpression\":\n\t\tcase \"FunctionExpression\":\n\t\tcase \"ThisExpression\":\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/curly.js",
        "criticalFunctions": [
          {
            "name": "needsSemicolon",
            "complexity": 11,
            "lineCount": 51,
            "parameterCount": 1,
            "snippet": "function needsSemicolon(closingBracket) {\n\t\t\tconst tokenBefore = sourceCode.getTokenBefore(closingBracket);\n\t\t\tconst tokenAfter = sourceCode.getTokenAfter(closingBracket);\n\t\t\tconst lastBlockNode = sourceCode.getNodeByRangeIndex(\n\t\t\t\ttokenBefore.range[0],\n\t\t\t);\n\t\t\tif (astUtils.isSemicolonToken(tokenBefore)) {\n\t\t\t\treturn false;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              }
            ]
          },
          {
            "name": "prepareCheck",
            "complexity": 10,
            "lineCount": 131,
            "parameterCount": 4,
            "snippet": "function prepareCheck(node, body, name, opts) {\n\t\t\tconst hasBlock = body.type === \"BlockStatement\";\n\t\t\tlet expected = null;\n\t\t\tif (\n\t\t\t\thasBlock &&\n\t\t\t\t(body.body.length !== 1 ||\n\t\t\t\t\tastUtils.areBracesNecessary(body, sourceCode))\n\t\t\t) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 131 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/default-case-last.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/default-case.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/dot-location.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/eol-last.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/func-call-spacing.js",
        "criticalFunctions": [
          {
            "name": "checkSpacing",
            "complexity": 9,
            "lineCount": 136,
            "parameterCount": 3,
            "snippet": "function checkSpacing(node, leftToken, rightToken) {\n\t\t\tconst textBetweenTokens = text\n\t\t\t\t.slice(leftToken.range[1], rightToken.range[0])\n\t\t\t\t.replace(/\\/\\*.*?\\*\\//gu, \"\");\n\t\t\tconst hasWhitespace = /\\s/u.test(textBetweenTokens);\n\t\t\tconst hasNewline =\n\t\t\t\thasWhitespace &&\n\t\t\t\tastUtils.LINEBREAK_MATCHER.test(textBetweenTokens);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 136 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/func-name-matching.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/func-names.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/function-call-argument-newline.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/function-paren-newline.js",
        "criticalFunctions": [
          {
            "name": "getParenTokens",
            "complexity": 17,
            "lineCount": 82,
            "parameterCount": 1,
            "snippet": "function getParenTokens(node) {\n\t\t\tswitch (node.type) {\n\t\t\t\tcase \"NewExpression\":\n\t\t\t\t\tif (\n\t\t\t\t\t\t!node.arguments.length &&\n\t\t\t\t\t\t!(\n\t\t\t\t\t\t\tastUtils.isOpeningParenToken(\n\t\t\t\t\t\t\t\tsourceCode.getLastToken(node, { skip: 1 }),\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 82 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "validateParens",
            "complexity": 9,
            "lineCount": 71,
            "parameterCount": 2,
            "snippet": "function validateParens(parens, elements) {\n\t\t\tconst leftParen = parens.leftParen;\n\t\t\tconst rightParen = parens.rightParen;\n\t\t\tconst tokenAfterLeftParen = sourceCode.getTokenAfter(leftParen);\n\t\t\tconst tokenBeforeRightParen = sourceCode.getTokenBefore(rightParen);\n\t\t\tconst hasLeftNewline = !astUtils.isTokenOnSameLine(\n\t\t\t\tleftParen,\n\t\t\t\ttokenAfterLeftParen,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 71 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/generator-star-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/getter-return.js",
        "criticalFunctions": [
          {
            "name": "isGetter",
            "complexity": 14,
            "lineCount": 63,
            "parameterCount": 1,
            "snippet": "function isGetter(node) {\n\t\t\tconst parent = node.parent;\n\t\t\tif (\n\t\t\t\tTARGET_NODE_TYPE.test(node.type) &&\n\t\t\t\tnode.body.type === \"BlockStatement\"\n\t\t\t) {\n\t\t\t\tif (parent.kind === \"get\") {\n\t\t\t\t\treturn true;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 63 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/global-require.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/grouped-accessor-pairs.js",
        "criticalFunctions": [
          {
            "name": "checkList",
            "complexity": 22,
            "lineCount": 63,
            "parameterCount": 2,
            "snippet": "function checkList(nodes, shouldCheck) {\n\t\t\tconst accessors = [];\n\t\t\tlet found = false;\n\t\t\tfor (let i = 0; i < nodes.length; i++) {\n\t\t\t\tconst node = nodes[i];\n\t\t\t\tif (shouldCheck(node) && isAccessorKind(node)) {\n\t\t\t\t\tconst name = astUtils.getStaticPropertyName(node);\n\t\t\t\t\tconst key =\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 63 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/handle-callback-err.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/id-blacklist.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/id-denylist.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/id-match.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/implicit-arrow-linebreak.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/indent-legacy.js",
        "criticalFunctions": [
          {
            "name": "checkIndentInArrayOrObjectBlock",
            "complexity": 30,
            "lineCount": 146,
            "parameterCount": 1,
            "snippet": "function checkIndentInArrayOrObjectBlock(node) {\n\t\t\tif (isSingleLineNode(node)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet elements =\n\t\t\t\tnode.type === \"ArrayExpression\"\n\t\t\t\t\t? node.elements\n\t\t\t\t\t: node.properties;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 30 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 146 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkIndentInFunctionBlock",
            "complexity": 19,
            "lineCount": 84,
            "parameterCount": 1,
            "snippet": "function checkIndentInFunctionBlock(node) {\n\t\t\t/*\n\t\t\t * Search first caller in chain.\n\t\t\t * Ex.:\n\t\t\t *\n\t\t\t * Models <- Identifier\n\t\t\t *   .User\n\t\t\t *   .find()\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 84 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "blockIndentationCheck",
            "complexity": 16,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "function blockIndentationCheck(node) {\n\t\t\tif (isSingleLineNode(node)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tnode.parent &&\n\t\t\t\t(node.parent.type === \"FunctionExpression\" ||\n\t\t\t\t\tnode.parent.type === \"FunctionDeclaration\" ||\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/indent.js",
        "criticalFunctions": [
          {
            "name": "addFunctionCallIndent",
            "complexity": 6,
            "lineCount": 61,
            "parameterCount": 1,
            "snippet": "function addFunctionCallIndent(node) {\n\t\t\tlet openingParen;\n\t\t\tif (node.arguments.length) {\n\t\t\t\topeningParen = sourceCode.getFirstTokenBetween(\n\t\t\t\t\tnode.callee,\n\t\t\t\t\tnode.arguments[0],\n\t\t\t\t\tastUtils.isOpeningParenToken,\n\t\t\t\t);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              }
            ]
          },
          {
            "name": "addElementListIndent",
            "complexity": 5,
            "lineCount": 77,
            "parameterCount": 4,
            "snippet": "function addElementListIndent(elements, startToken, endToken, offset) {\n\t\t\t/**\n\t\t\t * Gets the first token of a given element, including surrounding parentheses.\n\t\t\t * @param {ASTNode} element A node in the `elements` list\n\t\t\t * @returns {Token} The first token of this element\n\t\t\t */\n\t\t\tfunction getFirstToken(element) {\n\t\t\t\tlet token = sourceCode.getTokenBefore(element);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 77 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/init-declarations.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/jsx-quotes.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/key-spacing.js",
        "criticalFunctions": [
          {
            "name": "report",
            "complexity": 21,
            "lineCount": 93,
            "parameterCount": 5,
            "snippet": "function report(property, side, whitespace, expected, mode) {\n\t\t\tconst diff = whitespace.length - expected;\n\t\t\tif (\n\t\t\t\t((diff && mode === \"strict\") ||\n\t\t\t\t\t(diff < 0 && mode === \"minimum\") ||\n\t\t\t\t\t(diff > 0 && !expected && mode === \"minimum\")) &&\n\t\t\t\t!(expected && containsLineTerminator(whitespace))\n\t\t\t) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 93 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "verifyGroupAlignment",
            "complexity": 7,
            "lineCount": 66,
            "parameterCount": 1,
            "snippet": "function verifyGroupAlignment(properties) {\n\t\t\tconst length = properties.length,\n\t\t\t\twidths = properties.map(getKeyWidth), // Width of keys, including quotes\n\t\t\t\talign = alignmentOptions.on; // \"value\" or \"colon\"\n\t\t\tlet targetWidth = Math.max(...widths),\n\t\t\t\tbeforeColon,\n\t\t\t\tafterColon,\n\t\t\t\tmode;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/keyword-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/line-comment-position.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/linebreak-style.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/lines-around-comment.js",
        "criticalFunctions": [
          {
            "name": "checkForEmptyLine",
            "complexity": 36,
            "lineCount": 118,
            "parameterCount": 2,
            "snippet": "function checkForEmptyLine(token, opts) {\n\t\t\tif (\n\t\t\t\tapplyDefaultIgnorePatterns &&\n\t\t\t\tdefaultIgnoreRegExp.test(token.value)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (ignorePattern && customIgnoreRegExp.test(token.value)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 36 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 118 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/lines-around-directive.js",
        "criticalFunctions": [
          {
            "name": "checkDirectives",
            "complexity": 18,
            "lineCount": 66,
            "parameterCount": 1,
            "snippet": "function checkDirectives(node) {\n\t\t\tconst directives = astUtils.getDirectivePrologue(node);\n\t\t\tif (!directives.length) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst firstDirective = directives[0];\n\t\t\tconst leadingComments =\n\t\t\t\tsourceCode.getCommentsBefore(firstDirective);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/lines-between-class-members.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/logical-assignment-operators.js",
        "criticalFunctions": [
          {
            "name": "getExistence",
            "complexity": 16,
            "lineCount": 35,
            "parameterCount": 2,
            "snippet": "function getExistence(expression, scope) {\n\tconst isNegated =\n\t\texpression.type === \"UnaryExpression\" && expression.operator === \"!\";\n\tconst base = isNegated ? expression.argument : expression;\n\tswitch (true) {\n\t\tcase isReference(base):\n\t\t\treturn { reference: base, operator: isNegated ? \"||\" : \"&&\" };\n\t\tcase base.type === \"UnaryExpression\" &&\n  // ... more code ...",
            "issues": []
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/max-classes-per-file.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/max-depth.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/max-len.js",
        "criticalFunctions": [
          {
            "name": "checkProgramForMaxLength",
            "complexity": 4,
            "lineCount": 133,
            "parameterCount": 1,
            "snippet": "function checkProgramForMaxLength(node) {\n\t\t\tconst lines = sourceCode.lines,\n\t\t\t\tcomments =\n\t\t\t\t\tignoreComments || maxCommentLength || ignoreTrailingComments\n\t\t\t\t\t\t? getAllComments()\n\t\t\t\t\t\t: [];\n\t\t\tlet commentsIndex = 0;\n\t\t\tconst strings = getAllStrings();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 133 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/max-lines-per-function.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/max-lines.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/max-nested-callbacks.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/max-params.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/max-statements-per-line.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/max-statements.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/multiline-comment-style.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/multiline-ternary.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/new-cap.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/new-parens.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/newline-after-var.js",
        "criticalFunctions": [
          {
            "name": "checkForBlankLine",
            "complexity": 15,
            "lineCount": 98,
            "parameterCount": 1,
            "snippet": "function checkForBlankLine(node) {\n\t\t\t/*\n\t\t\t * lastToken is the last token on the node's line. It will usually also be the last token of the node, but it will\n\t\t\t * sometimes be second-last if there is a semicolon on a different line.\n\t\t\t */\n\t\t\tconst lastToken = getLastToken(node),\n\t\t\t\t/*\n\t\t\t\t * If lastToken is the last token of the node, nextToken should be the token after the node. Otherwise, nextToken\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 98 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/newline-before-return.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/newline-per-chained-call.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-alert.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-array-constructor.js",
        "criticalFunctions": [
          {
            "name": "check",
            "complexity": 13,
            "lineCount": 78,
            "parameterCount": 1,
            "snippet": "function check(node) {\n\t\t\tif (\n\t\t\t\tnode.callee.type !== \"Identifier\" ||\n\t\t\t\tnode.callee.name !== \"Array\" ||\n\t\t\t\tnode.typeArguments ||\n\t\t\t\t(node.arguments.length === 1 &&\n\t\t\t\t\tnode.arguments[0].type !== \"SpreadElement\")\n\t\t\t) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 78 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-async-promise-executor.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-await-in-loop.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-bitwise.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-buffer-constructor.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-caller.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-catch-shadow.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-class-assign.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-compare-neg-zero.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-cond-assign.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-confusing-arrow.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-console.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-const-assign.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-constant-binary-expression.js",
        "criticalFunctions": [
          {
            "name": "hasConstantStrictBooleanComparison",
            "complexity": 31,
            "lineCount": 86,
            "parameterCount": 2,
            "snippet": "function hasConstantStrictBooleanComparison(scope, node) {\n\tswitch (node.type) {\n\t\tcase \"ObjectExpression\": // Objects are not booleans\n\t\tcase \"ArrayExpression\": // Arrays are not booleans\n\t\tcase \"ArrowFunctionExpression\": // Functions are not booleans\n\t\tcase \"FunctionExpression\":\n\t\tcase \"ClassExpression\": // Classes are not booleans\n\t\tcase \"NewExpression\": // Objects are not booleans\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 31 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 86 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "hasConstantNullishness",
            "complexity": 30,
            "lineCount": 84,
            "parameterCount": 3,
            "snippet": "function hasConstantNullishness(scope, node, nonNullish) {\n\tif (nonNullish && isNullOrUndefined(scope, node)) {\n\t\treturn false;\n\t}\n\tswitch (node.type) {\n\t\tcase \"ObjectExpression\": // Objects are never nullish\n\t\tcase \"ArrayExpression\": // Arrays are never nullish\n\t\tcase \"ArrowFunctionExpression\": // Functions never nullish\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 30 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 84 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "hasConstantLooseBooleanComparison",
            "complexity": 27,
            "lineCount": 110,
            "parameterCount": 2,
            "snippet": "function hasConstantLooseBooleanComparison(scope, node) {\n\tswitch (node.type) {\n\t\tcase \"ObjectExpression\":\n\t\tcase \"ClassExpression\":\n\t\t\t/**\n\t\t\t * In theory objects like:\n\t\t\t *\n\t\t\t * `{toString: () => a}`\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 110 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isAlwaysNew",
            "complexity": 18,
            "lineCount": 51,
            "parameterCount": 2,
            "snippet": "function isAlwaysNew(scope, node) {\n\tswitch (node.type) {\n\t\tcase \"ObjectExpression\":\n\t\tcase \"ArrayExpression\":\n\t\tcase \"ArrowFunctionExpression\":\n\t\tcase \"FunctionExpression\":\n\t\tcase \"ClassExpression\":\n\t\t\treturn true;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-continue.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-debugger.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-delete-var.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-div-regex.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-dupe-args.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-duplicate-case.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-duplicate-imports.js",
        "criticalFunctions": [
          {
            "name": "isImportExportCanBeMerged",
            "complexity": 19,
            "lineCount": 38,
            "parameterCount": 2,
            "snippet": "function isImportExportCanBeMerged(node1, node2) {\n\tconst importExportType1 = getImportExportType(node1);\n\tconst importExportType2 = getImportExportType(node2);\n\tif (\n\t\t(node1.importKind === \"type\" || node1.exportKind === \"type\") &&\n\t\t(node2.importKind === \"type\" || node2.exportKind === \"type\")\n\t) {\n\t\tconst isDefault1 = importExportType1 === \"ImportDefaultSpecifier\";\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkAndReport",
            "complexity": 10,
            "lineCount": 71,
            "parameterCount": 6,
            "snippet": "function checkAndReport(\n\tcontext,\n\tnode,\n\tmodules,\n\tdeclarationType,\n\tincludeExports,\n\tallowSeparateTypeImports,\n) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 71 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-else-return.js",
        "criticalFunctions": [
          {
            "name": "isSafeToDeclare",
            "complexity": 10,
            "lineCount": 85,
            "parameterCount": 2,
            "snippet": "function isSafeToDeclare(names, scope) {\n\t\t\tif (names.length === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst functionScope = scope.variableScope;\n\t\t\t/*\n\t\t\t * If this is a function scope, scope.variables will contain parameters, implicit variables such as \"arguments\",\n\t\t\t * all function-scoped variables ('var'), and block-scoped variables defined in the scope.\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 85 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "displayReport",
            "complexity": 1,
            "lineCount": 97,
            "parameterCount": 1,
            "snippet": "function displayReport(elseNode) {\n\t\t\tconst currentScope = sourceCode.getScope(elseNode.parent);\n\t\t\tcontext.report({\n\t\t\t\tnode: elseNode,\n\t\t\t\tmessageId: \"unexpected\",\n\t\t\t\tfix(fixer) {\n\t\t\t\t\tif (!isSafeFromNameCollisions(elseNode, currentScope)) {\n\t\t\t\t\t\treturn null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 97 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-empty-character-class.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-empty-function.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-empty-pattern.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-empty-static-block.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-empty.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-eq-null.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-eval.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-ex-assign.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-extend-native.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-extra-bind.js",
        "criticalFunctions": [
          {
            "name": "report",
            "complexity": 2,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "function report(node) {\n\t\t\tconst memberNode = node.parent;\n\t\t\tconst callNode =\n\t\t\t\tmemberNode.parent.type === \"ChainExpression\"\n\t\t\t\t\t? memberNode.parent.parent\n\t\t\t\t\t: memberNode.parent;\n\t\t\tcontext.report({\n\t\t\t\tnode: callNode,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-extra-boolean-cast.js",
        "criticalFunctions": [
          {
            "name": "needsParens",
            "complexity": 21,
            "lineCount": 62,
            "parameterCount": 2,
            "snippet": "function needsParens(previousNode, node) {\n\t\t\tif (previousNode.parent.type === \"ChainExpression\") {\n\t\t\t\treturn needsParens(previousNode.parent, node);\n\t\t\t}\n\t\t\tif (isParenthesized(previousNode)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst parent = previousNode.parent;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              }
            ]
          },
          {
            "name": "isInFlaggedContext",
            "complexity": 16,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "function isInFlaggedContext(node) {\n\t\t\tif (node.parent.type === \"ChainExpression\") {\n\t\t\t\treturn isInFlaggedContext(node.parent);\n\t\t\t}\n\t\t\t/*\n\t\t\t * legacy behavior - enforceForLogicalOperands will only recurse on\n\t\t\t * logical expressions, not on other contexts.\n\t\t\t * enforceForInnerExpressions will recurse on logical expressions\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-extra-label.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-extra-parens.js",
        "criticalFunctions": [
          {
            "name": "checkBinaryLogical",
            "complexity": 21,
            "lineCount": 47,
            "parameterCount": 1,
            "snippet": "function checkBinaryLogical(node) {\n\t\t\tconst prec = precedence(node);\n\t\t\tconst leftPrecedence = precedence(node.left);\n\t\t\tconst rightPrecedence = precedence(node.right);\n\t\t\tconst isExponentiation = node.operator === \"**\";\n\t\t\tconst shouldSkipLeft =\n\t\t\t\tNESTED_BINARY &&\n\t\t\t\t(node.left.type === \"BinaryExpression\" ||\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkExpressionOrExportStatement",
            "complexity": 21,
            "lineCount": 53,
            "parameterCount": 1,
            "snippet": "function checkExpressionOrExportStatement(node) {\n\t\t\tconst firstToken = isParenthesised(node)\n\t\t\t\t? sourceCode.getTokenBefore(node)\n\t\t\t\t: sourceCode.getFirstToken(node);\n\t\t\tconst secondToken = sourceCode.getTokenAfter(\n\t\t\t\tfirstToken,\n\t\t\t\tastUtils.isNotOpeningParenToken,\n\t\t\t);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              }
            ]
          },
          {
            "name": "report",
            "complexity": 9,
            "lineCount": 77,
            "parameterCount": 1,
            "snippet": "function report(node) {\n\t\t\tconst leftParenToken = sourceCode.getTokenBefore(node);\n\t\t\tconst rightParenToken = sourceCode.getTokenAfter(node);\n\t\t\tif (!isParenthesisedTwice(node)) {\n\t\t\t\tif (tokensToIgnore.has(sourceCode.getFirstToken(node))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (isIIFE(node) && !isParenthesised(node.callee)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 77 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-extra-semi.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-fallthrough.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-floating-decimal.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-func-assign.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-global-assign.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-implicit-coercion.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-implicit-globals.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-import-assign.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-inline-comments.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-invalid-regexp.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-irregular-whitespace.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-iterator.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-label-var.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-labels.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-loop-func.js",
        "criticalFunctions": [
          {
            "name": "isSafe",
            "complexity": 11,
            "lineCount": 61,
            "parameterCount": 2,
            "snippet": "function isSafe(loopNode, reference) {\n\t\t\tconst variable = reference.resolved;\n\t\t\tconst definition = variable && variable.defs[0];\n\t\t\tconst declaration = definition && definition.parent;\n\t\t\tconst kind =\n\t\t\t\tdeclaration && declaration.type === \"VariableDeclaration\"\n\t\t\t\t\t? declaration.kind\n\t\t\t\t\t: \"\";\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-loss-of-precision.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-magic-numbers.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-misleading-character-class.js",
        "criticalFunctions": [
          {
            "name": "verify",
            "complexity": 5,
            "lineCount": 157,
            "parameterCount": 4,
            "snippet": "function verify(node, pattern, flags, unicodeFixer) {\n\t\t\tlet patternNode;\n\t\t\ttry {\n\t\t\t\tpatternNode = parser.parsePattern(pattern, 0, pattern.length, {\n\t\t\t\t\tunicode: flags.includes(\"u\"),\n\t\t\t\t\tunicodeSets: flags.includes(\"v\"),\n\t\t\t\t});\n\t\t\t} catch {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 157 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-mixed-operators.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-mixed-requires.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-mixed-spaces-and-tabs.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-multi-assign.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-multi-spaces.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-multi-str.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-multiple-empty-lines.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-native-reassign.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-negated-in-lhs.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-nested-ternary.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-new-func.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-new-native-nonconstructor.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-new-object.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-new-require.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-new-symbol.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-new.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-object-constructor.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-octal-escape.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-octal.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-param-reassign.js",
        "criticalFunctions": [
          {
            "name": "isModifyingProp",
            "complexity": 20,
            "lineCount": 75,
            "parameterCount": 1,
            "snippet": "function isModifyingProp(reference) {\n\t\t\tlet node = reference.identifier;\n\t\t\tlet parent = node.parent;\n\t\t\twhile (\n\t\t\t\tparent &&\n\t\t\t\t(!stopNodePattern.test(parent.type) ||\n\t\t\t\t\tparent.type === \"ForInStatement\" ||\n\t\t\t\t\tparent.type === \"ForOfStatement\")\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-path-concat.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-plusplus.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-process-env.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-process-exit.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-promise-executor-return.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-proto.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-redeclare.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-regex-spaces.js",
        "criticalFunctions": [
          {
            "name": "checkRegex",
            "complexity": 5,
            "lineCount": 74,
            "parameterCount": 5,
            "snippet": "function checkRegex(\n\t\t\tnodeToReport,\n\t\t\tpattern,\n\t\t\trawPattern,\n\t\t\trawPatternStartRange,\n\t\t\tflags,\n\t\t) {\n\t\t\tif (!DOUBLE_SPACE.test(rawPattern)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-restricted-exports.js",
        "criticalFunctions": [
          {
            "name": "checkExportedName",
            "complexity": 18,
            "lineCount": 66,
            "parameterCount": 1,
            "snippet": "function checkExportedName(node) {\n\t\t\tconst name = astUtils.getModuleExportName(node);\n\t\t\tlet matchesRestrictedNamePattern = false;\n\t\t\tif (restrictedNamePattern && name !== \"default\") {\n\t\t\t\tconst patternRegex = new RegExp(restrictedNamePattern, \"u\");\n\t\t\t\tmatchesRestrictedNamePattern = patternRegex.test(name);\n\t\t\t}\n\t\t\tif (matchesRestrictedNamePattern || restrictedNames.has(name)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-restricted-globals.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-restricted-imports.js",
        "criticalFunctions": [
          {
            "name": "reportPathForPatterns",
            "complexity": 8,
            "lineCount": 160,
            "parameterCount": 3,
            "snippet": "function reportPathForPatterns(node, group, importNames) {\n\t\t\tconst importSource = node.source.value.trim();\n\t\t\tconst customMessage = group.customMessage;\n\t\t\tconst restrictedImportNames = group.importNames;\n\t\t\tconst restrictedImportNamePattern = group.importNamePattern\n\t\t\t\t? new RegExp(group.importNamePattern, \"u\")\n\t\t\t\t: null;\n\t\t\tconst allowedImportNames = group.allowImportNames;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 160 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkRestrictedPathAndReport",
            "complexity": 2,
            "lineCount": 107,
            "parameterCount": 3,
            "snippet": "function checkRestrictedPathAndReport(importSource, importNames, node) {\n\t\t\tif (!Object.hasOwn(groupedRestrictedPaths, importSource)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tgroupedRestrictedPaths[importSource].forEach(\n\t\t\t\trestrictedPathEntry => {\n\t\t\t\t\tconst customMessage = restrictedPathEntry.message;\n\t\t\t\t\tconst restrictedImportNames =\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 107 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-restricted-modules.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-restricted-properties.js",
        "criticalFunctions": [
          {
            "name": "checkPropertyAccess",
            "complexity": 11,
            "lineCount": 55,
            "parameterCount": 3,
            "snippet": "function checkPropertyAccess(node, objectName, propertyName) {\n\t\t\tif (propertyName === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst matchedObject = restrictedProperties.get(objectName);\n\t\t\tconst matchedObjectProperty = matchedObject\n\t\t\t\t? matchedObject.get(propertyName)\n\t\t\t\t: globallyRestrictedObjects.get(objectName);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-restricted-syntax.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-return-assign.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-return-await.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-self-assign.js",
        "criticalFunctions": [
          {
            "name": "eachSelfAssignment",
            "complexity": 34,
            "lineCount": 93,
            "parameterCount": 4,
            "snippet": "function eachSelfAssignment(left, right, props, report) {\n\tif (!left || !right) {\n\t} else if (\n\t\tleft.type === \"Identifier\" &&\n\t\tright.type === \"Identifier\" &&\n\t\tleft.name === right.name\n\t) {\n\t\treport(right);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 34 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 93 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-setter-return.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-shadow-restricted-names.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-shadow.js",
        "criticalFunctions": [
          {
            "name": "checkForShadows",
            "complexity": 24,
            "lineCount": 62,
            "parameterCount": 1,
            "snippet": "function checkForShadows(scope) {\n\t\t\tif (isGlobalAugmentation(scope)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst variables = scope.variables;\n\t\t\tfor (let i = 0; i < variables.length; ++i) {\n\t\t\t\tconst variable = variables[i];\n\t\t\t\tif (\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isInitPatternNode",
            "complexity": 13,
            "lineCount": 57,
            "parameterCount": 2,
            "snippet": "function isInitPatternNode(variable, shadowedVariable) {\n\t\t\tconst outerDef = shadowedVariable.defs[0];\n\t\t\tif (!outerDef) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst { variableScope } = variable.scope;\n\t\t\tif (\n\t\t\t\t!(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-spaced-func.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-sparse-arrays.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-sync.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-tabs.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-template-curly-in-string.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-ternary.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-this-before-super.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-throw-literal.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-trailing-spaces.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-undef.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-undefined.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-underscore-dangle.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-unmodified-loop-condition.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-unneeded-ternary.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-unreachable-loop.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-unreachable.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-unsafe-finally.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-unsafe-negation.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-unsafe-optional-chaining.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-unused-expressions.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-unused-labels.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-unused-vars.js",
        "criticalFunctions": [
          {
            "name": "handleFixes",
            "complexity": 62,
            "lineCount": 693,
            "parameterCount": 2,
            "snippet": "function handleFixes(fixer, unusedVar) {\n\t\t\tconst id = unusedVar.identifiers[0];\n\t\t\tconst parent = id.parent;\n\t\t\tconst parentType = parent.type;\n\t\t\tconst tokenBefore = sourceCode.getTokenBefore(id);\n\t\t\tconst tokenAfter = sourceCode.getTokenAfter(id);\n\t\t\tconst isFunction = astUtils.isFunction;\n\t\t\tconst isLoop = astUtils.isLoop;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 62 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 693 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "collectUnusedVariables",
            "complexity": 48,
            "lineCount": 204,
            "parameterCount": 2,
            "snippet": "function collectUnusedVariables(scope, unusedVars) {\n\t\t\tconst variables = scope.variables;\n\t\t\tconst childScopes = scope.childScopes;\n\t\t\tlet i, l;\n\t\t\tif (scope.type !== \"global\" || config.vars === \"all\") {\n\t\t\t\tfor (i = 0, l = variables.length; i < l; ++i) {\n\t\t\t\t\tconst variable = variables[i];\n\t\t\t\t\tif (\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 48 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 204 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "fixVariables",
            "complexity": 9,
            "lineCount": 67,
            "parameterCount": 1,
            "snippet": "function fixVariables(node) {\n\t\t\t\tconst parentNode = node.parent;\n\t\t\t\tif (parentNode.type === \"VariableDeclarator\") {\n\t\t\t\t\tif (isLoop(parentNode.parent.parent)) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\t * remove unused declared variable with single declaration such as 'var a = b;'\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-use-before-define.js",
        "criticalFunctions": [
          {
            "name": "shouldCheck",
            "complexity": 25,
            "lineCount": 73,
            "parameterCount": 1,
            "snippet": "function shouldCheck(reference) {\n\t\t\tif (reference.init) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst { identifier } = reference;\n\t\t\tif (\n\t\t\t\toptions.allowNamedExports &&\n\t\t\t\tidentifier.parent.type === \"ExportSpecifier\" &&\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 73 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isEvaluatedDuringInitialization",
            "complexity": 12,
            "lineCount": 53,
            "parameterCount": 1,
            "snippet": "function isEvaluatedDuringInitialization(reference) {\n\tif (isFromSeparateExecutionContext(reference)) {\n\t\t/*\n\t\t * Even if the reference appears in the initializer, it isn't evaluated during the initialization.\n\t\t * For example, `const x = () => x;` is valid.\n\t\t */\n\t\treturn false;\n\t}\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-useless-assignment.js",
        "criticalFunctions": [
          {
            "name": "verifyAssignmentIsUsed",
            "complexity": 16,
            "lineCount": 256,
            "parameterCount": 2,
            "snippet": "function verifyAssignmentIsUsed(targetAssignment, allAssignments) {\n\t\t\t\tconst isAssignmentInTryBlock = target.tryStatementBlocks.some(\n\t\t\t\t\ttryBlock =>\n\t\t\t\t\t\ttryBlock.range[0] <=\n\t\t\t\t\t\t\ttargetAssignment.identifier.range[0] &&\n\t\t\t\t\t\ttargetAssignment.identifier.range[1] <=\n\t\t\t\t\t\t\ttryBlock.range[1],\n\t\t\t\t);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 256 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "verify",
            "complexity": 3,
            "lineCount": 292,
            "parameterCount": 1,
            "snippet": "function verify(target) {\n\t\t\t/**\n\t\t\t * Checks whether the given identifier is used in the segment.\n\t\t\t * @param {CodePathSegment} segment The code path segment.\n\t\t\t * @param {Identifier} identifier The identifier to check.\n\t\t\t * @returns {boolean} `true` if the identifier is used in the segment.\n\t\t\t */\n\t\t\tfunction isIdentifierUsedInSegment(segment, identifier) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 292 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-useless-catch.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-useless-computed-key.js",
        "criticalFunctions": [
          {
            "name": "check",
            "complexity": 2,
            "lineCount": 54,
            "parameterCount": 1,
            "snippet": "function check(node) {\n\t\t\tif (hasUselessComputedKey(node)) {\n\t\t\t\tconst { key } = node;\n\t\t\t\tcontext.report({\n\t\t\t\t\tnode,\n\t\t\t\t\tmessageId: \"unnecessarilyComputedProperty\",\n\t\t\t\t\tdata: { property: sourceCode.getText(key) },\n\t\t\t\t\tfix(fixer) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-useless-concat.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-useless-constructor.js",
        "criticalFunctions": [
          {
            "name": "checkForConstructor",
            "complexity": 8,
            "lineCount": 54,
            "parameterCount": 1,
            "snippet": "function checkForConstructor(node) {\n\t\t\tif (\n\t\t\t\tnode.kind !== \"constructor\" ||\n\t\t\t\tnode.value.type !== \"FunctionExpression\" ||\n\t\t\t\thasDecoratorsOrParameterProperty(node) ||\n\t\t\t\thasUsefulAccessibility(node)\n\t\t\t) {\n\t\t\t\treturn;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-useless-escape.js",
        "criticalFunctions": [
          {
            "name": "validateRegExp",
            "complexity": 2,
            "lineCount": 150,
            "parameterCount": 1,
            "snippet": "function validateRegExp(node) {\n\t\t\tconst { pattern, flags } = node.regex;\n\t\t\tlet patternNode;\n\t\t\tconst unicode = flags.includes(\"u\");\n\t\t\tconst unicodeSets = flags.includes(\"v\");\n\t\t\ttry {\n\t\t\t\tpatternNode = parser.parsePattern(pattern, 0, pattern.length, {\n\t\t\t\t\tunicode,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 150 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-useless-rename.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-useless-return.js",
        "criticalFunctions": [
          {
            "name": "markReturnStatementsOnSegmentAsUsed",
            "complexity": 3,
            "lineCount": 59,
            "parameterCount": 2,
            "snippet": "function markReturnStatementsOnSegmentAsUsed(\n\t\t\tsegment,\n\t\t\tusedUnreachableSegments,\n\t\t) {\n\t\t\tif (!segment.reachable) {\n\t\t\t\tusedUnreachableSegments.add(segment);\n\t\t\t\tsegment.allPrevSegments\n\t\t\t\t\t.filter(isReturned)\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-var.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-void.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/no-whitespace-before-property.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/no-with.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/nonblock-statement-body-position.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/object-curly-newline.js",
        "criticalFunctions": [
          {
            "name": "check",
            "complexity": 19,
            "lineCount": 142,
            "parameterCount": 1,
            "snippet": "function check(node) {\n\t\t\tconst options = normalizedOptions[node.type];\n\t\t\tif (\n\t\t\t\t(node.type === \"ImportDeclaration\" &&\n\t\t\t\t\t!node.specifiers.some(\n\t\t\t\t\t\tspecifier => specifier.type === \"ImportSpecifier\",\n\t\t\t\t\t)) ||\n\t\t\t\t(node.type === \"ExportNamedDeclaration\" &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 142 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/object-curly-spacing.js",
        "criticalFunctions": [
          {
            "name": "validateBraceSpacing",
            "complexity": 21,
            "lineCount": 47,
            "parameterCount": 5,
            "snippet": "function validateBraceSpacing(node, first, second, penultimate, last) {\n\t\t\tif (astUtils.isTokenOnSameLine(first, second)) {\n\t\t\t\tconst firstSpaced = sourceCode.isSpaceBetweenTokens(\n\t\t\t\t\tfirst,\n\t\t\t\t\tsecond,\n\t\t\t\t);\n\t\t\t\tif (options.spaced && !firstSpaced) {\n\t\t\t\t\treportRequiredBeginningSpace(node, first);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/object-property-newline.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/object-shorthand.js",
        "criticalFunctions": [
          {
            "name": "makeFunctionShorthand",
            "complexity": 11,
            "lineCount": 84,
            "parameterCount": 2,
            "snippet": "function makeFunctionShorthand(fixer, node) {\n\t\t\tconst firstKeyToken = node.computed\n\t\t\t\t? sourceCode.getFirstToken(node, astUtils.isOpeningBracketToken)\n\t\t\t\t: sourceCode.getFirstToken(node.key);\n\t\t\tconst lastKeyToken = node.computed\n\t\t\t\t? sourceCode.getFirstTokenBetween(\n\t\t\t\t\t\tnode.key,\n\t\t\t\t\t\tnode.value,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 84 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/one-var-declaration-per-line.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/one-var.js",
        "criticalFunctions": [
          {
            "name": "checkVariableDeclaration",
            "complexity": 42,
            "lineCount": 192,
            "parameterCount": 1,
            "snippet": "function checkVariableDeclaration(node) {\n\t\t\tconst parent = node.parent;\n\t\t\tconst type = node.kind;\n\t\t\tif (!options[type]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst declarations = node.declarations;\n\t\t\tconst declarationCounts = countDeclarations(declarations);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 42 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 192 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "hasOnlyOneStatement",
            "complexity": 16,
            "lineCount": 41,
            "parameterCount": 2,
            "snippet": "function hasOnlyOneStatement(statementType, declarations) {\n\t\t\tconst declarationCounts = countDeclarations(declarations);\n\t\t\tconst currentOptions = options[statementType] || {};\n\t\t\tconst currentScope = getCurrentScope(statementType);\n\t\t\tconst hasRequires = declarations.some(isRequire);\n\t\t\tif (\n\t\t\t\tcurrentOptions.uninitialized === MODE_ALWAYS &&\n\t\t\t\tcurrentOptions.initialized === MODE_ALWAYS\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "splitDeclarations",
            "complexity": 3,
            "lineCount": 92,
            "parameterCount": 1,
            "snippet": "function splitDeclarations(declaration) {\n\t\t\tconst { parent } = declaration;\n\t\t\tif (\n\t\t\t\t!isInStatementList(\n\t\t\t\t\tparent.type === \"ExportNamedDeclaration\"\n\t\t\t\t\t\t? parent\n\t\t\t\t\t\t: declaration,\n\t\t\t\t)\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 92 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/operator-assignment.js",
        "criticalFunctions": [
          {
            "name": "verify",
            "complexity": 8,
            "lineCount": 72,
            "parameterCount": 1,
            "snippet": "function verify(node) {\n\t\t\tif (\n\t\t\t\tnode.operator !== \"=\" ||\n\t\t\t\tnode.right.type !== \"BinaryExpression\"\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst left = node.left;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "prohibit",
            "complexity": 3,
            "lineCount": 76,
            "parameterCount": 1,
            "snippet": "function prohibit(node) {\n\t\t\tif (\n\t\t\t\tnode.operator !== \"=\" &&\n\t\t\t\t!astUtils.isLogicalAssignmentOperator(node.operator)\n\t\t\t) {\n\t\t\t\tcontext.report({\n\t\t\t\t\tnode,\n\t\t\t\t\tmessageId: \"unexpected\",\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 76 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/operator-linebreak.js",
        "criticalFunctions": [
          {
            "name": "validateNode",
            "complexity": 12,
            "lineCount": 75,
            "parameterCount": 3,
            "snippet": "function validateNode(node, rightSide, operator) {\n\t\t\t/*\n\t\t\t * Find the operator token by searching from the right side, because between the left side and the operator\n\t\t\t * there could be additional tokens from type annotations. Search specifically for the token which\n\t\t\t * value equals the operator, in order to skip possible opening parentheses before the right side node.\n\t\t\t */\n\t\t\tconst operatorToken = sourceCode.getTokenBefore(\n\t\t\t\trightSide,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getFixer",
            "complexity": 1,
            "lineCount": 87,
            "parameterCount": 2,
            "snippet": "function getFixer(operatorToken, desiredStyle) {\n\t\t\treturn fixer => {\n\t\t\t\tconst tokenBefore = sourceCode.getTokenBefore(operatorToken);\n\t\t\t\tconst tokenAfter = sourceCode.getTokenAfter(operatorToken);\n\t\t\t\tconst textBefore = sourceCode.text.slice(\n\t\t\t\t\ttokenBefore.range[1],\n\t\t\t\t\toperatorToken.range[0],\n\t\t\t\t);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/padded-blocks.js",
        "criticalFunctions": [
          {
            "name": "checkPadding",
            "complexity": 8,
            "lineCount": 101,
            "parameterCount": 1,
            "snippet": "function checkPadding(node) {\n\t\t\tconst openBrace = getOpenBrace(node),\n\t\t\t\tfirstBlockToken = getFirstBlockToken(openBrace),\n\t\t\t\ttokenBeforeFirst = sourceCode.getTokenBefore(firstBlockToken, {\n\t\t\t\t\tincludeComments: true,\n\t\t\t\t}),\n\t\t\t\tcloseBrace = sourceCode.getLastToken(node),\n\t\t\t\tlastBlockToken = getLastBlockToken(closeBrace),\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 101 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/padding-line-between-statements.js",
        "criticalFunctions": [
          {
            "name": "verifyForAlways",
            "complexity": 2,
            "lineCount": 51,
            "parameterCount": 4,
            "snippet": "function verifyForAlways(context, prevNode, nextNode, paddingLines) {\n\tif (paddingLines.length > 0) {\n\t\treturn;\n\t}\n\tcontext.report({\n\t\tnode: nextNode,\n\t\tmessageId: \"expectedBlankLine\",\n\t\tfix(fixer) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/prefer-arrow-callback.js",
        "criticalFunctions": [
          {
            "name": "getCallbackInfo",
            "complexity": 19,
            "lineCount": 64,
            "parameterCount": 1,
            "snippet": "function getCallbackInfo(node) {\n\tconst retv = { isCallback: false, isLexicalThis: false };\n\tlet currentNode = node;\n\tlet parent = node.parent;\n\tlet bound = false;\n\twhile (currentNode) {\n\t\tswitch (parent.type) {\n\t\t\tcase \"LogicalExpression\":\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/prefer-const.js",
        "criticalFunctions": [
          {
            "name": "checkGroup",
            "complexity": 23,
            "lineCount": 135,
            "parameterCount": 1,
            "snippet": "function checkGroup(nodes) {\n\t\t\tconst nodesToReport = nodes.filter(Boolean);\n\t\t\tif (\n\t\t\t\tnodes.length &&\n\t\t\t\t(shouldMatchAnyDestructuredVariable ||\n\t\t\t\t\tnodesToReport.length === nodes.length)\n\t\t\t) {\n\t\t\t\tconst varDeclParent = findUp(\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 135 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getIdentifierIfShouldBeConst",
            "complexity": 20,
            "lineCount": 87,
            "parameterCount": 2,
            "snippet": "function getIdentifierIfShouldBeConst(variable, ignoreReadBeforeAssign) {\n\tif (variable.eslintUsed && variable.scope.type === \"global\") {\n\t\treturn null;\n\t}\n\tlet writer = null;\n\tlet isReadBeforeInit = false;\n\tconst references = variable.references;\n\tfor (let i = 0; i < references.length; ++i) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/prefer-destructuring.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/prefer-exponentiation-operator.js",
        "criticalFunctions": [
          {
            "name": "doesExponentiationExpressionNeedParens",
            "complexity": 16,
            "lineCount": 31,
            "parameterCount": 2,
            "snippet": "function doesExponentiationExpressionNeedParens(node, sourceCode) {\n\tconst parent =\n\t\tnode.parent.type === \"ChainExpression\"\n\t\t\t? node.parent.parent\n\t\t\t: node.parent;\n\tconst parentPrecedence = astUtils.getPrecedence(parent);\n\tconst needsParens =\n\t\tparent.type === \"ClassDeclaration\" ||\n  // ... more code ...",
            "issues": []
          },
          {
            "name": "report",
            "complexity": 1,
            "lineCount": 86,
            "parameterCount": 1,
            "snippet": "function report(node) {\n\t\t\tcontext.report({\n\t\t\t\tnode,\n\t\t\t\tmessageId: \"useExponentiation\",\n\t\t\t\tfix(fixer) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tnode.arguments.length !== 2 ||\n\t\t\t\t\t\tnode.arguments.some(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 86 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/prefer-object-spread.js",
        "criticalFunctions": [
          {
            "name": "defineFixer",
            "complexity": 1,
            "lineCount": 72,
            "parameterCount": 2,
            "snippet": "function defineFixer(node, sourceCode) {\n\treturn function* (fixer) {\n\t\tconst leftParen = sourceCode.getTokenAfter(\n\t\t\tnode.callee,\n\t\t\tisOpeningParenToken,\n\t\t);\n\t\tconst rightParen = sourceCode.getLastToken(node);\n\t\tyield fixer.removeRange([node.range[0], leftParen.range[0]]);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/prefer-regex-literals.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/prefer-template.js",
        "criticalFunctions": [
          {
            "name": "getTemplateLiteral",
            "complexity": 10,
            "lineCount": 98,
            "parameterCount": 3,
            "snippet": "function getTemplateLiteral(\n\t\t\tcurrentNode,\n\t\t\ttextBeforeNode,\n\t\t\ttextAfterNode,\n\t\t) {\n\t\t\tif (\n\t\t\t\tcurrentNode.type === \"Literal\" &&\n\t\t\t\ttypeof currentNode.value === \"string\"\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 98 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/quote-props.js",
        "criticalFunctions": [
          {
            "name": "checkUnnecessaryQuotes",
            "complexity": 18,
            "lineCount": 62,
            "parameterCount": 1,
            "snippet": "function checkUnnecessaryQuotes(node) {\n\t\t\tconst key = node.key;\n\t\t\tif (node.method || node.computed || node.shorthand) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (key.type === \"Literal\" && typeof key.value === \"string\") {\n\t\t\t\tlet tokens;\n\t\t\t\ttry {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkConsistency",
            "complexity": 8,
            "lineCount": 94,
            "parameterCount": 2,
            "snippet": "function checkConsistency(node, checkQuotesRedundancy) {\n\t\t\tconst quotedProps = [],\n\t\t\t\tunquotedProps = [];\n\t\t\tlet keywordKeyName = null,\n\t\t\t\tnecessaryQuotes = false;\n\t\t\tnode.properties.forEach(property => {\n\t\t\t\tconst key = property.key;\n\t\t\t\tif (\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 94 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/quotes.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/radix.js",
        "criticalFunctions": [
          {
            "name": "checkArguments",
            "complexity": 8,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "function checkArguments(node) {\n\t\t\tconst args = node.arguments;\n\t\t\tswitch (args.length) {\n\t\t\t\tcase 0:\n\t\t\t\t\tcontext.report({\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tmessageId: \"missingParameters\",\n\t\t\t\t\t});\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/require-atomic-updates.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/require-await.js",
        "criticalFunctions": [
          {
            "name": "exitFunction",
            "complexity": 15,
            "lineCount": 74,
            "parameterCount": 1,
            "snippet": "function exitFunction(node) {\n\t\t\tif (\n\t\t\t\t!node.generator &&\n\t\t\t\tnode.async &&\n\t\t\t\t!scopeInfo.hasAwait &&\n\t\t\t\t!astUtils.isEmptyFunction(node)\n\t\t\t) {\n\t\t\t\t/*\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/rest-spread-spacing.js",
        "criticalFunctions": [
          {
            "name": "checkWhiteSpace",
            "complexity": 12,
            "lineCount": 67,
            "parameterCount": 1,
            "snippet": "function checkWhiteSpace(node) {\n\t\t\tconst operator = sourceCode.getFirstToken(node),\n\t\t\t\tnextToken = sourceCode.getTokenAfter(operator),\n\t\t\t\thasWhitespace = sourceCode.isSpaceBetweenTokens(\n\t\t\t\t\toperator,\n\t\t\t\t\tnextToken,\n\t\t\t\t);\n\t\t\tlet type;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/semi-spacing.js",
        "criticalFunctions": [
          {
            "name": "checkSemicolonSpacing",
            "complexity": 11,
            "lineCount": 79,
            "parameterCount": 2,
            "snippet": "function checkSemicolonSpacing(token, node) {\n\t\t\tif (astUtils.isSemicolonToken(token)) {\n\t\t\t\tif (hasLeadingSpace(token)) {\n\t\t\t\t\tif (!requireSpaceBefore) {\n\t\t\t\t\t\tconst tokenBefore = sourceCode.getTokenBefore(token);\n\t\t\t\t\t\tconst loc = {\n\t\t\t\t\t\t\tstart: tokenBefore.loc.end,\n\t\t\t\t\t\t\tend: token.loc.start,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/semi-style.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/semi.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/sort-vars.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/space-before-blocks.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/space-before-function-paren.js",
        "criticalFunctions": [
          {
            "name": "checkFunction",
            "complexity": 6,
            "lineCount": 52,
            "parameterCount": 1,
            "snippet": "function checkFunction(node) {\n\t\t\tconst functionConfig = getConfigForFunction(node);\n\t\t\tif (functionConfig === \"ignore\") {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst rightToken = sourceCode.getFirstToken(\n\t\t\t\tnode,\n\t\t\t\tastUtils.isOpeningParenToken,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/space-in-parens.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/space-infix-ops.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/space-unary-ops.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/spaced-comment.js",
        "criticalFunctions": [
          {
            "name": "checkCommentForSpace",
            "complexity": 16,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "function checkCommentForSpace(node) {\n\t\t\tconst type = node.type.toLowerCase(),\n\t\t\t\trule = styleRules[type],\n\t\t\t\tcommentIdentifier = type === \"block\" ? \"/*\" : \"//\";\n\t\t\tif (node.value.length === 0 || rule.markers.has(node.value)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst beginMatch = rule.beginRegex.exec(node.value);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/strict.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/switch-colon-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/template-curly-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/template-tag-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/unicode-bom.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/use-isnan.js",
        "criticalFunctions": [
          {
            "name": "checkCallExpression",
            "complexity": 10,
            "lineCount": 56,
            "parameterCount": 1,
            "snippet": "function checkCallExpression(node) {\n\t\t\tconst callee = astUtils.skipChainExpression(node.callee);\n\t\t\tif (callee.type === \"MemberExpression\") {\n\t\t\t\tconst methodName = astUtils.getStaticPropertyName(callee);\n\t\t\t\tif (\n\t\t\t\t\t(methodName === \"indexOf\" ||\n\t\t\t\t\t\tmethodName === \"lastIndexOf\") &&\n\t\t\t\t\tnode.arguments.length <= 2 &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/valid-typeof.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/vars-on-top.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/wrap-iife.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/rules/wrap-regex.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "lib/rules/yield-star-spacing.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "lib/rules/yoda.js",
        "criticalFunctions": [
          {
            "name": "isRangeTest",
            "complexity": 8,
            "lineCount": 79,
            "parameterCount": 1,
            "snippet": "function isRangeTest(node) {\n\t\t\tconst left = node.left,\n\t\t\t\tright = node.right;\n\t\t\t/**\n\t\t\t * Determines whether node is of the form `0 <= x && x < 1`.\n\t\t\t * @returns {boolean} Whether node is a \"between\" range test.\n\t\t\t */\n\t\t\tfunction isBetweenTest() {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getFlippedString",
            "complexity": 7,
            "lineCount": 59,
            "parameterCount": 1,
            "snippet": "function getFlippedString(node) {\n\t\t\tconst operatorToken = sourceCode.getFirstTokenBetween(\n\t\t\t\tnode.left,\n\t\t\t\tnode.right,\n\t\t\t\ttoken => token.value === node.operator,\n\t\t\t);\n\t\t\tconst lastLeftToken = sourceCode.getTokenBefore(operatorToken);\n\t\t\tconst firstRightToken = sourceCode.getTokenAfter(operatorToken);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/languages/js/index.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/languages/js/validate-language-options.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/code-path-analysis/code-path-analyzer.js",
        "criticalFunctions": [
          {
            "name": "preprocess",
            "complexity": 38,
            "lineCount": 125,
            "parameterCount": 2,
            "snippet": "function preprocess(analyzer, node) {\n\tconst codePath = analyzer.codePath;\n\tconst state = CodePath.getState(codePath);\n\tconst parent = node.parent;\n\tswitch (parent.type) {\n\t\tcase \"CallExpression\":\n\t\t\tif (\n\t\t\t\tparent.optional === true &&\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 38 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 125 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "processCodePathToExit",
            "complexity": 36,
            "lineCount": 116,
            "parameterCount": 2,
            "snippet": "function processCodePathToExit(analyzer, node) {\n\tconst codePath = analyzer.codePath;\n\tconst state = CodePath.getState(codePath);\n\tlet dontForward = false;\n\tswitch (node.type) {\n\t\tcase \"ChainExpression\":\n\t\t\tstate.popChainContext();\n\t\t\tbreak;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 36 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 116 lines, consider splitting"
              }
            ]
          },
          {
            "name": "processCodePathToEnter",
            "complexity": 32,
            "lineCount": 148,
            "parameterCount": 2,
            "snippet": "function processCodePathToEnter(analyzer, node) {\n\tlet codePath = analyzer.codePath;\n\tlet state = codePath && CodePath.getState(codePath);\n\tconst parent = node.parent;\n\t/**\n\t * Creates a new code path and trigger the onCodePathStart event\n\t * based on the currently selected node.\n\t * @param {string} origin The reason the code path was started.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 148 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isIdentifierReference",
            "complexity": 23,
            "lineCount": 35,
            "parameterCount": 1,
            "snippet": "function isIdentifierReference(node) {\n\tconst parent = node.parent;\n\tswitch (parent.type) {\n\t\tcase \"LabeledStatement\":\n\t\tcase \"BreakStatement\":\n\t\tcase \"ContinueStatement\":\n\t\tcase \"ArrayPattern\":\n\t\tcase \"RestElement\":\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              }
            ]
          },
          {
            "name": "postprocess",
            "complexity": 11,
            "lineCount": 67,
            "parameterCount": 2,
            "snippet": "function postprocess(analyzer, node) {\n\t/**\n\t * Ends the code path for the current node.\n\t * @returns {void}\n\t */\n\tfunction endCodePath() {\n\t\tlet codePath = analyzer.codePath;\n\t\tCodePath.getState(codePath).makeFinal();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/code-path-analysis/code-path-segment.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 2,
            "lineCount": 54,
            "parameterCount": 3,
            "snippet": "constructor(id, allPrevSegments, reachable) {\n\t\t/**\n\t\t * The identifier of this code path.\n\t\t * Rules use it to store additional information of each rule.\n\t\t * @type {string}\n\t\t */\n\t\tthis.id = id;\n\t\t/**\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/code-path-analysis/code-path-state.js",
        "criticalFunctions": [
          {
            "name": "makeLogicalRight",
            "complexity": 12,
            "lineCount": 96,
            "parameterCount": 0,
            "snippet": "makeLogicalRight() {\n\t\tconst currentChoiceContext = this.choiceContext;\n\t\tconst forkContext = this.forkContext;\n\t\tif (currentChoiceContext.processed) {\n\t\t\t/*\n\t\t\t * This context was already assigned segments from a child\n\t\t\t * choice context. In this case, we are concerned only about\n\t\t\t * the path that does not short-circuit and so ends up on the\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 96 lines, consider splitting"
              }
            ]
          },
          {
            "name": "popLoopContext",
            "complexity": 12,
            "lineCount": 85,
            "parameterCount": 0,
            "snippet": "popLoopContext() {\n\t\tconst context = this.loopContext;\n\t\tthis.loopContext = context.upper;\n\t\tconst forkContext = this.forkContext;\n\t\tconst brokenForkContext = this.popBreakContext().brokenForkContext;\n\t\tswitch (context.type) {\n\t\t\tcase \"WhileStatement\":\n\t\t\tcase \"ForStatement\":\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 85 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "popChoiceContext",
            "complexity": 11,
            "lineCount": 90,
            "parameterCount": 0,
            "snippet": "popChoiceContext() {\n\t\tconst poppedChoiceContext = this.choiceContext;\n\t\tconst forkContext = this.forkContext;\n\t\tconst head = forkContext.head;\n\t\tthis.choiceContext = poppedChoiceContext.upper;\n\t\tswitch (poppedChoiceContext.kind) {\n\t\t\tcase \"&&\":\n\t\t\tcase \"||\":\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 90 lines, consider splitting"
              }
            ]
          },
          {
            "name": "popTryContext",
            "complexity": 8,
            "lineCount": 68,
            "parameterCount": 0,
            "snippet": "popTryContext() {\n\t\tconst context = this.tryContext;\n\t\tthis.tryContext = context.upper;\n\t\t/*\n\t\t * If we're inside the `catch` block, that means there is no `finally`,\n\t\t * so we can process the `try` and `catch` blocks the simple way and\n\t\t * merge their two paths.\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              }
            ]
          },
          {
            "name": "pushLoopContext",
            "complexity": 8,
            "lineCount": 56,
            "parameterCount": 2,
            "snippet": "pushLoopContext(type, label) {\n\t\tconst forkContext = this.forkContext;\n\t\tconst breakContext = this.pushBreakContext(true, label);\n\t\tswitch (type) {\n\t\t\tcase \"WhileStatement\":\n\t\t\t\tthis.pushChoiceContext(\"loop\", false);\n\t\t\t\tthis.loopContext = new WhileLoopContext(\n\t\t\t\t\tthis.loopContext,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/code-path-analysis/code-path.js",
        "criticalFunctions": [
          {
            "name": "traverseSegments",
            "complexity": 17,
            "lineCount": 184,
            "parameterCount": 2,
            "snippet": "traverseSegments(optionsOrCallback, callback) {\n\t\tlet resolvedOptions;\n\t\tlet resolvedCallback;\n\t\tif (typeof optionsOrCallback === \"function\") {\n\t\t\tresolvedCallback = optionsOrCallback;\n\t\t\tresolvedOptions = {};\n\t\t} else {\n\t\t\tresolvedOptions = optionsOrCallback || {};\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 184 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/linter/code-path-analysis/fork-context.js",
        "criticalFunctions": [
          {
            "name": "mergeExtraSegments",
            "complexity": 3,
            "lineCount": 52,
            "parameterCount": 2,
            "snippet": "function mergeExtraSegments(context, segments) {\n\tlet currentSegments = segments;\n\t/*\n\t * We need to ensure that the array returned from this function contains no more\n\t * than the number of segments that the context allows. `context.count` indicates\n\t * how many items should be in the returned array to ensure that the new segment\n\t * entries will line up with the already existing segment entries.\n\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/cli-engine/formatters/html.js",
        "criticalFunctions": [
          {
            "name": "pageTemplate",
            "complexity": 1,
            "lineCount": 148,
            "parameterCount": 1,
            "snippet": "function pageTemplate(it) {\n\tconst { reportColor, reportSummary, date, results } = it;\n\treturn `\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>ESLint Report</title>\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 148 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/js/src/configs/eslint-all.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/languages/js/source-code/source-code.js",
        "criticalFunctions": [
          {
            "name": "getJSDocComment",
            "complexity": 18,
            "lineCount": 72,
            "parameterCount": 1,
            "snippet": "getJSDocComment(node) {\n\t\t/**\n\t\t * Checks for the presence of a JSDoc comment for the given node and returns it.\n\t\t * @param {ASTNode} astNode The AST node to get the comment for.\n\t\t * @returns {Token|null} The Block comment token containing the JSDoc comment\n\t\t *      for the given node or null if not found.\n\t\t * @private\n\t\t */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getIndexFromLoc",
            "complexity": 18,
            "lineCount": 58,
            "parameterCount": 1,
            "snippet": "getIndexFromLoc(loc) {\n\t\tif (\n\t\t\tloc === null ||\n\t\t\ttypeof loc !== \"object\" ||\n\t\t\ttypeof loc.line !== \"number\" ||\n\t\t\ttypeof loc.column !== \"number\"\n\t\t) {\n\t\t\tthrow new TypeError(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 13,
            "lineCount": 137,
            "parameterCount": 2,
            "snippet": "constructor(textOrConfig, astIfNoConfig) {\n\t\tlet text, hasBOM, ast, parserServices, scopeManager, visitorKeys;\n\t\tif (typeof textOrConfig === \"string\") {\n\t\t\ttext = textOrConfig;\n\t\t\tast = astIfNoConfig;\n\t\t\thasBOM = false;\n\t\t} else if (typeof textOrConfig === \"object\" && textOrConfig !== null) {\n\t\t\ttext = textOrConfig.text;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 137 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "addDeclaredGlobals",
            "complexity": 11,
            "lineCount": 94,
            "parameterCount": 3,
            "snippet": "function addDeclaredGlobals(\n\tglobalScope,\n\tconfigGlobals = {},\n\tinlineGlobals = {},\n) {\n\tfor (const id of new Set([\n\t\t...Object.keys(configGlobals),\n\t\t...Object.keys(inlineGlobals),\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 94 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "traverse",
            "complexity": 3,
            "lineCount": 75,
            "parameterCount": 0,
            "snippet": "traverse() {\n\t\tif (this.#steps) {\n\t\t\treturn this.#steps;\n\t\t}\n\t\tconst steps = (this.#steps = []);\n\t\t/*\n\t\t * This logic works for any AST, not just ESTree. Because ESLint has allowed\n\t\t * custom parsers to return any AST, we need to ensure that the traversal\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "lib/languages/js/source-code/token-store/index.js",
        "criticalFunctions": [
          {
            "name": "createCursorWithCount",
            "complexity": 7,
            "lineCount": 43,
            "parameterCount": 7,
            "snippet": "function createCursorWithCount(\n\tfactory,\n\ttokens,\n\tcomments,\n\tindexMap,\n\tstartLoc,\n\tendLoc,\n\topts,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createCursorWithSkip",
            "complexity": 6,
            "lineCount": 40,
            "parameterCount": 7,
            "snippet": "function createCursorWithSkip(\n\tfactory,\n\ttokens,\n\tcomments,\n\tindexMap,\n\tstartLoc,\n\tendLoc,\n\topts,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createCursorWithPadding",
            "complexity": 5,
            "lineCount": 42,
            "parameterCount": 7,
            "snippet": "function createCursorWithPadding(\n\ttokens,\n\tcomments,\n\tindexMap,\n\tstartLoc,\n\tendLoc,\n\tbeforeCount,\n\tafterCount,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      }
    ]
  },
  "durationMs": 68643
}