{
  "project": "jest",
  "repo": "https://github.com/jestjs/jest.git",
  "type": "testing framework",
  "stars": "44.8k",
  "stableVersion": "v30.0.4",
  "description": "JavaScript testing framework",
  "category": "medium",
  "emblematicFiles": {
    "coreFiles": [
      "packages/jest-core/src/index.ts",
      "packages/jest-cli/src/index.ts"
    ],
    "architecturalFiles": [
      "packages/jest-core/src/config.ts",
      "packages/jest-cli/src/cli.ts"
    ],
    "performanceCriticalFiles": [
      "packages/jest-core/src/test_runner.ts",
      "packages/jest-cli/src/reporters.ts"
    ],
    "complexAlgorithmFiles": [
      "packages/jest-core/src/transform.ts",
      "packages/jest-cli/src/utils.ts"
    ]
  },
  "analysis": {
    "details": [
      {
        "file": "babel-preset-jest/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "babel-jest/src/index.ts",
        "metrics": {
          "complexity": 14,
          "loc": 245,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.23
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 73
      },
      {
        "file": "babel-jest/src/loadBabelConfig.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "babel-plugin-jest-hoist/src/index.ts",
        "metrics": {
          "complexity": 20,
          "loc": 337,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.12
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 37
      },
      {
        "file": "create-jest/bin/create-jest.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "create-jest/src/errors.ts",
        "metrics": {
          "complexity": 2,
          "loc": 14,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "create-jest/src/generateConfigFile.ts",
        "metrics": {
          "complexity": 13,
          "loc": 81,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 85
      },
      {
        "file": "create-jest/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "create-jest/src/modifyPackageJson.ts",
        "metrics": {
          "complexity": 3,
          "loc": 19,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "create-jest/src/questions.ts",
        "metrics": {
          "complexity": 1,
          "loc": 50,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "create-jest/src/runCreate.ts",
        "metrics": {
          "complexity": 24,
          "loc": 126,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 50,
            "threshold": 10,
            "excessRatio": 1.8,
            "function": "runCreate"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 37
      },
      {
        "file": "create-jest/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "diff-sequences/__benchmarks__/test.js",
        "metrics": {
          "complexity": 17,
          "loc": 122,
          "functionCount": 12,
          "duplicationRatio": 0.01
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 67
      },
      {
        "file": "diff-sequences/src/index.ts",
        "metrics": {
          "complexity": 88,
          "loc": 575,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.4
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.92
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "expect/src/asymmetricMatchers.ts",
        "metrics": {
          "complexity": 116,
          "loc": 335,
          "functionCount": 50,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.8
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.12
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "healthScore": 0
      },
      {
        "file": "expect/src/extractExpectedAssertionsErrors.ts",
        "metrics": {
          "complexity": 7,
          "loc": 65,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "expect/src/index.ts",
        "metrics": {
          "complexity": 41,
          "loc": 394,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.05
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.31
          }
        ],
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 5
      },
      {
        "file": "expect/src/jestMatchersObject.ts",
        "metrics": {
          "complexity": 19,
          "loc": 110,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 5,
          "instability": 0.29,
          "cohesionScore": 0.67,
          "percentileUsageRank": 94,
          "isInCycle": true
        },
        "healthScore": 61
      },
      {
        "file": "expect/src/matchers.ts",
        "metrics": {
          "complexity": 40,
          "loc": 824,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.75
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "expect/src/print.ts",
        "metrics": {
          "complexity": 27,
          "loc": 107,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 48
      },
      {
        "file": "expect/src/spyMatchers.ts",
        "metrics": {
          "complexity": 80,
          "loc": 1090,
          "functionCount": 31,
          "duplicationRatio": 0.01
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.09
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "expect/src/toThrowMatchers.ts",
        "metrics": {
          "complexity": 58,
          "loc": 457,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.52
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "expect/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 190,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 7,
          "instability": 0.13,
          "cohesionScore": 0.67,
          "percentileUsageRank": 97,
          "isInCycle": true
        },
        "healthScore": 100
      },
      {
        "file": "expect-utils/src/immutableUtils.ts",
        "metrics": {
          "complexity": 25,
          "loc": 46,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 49
      },
      {
        "file": "expect-utils/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "expect-utils/src/jasmineUtils.ts",
        "metrics": {
          "complexity": 66,
          "loc": 165,
          "functionCount": 8,
          "duplicationRatio": 0.01
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.3
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 63,
            "threshold": 10,
            "excessRatio": 4.7,
            "function": "eq"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.67,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "healthScore": 0
      },
      {
        "file": "expect-utils/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.67,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "healthScore": 100
      },
      {
        "file": "expect-utils/src/utils.ts",
        "metrics": {
          "complexity": 121,
          "loc": 404,
          "functionCount": 21,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.05
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.35
          }
        ],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest/bin/jest.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-changed-files/src/git.ts",
        "metrics": {
          "complexity": 1,
          "loc": 93,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-changed-files/src/hg.ts",
        "metrics": {
          "complexity": 1,
          "loc": 35,
          "functionCount": 0,
          "duplicationRatio": 0.56
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.11
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 3
      },
      {
        "file": "jest-changed-files/src/index.ts",
        "metrics": {
          "complexity": 5,
          "loc": 51,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-changed-files/src/sl.ts",
        "metrics": {
          "complexity": 1,
          "loc": 52,
          "functionCount": 0,
          "duplicationRatio": 0.29
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.96
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 72
      },
      {
        "file": "jest-changed-files/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-config/src/Defaults.ts",
        "metrics": {
          "complexity": 1,
          "loc": 91,
          "functionCount": 0,
          "duplicationRatio": 0.07
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-config/src/Deprecated.ts",
        "metrics": {
          "complexity": 1,
          "loc": 80,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-config/src/Descriptions.ts",
        "metrics": {
          "complexity": 1,
          "loc": 91,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-config/src/ReporterValidationErrors.ts",
        "metrics": {
          "complexity": 8,
          "loc": 76,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-config/src/ValidConfig.ts",
        "metrics": {
          "complexity": 1,
          "loc": 324,
          "functionCount": 0,
          "duplicationRatio": 0.02
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.08
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 80
      },
      {
        "file": "jest-config/src/color.ts",
        "metrics": {
          "complexity": 2,
          "loc": 21,
          "functionCount": 1,
          "duplicationRatio": 0.08
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-config/src/constants.ts",
        "metrics": {
          "complexity": 1,
          "loc": 19,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 6,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-config/src/getCacheDirectory.ts",
        "metrics": {
          "complexity": 2,
          "loc": 13,
          "functionCount": 1,
          "duplicationRatio": 0.6
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-config/src/getMaxWorkers.ts",
        "metrics": {
          "complexity": 13,
          "loc": 37,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 85
      },
      {
        "file": "jest-config/src/index.ts",
        "metrics": {
          "complexity": 32,
          "loc": 355,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.18
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 280,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "readInitialOptions"
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 344,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "readConfigs"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 10
      },
      {
        "file": "jest-config/src/normalize.ts",
        "metrics": {
          "complexity": 146,
          "loc": 998,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 7.3
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 3.33
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 431,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "validateExtensionsToTreatAsEsm"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 482,
            "threshold": 10,
            "excessRatio": 6.3,
            "function": "normalize"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 1,
          "instability": 0.92,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-config/src/parseShardPair.ts",
        "metrics": {
          "complexity": 8,
          "loc": 31,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-config/src/readConfigFileAndSetRootDir.ts",
        "metrics": {
          "complexity": 35,
          "loc": 161,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 32,
            "threshold": 10,
            "excessRatio": 1.9,
            "function": "readConfigFileAndSetRootDir"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 28
      },
      {
        "file": "jest-config/src/resolveConfigPath.ts",
        "metrics": {
          "complexity": 33,
          "loc": 141,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 42
      },
      {
        "file": "jest-config/src/setFromArgv.ts",
        "metrics": {
          "complexity": 2,
          "loc": 52,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-config/src/stringToBytes.ts",
        "metrics": {
          "complexity": 26,
          "loc": 66,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 24,
            "threshold": 10,
            "excessRatio": 2.6,
            "function": "stringToBytes"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 36
      },
      {
        "file": "jest-config/src/utils.ts",
        "metrics": {
          "complexity": 22,
          "loc": 99,
          "functionCount": 7,
          "duplicationRatio": 0.01
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 94,
          "isInCycle": false
        },
        "healthScore": 50
      },
      {
        "file": "jest-cli/bin/jest.js",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-cli/src/args.ts",
        "metrics": {
          "complexity": 27,
          "loc": 764,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.55
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 12,
            "threshold": 10,
            "excessRatio": 2.7,
            "function": "check"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 3
      },
      {
        "file": "jest-cli/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-cli/src/run.ts",
        "metrics": {
          "complexity": 21,
          "loc": 120,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 50
      },
      {
        "file": "jest-circus/src/eventHandler.ts",
        "metrics": {
          "complexity": 49,
          "loc": 271,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.45
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.35
          }
        ],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": true
        },
        "healthScore": 2
      },
      {
        "file": "jest-circus/src/formatNodeAssertErrors.ts",
        "metrics": {
          "complexity": 33,
          "loc": 176,
          "functionCount": 8,
          "duplicationRatio": 0.33
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 128,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "assertionErrorMessage"
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.1
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-circus/src/globalErrorHandlers.ts",
        "metrics": {
          "complexity": 8,
          "loc": 53,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": true
        },
        "healthScore": 100
      },
      {
        "file": "jest-circus/src/index.ts",
        "metrics": {
          "complexity": 36,
          "loc": 223,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.8
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.11
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 31
      },
      {
        "file": "jest-circus/src/run.ts",
        "metrics": {
          "complexity": 52,
          "loc": 262,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.6
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.31
          }
        ],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-circus/src/runner.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-circus/src/shuffleArray.ts",
        "metrics": {
          "complexity": 4,
          "loc": 24,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-circus/src/state.ts",
        "metrics": {
          "complexity": 11,
          "loc": 70,
          "functionCount": 8,
          "duplicationRatio": 0.02
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 5,
          "instability": 0.44,
          "cohesionScore": 0.67,
          "percentileUsageRank": 94,
          "isInCycle": true
        },
        "healthScore": 91
      },
      {
        "file": "jest-circus/src/testCaseReportHandler.ts",
        "metrics": {
          "complexity": 1,
          "loc": 26,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-circus/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-circus/src/unhandledRejectionHandler.ts",
        "metrics": {
          "complexity": 2,
          "loc": 64,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-circus/src/utils.ts",
        "metrics": {
          "complexity": 65,
          "loc": 436,
          "functionCount": 24,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.45
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 6,
          "instability": 0.14,
          "cohesionScore": 0.67,
          "percentileUsageRank": 96,
          "isInCycle": true
        },
        "healthScore": 0
      },
      {
        "file": "jest-console/src/BufferedConsole.ts",
        "metrics": {
          "complexity": 33,
          "loc": 140,
          "functionCount": 20,
          "duplicationRatio": 0.12
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 42
      },
      {
        "file": "jest-console/src/CustomConsole.ts",
        "metrics": {
          "complexity": 32,
          "loc": 123,
          "functionCount": 20,
          "duplicationRatio": 0.14
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 44
      },
      {
        "file": "jest-console/src/NullConsole.ts",
        "metrics": {
          "complexity": 14,
          "loc": 17,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 82
      },
      {
        "file": "jest-console/src/getConsoleOutput.ts",
        "metrics": {
          "complexity": 2,
          "loc": 46,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-console/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-console/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 26,
          "functionCount": 0,
          "duplicationRatio": 0.13
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/FailedTestsCache.ts",
        "metrics": {
          "complexity": 4,
          "loc": 33,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/FailedTestsInteractiveMode.ts",
        "metrics": {
          "complexity": 32,
          "loc": 149,
          "functionCount": 14,
          "duplicationRatio": 0.04
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 44
      },
      {
        "file": "jest-core/src/ReporterDispatcher.ts",
        "metrics": {
          "complexity": 25,
          "loc": 97,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": true
        },
        "healthScore": 49
      },
      {
        "file": "jest-core/src/SearchSource.ts",
        "metrics": {
          "complexity": 50,
          "loc": 325,
          "functionCount": 18,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.5
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.08
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.67,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-core/src/SnapshotInteractiveMode.ts",
        "metrics": {
          "complexity": 34,
          "loc": 203,
          "functionCount": 14,
          "duplicationRatio": 0.03
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.01
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 35
      },
      {
        "file": "jest-core/src/TestNamePatternPrompt.ts",
        "metrics": {
          "complexity": 3,
          "loc": 21,
          "functionCount": 3,
          "duplicationRatio": 0.5
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.67
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 31
      },
      {
        "file": "jest-core/src/TestPathPatternPrompt.ts",
        "metrics": {
          "complexity": 3,
          "loc": 21,
          "functionCount": 3,
          "duplicationRatio": 0.5
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.67
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 31
      },
      {
        "file": "jest-core/src/TestScheduler.ts",
        "metrics": {
          "complexity": 70,
          "loc": 409,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.5
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.36
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.67,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "healthScore": 0
      },
      {
        "file": "jest-core/src/collectHandles.ts",
        "metrics": {
          "complexity": 19,
          "loc": 149,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 61
      },
      {
        "file": "jest-core/src/getChangedFilesPromise.ts",
        "metrics": {
          "complexity": 2,
          "loc": 30,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/getConfigsOfProjectsToRun.ts",
        "metrics": {
          "complexity": 7,
          "loc": 32,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/getNoTestFound.ts",
        "metrics": {
          "complexity": 3,
          "loc": 50,
          "functionCount": 1,
          "duplicationRatio": 0.12
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/getNoTestFoundFailed.ts",
        "metrics": {
          "complexity": 3,
          "loc": 18,
          "functionCount": 1,
          "duplicationRatio": 0.43
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.43
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 50
      },
      {
        "file": "jest-core/src/getNoTestFoundPassWithNoTests.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/getNoTestFoundRelatedToChangedFiles.ts",
        "metrics": {
          "complexity": 4,
          "loc": 21,
          "functionCount": 1,
          "duplicationRatio": 0.3
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 72
      },
      {
        "file": "jest-core/src/getNoTestFoundVerbose.ts",
        "metrics": {
          "complexity": 3,
          "loc": 63,
          "functionCount": 1,
          "duplicationRatio": 0.08
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/getNoTestsFoundMessage.ts",
        "metrics": {
          "complexity": 8,
          "loc": 35,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/getProjectDisplayName.ts",
        "metrics": {
          "complexity": 2,
          "loc": 6,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/getProjectNamesMissingWarning.ts",
        "metrics": {
          "complexity": 5,
          "loc": 32,
          "functionCount": 1,
          "duplicationRatio": 0.04
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/getSelectProjectsMessage.ts",
        "metrics": {
          "complexity": 11,
          "loc": 58,
          "functionCount": 4,
          "duplicationRatio": 0.02
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 91
      },
      {
        "file": "jest-core/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.63,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/runGlobalHook.ts",
        "metrics": {
          "complexity": 12,
          "loc": 67,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 14,
            "threshold": 10,
            "excessRatio": 1.2,
            "function": "runGlobalHook"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 82
      },
      {
        "file": "jest-core/src/runJest.ts",
        "metrics": {
          "complexity": 31,
          "loc": 286,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.43
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 137,
            "threshold": 10,
            "excessRatio": 2.2,
            "function": "runJest"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 2,
          "instability": 0.8,
          "cohesionScore": 0.65,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 21
      },
      {
        "file": "jest-core/src/testSchedulerHelper.ts",
        "metrics": {
          "complexity": 10,
          "loc": 31,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 27,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 97,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/version.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/watch.ts",
        "metrics": {
          "complexity": 67,
          "loc": 508,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.35
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.69
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 91,
            "threshold": 10,
            "excessRatio": 1.6,
            "function": "watch"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 16,
          "incomingDependencies": 1,
          "instability": 0.94,
          "cohesionScore": 0.55,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-create-cache-key-function/src/index.ts",
        "metrics": {
          "complexity": 4,
          "loc": 70,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-diff/src/cleanupSemantic.ts",
        "metrics": {
          "complexity": 93,
          "loc": 371,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.65
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.24
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 305,
            "threshold": 10,
            "excessRatio": 2,
            "function": "diff_cleanupSemanticScore_"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 6,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-diff/src/constants.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-diff/src/diffLines.ts",
        "metrics": {
          "complexity": 33,
          "loc": 161,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          }
        ],
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.67,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 42
      },
      {
        "file": "jest-diff/src/diffStrings.ts",
        "metrics": {
          "complexity": 7,
          "loc": 32,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-diff/src/escapeControlCharacters.ts",
        "metrics": {
          "complexity": 1,
          "loc": 18,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-diff/src/getAlignedDiffs.ts",
        "metrics": {
          "complexity": 37,
          "loc": 156,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.85
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 37
      },
      {
        "file": "jest-diff/src/index.ts",
        "metrics": {
          "complexity": 28,
          "loc": 167,
          "functionCount": 8,
          "duplicationRatio": 0.06
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 63,
            "threshold": 10,
            "excessRatio": 1.4,
            "function": "diff"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 41
      },
      {
        "file": "jest-diff/src/joinAlignedDiffs.ts",
        "metrics": {
          "complexity": 52,
          "loc": 250,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.6
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.25
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 1
      },
      {
        "file": "jest-diff/src/normalizeDiffOptions.ts",
        "metrics": {
          "complexity": 9,
          "loc": 43,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.67,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-diff/src/printDiffs.ts",
        "metrics": {
          "complexity": 12,
          "loc": 46,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 88
      },
      {
        "file": "jest-diff/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 42,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 6,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-docblock/src/index.ts",
        "metrics": {
          "complexity": 21,
          "loc": 108,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 50
      },
      {
        "file": "jest-environment/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 111,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-environment-jsdom/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-each/src/bind.ts",
        "metrics": {
          "complexity": 9,
          "loc": 94,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.56,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "healthScore": 100
      },
      {
        "file": "jest-each/src/index.ts",
        "metrics": {
          "complexity": 10,
          "loc": 63,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-each/src/validation.ts",
        "metrics": {
          "complexity": 21,
          "loc": 77,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 50
      },
      {
        "file": "jest-expect/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 30,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-expect/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 33,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-environment-jsdom-abstract/src/index.ts",
        "metrics": {
          "complexity": 19,
          "loc": 152,
          "functionCount": 6,
          "duplicationRatio": 0.08
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 61
      },
      {
        "file": "jest-environment-node/src/index.ts",
        "metrics": {
          "complexity": 42,
          "loc": 290,
          "functionCount": 16,
          "duplicationRatio": 0.05
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.1
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.45
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 16
      },
      {
        "file": "jest-fake-timers/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-fake-timers/src/legacyFakeTimers.ts",
        "metrics": {
          "complexity": 82,
          "loc": 503,
          "functionCount": 28,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.1
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.68
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-fake-timers/src/modernFakeTimers.ts",
        "metrics": {
          "complexity": 48,
          "loc": 182,
          "functionCount": 22,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.4
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 15
      },
      {
        "file": "jest-get-type/src/index.ts",
        "metrics": {
          "complexity": 17,
          "loc": 49,
          "functionCount": 2,
          "duplicationRatio": 0.06
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 26,
            "threshold": 10,
            "excessRatio": 1.6,
            "function": "getType"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 55
      },
      {
        "file": "jest-globals/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 50,
          "functionCount": 0,
          "duplicationRatio": 0.5
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.67
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 31
      },
      {
        "file": "jest-haste-map/src/HasteFS.ts",
        "metrics": {
          "complexity": 27,
          "loc": 75,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          }
        ],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.61,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "healthScore": 48
      },
      {
        "file": "jest-haste-map/src/ModuleMap.ts",
        "metrics": {
          "complexity": 39,
          "loc": 224,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.95
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.12
          }
        ],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.61,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "healthScore": 26
      },
      {
        "file": "jest-haste-map/src/blacklist.ts",
        "metrics": {
          "complexity": 1,
          "loc": 35,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-haste-map/src/constants.ts",
        "metrics": {
          "complexity": 1,
          "loc": 17,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 6,
          "instability": 0.14,
          "cohesionScore": 0.67,
          "percentileUsageRank": 96,
          "isInCycle": true
        },
        "healthScore": 100
      },
      {
        "file": "jest-haste-map/src/getMockName.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-haste-map/src/index.ts",
        "metrics": {
          "complexity": 140,
          "loc": 882,
          "functionCount": 34,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 7
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.94
          }
        ],
        "dependencies": {
          "outgoingDependencies": 15,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.57,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-haste-map/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 150,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 8,
          "instability": 0.2,
          "cohesionScore": 0.67,
          "percentileUsageRank": 98,
          "isInCycle": true
        },
        "healthScore": 100
      },
      {
        "file": "jest-haste-map/src/worker.ts",
        "metrics": {
          "complexity": 18,
          "loc": 85,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 28,
            "threshold": 10,
            "excessRatio": 1.3,
            "function": "worker"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.63,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 58
      },
      {
        "file": "jest-jasmine2/src/ExpectationFailed.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-jasmine2/src/PCancelable.ts",
        "metrics": {
          "complexity": 9,
          "loc": 71,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-jasmine2/src/assertionErrorMessage.ts",
        "metrics": {
          "complexity": 27,
          "loc": 130,
          "functionCount": 6,
          "duplicationRatio": 0.46
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 91,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "assertionErrorMessage"
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.53
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "healthScore": 0
      },
      {
        "file": "jest-jasmine2/src/each.ts",
        "metrics": {
          "complexity": 1,
          "loc": 31,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-jasmine2/src/errorOnPrivate.ts",
        "metrics": {
          "complexity": 6,
          "loc": 62,
          "functionCount": 3,
          "duplicationRatio": 0.07
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-jasmine2/src/expectationResultFactory.ts",
        "metrics": {
          "complexity": 17,
          "loc": 79,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 67
      },
      {
        "file": "jest-jasmine2/src/index.ts",
        "metrics": {
          "complexity": 21,
          "loc": 186,
          "functionCount": 5,
          "duplicationRatio": 0.18
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.23
          }
        ],
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.64,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 39
      },
      {
        "file": "jest-jasmine2/src/isError.ts",
        "metrics": {
          "complexity": 5,
          "loc": 14,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-jasmine2/src/jasmineAsyncInstall.ts",
        "metrics": {
          "complexity": 20,
          "loc": 204,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.02
          }
        ],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.62,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 52
      },
      {
        "file": "jest-jasmine2/src/jestExpect.ts",
        "metrics": {
          "complexity": 1,
          "loc": 26,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-jasmine2/src/pTimeout.ts",
        "metrics": {
          "complexity": 1,
          "loc": 21,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-jasmine2/src/queueRunner.ts",
        "metrics": {
          "complexity": 5,
          "loc": 77,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 4,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-jasmine2/src/reporter.ts",
        "metrics": {
          "complexity": 25,
          "loc": 141,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.56,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 49
      },
      {
        "file": "jest-jasmine2/src/setup_jest_globals.ts",
        "metrics": {
          "complexity": 8,
          "loc": 96,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-jasmine2/src/treeProcessor.ts",
        "metrics": {
          "complexity": 15,
          "loc": 70,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 24,
          "isInCycle": true
        },
        "healthScore": 79
      },
      {
        "file": "jest-jasmine2/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 77,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 12,
          "instability": 0.45,
          "cohesionScore": 0.5,
          "percentileUsageRank": 100,
          "isInCycle": true
        },
        "healthScore": 100
      },
      {
        "file": "jest-leak-detector/src/index.ts",
        "metrics": {
          "complexity": 9,
          "loc": 47,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-matcher-utils/src/Replaceable.ts",
        "metrics": {
          "complexity": 12,
          "loc": 50,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 88
      },
      {
        "file": "jest-matcher-utils/src/deepCyclicCopyReplaceable.ts",
        "metrics": {
          "complexity": 24,
          "loc": 138,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 49
      },
      {
        "file": "jest-matcher-utils/src/index.ts",
        "metrics": {
          "complexity": 97,
          "loc": 477,
          "functionCount": 23,
          "duplicationRatio": 0.06
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.85
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.59
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-message-util/src/index.ts",
        "metrics": {
          "complexity": 88,
          "loc": 429,
          "functionCount": 18,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.4
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.43
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-message-util/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-mock/src/index.ts",
        "metrics": {
          "complexity": 193,
          "loc": 1142,
          "functionCount": 28,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 9.65
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.14
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 301,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "matchArity"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 420,
            "threshold": 10,
            "excessRatio": 1.8,
            "function": "getType"
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 457,
            "threshold": 10,
            "excessRatio": 1.3,
            "function": "isReadonlyProp"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-pattern/src/TestPathPatterns.ts",
        "metrics": {
          "complexity": 21,
          "loc": 76,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 50
      },
      {
        "file": "jest-pattern/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-phabricator/src/index.ts",
        "metrics": {
          "complexity": 8,
          "loc": 28,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-regex-util/src/index.ts",
        "metrics": {
          "complexity": 5,
          "loc": 18,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-reporters/src/BaseReporter.ts",
        "metrics": {
          "complexity": 12,
          "loc": 50,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 6,
          "instability": 0.14,
          "cohesionScore": 0.67,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "healthScore": 88
      },
      {
        "file": "jest-reporters/src/CoverageReporter.ts",
        "metrics": {
          "complexity": 47,
          "loc": 431,
          "functionCount": 9,
          "duplicationRatio": 0.01
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.35
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.44
          }
        ],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-reporters/src/CoverageWorker.ts",
        "metrics": {
          "complexity": 3,
          "loc": 45,
          "functionCount": 1,
          "duplicationRatio": 0.09
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-reporters/src/DefaultReporter.ts",
        "metrics": {
          "complexity": 34,
          "loc": 209,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.04
          }
        ],
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.67,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 34
      },
      {
        "file": "jest-reporters/src/GitHubActionsReporter.ts",
        "metrics": {
          "complexity": 75,
          "loc": 396,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.75
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.32
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-reporters/src/NotifyReporter.ts",
        "metrics": {
          "complexity": 37,
          "loc": 141,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.85
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 37
      },
      {
        "file": "jest-reporters/src/Status.ts",
        "metrics": {
          "complexity": 34,
          "loc": 179,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          }
        ],
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 41
      },
      {
        "file": "jest-reporters/src/SummaryReporter.ts",
        "metrics": {
          "complexity": 47,
          "loc": 214,
          "functionCount": 9,
          "duplicationRatio": 0.01
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.35
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.07
          }
        ],
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 11
      },
      {
        "file": "jest-reporters/src/VerboseReporter.ts",
        "metrics": {
          "complexity": 32,
          "loc": 149,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 44
      },
      {
        "file": "jest-reporters/src/formatTestPath.ts",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.67,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-reporters/src/generateEmptyCoverage.ts",
        "metrics": {
          "complexity": 4,
          "loc": 79,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-reporters/src/getResultHeader.ts",
        "metrics": {
          "complexity": 9,
          "loc": 41,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.67,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-reporters/src/getSnapshotStatus.ts",
        "metrics": {
          "complexity": 8,
          "loc": 58,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-reporters/src/getSnapshotSummary.ts",
        "metrics": {
          "complexity": 15,
          "loc": 121,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 25,
            "threshold": 10,
            "excessRatio": 1.5,
            "function": "getSnapshotSummary"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 73
      },
      {
        "file": "jest-reporters/src/getSummary.ts",
        "metrics": {
          "complexity": 44,
          "loc": 172,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.2
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 82,
            "threshold": 10,
            "excessRatio": 3,
            "function": "getSummary"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.67,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 12
      },
      {
        "file": "jest-reporters/src/getWatermarks.ts",
        "metrics": {
          "complexity": 3,
          "loc": 24,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-reporters/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 41,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 16,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-reporters/src/printDisplayName.ts",
        "metrics": {
          "complexity": 3,
          "loc": 12,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-reporters/src/relativePath.ts",
        "metrics": {
          "complexity": 2,
          "loc": 14,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-reporters/src/trimAndFormatPath.ts",
        "metrics": {
          "complexity": 4,
          "loc": 31,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-reporters/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 58,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 9,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-reporters/src/wrapAnsiString.ts",
        "metrics": {
          "complexity": 5,
          "loc": 53,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve-dependencies/__mocks__/fake-node-module.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve-dependencies/src/index.ts",
        "metrics": {
          "complexity": 13,
          "loc": 146,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 85
      },
      {
        "file": "jest-runner/src/index.ts",
        "metrics": {
          "complexity": 14,
          "loc": 184,
          "functionCount": 7,
          "duplicationRatio": 0.01
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 82
      },
      {
        "file": "jest-runner/src/runTest.ts",
        "metrics": {
          "complexity": 40,
          "loc": 339,
          "functionCount": 5,
          "duplicationRatio": 0.01
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.13
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 79,
            "threshold": 10,
            "excessRatio": 3.4,
            "function": "runTestInternal"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-runner/src/testWorker.ts",
        "metrics": {
          "complexity": 14,
          "loc": 97,
          "functionCount": 5,
          "duplicationRatio": 0.04
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 82
      },
      {
        "file": "jest-runner/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 104,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-runtime/src/helpers.ts",
        "metrics": {
          "complexity": 8,
          "loc": 55,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-runtime/src/index.ts",
        "metrics": {
          "complexity": 330,
          "loc": 2173,
          "functionCount": 86,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 16.5
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 2.17
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-schemas/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-schemas/src/raw-types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 326,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.09
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 80
      },
      {
        "file": "jest-resolve/src/ModuleNotFoundError.ts",
        "metrics": {
          "complexity": 8,
          "loc": 38,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/defaultResolver.ts",
        "metrics": {
          "complexity": 24,
          "loc": 118,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 72,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "baseResolver"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 43
      },
      {
        "file": "jest-resolve/src/fileWalkers.ts",
        "metrics": {
          "complexity": 27,
          "loc": 99,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 37,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "statSyncCached"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.67,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 42
      },
      {
        "file": "jest-resolve/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/nodeModulesPaths.ts",
        "metrics": {
          "complexity": 11,
          "loc": 61,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 91
      },
      {
        "file": "jest-resolve/src/resolver.ts",
        "metrics": {
          "complexity": 167,
          "loc": 765,
          "functionCount": 40,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 8.35
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.55
          }
        ],
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 2,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-resolve/src/shouldLoadAsEsm.ts",
        "metrics": {
          "complexity": 13,
          "loc": 66,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 85
      },
      {
        "file": "jest-resolve/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/utils.ts",
        "metrics": {
          "complexity": 19,
          "loc": 155,
          "functionCount": 7,
          "duplicationRatio": 0.01
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 61
      },
      {
        "file": "jest-snapshot/src/InlineSnapshots.ts",
        "metrics": {
          "complexity": 26,
          "loc": 135,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 34,
            "threshold": 10,
            "excessRatio": 1.6,
            "function": "saveInlineSnapshots"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": true
        },
        "healthScore": 36
      },
      {
        "file": "jest-snapshot/src/SnapshotResolver.ts",
        "metrics": {
          "complexity": 13,
          "loc": 102,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 85
      },
      {
        "file": "jest-snapshot/src/State.ts",
        "metrics": {
          "complexity": 56,
          "loc": 272,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.8
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.36
          }
        ],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.67,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "healthScore": 0
      },
      {
        "file": "jest-snapshot/src/colors.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-snapshot/src/dedentLines.ts",
        "metrics": {
          "complexity": 30,
          "loc": 97,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.5
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 46
      },
      {
        "file": "jest-snapshot/src/index.ts",
        "metrics": {
          "complexity": 79,
          "loc": 451,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.95
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.5
          }
        ],
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-snapshot/src/mockSerializer.ts",
        "metrics": {
          "complexity": 7,
          "loc": 35,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-snapshot/src/plugins.ts",
        "metrics": {
          "complexity": 2,
          "loc": 27,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-snapshot/src/printSnapshot.ts",
        "metrics": {
          "complexity": 48,
          "loc": 267,
          "functionCount": 10,
          "duplicationRatio": 0.04
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.4
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.33
          }
        ],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 5
      },
      {
        "file": "jest-snapshot/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 42,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 5,
          "instability": 0.17,
          "cohesionScore": 0.67,
          "percentileUsageRank": 94,
          "isInCycle": true
        },
        "healthScore": 100
      },
      {
        "file": "jest-snapshot/src/utils.ts",
        "metrics": {
          "complexity": 51,
          "loc": 350,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.55
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.17
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 5,
          "instability": 0.29,
          "cohesionScore": 0.67,
          "percentileUsageRank": 94,
          "isInCycle": true
        },
        "healthScore": 0
      },
      {
        "file": "jest-snapshot/src/worker.ts",
        "metrics": {
          "complexity": 1,
          "loc": 50,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-snapshot-utils/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-snapshot-utils/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-snapshot-utils/src/utils.ts",
        "metrics": {
          "complexity": 28,
          "loc": 151,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 47
      },
      {
        "file": "jest-source-map/src/getCallsite.ts",
        "metrics": {
          "complexity": 6,
          "loc": 51,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-source-map/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-source-map/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-test-result/src/formatTestResults.ts",
        "metrics": {
          "complexity": 7,
          "loc": 69,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-test-result/src/helpers.ts",
        "metrics": {
          "complexity": 15,
          "loc": 164,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 79
      },
      {
        "file": "jest-test-result/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 27,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-test-result/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 180,
          "functionCount": 0,
          "duplicationRatio": 0.01
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-test-sequencer/src/index.ts",
        "metrics": {
          "complexity": 25,
          "loc": 154,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 49
      },
      {
        "file": "jest-transform/src/ScriptTransformer.ts",
        "metrics": {
          "complexity": 135,
          "loc": 840,
          "functionCount": 38,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.75
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.8
          }
        ],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-transform/src/enhanceUnexpectedTokenMessage.ts",
        "metrics": {
          "complexity": 6,
          "loc": 48,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-transform/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-transform/src/runtimeErrorsAndWarnings.ts",
        "metrics": {
          "complexity": 4,
          "loc": 63,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-transform/src/shouldInstrument.ts",
        "metrics": {
          "complexity": 25,
          "loc": 95,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 33,
            "threshold": 10,
            "excessRatio": 2.3,
            "function": "shouldInstrument"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 37
      },
      {
        "file": "jest-transform/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 100,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-types/src/Circus.ts",
        "metrics": {
          "complexity": 1,
          "loc": 241,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.21
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 91
      },
      {
        "file": "jest-types/src/Config.ts",
        "metrics": {
          "complexity": 1,
          "loc": 401,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.34
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 75
      },
      {
        "file": "jest-types/src/Global.ts",
        "metrics": {
          "complexity": 1,
          "loc": 141,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-types/src/TestResult.ts",
        "metrics": {
          "complexity": 1,
          "loc": 33,
          "functionCount": 0,
          "duplicationRatio": 0.06
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-types/src/Transform.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-types/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-validate/src/condition.ts",
        "metrics": {
          "complexity": 10,
          "loc": 35,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-validate/src/defaultConfig.ts",
        "metrics": {
          "complexity": 1,
          "loc": 23,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-validate/src/deprecated.ts",
        "metrics": {
          "complexity": 5,
          "loc": 19,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-validate/src/errors.ts",
        "metrics": {
          "complexity": 7,
          "loc": 35,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-validate/src/exampleConfig.ts",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-validate/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-validate/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 37,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 8,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-validate/src/utils.ts",
        "metrics": {
          "complexity": 11,
          "loc": 46,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 97,
          "isInCycle": false
        },
        "healthScore": 91
      },
      {
        "file": "jest-validate/src/validate.ts",
        "metrics": {
          "complexity": 34,
          "loc": 104,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          }
        ],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 41
      },
      {
        "file": "jest-validate/src/validateCLIOptions.ts",
        "metrics": {
          "complexity": 12,
          "loc": 105,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 88
      },
      {
        "file": "jest-validate/src/warnings.ts",
        "metrics": {
          "complexity": 6,
          "loc": 28,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/ErrorWithStack.ts",
        "metrics": {
          "complexity": 4,
          "loc": 17,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/clearLine.ts",
        "metrics": {
          "complexity": 2,
          "loc": 6,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/convertDescriptorToString.ts",
        "metrics": {
          "complexity": 7,
          "loc": 20,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/createDirectory.ts",
        "metrics": {
          "complexity": 4,
          "loc": 10,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/createProcessObject.ts",
        "metrics": {
          "complexity": 20,
          "loc": 84,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 58
      },
      {
        "file": "jest-util/src/deepCyclicCopy.ts",
        "metrics": {
          "complexity": 15,
          "loc": 67,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 79
      },
      {
        "file": "jest-util/src/formatTime.ts",
        "metrics": {
          "complexity": 1,
          "loc": 15,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/garbage-collection-utils.ts",
        "metrics": {
          "complexity": 29,
          "loc": 141,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.45
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 46
      },
      {
        "file": "jest-util/src/globsToMatcher.ts",
        "metrics": {
          "complexity": 2,
          "loc": 42,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 29,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 21,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/installCommonGlobals.ts",
        "metrics": {
          "complexity": 3,
          "loc": 61,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/interopRequireDefault.ts",
        "metrics": {
          "complexity": 3,
          "loc": 3,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/invariant.ts",
        "metrics": {
          "complexity": 3,
          "loc": 8,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/isInteractive.ts",
        "metrics": {
          "complexity": 4,
          "loc": 15,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/isNonNullable.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/isPromise.ts",
        "metrics": {
          "complexity": 4,
          "loc": 9,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/pluralize.ts",
        "metrics": {
          "complexity": 2,
          "loc": 7,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/preRunMessage.ts",
        "metrics": {
          "complexity": 4,
          "loc": 14,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/replacePathSepForGlob.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/requireOrImportModule.ts",
        "metrics": {
          "complexity": 18,
          "loc": 59,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 64
      },
      {
        "file": "jest-util/src/setGlobal.ts",
        "metrics": {
          "complexity": 3,
          "loc": 16,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/specialChars.ts",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-util/src/tryRealpath.ts",
        "metrics": {
          "complexity": 5,
          "loc": 11,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-worker/__benchmarks__/test.js",
        "metrics": {
          "complexity": 14,
          "loc": 134,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 82
      },
      {
        "file": "jest-watcher/src/BaseWatchPlugin.ts",
        "metrics": {
          "complexity": 5,
          "loc": 28,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-watcher/src/JestHooks.ts",
        "metrics": {
          "complexity": 4,
          "loc": 65,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-watcher/src/PatternPrompt.ts",
        "metrics": {
          "complexity": 6,
          "loc": 44,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.58,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-watcher/src/TestWatcher.ts",
        "metrics": {
          "complexity": 4,
          "loc": 23,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-watcher/src/constants.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-watcher/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 17,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.63,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-watcher/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 78,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 6,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-worker/__typetests__/testWorker.ts",
        "metrics": {
          "complexity": 10,
          "loc": 17,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-worker/src/Farm.ts",
        "metrics": {
          "complexity": 25,
          "loc": 146,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 49
      },
      {
        "file": "jest-worker/src/FifoQueue.ts",
        "metrics": {
          "complexity": 13,
          "loc": 67,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 85
      },
      {
        "file": "jest-worker/src/PriorityQueue.ts",
        "metrics": {
          "complexity": 25,
          "loc": 110,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 49
      },
      {
        "file": "jest-worker/src/WorkerPool.ts",
        "metrics": {
          "complexity": 3,
          "loc": 32,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.54,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-worker/src/index.ts",
        "metrics": {
          "complexity": 23,
          "loc": 125,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          }
        ],
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.64,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 50
      },
      {
        "file": "jest-worker/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 189,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 12,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 100,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "pretty-format/__benchmarks__/test.js",
        "metrics": {
          "complexity": 19,
          "loc": 176,
          "functionCount": 5,
          "duplicationRatio": 0.01
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 61
      },
      {
        "file": "pretty-format/src/collections.ts",
        "metrics": {
          "complexity": 34,
          "loc": 164,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 148,
            "threshold": 10,
            "excessRatio": 1.1,
            "function": "printListItems"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.67,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "healthScore": 35
      },
      {
        "file": "pretty-format/src/index.ts",
        "metrics": {
          "complexity": 119,
          "loc": 464,
          "functionCount": 25,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.95
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.55
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 78,
            "threshold": 10,
            "excessRatio": 1.2,
            "function": "isToStringedArrayType"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 122,
            "threshold": 10,
            "excessRatio": 2.2,
            "function": "printBasicValue"
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 201,
            "threshold": 10,
            "excessRatio": 2.4,
            "function": "printComplexValue"
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 421,
            "threshold": 10,
            "excessRatio": 1.3,
            "function": "validateOptions"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.54,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "pretty-format/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 78,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 9,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "test-globals/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 46,
          "functionCount": 0,
          "duplicationRatio": 0.52
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.03
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 17
      },
      {
        "file": "test-utils/src/ConditionalTest.ts",
        "metrics": {
          "complexity": 7,
          "loc": 34,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "test-utils/src/alignedAnsiStyleSerializer.ts",
        "metrics": {
          "complexity": 1,
          "loc": 39,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "test-utils/src/config.ts",
        "metrics": {
          "complexity": 8,
          "loc": 160,
          "functionCount": 2,
          "duplicationRatio": 0.01
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "test-utils/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "test-utils/src/normalizeIcons.ts",
        "metrics": {
          "complexity": 2,
          "loc": 8,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-config/src/__mocks__/fs.js",
        "metrics": {
          "complexity": 2,
          "loc": 12,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-config/src/__mocks__/os.js",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-config/src/__mocks__/read-pkg.js",
        "metrics": {
          "complexity": 4,
          "loc": 19,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-circus/src/__mocks__/testEventHandler.ts",
        "metrics": {
          "complexity": 19,
          "loc": 49,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 61
      },
      {
        "file": "jest-circus/src/__mocks__/testUtils.ts",
        "metrics": {
          "complexity": 7,
          "loc": 58,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-circus/src/legacy-code-todo-rewrite/jestAdapter.ts",
        "metrics": {
          "complexity": 15,
          "loc": 117,
          "functionCount": 2,
          "duplicationRatio": 0.28
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.89
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 53
      },
      {
        "file": "jest-circus/src/legacy-code-todo-rewrite/jestAdapterInit.ts",
        "metrics": {
          "complexity": 19,
          "loc": 244,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.22
          }
        ],
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 52
      },
      {
        "file": "jest-core/src/cli/index.ts",
        "metrics": {
          "complexity": 30,
          "loc": 263,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.5
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.31
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 38,
            "threshold": 10,
            "excessRatio": 1.6,
            "function": "runCLI"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 1,
          "instability": 0.92,
          "cohesionScore": 0.5,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 24
      },
      {
        "file": "jest-core/src/lib/activeFiltersMessage.ts",
        "metrics": {
          "complexity": 5,
          "loc": 23,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/lib/createContext.ts",
        "metrics": {
          "complexity": 1,
          "loc": 16,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/lib/handleDeprecationWarnings.ts",
        "metrics": {
          "complexity": 1,
          "loc": 32,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/lib/isValidPath.ts",
        "metrics": {
          "complexity": 2,
          "loc": 11,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/lib/logDebugMessages.ts",
        "metrics": {
          "complexity": 1,
          "loc": 18,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/lib/serializeToJSON.ts",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/lib/updateGlobalConfig.ts",
        "metrics": {
          "complexity": 30,
          "loc": 80,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.5
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 16,
            "threshold": 10,
            "excessRatio": 3,
            "function": "updateGlobalConfig"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 34
      },
      {
        "file": "jest-core/src/lib/watchPluginsHelpers.ts",
        "metrics": {
          "complexity": 2,
          "loc": 40,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-each/src/table/array.ts",
        "metrics": {
          "complexity": 17,
          "loc": 83,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.63,
          "percentileUsageRank": 24,
          "isInCycle": true
        },
        "healthScore": 67
      },
      {
        "file": "jest-each/src/table/interpolation.ts",
        "metrics": {
          "complexity": 6,
          "loc": 66,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-each/src/table/template.ts",
        "metrics": {
          "complexity": 3,
          "loc": 33,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.63,
          "percentileUsageRank": 24,
          "isInCycle": true
        },
        "healthScore": 100
      },
      {
        "file": "jest-haste-map/src/crawlers/node.ts",
        "metrics": {
          "complexity": 20,
          "loc": 205,
          "functionCount": 6,
          "duplicationRatio": 0.01
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.02
          }
        ],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.5,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 52
      },
      {
        "file": "jest-haste-map/src/crawlers/watchman.ts",
        "metrics": {
          "complexity": 31,
          "loc": 258,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.29
          },
          {
            "type": "complexity",
            "severity": "high",
            "line": 92,
            "threshold": 10,
            "excessRatio": 2.6,
            "function": "watchmanCrawl"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.5,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 23
      },
      {
        "file": "jest-haste-map/src/lib/dependencyExtractor.ts",
        "metrics": {
          "complexity": 5,
          "loc": 72,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-haste-map/src/lib/fast_path.ts",
        "metrics": {
          "complexity": 4,
          "loc": 12,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 94,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-haste-map/src/lib/getPlatformExtension.ts",
        "metrics": {
          "complexity": 5,
          "loc": 16,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-haste-map/src/lib/isWatchmanInstalled.ts",
        "metrics": {
          "complexity": 2,
          "loc": 10,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-haste-map/src/lib/normalizePathSep.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/plugins/FailedTestsInteractive.ts",
        "metrics": {
          "complexity": 13,
          "loc": 77,
          "functionCount": 5,
          "duplicationRatio": 0.03
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 85
      },
      {
        "file": "jest-core/src/plugins/Quit.ts",
        "metrics": {
          "complexity": 4,
          "loc": 23,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/plugins/TestNamePattern.ts",
        "metrics": {
          "complexity": 4,
          "loc": 50,
          "functionCount": 4,
          "duplicationRatio": 0.41
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.35
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.5,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 55
      },
      {
        "file": "jest-core/src/plugins/TestPathPattern.ts",
        "metrics": {
          "complexity": 4,
          "loc": 53,
          "functionCount": 4,
          "duplicationRatio": 0.38
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.25
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.5,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 60
      },
      {
        "file": "jest-core/src/plugins/UpdateSnapshots.ts",
        "metrics": {
          "complexity": 5,
          "loc": 39,
          "functionCount": 4,
          "duplicationRatio": 0.03
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-core/src/plugins/UpdateSnapshotsInteractive.ts",
        "metrics": {
          "complexity": 15,
          "loc": 84,
          "functionCount": 5,
          "duplicationRatio": 0.05
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 79
      },
      {
        "file": "jest-haste-map/src/watchers/FSEventsWatcher.ts",
        "metrics": {
          "complexity": 20,
          "loc": 143,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 58
      },
      {
        "file": "jest-haste-map/src/watchers/NodeWatcher.js",
        "metrics": {
          "complexity": 3,
          "loc": 218,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.09
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 93
      },
      {
        "file": "jest-haste-map/src/watchers/RecrawlWarning.js",
        "metrics": {
          "complexity": 9,
          "loc": 43,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-haste-map/src/watchers/WatchmanWatcher.js",
        "metrics": {
          "complexity": 24,
          "loc": 207,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.03
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 43
      },
      {
        "file": "jest-haste-map/src/watchers/common.js",
        "metrics": {
          "complexity": 1,
          "loc": 60,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-jasmine2/src/jasmine/CallTracker.ts",
        "metrics": {
          "complexity": 1,
          "loc": 52,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-jasmine2/src/jasmine/Env.ts",
        "metrics": {
          "complexity": 35,
          "loc": 586,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.95
          }
        ],
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 2,
          "instability": 0.78,
          "cohesionScore": 0.57,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "healthScore": 8
      },
      {
        "file": "jest-jasmine2/src/jasmine/JsApiReporter.ts",
        "metrics": {
          "complexity": 7,
          "loc": 87,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "healthScore": 100
      },
      {
        "file": "jest-jasmine2/src/jasmine/ReportDispatcher.ts",
        "metrics": {
          "complexity": 8,
          "loc": 46,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.67,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "healthScore": 100
      },
      {
        "file": "jest-jasmine2/src/jasmine/Spec.ts",
        "metrics": {
          "complexity": 45,
          "loc": 238,
          "functionCount": 16,
          "duplicationRatio": 0.03
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.25
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.19
          }
        ],
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 10,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 99,
          "isInCycle": true
        },
        "healthScore": 13
      },
      {
        "file": "jest-jasmine2/src/jasmine/SpyStrategy.ts",
        "metrics": {
          "complexity": 2,
          "loc": 63,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-jasmine2/src/jasmine/Suite.ts",
        "metrics": {
          "complexity": 38,
          "loc": 168,
          "functionCount": 20,
          "duplicationRatio": 0.05
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.9
          }
        ],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 7,
          "instability": 0.36,
          "cohesionScore": 0.56,
          "percentileUsageRank": 97,
          "isInCycle": true
        },
        "healthScore": 36
      },
      {
        "file": "jest-jasmine2/src/jasmine/Timer.ts",
        "metrics": {
          "complexity": 3,
          "loc": 20,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-jasmine2/src/jasmine/createSpy.ts",
        "metrics": {
          "complexity": 6,
          "loc": 39,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "healthScore": 100
      },
      {
        "file": "jest-jasmine2/src/jasmine/jasmineLight.ts",
        "metrics": {
          "complexity": 2,
          "loc": 117,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.72,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-jasmine2/src/jasmine/spyRegistry.ts",
        "metrics": {
          "complexity": 6,
          "loc": 169,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 72,
          "isInCycle": true
        },
        "healthScore": 100
      },
      {
        "file": "jest-runtime/src/__mocks__/createRuntime.js",
        "metrics": {
          "complexity": 7,
          "loc": 110,
          "functionCount": 3,
          "duplicationRatio": 0.04
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/__mocks__/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/__mocks__/mockJsDependency.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/__mocks__/mockJsDependency.native.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/__mocks__/mockJsxDependency.jsx",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/__mocks__/mockJsxDependency.native.jsx",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/__mocks__/userResolver.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/__mocks__/userResolver.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/__mocks__/userResolverAsync.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/__mocks__/userResolverAsync.js",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-worker/__benchmarks__/workers/jest_worker.js",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-worker/__benchmarks__/workers/pi.js",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-worker/__benchmarks__/workers/worker_farm.js",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-watcher/src/lib/Prompt.ts",
        "metrics": {
          "complexity": 16,
          "loc": 97,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 70
      },
      {
        "file": "jest-watcher/src/lib/colorize.ts",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-watcher/src/lib/formatTestNameByPattern.ts",
        "metrics": {
          "complexity": 6,
          "loc": 43,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-watcher/src/lib/patternModeHelpers.ts",
        "metrics": {
          "complexity": 2,
          "loc": 23,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-watcher/src/lib/scroll.ts",
        "metrics": {
          "complexity": 3,
          "loc": 22,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "pretty-format/src/plugins/AsymmetricMatcher.ts",
        "metrics": {
          "complexity": 18,
          "loc": 91,
          "functionCount": 2,
          "duplicationRatio": 0.01
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.5,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 64
      },
      {
        "file": "pretty-format/src/plugins/DOMCollection.ts",
        "metrics": {
          "complexity": 12,
          "loc": 57,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.5,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 88
      },
      {
        "file": "pretty-format/src/plugins/DOMElement.ts",
        "metrics": {
          "complexity": 29,
          "loc": 106,
          "functionCount": 8,
          "duplicationRatio": 0.02
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.45
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.55,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 46
      },
      {
        "file": "pretty-format/src/plugins/Immutable.ts",
        "metrics": {
          "complexity": 30,
          "loc": 189,
          "functionCount": 9,
          "duplicationRatio": 0.01
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.5
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.5,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 46
      },
      {
        "file": "pretty-format/src/plugins/ReactElement.ts",
        "metrics": {
          "complexity": 32,
          "loc": 96,
          "functionCount": 5,
          "duplicationRatio": 0.02
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.55,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 44
      },
      {
        "file": "pretty-format/src/plugins/ReactTestComponent.ts",
        "metrics": {
          "complexity": 8,
          "loc": 66,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.55,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-worker/src/base/BaseWorkerPool.ts",
        "metrics": {
          "complexity": 15,
          "loc": 128,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 79
      },
      {
        "file": "jest-worker/src/workers/ChildProcessWorker.ts",
        "metrics": {
          "complexity": 80,
          "loc": 364,
          "functionCount": 19,
          "duplicationRatio": 0.14
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.21
          }
        ],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-worker/src/workers/NodeThreadsWorker.ts",
        "metrics": {
          "complexity": 62,
          "loc": 297,
          "functionCount": 16,
          "duplicationRatio": 0.18
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.1
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.49
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.19
          }
        ],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-worker/src/workers/WorkerAbstract.ts",
        "metrics": {
          "complexity": 14,
          "loc": 104,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 82
      },
      {
        "file": "jest-worker/src/workers/isDataCloneError.ts",
        "metrics": {
          "complexity": 8,
          "loc": 13,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 72,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-worker/src/workers/messageParent.ts",
        "metrics": {
          "complexity": 12,
          "loc": 36,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          },
          {
            "type": "complexity",
            "severity": "medium",
            "line": 14,
            "threshold": 10,
            "excessRatio": 1.2,
            "function": "messageParent"
          }
        ],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 82
      },
      {
        "file": "jest-worker/src/workers/processChild.ts",
        "metrics": {
          "complexity": 43,
          "loc": 162,
          "functionCount": 11,
          "duplicationRatio": 0.52
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.15
          },
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.04
          }
        ],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.63,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-worker/src/workers/safeMessageTransferring.ts",
        "metrics": {
          "complexity": 7,
          "loc": 31,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 94,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-worker/src/workers/threadChild.ts",
        "metrics": {
          "complexity": 39,
          "loc": 166,
          "functionCount": 11,
          "duplicationRatio": 0.49
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.95
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.65
          }
        ],
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 0
      },
      {
        "file": "jest-resolve/src/__mocks__/foo/foo.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/__mocks__/foo/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "pretty-format/src/plugins/lib/escapeHTML.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 24,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "pretty-format/src/plugins/lib/markup.ts",
        "metrics": {
          "complexity": 10,
          "loc": 91,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.6,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/__mocks__/foo/bar/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/__mocks__/self-ref/foo/file.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/__mocks__/self-ref/foo/nested/file.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/__mocks__/self-ref/foo/nested-with-no-exports/file.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      },
      {
        "file": "jest-resolve/src/__mocks__/self-ref/foo/nested-with-own-pkg/file.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "issues": [],
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "healthScore": 100
      }
    ],
    "overview": {
      "grade": "C",
      "statistics": {
        "totalFiles": 388,
        "totalLOC": 44580,
        "avgComplexity": 16.9,
        "avgLOC": 115,
        "avgDuplicationRatio": 0.02
      },
      "scores": {
        "complexity": 55,
        "duplication": 99,
        "maintainability": 74,
        "overall": 72
      },
      "summary": "115 critical files found requiring attention"
    },
    "context": {
      "project": {
        "name": "@jest/monorepo",
        "path": "/Users/fstepho/dev/insightcode-cli/temp-analysis/jest",
        "version": "0.0.0"
      },
      "analysis": {
        "timestamp": "2025-07-13T00:47:25.220Z",
        "durationMs": 69676,
        "toolVersion": "0.6.1",
        "filesAnalyzed": 388,
        "duplicationMode": "legacy"
      }
    },
    "codeContext": [
      {
        "file": "babel-jest/src/index.ts",
        "criticalFunctions": [
          {
            "name": "createTransformer",
            "complexity": 2,
            "lineCount": 124,
            "parameterCount": 1,
            "snippet": "transformerConfig => {\n  const {excludeJestPreset, ...inputOptions} = transformerConfig ?? {};\n  const options = {\n    ...inputOptions,\n    caller: {\n      name: 'babel-jest',\n      supportsDynamicImport: false,\n      supportsExportNamespaceFrom: false,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 124 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "babel-plugin-jest-hoist/src/index.ts",
        "criticalFunctions": [
          {
            "name": "extractJestObjExprIfHoistable",
            "complexity": 9,
            "lineCount": 51,
            "parameterCount": 1,
            "snippet": "(expr: NodePath): JestObjInfo | null => {\n  if (!expr.isCallExpression()) {\n    return null;\n  }\n  const callee = expr.get<'callee'>('callee');\n  const args = expr.get<'arguments'>('arguments');\n  if (!callee.isMemberExpression() || callee.node.computed) {\n    return null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              }
            ]
          },
          {
            "name": "jestHoist",
            "complexity": 1,
            "lineCount": 87,
            "parameterCount": 0,
            "snippet": "export default function jestHoist(): PluginObj<{\n  declareJestObjGetterIdentifier: () => Identifier;\n  jestObjGetterIdentifier?: Identifier;\n}> {\n  return {\n    pre({path: program}) {\n      this.declareJestObjGetterIdentifier = () => {\n        if (this.jestObjGetterIdentifier) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "create-jest/src/runCreate.ts",
        "criticalFunctions": [
          {
            "name": "runCreate",
            "complexity": 18,
            "lineCount": 115,
            "parameterCount": 1,
            "snippet": "export async function runCreate(rootDir = process.cwd()): Promise<void> {\n  rootDir = tryRealpath(rootDir);\n  const projectPackageJsonPath = path.join(rootDir, PACKAGE_JSON);\n  if (!fs.existsSync(projectPackageJsonPath)) {\n    throw new NotFoundPackageJsonError(rootDir);\n  }\n  const questions = [...defaultQuestions];\n  let hasJestProperty = false;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 115 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "diff-sequences/__benchmarks__/test.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "diff-sequences/src/index.ts",
        "criticalFunctions": [
          {
            "name": "extendOverlappablePathsR",
            "complexity": 16,
            "lineCount": 135,
            "parameterCount": 11,
            "snippet": "(\n  d: number,\n  aStart: number,\n  aEnd: number,\n  bStart: number,\n  bEnd: number,\n  isCommon: IsCommon,\n  aIndexesF: Indexes,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 135 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "11 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "extendOverlappablePathsF",
            "complexity": 15,
            "lineCount": 130,
            "parameterCount": 11,
            "snippet": "(\n  d: number,\n  aStart: number,\n  aEnd: number,\n  bStart: number,\n  bEnd: number,\n  isCommon: IsCommon,\n  aIndexesF: Indexes, // update indexes in sequence a of paths in diagonals kF\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 130 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "11 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "divide",
            "complexity": 11,
            "lineCount": 115,
            "parameterCount": 9,
            "snippet": "(\n  nChange: number,\n  aStart: number,\n  aEnd: number,\n  bStart: number,\n  bEnd: number,\n  isCommon: IsCommon,\n  aIndexesF: Indexes, // temporary memory, not input nor output\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 115 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "9 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "findSubsequences",
            "complexity": 11,
            "lineCount": 105,
            "parameterCount": 10,
            "snippet": "(\n  nChange: number,\n  aStart: number,\n  aEnd: number,\n  bStart: number,\n  bEnd: number,\n  transposed: boolean,\n  callbacks: Array<Callbacks>,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 105 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "10 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "diffSequence",
            "complexity": 7,
            "lineCount": 91,
            "parameterCount": 4,
            "snippet": "export default function diffSequence(\n  aLength: number,\n  bLength: number,\n  isCommon: IsCommon,\n  foundSubsequence: FoundSubsequence,\n): void {\n  validateLength('aLength', aLength);\n  validateLength('bLength', bLength);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 91 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "expect/src/asymmetricMatchers.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "expect/src/index.ts",
        "criticalFunctions": [
          {
            "name": "expect",
            "complexity": 5,
            "lineCount": 53,
            "parameterCount": 2,
            "snippet": "(actual: any, ...rest: Array<any>) => {\n  if (rest.length > 0) {\n    throw new Error('Expect takes at most one argument.');\n  }\n  const allMatchers = getMatchers();\n  const expectation: any = {\n    not: {},\n    rejects: {not: {}},\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              }
            ]
          },
          {
            "name": "makeResolveMatcher",
            "complexity": 1,
            "lineCount": 54,
            "parameterCount": 5,
            "snippet": "(\n    matcherName: string,\n    matcher: RawMatcherFn,\n    isNot: boolean,\n    actual: Promise<any> | (() => Promise<any>),\n    outerErr: JestAssertionError,\n  ): PromiseMatcherFn =>\n  (...args) => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              }
            ]
          },
          {
            "name": "makeRejectMatcher",
            "complexity": 1,
            "lineCount": 54,
            "parameterCount": 5,
            "snippet": "(\n    matcherName: string,\n    matcher: RawMatcherFn,\n    isNot: boolean,\n    actual: Promise<any> | (() => Promise<any>),\n    outerErr: JestAssertionError,\n  ): PromiseMatcherFn =>\n  (...args) => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              }
            ]
          },
          {
            "name": "makeThrowingMatcher",
            "complexity": 1,
            "lineCount": 121,
            "parameterCount": 5,
            "snippet": "(\n  matcher: RawMatcherFn,\n  isNot: boolean,\n  promise: string,\n  actual: any,\n  err?: JestAssertionError,\n): ThrowingMatcherFn =>\n  function throwingMatcher(...args): any {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 121 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "expect/src/jestMatchersObject.ts",
        "criticalFunctions": [
          {
            "name": "setMatchers",
            "complexity": 5,
            "lineCount": 72,
            "parameterCount": 3,
            "snippet": "(\n  matchers: MatchersObject,\n  isInternal: boolean,\n  expect: Expect,\n): void => {\n  for (const key of Object.keys(matchers)) {\n    const matcher = matchers[key];\n    if (typeof matcher !== 'function') {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "expect/src/matchers.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "expect/src/print.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "expect/src/spyMatchers.ts",
        "criticalFunctions": [
          {
            "name": "printExpectedReceivedCallsPositive",
            "complexity": 16,
            "lineCount": 79,
            "parameterCount": 5,
            "snippet": "(\n  expected: Array<unknown>,\n  indexedCalls: Array<IndexedCall>,\n  expand: boolean,\n  isOnlyCall: boolean,\n  iExpectedCall?: number,\n) => {\n  const expectedLine = `Expected: ${printExpectedArgs(expected)}\\n`;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createToHaveBeenCalledMatcher",
            "complexity": 1,
            "lineCount": 54,
            "parameterCount": 0,
            "snippet": "(): MatcherFunction<[unknown]> =>\n  function (received: any, expected: unknown): SyncExpectationResult {\n    const expectedArgument = '';\n    const options: MatcherHintOptions = {\n      isNot: this.isNot,\n      promise: this.promise,\n    };\n    ensureNoExpected(expected, 'toHaveBeenCalled', options);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createToHaveReturnedMatcher",
            "complexity": 1,
            "lineCount": 65,
            "parameterCount": 0,
            "snippet": "(): MatcherFunction<[unknown]> =>\n  function (received: any, expected): SyncExpectationResult {\n    const expectedArgument = '';\n    const options: MatcherHintOptions = {\n      isNot: this.isNot,\n      promise: this.promise,\n    };\n    ensureNoExpected(expected, 'toHaveReturned', options);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createToHaveBeenCalledTimesMatcher",
            "complexity": 1,
            "lineCount": 52,
            "parameterCount": 0,
            "snippet": "(): MatcherFunction<[number]> =>\n  function (received: any, expected): SyncExpectationResult {\n    const expectedArgument = 'expected';\n    const options: MatcherHintOptions = {\n      isNot: this.isNot,\n      promise: this.promise,\n    };\n    ensureExpectedIsNonNegativeInteger(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              }
            ]
          },
          {
            "name": "createToHaveReturnedTimesMatcher",
            "complexity": 1,
            "lineCount": 59,
            "parameterCount": 0,
            "snippet": "(): MatcherFunction<[number]> =>\n  function (received: any, expected): SyncExpectationResult {\n    const expectedArgument = 'expected';\n    const options: MatcherHintOptions = {\n      isNot: this.isNot,\n      promise: this.promise,\n    };\n    ensureExpectedIsNonNegativeInteger(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "expect/src/toThrowMatchers.ts",
        "criticalFunctions": [
          {
            "name": "toThrowExpectedObject",
            "complexity": 9,
            "lineCount": 63,
            "parameterCount": 4,
            "snippet": "(\n  matcherName: string,\n  options: MatcherHintOptions,\n  thrown: Thrown | null,\n  expected: Error,\n): SyncExpectationResult => {\n  const expectedMessageAndCause = createMessageAndCause(expected);\n  const thrownMessageAndCause =\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 63 lines, consider splitting"
              }
            ]
          },
          {
            "name": "toThrowExpectedClass",
            "complexity": 3,
            "lineCount": 53,
            "parameterCount": 4,
            "snippet": "(\n  matcherName: string,\n  options: MatcherHintOptions,\n  thrown: Thrown | null,\n  expected: Function,\n): SyncExpectationResult => {\n  const pass = thrown !== null && thrown.value instanceof expected;\n  const message = pass\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              }
            ]
          },
          {
            "name": "createMatcher",
            "complexity": 1,
            "lineCount": 62,
            "parameterCount": 2,
            "snippet": "(\n  matcherName: string,\n  fromPromise?: boolean,\n): MatcherFunction<[any]> =>\n  function (received, expected): ExpectationResult {\n    const options = {\n      isNot: this.isNot,\n      promise: this.promise,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "expect-utils/src/immutableUtils.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "expect-utils/src/jasmineUtils.ts",
        "criticalFunctions": [
          {
            "name": "eq",
            "complexity": 47,
            "lineCount": 145,
            "parameterCount": 6,
            "snippet": "function eq(\n  a: any,\n  b: any,\n  aStack: Array<unknown>,\n  bStack: Array<unknown>,\n  customTesters: Array<Tester>,\n  strictCheck: boolean | undefined,\n): boolean {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 47 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 145 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "expect-utils/src/utils.ts",
        "criticalFunctions": [
          {
            "name": "iterableEquality",
            "complexity": 39,
            "lineCount": 151,
            "parameterCount": 5,
            "snippet": "(\n  a: any,\n  b: any,\n  customTesters: Array<Tester> = [],\n  /* eslint-enable @typescript-eslint/explicit-module-boundary-types */\n  aStack: Array<any> = [],\n  bStack: Array<any> = [],\n): boolean | undefined => {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 39 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 151 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getPath",
            "complexity": 11,
            "lineCount": 53,
            "parameterCount": 2,
            "snippet": "(\n  object: Record<string, any>,\n  propertyPath: string | Array<string>,\n): GetPath => {\n  if (!Array.isArray(propertyPath)) {\n    propertyPath = pathAsArray(propertyPath);\n  }\n  if (propertyPath.length > 0) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-changed-files/src/hg.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "jest-changed-files/src/sl.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "jest-config/src/getCacheDirectory.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-config/src/index.ts",
        "criticalFunctions": [
          {
            "name": "readInitialOptions",
            "complexity": 11,
            "lineCount": 54,
            "parameterCount": 2,
            "snippet": "export async function readInitialOptions(\n  config?: string,\n  {\n    packageRootOrConfig = process.cwd(),\n    parentConfigDirname = null,\n    readFromCwd = false,\n    skipMultipleConfigError = false,\n  }: ReadJestConfigOptions = {},\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "readConfigs",
            "complexity": 11,
            "lineCount": 92,
            "parameterCount": 2,
            "snippet": "export async function readConfigs(\n  argv: Config.Argv,\n  projectPaths: Array<string>,\n): Promise<{\n  globalConfig: Config.GlobalConfig;\n  configs: Array<Config.ProjectConfig>;\n  hasDeprecationWarnings: boolean;\n}> {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 92 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "groupOptions",
            "complexity": 1,
            "lineCount": 137,
            "parameterCount": 1,
            "snippet": "(\n  options: Config.ProjectConfig & Config.GlobalConfig,\n): {\n  globalConfig: Config.GlobalConfig;\n  projectConfig: Config.ProjectConfig;\n} => ({\n  globalConfig: Object.freeze({\n    bail: options.bail,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 137 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-config/src/normalize.ts",
        "criticalFunctions": [
          {
            "name": "normalize",
            "complexity": 63,
            "lineCount": 698,
            "parameterCount": 5,
            "snippet": "export default async function normalize(\n  initialOptions: Config.InitialOptions,\n  argv: Config.Argv,\n  configPath?: string | null,\n  projectIndex = Number.POSITIVE_INFINITY,\n  isProjectOptions?: boolean,\n): Promise<{\n  hasDeprecationWarnings: boolean;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 63 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 698 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "setupPreset",
            "complexity": 22,
            "lineCount": 88,
            "parameterCount": 2,
            "snippet": "async (\n  options: Config.InitialOptionsWithRootDir,\n  optionsPreset: string,\n): Promise<Config.InitialOptionsWithRootDir> => {\n  let preset: Config.InitialOptions;\n  const presetPath = replaceRootDirInPath(options.rootDir, optionsPreset);\n  const presetModule = Resolver.findNodeModule(\n    presetPath.startsWith('.')\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 88 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-config/src/readConfigFileAndSetRootDir.ts",
        "criticalFunctions": [
          {
            "name": "readConfigFileAndSetRootDir",
            "complexity": 19,
            "lineCount": 79,
            "parameterCount": 1,
            "snippet": "export default async function readConfigFileAndSetRootDir(\n  configPath: string,\n): Promise<Config.InitialOptions> {\n  const isTS =\n    configPath.endsWith(JEST_CONFIG_EXT_TS) ||\n    configPath.endsWith(JEST_CONFIG_EXT_CTS);\n  const isJSON = configPath.endsWith(JEST_CONFIG_EXT_JSON);\n  let configObject;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "registerTsLoader",
            "complexity": 9,
            "lineCount": 52,
            "parameterCount": 1,
            "snippet": "async function registerTsLoader(loader: TsLoaderModule): Promise<TsLoader> {\n  try {\n    if (loader === 'ts-node') {\n      const tsLoader = await import(/* webpackIgnore: true */ 'ts-node');\n      return tsLoader.register({\n        compilerOptions: {\n          module: 'CommonJS',\n        },\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-config/src/resolveConfigPath.ts",
        "criticalFunctions": [
          {
            "name": "resolveConfigPathByTraversing",
            "complexity": 14,
            "lineCount": 62,
            "parameterCount": 4,
            "snippet": "(\n  pathToResolve: string,\n  initialPath: string,\n  cwd: string,\n  skipMultipleConfigError: boolean,\n): string => {\n  const configFiles = JEST_CONFIG_EXT_ORDER.map(ext =>\n    path.resolve(pathToResolve, getConfigFilename(ext)),\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-config/src/stringToBytes.ts",
        "criticalFunctions": [
          {
            "name": "stringToBytes",
            "complexity": 26,
            "lineCount": 64,
            "parameterCount": 2,
            "snippet": "function stringToBytes(\n  input: string | number | null | undefined,\n  percentageReference?: number,\n): number | null | undefined {\n  if (input === null || input === undefined) {\n    return input;\n  }\n  if (typeof input === 'string') {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "jest-config/src/utils.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-cli/src/args.ts",
        "criticalFunctions": [
          {
            "name": "check",
            "complexity": 27,
            "lineCount": 82,
            "parameterCount": 1,
            "snippet": "export function check(argv: Config.Argv): true {\n  if (\n    argv.runInBand &&\n    Object.prototype.hasOwnProperty.call(argv, 'maxWorkers')\n  ) {\n    throw new Error(\n      'Both --runInBand and --maxWorkers were specified, only one is allowed.',\n    );\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 82 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "jest-cli/src/run.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-circus/src/eventHandler.ts",
        "criticalFunctions": [
          {
            "name": "eventHandler",
            "complexity": 49,
            "lineCount": 284,
            "parameterCount": 2,
            "snippet": "(event, state) => {\n  switch (event.name) {\n    case 'include_test_location_in_result': {\n      state.includeTestLocationInResult = true;\n      break;\n    }\n    case 'hook_start': {\n      event.hook.seenDone = false;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 49 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 284 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-circus/src/formatNodeAssertErrors.ts",
        "criticalFunctions": [
          {
            "name": "assertionErrorMessage",
            "complexity": 11,
            "lineCount": 62,
            "parameterCount": 2,
            "snippet": "function assertionErrorMessage(\n  error: AssertionErrorWithStack,\n  options: DiffOptions,\n) {\n  const {expected, actual, generatedMessage, message, operator, stack} = error;\n  const diffString = diff(expected, actual, options);\n  const hasCustomMessage = !generatedMessage;\n  const operatorName = getOperatorName(operator, stack);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-circus/src/index.ts",
        "criticalFunctions": [
          {
            "name": "_addTest",
            "complexity": 8,
            "lineCount": 44,
            "parameterCount": 8,
            "snippet": "(\n    testName: Circus.TestNameLike,\n    mode: Circus.TestMode,\n    concurrent: boolean,\n    fn: Circus.TestFn | undefined,\n    testFn: (\n      testName: Circus.TestNameLike,\n      fn: Circus.TestFn,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-circus/src/run.ts",
        "criticalFunctions": [
          {
            "name": "_runTestsForDescribeBlock",
            "complexity": 16,
            "lineCount": 120,
            "parameterCount": 3,
            "snippet": "async (\n  describeBlock: Circus.DescribeBlock,\n  rng: RandomNumberGenerator | undefined,\n  isRootBlock = false,\n) => {\n  await dispatch({describeBlock, name: 'run_describe_start'});\n  const {beforeAll, afterAll} = getAllHooksForDescribe(describeBlock);\n  const isSkipped = describeBlock.mode === 'skip';\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 120 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-circus/src/utils.ts",
        "criticalFunctions": [
          {
            "name": "makeTest",
            "complexity": 1,
            "lineCount": 29,
            "parameterCount": 8,
            "snippet": "(\n  fn: Circus.TestFn,\n  mode: Circus.TestMode,\n  concurrent: boolean,\n  name: Circus.TestName,\n  parent: Circus.DescribeBlock,\n  timeout: number | undefined,\n  asyncError: Circus.Exception,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "callAsyncCircusFn",
            "complexity": 1,
            "lineCount": 117,
            "parameterCount": 3,
            "snippet": "(\n  testOrHook: Circus.TestEntry | Circus.Hook,\n  testContext: Circus.TestContext,\n  {isHook, timeout}: {isHook: boolean; timeout: number},\n): Promise<unknown> => {\n  let timeoutID: NodeJS.Timeout;\n  let completed = false;\n  const {fn, asyncError} = testOrHook;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 117 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-console/src/BufferedConsole.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-console/src/CustomConsole.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-core/src/FailedTestsInteractiveMode.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-core/src/ReporterDispatcher.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-core/src/SearchSource.ts",
        "criticalFunctions": [
          {
            "name": "findRelatedTests",
            "complexity": 7,
            "lineCount": 56,
            "parameterCount": 2,
            "snippet": "async findRelatedTests(\n    allPaths: Set<string>,\n    collectCoverage: boolean,\n  ): Promise<SearchResult> {\n    const dependencyResolver = await this._getOrBuildDependencyResolver();\n    if (!collectCoverage) {\n      return {\n        tests: toTests(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-core/src/SnapshotInteractiveMode.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-core/src/TestNamePatternPrompt.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-core/src/TestPathPatternPrompt.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-core/src/TestScheduler.ts",
        "criticalFunctions": [
          {
            "name": "scheduleTests",
            "complexity": 16,
            "lineCount": 229,
            "parameterCount": 2,
            "snippet": "async scheduleTests(\n    tests: Array<Test>,\n    watcher: TestWatcher,\n  ): Promise<AggregatedResult> {\n    const onTestFileStart = this._dispatcher.onTestFileStart.bind(\n      this._dispatcher,\n    );\n    const timings: Array<number> = [];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 229 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-core/src/collectHandles.ts",
        "criticalFunctions": [
          {
            "name": "collectHandles",
            "complexity": 1,
            "lineCount": 103,
            "parameterCount": 0,
            "snippet": "export default function collectHandles(): HandleCollectionResult {\n  const activeHandles = new Map<\n    number,\n    {error: Error; isActive: () => boolean}\n  >();\n  const hook = asyncHooks.createHook({\n    destroy(asyncId) {\n      activeHandles.delete(asyncId);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 103 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-core/src/getNoTestFoundFailed.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-core/src/getNoTestFoundRelatedToChangedFiles.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-core/src/runJest.ts",
        "criticalFunctions": [
          {
            "name": "runJest",
            "complexity": 22,
            "lineCount": 200,
            "parameterCount": 1,
            "snippet": "export default async function runJest({\n  contexts,\n  globalConfig,\n  outputStream,\n  testWatcher,\n  jestHooks = new JestHook().getEmitter(),\n  startRun,\n  changedFilesPromise,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 200 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getTestPaths",
            "complexity": 4,
            "lineCount": 40,
            "parameterCount": 7,
            "snippet": "async (\n  globalConfig: Config.GlobalConfig,\n  projectConfig: Config.ProjectConfig,\n  source: SearchSource,\n  outputStream: WriteStream,\n  changedFiles: ChangedFiles | undefined,\n  jestHooks: JestHookEmitter,\n  filter?: Filter,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-core/src/watch.ts",
        "criticalFunctions": [
          {
            "name": "onKeypress",
            "complexity": 21,
            "lineCount": 107,
            "parameterCount": 1,
            "snippet": "(key: string) => {\n    if (key === KEYS.CONTROL_C || key === KEYS.CONTROL_D) {\n      if (typeof stdin.setRawMode === 'function') {\n        stdin.setRawMode(false);\n      }\n      outputStream.write('\\n');\n      exit(0);\n      return;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 107 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "watch",
            "complexity": 16,
            "lineCount": 382,
            "parameterCount": 7,
            "snippet": "export default async function watch(\n  initialGlobalConfig: Config.GlobalConfig,\n  contexts: Array<TestContext>,\n  outputStream: WriteStream,\n  hasteMapInstances: Array<HasteMap>,\n  stdin: NodeJS.ReadStream = process.stdin,\n  hooks: JestHook = new JestHook(),\n  filter?: Filter,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 382 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "startRun",
            "complexity": 4,
            "lineCount": 64,
            "parameterCount": 1,
            "snippet": "async (globalConfig: Config.GlobalConfig): Promise<void> => {\n    if (isRunning) {\n      return;\n    }\n    testWatcher = new TestWatcher({isWatchMode: true});\n    if (isInteractive) {\n      outputStream.write(specialChars.CLEAR);\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-diff/src/cleanupSemantic.ts",
        "criticalFunctions": [
          {
            "name": "diff_cleanupMerge",
            "complexity": 23,
            "lineCount": 121,
            "parameterCount": 1,
            "snippet": "function(diffs: Array<Diff>) {\n  diffs.push(new Diff(DIFF_EQUAL, ''));\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 121 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "diff_cleanupSemanticScore_",
            "complexity": 20,
            "lineCount": 46,
            "parameterCount": 2,
            "snippet": "function diff_cleanupSemanticScore_(one: string, two: string): number {\n    if (!one || !two) {\n      return 6;\n    }\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex_);\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "diff_cleanupSemantic",
            "complexity": 17,
            "lineCount": 107,
            "parameterCount": 1,
            "snippet": "function(diffs: Array<Diff>) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastEquality = null;\n  var pointer = 0;  // Index of current position.\n  var length_insertions1 = 0;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 107 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "diff_cleanupSemanticLossless",
            "complexity": 10,
            "lineCount": 118,
            "parameterCount": 1,
            "snippet": "function(diffs: Array<Diff>) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 118 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-diff/src/diffLines.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-diff/src/getAlignedDiffs.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-diff/src/index.ts",
        "criticalFunctions": [
          {
            "name": "diff",
            "complexity": 14,
            "lineCount": 53,
            "parameterCount": 3,
            "snippet": "export function diff(a: any, b: any, options?: DiffOptions): string | null {\n  if (Object.is(a, b)) {\n    return getCommonMessage(NO_DIFF_MESSAGE, options);\n  }\n  const aType = getType(a);\n  let expectedType = aType;\n  let omitDifference = false;\n  if (aType === 'object' && typeof a.asymmetricMatch === 'function') {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-diff/src/joinAlignedDiffs.ts",
        "criticalFunctions": [
          {
            "name": "joinAlignedDiffsNoExpand",
            "complexity": 35,
            "lineCount": 172,
            "parameterCount": 2,
            "snippet": "(\n  diffs: Array<Diff>,\n  options: DiffOptionsNormalized,\n): string => {\n  const iLength = diffs.length;\n  const nContextLines = options.contextLines;\n  const nContextLines2 = nContextLines + nContextLines;\n  let jLength = iLength;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 35 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 172 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-docblock/src/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "jest-each/src/validation.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-environment-jsdom-abstract/src/index.ts",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 9,
            "lineCount": 111,
            "parameterCount": 3,
            "snippet": "protected constructor(\n    config: JestEnvironmentConfig,\n    context: EnvironmentContext,\n    jsdomModule: typeof jsdom,\n  ) {\n    const {projectConfig} = config;\n    const {JSDOM, ResourceLoader, VirtualConsole} = jsdomModule;\n    const virtualConsole = new VirtualConsole();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 111 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "jest-environment-node/src/index.ts",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 11,
            "lineCount": 120,
            "parameterCount": 2,
            "snippet": "constructor(config: JestEnvironmentConfig, _context: EnvironmentContext) {\n    const {projectConfig} = config;\n    const globalsCleanupMode = readGlobalsCleanupConfig(projectConfig);\n    initializeGarbageCollectionUtils(globalThis, globalsCleanupMode);\n    this._globalProxy = new GlobalProxy();\n    this.context = createContext(this._globalProxy.proxy());\n    const global = runInContext(\n      'this',\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 120 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "jest-fake-timers/src/legacyFakeTimers.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "jest-fake-timers/src/modernFakeTimers.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-get-type/src/index.ts",
        "criticalFunctions": [
          {
            "name": "getType",
            "complexity": 16,
            "lineCount": 34,
            "parameterCount": 1,
            "snippet": "export function getType(value: unknown): ValueType {\n  if (value === undefined) {\n    return 'undefined';\n  } else if (value === null) {\n    return 'null';\n  } else if (Array.isArray(value)) {\n    return 'array';\n  } else if (typeof value === 'boolean') {\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "jest-globals/src/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "jest-haste-map/src/HasteFS.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-haste-map/src/ModuleMap.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "jest-haste-map/src/index.ts",
        "criticalFunctions": [
          {
            "name": "_processFile",
            "complexity": 20,
            "lineCount": 212,
            "parameterCount": 5,
            "snippet": "private _processFile(\n    hasteMap: InternalHasteMap,\n    map: ModuleMapData,\n    mocks: MockData,\n    filePath: string,\n    workerOptions?: WorkerOptions,\n  ): Promise<void> | null {\n    const rootDir = this._options.rootDir;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 212 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 13,
            "lineCount": 52,
            "parameterCount": 1,
            "snippet": "private constructor(options: Options) {\n    super();\n    this._options = {\n      cacheDirectory: options.cacheDirectory || tmpdir(),\n      computeDependencies: options.computeDependencies ?? true,\n      computeSha1: options.computeSha1 || false,\n      dependencyExtractor: options.dependencyExtractor || null,\n      enableSymlinks: options.enableSymlinks || false,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "setModule",
            "complexity": 12,
            "lineCount": 62,
            "parameterCount": 2,
            "snippet": "(id: string, module: ModuleMetaData) => {\n      let moduleMap = map.get(id);\n      if (!moduleMap) {\n        moduleMap = Object.create(null) as ModuleMapItem;\n        map.set(id, moduleMap);\n      }\n      const platform =\n        getPlatformExtension(module[H.PATH], this._options.platforms) ||\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "onChange",
            "complexity": 9,
            "lineCount": 138,
            "parameterCount": 4,
            "snippet": "(\n      type: string,\n      filePath: string,\n      root: string,\n      stat?: Stats,\n    ) => {\n      filePath = path.join(root, normalizePathSep(filePath));\n      if (\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 138 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_buildHasteMap",
            "complexity": 8,
            "lineCount": 58,
            "parameterCount": 1,
            "snippet": "private _buildHasteMap(data: {\n    removedFiles: FileData;\n    changedFiles?: FileData;\n    hasteMap: InternalHasteMap;\n  }): Promise<InternalHasteMap> {\n    const {removedFiles, changedFiles, hasteMap} = data;\n    let map: ModuleMapData;\n    let mocks: MockData;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "jest-haste-map/src/worker.ts",
        "criticalFunctions": [
          {
            "name": "worker",
            "complexity": 13,
            "lineCount": 70,
            "parameterCount": 1,
            "snippet": "export async function worker(data: WorkerMessage): Promise<WorkerMetadata> {\n  const hasteImpl: HasteImpl | null = data.hasteImplModulePath\n    ? require(data.hasteImplModulePath)\n    : null;\n  let content: string | undefined;\n  let dependencies: WorkerMetadata['dependencies'];\n  let id: WorkerMetadata['id'];\n  let module: WorkerMetadata['module'];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 70 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-jasmine2/src/assertionErrorMessage.ts",
        "criticalFunctions": [
          {
            "name": "assertionErrorMessage",
            "complexity": 11,
            "lineCount": 57,
            "parameterCount": 2,
            "snippet": "function assertionErrorMessage(\n  error: AssertionErrorWithStack,\n  options: DiffOptions,\n): string {\n  const {expected, actual, generatedMessage, message, operator, stack} = error;\n  const diffString = diff(expected, actual, options);\n  const hasCustomMessage = !generatedMessage;\n  const operatorName = getOperatorName(operator, stack);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-jasmine2/src/expectationResultFactory.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-jasmine2/src/index.ts",
        "criticalFunctions": [
          {
            "name": "jasmine2",
            "complexity": 10,
            "lineCount": 180,
            "parameterCount": 5,
            "snippet": "export default async function jasmine2(\n  globalConfig: Config.GlobalConfig,\n  config: Config.ProjectConfig,\n  environment: JestEnvironment,\n  runtime: Runtime,\n  testPath: string,\n): Promise<TestResult> {\n  const reporter = new JasmineReporter(globalConfig, config, testPath);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 180 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-jasmine2/src/jasmineAsyncInstall.ts",
        "criticalFunctions": [
          {
            "name": "promisifyLifeCycleFunction",
            "complexity": 1,
            "lineCount": 73,
            "parameterCount": 2,
            "snippet": "function promisifyLifeCycleFunction(\n  originalFn: (beforeAllFunction: QueueableFn['fn'], timeout?: number) => void,\n  env: Jasmine['currentEnv_'],\n) {\n  return function <T>(\n    fn:\n      | ((done: DoneFn) => void | PromiseLike<T>)\n      | (() => Promise<T>)\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 73 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "promisifyIt",
            "complexity": 1,
            "lineCount": 87,
            "parameterCount": 3,
            "snippet": "function promisifyIt(\n  originalFn: (\n    description: Global.TestNameLike,\n    fn: QueueableFn['fn'],\n    timeout?: number,\n  ) => Spec,\n  env: Jasmine['currentEnv_'],\n  jasmine: Jasmine,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "makeConcurrent",
            "complexity": 1,
            "lineCount": 61,
            "parameterCount": 3,
            "snippet": "function makeConcurrent(\n  originalFn: (\n    description: Global.TestNameLike,\n    fn: QueueableFn['fn'],\n    timeout?: number,\n  ) => Spec,\n  env: Jasmine['currentEnv_'],\n  mutex: ReturnType<typeof pLimit>,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-jasmine2/src/reporter.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-jasmine2/src/treeProcessor.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "jest-matcher-utils/src/deepCyclicCopyReplaceable.ts",
        "criticalFunctions": [
          {
            "name": "deepCyclicCopyObject",
            "complexity": 6,
            "lineCount": 58,
            "parameterCount": 2,
            "snippet": "function deepCyclicCopyObject<T>(object: T, cycles: WeakMap<any, unknown>): T {\n  const newObject = Object.create(Object.getPrototypeOf(object));\n  let descriptors: Record<string | symbol, PropertyDescriptor> = {};\n  let obj = object;\n  do {\n    const serializableProperties = getSerializableProperties(obj);\n    if (serializableProperties === undefined) {\n      descriptors = Object.assign(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-matcher-utils/src/index.ts",
        "criticalFunctions": [
          {
            "name": "printDiffOrStringify",
            "complexity": 15,
            "lineCount": 75,
            "parameterCount": 5,
            "snippet": "(\n  expected: unknown,\n  received: unknown,\n  expectedLabel: string,\n  receivedLabel: string,\n  expand: boolean, // CLI options: true if `--expand` or false if `--no-expand`\n): string => {\n  if (\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "matcherHint",
            "complexity": 10,
            "lineCount": 64,
            "parameterCount": 4,
            "snippet": "(\n  matcherName: string,\n  received = 'received',\n  expected = 'expected',\n  options: MatcherHintOptions = {},\n): string => {\n  const {\n    comment = '',\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_replaceMatchedToAsymmetricMatcher",
            "complexity": 4,
            "lineCount": 51,
            "parameterCount": 4,
            "snippet": "function _replaceMatchedToAsymmetricMatcher(\n  replacedExpected: unknown,\n  replacedReceived: unknown,\n  expectedCycles: Array<unknown>,\n  receivedCycles: Array<unknown>,\n) {\n  if (!Replaceable.isReplaceable(replacedExpected, replacedReceived)) {\n    return {replacedExpected, replacedReceived};\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-message-util/src/index.ts",
        "criticalFunctions": [
          {
            "name": "formatExecError",
            "complexity": 26,
            "lineCount": 112,
            "parameterCount": 6,
            "snippet": "(\n  error: Error | TestResult.SerializableError | string | number | undefined,\n  config: StackTraceConfig,\n  options: StackTraceOptions,\n  testPath?: string,\n  reuseMessage?: boolean,\n  noTitle?: boolean,\n): string => {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 112 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-mock/src/index.ts",
        "criticalFunctions": [
          {
            "name": "replaceProperty",
            "complexity": 20,
            "lineCount": 111,
            "parameterCount": 3,
            "snippet": "replaceProperty<T extends object, K extends keyof T>(\n    object: T,\n    propertyKey: K,\n    value: T[K],\n  ): Replaced<T[K]> {\n    if (\n      object == null ||\n      (typeof object !== 'object' && typeof object !== 'function')\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 111 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getMetadata",
            "complexity": 19,
            "lineCount": 68,
            "parameterCount": 2,
            "snippet": "getMetadata<T = unknown>(\n    component: T,\n    _refs?: Map<T, number>,\n  ): MockMetadata<T> | null {\n    const refs = _refs || new Map<T, number>();\n    const ref = refs.get(component);\n    if (ref != null) {\n      return {ref};\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getType",
            "complexity": 18,
            "lineCount": 36,
            "parameterCount": 1,
            "snippet": "function getType(ref?: unknown): MockMetadataType | null {\n  const typeName = getObjectType(ref);\n  if (\n    typeName === 'Function' ||\n    typeName === 'AsyncFunction' ||\n    typeName === 'GeneratorFunction' ||\n    typeName === 'AsyncGeneratorFunction'\n  ) {\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "spyOn",
            "complexity": 18,
            "lineCount": 91,
            "parameterCount": 3,
            "snippet": "spyOn<T extends object>(\n    object: T,\n    methodKey: keyof T,\n    accessType?: 'get' | 'set',\n  ): MockInstance {\n    if (\n      object == null ||\n      (typeof object !== 'object' && typeof object !== 'function')\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 91 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_makeComponent",
            "complexity": 15,
            "lineCount": 255,
            "parameterCount": 2,
            "snippet": "private _makeComponent<T extends UnknownFunction>(\n    metadata: MockMetadata<T>,\n    restore?: () => void,\n  ): Record<string, any> | Array<unknown> | RegExp | T | Mock | undefined {\n    if (metadata.type === 'object') {\n      return new this._environmentGlobal.Object();\n    } else if (metadata.type === 'array') {\n      return new this._environmentGlobal.Array();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 255 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "jest-pattern/src/TestPathPatterns.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-reporters/src/CoverageReporter.ts",
        "criticalFunctions": [
          {
            "name": "_addUntestedFiles",
            "complexity": 13,
            "lineCount": 114,
            "parameterCount": 1,
            "snippet": "private async _addUntestedFiles(\n    testContexts: Set<TestContext>,\n  ): Promise<void> {\n    const files: Array<{config: Config.ProjectConfig; path: string}> = [];\n    for (const context of testContexts) {\n      const config = context.config;\n      if (\n        this._globalConfig.collectCoverageFrom &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 114 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_checkThreshold",
            "complexity": 12,
            "lineCount": 212,
            "parameterCount": 1,
            "snippet": "private _checkThreshold(map: istanbulCoverage.CoverageMap) {\n    const {coverageThreshold} = this._globalConfig;\n    if (coverageThreshold) {\n      function check(\n        name: string,\n        thresholds: Config.CoverageThresholdValue,\n        actuals: istanbulCoverage.CoverageSummaryData,\n      ) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 212 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_getCoverageResult",
            "complexity": 7,
            "lineCount": 80,
            "parameterCount": 0,
            "snippet": "private async _getCoverageResult(): Promise<{\n    map: istanbulCoverage.CoverageMap;\n    reportContext: istanbulReport.Context;\n  }> {\n    if (this._globalConfig.coverageProvider === 'v8') {\n      const mergedCoverages = mergeProcessCovs(\n        this._v8CoverageResults.map(cov => ({result: cov.map(r => r.result)})),\n      );\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-reporters/src/DefaultReporter.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-reporters/src/GitHubActionsReporter.ts",
        "criticalFunctions": [
          {
            "name": "recursivePrintResultTree",
            "complexity": 17,
            "lineCount": 60,
            "parameterCount": 3,
            "snippet": "private recursivePrintResultTree(\n    resultTree: ResultTreeNode | ResultTreeLeaf,\n    alreadyGrouped: boolean,\n    depth: number,\n  ): void {\n    if (resultTree.children.length === 0) {\n      if (!('duration' in resultTree)) {\n        throw new Error('Expected a leaf. Got a node.');\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 60 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getResultChildren",
            "complexity": 12,
            "lineCount": 57,
            "parameterCount": 2,
            "snippet": "private getResultChildren(\n    suiteResult: Array<AssertionResult>,\n    ancestors: Array<string>,\n  ): ResultTreeNode {\n    const node: ResultTreeNode = {\n      children: [],\n      name: ancestors.at(-1)!,\n      passed: true,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-reporters/src/NotifyReporter.ts",
        "criticalFunctions": [
          {
            "name": "onRunComplete",
            "complexity": 31,
            "lineCount": 122,
            "parameterCount": 2,
            "snippet": "override onRunComplete(\n    testContexts: Set<TestContext>,\n    result: AggregatedResult,\n  ): void {\n    const success =\n      result.numFailedTests === 0 && result.numRuntimeErrorTestSuites === 0;\n    const firstContext = testContexts.values().next();\n    const hasteFS =\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 31 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 122 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-reporters/src/Status.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-reporters/src/SummaryReporter.ts",
        "criticalFunctions": [
          {
            "name": "_printSnapshotSummary",
            "complexity": 17,
            "lineCount": 42,
            "parameterCount": 2,
            "snippet": "private _printSnapshotSummary(\n    snapshots: SnapshotSummary,\n    globalConfig: Config.GlobalConfig,\n  ) {\n    if (\n      snapshots.added ||\n      snapshots.filesRemoved ||\n      snapshots.unchecked ||\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-reporters/src/VerboseReporter.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-reporters/src/getSnapshotSummary.ts",
        "criticalFunctions": [
          {
            "name": "getSnapshotSummary",
            "complexity": 15,
            "lineCount": 114,
            "parameterCount": 3,
            "snippet": "export default function getSnapshotSummary(\n  snapshots: SnapshotSummary,\n  globalConfig: Config.GlobalConfig,\n  updateCommand: string,\n): Array<string> {\n  const summary = [];\n  summary.push(SNAPSHOT_SUMMARY('Snapshot Summary'));\n  if (snapshots.added) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 114 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-reporters/src/getSummary.ts",
        "criticalFunctions": [
          {
            "name": "getSummary",
            "complexity": 30,
            "lineCount": 117,
            "parameterCount": 2,
            "snippet": "export default function getSummary(\n  aggregatedResults: AggregatedResult,\n  options?: SummaryOptions,\n): string {\n  let runTime = (Date.now() - aggregatedResults.startTime) / 1000;\n  if (options && options.roundTime) {\n    runTime = Math.floor(runTime);\n  }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 30 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 117 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-runner/src/runTest.ts",
        "criticalFunctions": [
          {
            "name": "runTestInternal",
            "complexity": 34,
            "lineCount": 317,
            "parameterCount": 6,
            "snippet": "async function runTestInternal(\n  path: string,\n  globalConfig: Config.GlobalConfig,\n  projectConfig: Config.ProjectConfig,\n  resolver: Resolver,\n  context: TestRunnerContext,\n  sendMessageToJest?: TestFileEvent,\n): Promise<RunTestInternalResult> {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 34 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 317 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-runtime/src/index.ts",
        "criticalFunctions": [
          {
            "name": "resolveModule",
            "complexity": 27,
            "lineCount": 163,
            "parameterCount": 3,
            "snippet": "private async resolveModule<T = unknown>(\n    specifier: string,\n    referencingIdentifier: string,\n    context: VMContext,\n  ): Promise<T> {\n    if (this.isTornDown) {\n      this._logFormattedReferenceError(\n        'You are trying to `import` a file after the Jest environment has been torn down.',\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 163 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "requireModule",
            "complexity": 19,
            "lineCount": 100,
            "parameterCount": 4,
            "snippet": "requireModule<T = unknown>(\n    from: string,\n    moduleName?: string,\n    options?: InternalModuleOptions,\n    isRequireActual = false,\n  ): T {\n    const isInternal = options?.isInternalModule ?? false;\n    const resolveModuleOptions = {conditions: this.cjsConditions};\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 100 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_shouldMockCjs",
            "complexity": 17,
            "lineCount": 74,
            "parameterCount": 3,
            "snippet": "private _shouldMockCjs(\n    from: string,\n    moduleName: string,\n    explicitShouldMock: Map<string, boolean>,\n  ): boolean {\n    const options: ResolveModuleConfig = {conditions: this.cjsConditions};\n    const moduleID = this._resolver.getModuleID(\n      this._virtualMocks,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_shouldMockModule",
            "complexity": 17,
            "lineCount": 74,
            "parameterCount": 3,
            "snippet": "private async _shouldMockModule(\n    from: string,\n    moduleName: string,\n    explicitShouldMock: Map<string, boolean>,\n  ): Promise<boolean> {\n    const options: ResolveModuleConfig = {conditions: this.esmConditions};\n    const moduleID = await this._resolver.getModuleIDAsync(\n      this._virtualMocks,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_requireResolve",
            "complexity": 12,
            "lineCount": 55,
            "parameterCount": 3,
            "snippet": "private _requireResolve(\n    from: string,\n    moduleName?: string,\n    options: ResolveOptions = {},\n  ) {\n    if (moduleName == null) {\n      throw new Error(\n        'The first argument to require.resolve must be a string. Received null or undefined.',\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "jest-resolve/src/defaultResolver.ts",
        "criticalFunctions": [
          {
            "name": "baseResolver",
            "complexity": 11,
            "lineCount": 89,
            "parameterCount": 3,
            "snippet": "function baseResolver(\n  path: string,\n  options: ResolverOptions,\n  async?: true,\n): string | Promise<string> {\n  if (isBuiltin(path)) {\n    return path;\n  }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 89 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-resolve/src/fileWalkers.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-resolve/src/resolver.ts",
        "criticalFunctions": [
          {
            "name": "resolveStubModuleNameAsync",
            "complexity": 11,
            "lineCount": 65,
            "parameterCount": 3,
            "snippet": "async resolveStubModuleNameAsync(\n    from: string,\n    moduleName: string,\n    options?: Pick<ResolveModuleConfig, 'conditions'>,\n  ): Promise<string | null> {\n    if (this.isCoreModule(moduleName)) {\n      return this.normalizeCoreModuleSpecifier(moduleName);\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "resolveStubModuleName",
            "complexity": 10,
            "lineCount": 59,
            "parameterCount": 3,
            "snippet": "resolveStubModuleName(\n    from: string,\n    moduleName: string,\n    options?: Pick<ResolveModuleConfig, 'conditions'>,\n  ): string | null {\n    const dirname = path.dirname(from);\n    const {extensions, moduleDirectory, paths} = this._prepareForResolution(\n      dirname,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "resolveModuleFromDirIfExists",
            "complexity": 8,
            "lineCount": 74,
            "parameterCount": 3,
            "snippet": "resolveModuleFromDirIfExists(\n    dirname: string,\n    moduleName: string,\n    options?: ResolveModuleConfig,\n  ): string | null {\n    const {extensions, key, moduleDirectory, paths, skipResolution} =\n      this._prepareForResolution(dirname, moduleName, options);\n    let module;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "resolveModuleFromDirIfExistsAsync",
            "complexity": 8,
            "lineCount": 78,
            "parameterCount": 3,
            "snippet": "async resolveModuleFromDirIfExistsAsync(\n    dirname: string,\n    moduleName: string,\n    options?: ResolveModuleConfig,\n  ): Promise<string | null> {\n    const {extensions, key, moduleDirectory, paths, skipResolution} =\n      this._prepareForResolution(dirname, moduleName, options);\n    let module;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 78 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "jest-resolve/src/utils.ts",
        "criticalFunctions": [
          {
            "name": "resolveWithPrefix",
            "complexity": 8,
            "lineCount": 51,
            "parameterCount": 2,
            "snippet": "(\n  resolver: string | undefined | null,\n  {\n    filePath,\n    humanOptionName,\n    optionName,\n    prefix,\n    requireResolveFunction,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-snapshot/src/InlineSnapshots.ts",
        "criticalFunctions": [
          {
            "name": "saveInlineSnapshots",
            "complexity": 16,
            "lineCount": 71,
            "parameterCount": 3,
            "snippet": "export function saveInlineSnapshots(\n  snapshots: Array<InlineSnapshot>,\n  rootDir: string,\n  prettierPath: string | null,\n): void {\n  let prettier: Prettier | undefined = prettierPath\n    ? (cachedPrettier.get(`module|${prettierPath}`) as Prettier)\n    : undefined;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 71 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-snapshot/src/State.ts",
        "criticalFunctions": [
          {
            "name": "match",
            "complexity": 24,
            "lineCount": 118,
            "parameterCount": 1,
            "snippet": "match({\n    testName,\n    received,\n    key,\n    inlineSnapshot,\n    isInline,\n    error,\n    testFailing = false,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 118 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-snapshot/src/dedentLines.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-snapshot/src/index.ts",
        "criticalFunctions": [
          {
            "name": "_toMatchSnapshot",
            "complexity": 18,
            "lineCount": 141,
            "parameterCount": 1,
            "snippet": "(config: MatchSnapshotConfig) => {\n  const {context, hint, inlineSnapshot, isInline, matcherName, properties} =\n    config;\n  let {received} = config;\n  /** If a test was ran with `test.failing`. Passed by Jest Circus. */\n  const {testFailing = false} = context;\n  if (!testFailing && context.dontThrow) {\n    context.dontThrow();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 141 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_toThrowErrorMatchingSnapshot",
            "complexity": 14,
            "lineCount": 75,
            "parameterCount": 2,
            "snippet": "(\n  config: MatchSnapshotConfig,\n  fromPromise?: boolean,\n) => {\n  const {context, hint, inlineSnapshot, isInline, matcherName, received} =\n    config;\n  context.dontThrow?.();\n  const {isNot, promise} = context;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "toMatchInlineSnapshot",
            "complexity": 12,
            "lineCount": 59,
            "parameterCount": 3,
            "snippet": "function (received, propertiesOrSnapshot, inlineSnapshot) {\n  const matcherName = 'toMatchInlineSnapshot';\n  let properties;\n  const length = arguments.length;\n  if (length === 2 && typeof propertiesOrSnapshot === 'string') {\n    inlineSnapshot = propertiesOrSnapshot;\n  } else if (length >= 2) {\n    const options: MatcherHintOptions = {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "toMatchSnapshot",
            "complexity": 9,
            "lineCount": 53,
            "parameterCount": 3,
            "snippet": "function (received, propertiesOrHint, hint) {\n  const matcherName = 'toMatchSnapshot';\n  let properties;\n  const length = arguments.length;\n  if (length === 2 && typeof propertiesOrHint === 'string') {\n    hint = propertiesOrHint;\n  } else if (length >= 2) {\n    if (typeof propertiesOrHint !== 'object' || propertiesOrHint === null) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-snapshot/src/printSnapshot.ts",
        "criticalFunctions": [
          {
            "name": "printSnapshotAndReceived",
            "complexity": 15,
            "lineCount": 98,
            "parameterCount": 5,
            "snippet": "(\n  a: string, // snapshot without extra line breaks\n  b: string, // received serialized but without extra line breaks\n  received: unknown,\n  expand: boolean, // CLI options: true if `--expand` or false if `--no-expand`\n  snapshotFormat?: SnapshotFormat,\n): string => {\n  const aAnnotation = 'Snapshot';\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 98 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-snapshot/src/utils.ts",
        "criticalFunctions": [
          {
            "name": "processInlineSnapshotsWithBabel",
            "complexity": 9,
            "lineCount": 93,
            "parameterCount": 3,
            "snippet": "(\n  snapshots: Array<InlineSnapshot>,\n  sourceFilePath: string,\n  rootDir: string,\n): {\n  snapshotMatcherNames: Array<string>;\n  sourceFile: string;\n  sourceFileWithSnapshots: string;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 93 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "traverseAst",
            "complexity": 3,
            "lineCount": 56,
            "parameterCount": 3,
            "snippet": "(\n  snapshots: Array<InlineSnapshot>,\n  ast: File | Program,\n  snapshotMatcherNames: Array<string>,\n) => {\n  const groupedSnapshots = groupSnapshotsByFrame(snapshots);\n  const remainingSnapshots = new Set(snapshots.map(({snapshot}) => snapshot));\n  traverseFast(ast, (node: Node) => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "processPrettierAst",
            "complexity": 1,
            "lineCount": 65,
            "parameterCount": 4,
            "snippet": "(\n  ast: File,\n  options: Record<string, any> | null,\n  snapshotMatcherNames: Array<string>,\n  keepNode?: boolean,\n): void => {\n  traverse(ast, (node: Node, ancestors: TraversalAncestors) => {\n    if (node.type !== 'CallExpression') return;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-snapshot-utils/src/utils.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-test-result/src/helpers.ts",
        "criticalFunctions": [
          {
            "name": "addResult",
            "complexity": 12,
            "lineCount": 68,
            "parameterCount": 2,
            "snippet": "(\n  aggregatedResults: AggregatedResult,\n  testResult: TestResult,\n): void => {\n  if (!testResult.numTodoTests) {\n    testResult.numTodoTests = 0;\n  }\n  aggregatedResults.testResults.push(testResult);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-test-sequencer/src/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-transform/src/ScriptTransformer.ts",
        "criticalFunctions": [
          {
            "name": "_buildTransformResult",
            "complexity": 19,
            "lineCount": 94,
            "parameterCount": 8,
            "snippet": "private _buildTransformResult(\n    filename: string,\n    cacheFilePath: string,\n    content: string,\n    transformer: Transformer | undefined,\n    shouldCallTransform: boolean,\n    options: ReducedTransformOptions,\n    processed: TransformedSource | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 94 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "transformSource",
            "complexity": 5,
            "lineCount": 55,
            "parameterCount": 3,
            "snippet": "transformSource(\n    filepath: string,\n    content: string,\n    options: ReducedTransformOptions,\n  ): TransformResult {\n    const filename = tryRealpath(filepath);\n    const {transformer, transformerConfig = {}} =\n      this._getTransformer(filename) ?? {};\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              }
            ]
          },
          {
            "name": "transformSourceAsync",
            "complexity": 5,
            "lineCount": 64,
            "parameterCount": 3,
            "snippet": "async transformSourceAsync(\n    filepath: string,\n    content: string,\n    options: ReducedTransformOptions,\n  ): Promise<TransformResult> {\n    const filename = tryRealpath(filepath);\n    const {transformer, transformerConfig = {}} =\n      this._getTransformer(filename) ?? {};\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              }
            ]
          },
          {
            "name": "requireAndTranspileModule",
            "complexity": 3,
            "lineCount": 67,
            "parameterCount": 3,
            "snippet": "async requireAndTranspileModule<ModuleType = unknown>(\n    moduleName: string,\n    callback?: (module: ModuleType) => void | Promise<void>,\n    options?: RequireAndTranspileModuleOptions,\n  ): Promise<ModuleType> {\n    options = {\n      applyInteropRequireDefault: true,\n      instrument: false,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-transform/src/shouldInstrument.ts",
        "criticalFunctions": [
          {
            "name": "shouldInstrument",
            "complexity": 23,
            "lineCount": 92,
            "parameterCount": 4,
            "snippet": "export default function shouldInstrument(\n  filename: string,\n  options: ShouldInstrumentOptions,\n  config: Config.ProjectConfig,\n  loadedFilenames?: Array<string>,\n): boolean {\n  if (!options.collectCoverage) {\n    return false;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 92 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-types/src/Config.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-validate/src/validate.ts",
        "criticalFunctions": [
          {
            "name": "_validate",
            "complexity": 25,
            "lineCount": 72,
            "parameterCount": 4,
            "snippet": "(\n  config: Record<string, any>,\n  exampleConfig: Record<string, any>,\n  options: ValidationOptions,\n  path: Array<string> = [],\n): {hasDeprecationWarnings: boolean} => {\n  if (\n    typeof config !== 'object' ||\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "jest-util/src/createProcessObject.ts",
        "criticalFunctions": [
          {
            "name": "createProcessEnv",
            "complexity": 3,
            "lineCount": 62,
            "parameterCount": 0,
            "snippet": "function createProcessEnv(): NodeJS.ProcessEnv {\n  const real = Object.create(proto);\n  const lookup: typeof process.env = {};\n  function deletePropertyWin32(_target: unknown, key: unknown) {\n    for (const name in real) {\n      if (Object.prototype.hasOwnProperty.call(real, name)) {\n        if (typeof key === 'string') {\n          if (name.toLowerCase() === key.toLowerCase()) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-util/src/deepCyclicCopy.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "jest-util/src/garbage-collection-utils.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-util/src/requireOrImportModule.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-worker/src/Farm.ts",
        "criticalFunctions": [
          {
            "name": "doWork",
            "complexity": 1,
            "lineCount": 67,
            "parameterCount": 2,
            "snippet": "doWork(\n    method: string,\n    ...args: Array<unknown>\n  ): PromiseWithCustomMessage<unknown> {\n    const customMessageListeners = new Set<OnCustomMessage>();\n    const addCustomMessageListener = (listener: OnCustomMessage) => {\n      customMessageListeners.add(listener);\n      return () => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-worker/src/PriorityQueue.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "jest-worker/src/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "pretty-format/__benchmarks__/test.js",
        "criticalFunctions": [
          {
            "name": "test",
            "complexity": 3,
            "lineCount": 72,
            "parameterCount": 4,
            "snippet": "function test(name, value, ignoreResult, prettyFormatOpts) {\n  const formatted = testCase('prettyFormat()  ', () =>\n    prettyFormat(value, prettyFormatOpts),\n  );\n  const inspected = testCase('util.inspect()  ', () =>\n    util.inspect(value, {\n      depth: null,\n      showHidden: true,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "pretty-format/src/collections.ts",
        "criticalFunctions": [
          {
            "name": "printIteratorEntries",
            "complexity": 6,
            "lineCount": 60,
            "parameterCount": 7,
            "snippet": "export function printIteratorEntries(\n  iterator: Iterator<[unknown, unknown]>,\n  config: Config,\n  indentation: string,\n  depth: number,\n  refs: Refs,\n  printer: Printer,\n  separator = ': ',\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 60 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "pretty-format/src/index.ts",
        "criticalFunctions": [
          {
            "name": "printComplexValue",
            "complexity": 24,
            "lineCount": 96,
            "parameterCount": 6,
            "snippet": "function printComplexValue(\n  val: any,\n  config: Config,\n  indentation: string,\n  depth: number,\n  refs: Refs,\n  hasCalledToJSON?: boolean,\n): string {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 96 lines, consider splitting"
              }
            ]
          },
          {
            "name": "printBasicValue",
            "complexity": 22,
            "lineCount": 74,
            "parameterCount": 4,
            "snippet": "function printBasicValue(\n  val: any,\n  printFunctionName: boolean,\n  escapeRegex: boolean,\n  escapeString: boolean,\n): string | null {\n  if (val === true || val === false) {\n    return `${val}`;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "test-globals/src/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "jest-circus/src/__mocks__/testEventHandler.ts",
        "criticalFunctions": [
          {
            "name": "testEventHandler",
            "complexity": 19,
            "lineCount": 53,
            "parameterCount": 2,
            "snippet": "(event, state) => {\n  switch (event.name) {\n    case 'start_describe_definition':\n    case 'finish_describe_definition': {\n      console.log(`${event.name}:`, event.blockName);\n      break;\n    }\n    case 'run_describe_start':\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-circus/src/legacy-code-todo-rewrite/jestAdapter.ts",
        "criticalFunctions": [
          {
            "name": "jestAdapter",
            "complexity": 7,
            "lineCount": 101,
            "parameterCount": 6,
            "snippet": "async (\n  globalConfig: Config.GlobalConfig,\n  config: Config.ProjectConfig,\n  environment: JestEnvironment,\n  runtime: Runtime,\n  testPath: string,\n  sendMessageToJest?: TestFileEvent,\n): Promise<TestResult> => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 101 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-circus/src/legacy-code-todo-rewrite/jestAdapterInit.ts",
        "criticalFunctions": [
          {
            "name": "initialize",
            "complexity": 7,
            "lineCount": 100,
            "parameterCount": 1,
            "snippet": "async ({\n  config,\n  environment,\n  runtime,\n  globalConfig,\n  localRequire,\n  parentProcess,\n  sendMessageToJest,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 100 lines, consider splitting"
              }
            ]
          },
          {
            "name": "runAndTransformResultsToJestFormat",
            "complexity": 3,
            "lineCount": 100,
            "parameterCount": 1,
            "snippet": "async ({\n  config,\n  globalConfig,\n  setupAfterEnvPerfStats,\n  testPath,\n}: {\n  config: Config.ProjectConfig;\n  globalConfig: Config.GlobalConfig;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 100 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-core/src/cli/index.ts",
        "criticalFunctions": [
          {
            "name": "runCLI",
            "complexity": 16,
            "lineCount": 104,
            "parameterCount": 2,
            "snippet": "export async function runCLI(\n  argv: Config.Argv,\n  projects: Array<string>,\n): Promise<{\n  results: AggregatedResult;\n  globalConfig: Config.GlobalConfig;\n}> {\n  performance.mark('jest/runCLI:start');\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 104 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_run10000",
            "complexity": 7,
            "lineCount": 76,
            "parameterCount": 5,
            "snippet": "async (\n  globalConfig: Config.GlobalConfig,\n  configs: Array<Config.ProjectConfig>,\n  hasDeprecationWarnings: boolean,\n  outputStream: WriteStream,\n  onComplete: OnCompleteCallback,\n) => {\n  const changedFilesPromise = getChangedFilesPromise(globalConfig, configs);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 76 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "runWatch",
            "complexity": 3,
            "lineCount": 36,
            "parameterCount": 7,
            "snippet": "async (\n  contexts: Array<TestContext>,\n  _configs: Array<Config.ProjectConfig>,\n  hasDeprecationWarnings: boolean,\n  globalConfig: Config.GlobalConfig,\n  outputStream: WriteStream,\n  hasteMapInstances: Array<IHasteMap>,\n  filter?: Filter,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-core/src/lib/updateGlobalConfig.ts",
        "criticalFunctions": [
          {
            "name": "updateGlobalConfig",
            "complexity": 30,
            "lineCount": 95,
            "parameterCount": 2,
            "snippet": "export default function updateGlobalConfig(\n  globalConfig: Config.GlobalConfig,\n  options: AllowedConfigOptions & ExtraConfigOptions = {},\n): Config.GlobalConfig {\n  const newConfig: Config.GlobalConfig = {...globalConfig};\n  if (options.mode === 'watch') {\n    newConfig.watch = true;\n    newConfig.watchAll = false;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 30 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 95 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-each/src/table/array.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-haste-map/src/crawlers/node.ts",
        "criticalFunctions": [
          {
            "name": "findNative",
            "complexity": 8,
            "lineCount": 61,
            "parameterCount": 5,
            "snippet": "function findNative(\n  roots: Array<string>,\n  extensions: Array<string>,\n  ignore: IgnoreMatcher,\n  enableSymlinks: boolean,\n  callback: Callback,\n): void {\n  const args = [...roots];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "find",
            "complexity": 3,
            "lineCount": 73,
            "parameterCount": 5,
            "snippet": "function find(\n  roots: Array<string>,\n  extensions: Array<string>,\n  ignore: IgnoreMatcher,\n  enableSymlinks: boolean,\n  callback: Callback,\n): void {\n  const result: Result = [];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 73 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "search",
            "complexity": 1,
            "lineCount": 56,
            "parameterCount": 1,
            "snippet": "function search(directory: string): void {\n    activeCalls++;\n    fs.readdir(directory, {withFileTypes: true}, (err, entries) => {\n      activeCalls--;\n      if (err) {\n        if (activeCalls === 0) {\n          callback(result);\n        }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-haste-map/src/crawlers/watchman.ts",
        "criticalFunctions": [
          {
            "name": "watchmanCrawl",
            "complexity": 26,
            "lineCount": 258,
            "parameterCount": 1,
            "snippet": "export async function watchmanCrawl(options: CrawlerOptions): Promise<{\n  changedFiles?: FileData;\n  removedFiles: FileData;\n  hasteMap: InternalHasteMap;\n}> {\n  const fields = ['name', 'exists', 'mtime_ms', 'size'];\n  const {data, extensions, ignore, rootDir, roots} = options;\n  const defaultWatchExpression: Array<any> = ['allof', ['type', 'f']];\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 258 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "queryWatchmanForDirs",
            "complexity": 1,
            "lineCount": 67,
            "parameterCount": 1,
            "snippet": "async function queryWatchmanForDirs(rootProjectDirMappings: WatchmanRoots) {\n    const results = new Map<string, WatchmanQueryResponse>();\n    let isFresh = false;\n    await Promise.all(\n      [...rootProjectDirMappings].map(async ([root, directoryFilters]) => {\n        const expression = [...defaultWatchExpression];\n        const glob = [];\n        if (directoryFilters.length > 0) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-core/src/plugins/TestNamePattern.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-core/src/plugins/TestPathPattern.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-core/src/plugins/UpdateSnapshotsInteractive.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-haste-map/src/watchers/FSEventsWatcher.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-haste-map/src/watchers/WatchmanWatcher.js",
        "criticalFunctions": [
          {
            "name": "onClock",
            "complexity": 7,
            "lineCount": 54,
            "parameterCount": 2,
            "snippet": "function onClock(error, resp) {\n    if (handleError(self, error)) {\n      return;\n    }\n    handleWarning(resp);\n    const options = {\n      fields: ['name', 'exists', 'new'],\n      since: resp.clock,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-jasmine2/src/jasmine/Env.ts",
        "criticalFunctions": [
          {
            "name": "jasmineEnv",
            "complexity": 1,
            "lineCount": 661,
            "parameterCount": 1,
            "snippet": "export default function jasmineEnv(j$: Jasmine) {\n  return class Env {\n    specFilter: (spec: Spec) => boolean;\n    catchExceptions: (value: unknown) => boolean;\n    throwOnExpectationFailure: (value: unknown) => void;\n    catchingExceptions: () => boolean;\n    topSuite: () => Suite;\n    fail: (error: Error | AssertionErrorWithStack) => void;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 661 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "jest-jasmine2/src/jasmine/Spec.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-jasmine2/src/jasmine/Suite.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-watcher/src/lib/Prompt.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "pretty-format/src/plugins/AsymmetricMatcher.ts",
        "criticalFunctions": [
          {
            "name": "serialize",
            "complexity": 16,
            "lineCount": 87,
            "parameterCount": 6,
            "snippet": "(\n  val: any,\n  config: Config,\n  indentation: string,\n  depth: number,\n  refs: Refs,\n  printer: Printer,\n) => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "pretty-format/src/plugins/DOMElement.ts",
        "criticalFunctions": [
          {
            "name": "serialize",
            "complexity": 8,
            "lineCount": 57,
            "parameterCount": 6,
            "snippet": "(\n  node: HandledType,\n  config: Config,\n  indentation: string,\n  depth: number,\n  refs: Refs,\n  printer: Printer,\n) => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "pretty-format/src/plugins/Immutable.ts",
        "criticalFunctions": [
          {
            "name": "serialize",
            "complexity": 8,
            "lineCount": 61,
            "parameterCount": 6,
            "snippet": "(\n  val: any,\n  config: Config,\n  indentation: string,\n  depth: number,\n  refs: Refs,\n  printer: Printer,\n) => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              }
            ]
          },
          {
            "name": "printImmutableEntries",
            "complexity": 2,
            "lineCount": 19,
            "parameterCount": 7,
            "snippet": "(\n  val: any,\n  config: Config,\n  indentation: string,\n  depth: number,\n  refs: Refs,\n  printer: Printer,\n  type: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "printImmutableValues",
            "complexity": 2,
            "lineCount": 19,
            "parameterCount": 7,
            "snippet": "(\n  val: any,\n  config: Config,\n  indentation: string,\n  depth: number,\n  refs: Refs,\n  printer: Printer,\n  type: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "long-function"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "pretty-format/src/plugins/ReactElement.ts",
        "criticalFunctions": [
          {
            "name": "getType",
            "complexity": 21,
            "lineCount": 43,
            "parameterCount": 1,
            "snippet": "(element: any) => {\n  const type = element.type;\n  if (typeof type === 'string') {\n    return type;\n  }\n  if (typeof type === 'function') {\n    return type.displayName || type.name || 'Unknown';\n  }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-worker/src/base/BaseWorkerPool.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-worker/src/workers/ChildProcessWorker.ts",
        "criticalFunctions": [
          {
            "name": "initialize",
            "complexity": 14,
            "lineCount": 106,
            "parameterCount": 0,
            "snippet": "initialize(): void {\n    if (\n      this.state === WorkerStates.OUT_OF_MEMORY ||\n      this.state === WorkerStates.SHUTTING_DOWN ||\n      this.state === WorkerStates.SHUT_DOWN\n    ) {\n      return;\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 106 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_onMessage",
            "complexity": 13,
            "lineCount": 64,
            "parameterCount": 1,
            "snippet": "private _onMessage(response: ParentMessage) {\n    if (!Array.isArray(response)) return;\n    let error: any;\n    switch (response[0]) {\n      case PARENT_MESSAGE_OK:\n        this._onProcessEnd(null, unpackMessage(response[1]));\n        break;\n      case PARENT_MESSAGE_CLIENT_ERROR:\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_onExit",
            "complexity": 12,
            "lineCount": 72,
            "parameterCount": 2,
            "snippet": "private _onExit(exitCode: number | null, signal: NodeJS.Signals | null) {\n    this._workerReadyPromise = undefined;\n    this._resolveWorkerReady = undefined;\n    this._detectOutOfMemoryCrash();\n    if (exitCode !== 0 && this.state === WorkerStates.OUT_OF_MEMORY) {\n      this._onProcessEnd(\n        new Error('Jest worker ran out of memory and crashed'),\n        null,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-worker/src/workers/NodeThreadsWorker.ts",
        "criticalFunctions": [
          {
            "name": "_onMessage",
            "complexity": 13,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "private _onMessage(response: ParentMessage) {\n    if (!Array.isArray(response)) return;\n    let error;\n    switch (response[0]) {\n      case PARENT_MESSAGE_OK:\n        this._onProcessEnd(null, unpackMessage(response[1]));\n        break;\n      case PARENT_MESSAGE_CLIENT_ERROR:\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "initialize",
            "complexity": 12,
            "lineCount": 87,
            "parameterCount": 0,
            "snippet": "initialize(): void {\n    if (\n      this.state === WorkerStates.OUT_OF_MEMORY ||\n      this.state === WorkerStates.SHUTTING_DOWN ||\n      this.state === WorkerStates.SHUT_DOWN\n    ) {\n      return;\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-worker/src/workers/processChild.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "jest-worker/src/workers/threadChild.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      }
    ]
  },
  "durationMs": 69698
}