{
  "project": "angular",
  "repo": "https://github.com/angular/angular.git",
  "type": "UI framework",
  "stars": "98k",
  "stableVersion": "19.2.14",
  "description": "Platform for building mobile and desktop web apps",
  "category": "large",
  "emblematicFiles": {
    "coreFiles": [
      "packages/core/src/application/application_ref.ts",
      "packages/core/src/render3/component.ts",
      "packages/core/src/di/injector.ts"
    ],
    "architecturalFiles": [
      "packages/core/src/change_detection/change_detection.ts",
      "packages/core/src/render3/view_engine_compatibility.ts",
      "packages/router/src/router.ts"
    ],
    "performanceCriticalFiles": [
      "packages/core/src/render3/instructions/shared.ts",
      "packages/core/src/change_detection/differs/default_iterable_differ.ts",
      "packages/platform-browser/src/dom/dom_renderer.ts"
    ],
    "complexAlgorithmFiles": [
      "packages/core/src/render3/node_manipulation.ts",
      "packages/common/src/i18n/locale_data_api.ts"
    ]
  },
  "analysis": {
    "context": {
      "project": {
        "name": "angular-srcs",
        "path": ".",
        "version": "19.2.14"
      },
      "analysis": {
        "timestamp": "2025-07-11T18:26:24.365Z",
        "durationMs": 15135,
        "toolVersion": "0.6.0",
        "filesAnalyzed": 1744
      }
    },
    "overview": {
      "grade": "C",
      "statistics": {
        "totalFiles": 1744,
        "totalLOC": 194048,
        "avgComplexity": 15,
        "avgLOC": 111,
        "avgDuplicationRatio": 0.1
      },
      "scores": {
        "complexity": 64,
        "duplication": 86,
        "maintainability": 69,
        "overall": 71
      },
      "summary": "668 critical files found requiring attention"
    },
    "details": [
      {
        "file": "packages/circular-deps-test.conf.js",
        "metrics": {
          "complexity": 2,
          "loc": 13,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/empty.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0.5
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 31
      },
      {
        "file": "packages/goog.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/system.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0.5
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 31
      },
      {
        "file": "packages/types.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/animations/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/animations/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/benchpress/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 24,
          "functionCount": 0,
          "duplicationRatio": 0.17
        },
        "dependencies": {
          "outgoingDependencies": 22,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.45,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 92
      },
      {
        "file": "packages/common/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 9,
          "instability": 0.1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/esbuild.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0.27
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.82
          }
        ],
        "healthScore": 76
      },
      {
        "file": "packages/compiler-cli/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 18,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 12,
          "incomingDependencies": 2,
          "instability": 0.86,
          "cohesionScore": 0.39,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/compiler.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/forms/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/forms/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/elements/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/elements/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0.21
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.43
          }
        ],
        "healthScore": 84
      },
      {
        "file": "packages/language-service/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 42,
          "functionCount": 1,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 11,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 94,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/language-service/index.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/language-service/index.js",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/language-service/override_rename_ts_plugin.ts",
        "metrics": {
          "complexity": 5,
          "loc": 39,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/language-service/plugin-factory.ts",
        "metrics": {
          "complexity": 1,
          "loc": 21,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/localize/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0.85
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.7
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/localize/private.ts",
        "metrics": {
          "complexity": 1,
          "loc": 23,
          "functionCount": 0,
          "duplicationRatio": 0.09
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.4,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 5,
          "instability": 0.17,
          "cohesionScore": 0.67,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-browser/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-browser-dynamic/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-browser-dynamic/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0.83
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-server/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-server/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/router/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.67,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/router/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/service-worker/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/service-worker/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/service-worker/safety-worker.js",
        "metrics": {
          "complexity": 1,
          "loc": 17,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/upgrade/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/upgrade/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0.4
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.33,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 56
      },
      {
        "file": "packages/animations/browser/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/animations/browser/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/check-file-size.js",
        "metrics": {
          "complexity": 4,
          "loc": 21,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/karma-base.conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 35,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/karma-build-jasmine.conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/karma-build-jasmine.es2015.conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/karma-build-mocha.conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/karma-build-sauce-mocha.conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 1
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/karma-build-sauce-selenium3-mocha.conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 1
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/karma-build.conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 1,
          "duplicationRatio": 0.88
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.75
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/karma-dist-jasmine.conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/karma-dist-mocha.conf.js",
        "metrics": {
          "complexity": 3,
          "loc": 20,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/karma-dist-sauce-jasmine.conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0.33
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/zone.js/karma-dist-sauce-jasmine.es2015.conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 1,
          "duplicationRatio": 0.67
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/karma-dist-sauce-jasmine3.conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 17,
          "functionCount": 1,
          "duplicationRatio": 0.18
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.21
          }
        ],
        "healthScore": 89
      },
      {
        "file": "packages/zone.js/karma-dist-sauce-selenium3-jasmine.conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 1
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/karma-dist.conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 18,
          "functionCount": 1,
          "duplicationRatio": 0.9
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.8
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/karma-evergreen-dist-jasmine.conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/karma-evergreen-dist-sauce-jasmine.conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 1
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/karma-evergreen-dist.conf.js",
        "metrics": {
          "complexity": 1,
          "loc": 19,
          "functionCount": 1,
          "duplicationRatio": 0.59
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.18
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/rollup.config.js",
        "metrics": {
          "complexity": 6,
          "loc": 65,
          "functionCount": 3,
          "duplicationRatio": 0.15
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/sauce-evergreen.conf.js",
        "metrics": {
          "complexity": 4,
          "loc": 56,
          "functionCount": 3,
          "duplicationRatio": 0.86
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.73
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/sauce-selenium3.conf.js",
        "metrics": {
          "complexity": 2,
          "loc": 44,
          "functionCount": 1,
          "duplicationRatio": 0.67
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/sauce.conf.js",
        "metrics": {
          "complexity": 4,
          "loc": 85,
          "functionCount": 3,
          "duplicationRatio": 0.46
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.53
          }
        ],
        "healthScore": 43
      },
      {
        "file": "packages/zone.js/sauce.es2015.conf.js",
        "metrics": {
          "complexity": 4,
          "loc": 47,
          "functionCount": 3,
          "duplicationRatio": 0.86
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.71
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/simple-server.js",
        "metrics": {
          "complexity": 4,
          "loc": 32,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/zone.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/http/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 5,
          "instability": 0.17,
          "cohesionScore": 0.75,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/http/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 58,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 18,
          "incomingDependencies": 1,
          "instability": 0.95,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/common_options.ts",
        "metrics": {
          "complexity": 2,
          "loc": 46,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 9,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/measure_values.ts",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 12,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/metric.ts",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 3,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/reporter.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 2,
          "duplicationRatio": 0.1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 6,
          "instability": 0.14,
          "cohesionScore": 0.75,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/runner.ts",
        "metrics": {
          "complexity": 5,
          "loc": 98,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 18,
          "incomingDependencies": 1,
          "instability": 0.95,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/sample_description.ts",
        "metrics": {
          "complexity": 1,
          "loc": 18,
          "functionCount": 4,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 6,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/sample_description_providers.ts",
        "metrics": {
          "complexity": 1,
          "loc": 32,
          "functionCount": 1,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/sampler.ts",
        "metrics": {
          "complexity": 7,
          "loc": 83,
          "functionCount": 13,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 2,
          "instability": 0.75,
          "cohesionScore": 0.75,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/statistic.ts",
        "metrics": {
          "complexity": 2,
          "loc": 31,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/validator.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 2,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 6,
          "instability": 0.14,
          "cohesionScore": 0.75,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/web_driver_adapter.ts",
        "metrics": {
          "complexity": 1,
          "loc": 17,
          "functionCount": 5,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 8,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/web_driver_extension.ts",
        "metrics": {
          "complexity": 3,
          "loc": 83,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 6,
          "instability": 0.14,
          "cohesionScore": 0.75,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/locales/closure-locale.ts",
        "metrics": {
          "complexity": 591,
          "loc": 1453,
          "functionCount": 101,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.4,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 29.55
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.45
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/locales/ff-CM.ts",
        "metrics": {
          "complexity": 3,
          "loc": 49,
          "functionCount": 1,
          "duplicationRatio": 0.98
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.95
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/locales/ff-GN.ts",
        "metrics": {
          "complexity": 3,
          "loc": 49,
          "functionCount": 1,
          "duplicationRatio": 0.98
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.95
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/locales/ff-MR.ts",
        "metrics": {
          "complexity": 3,
          "loc": 49,
          "functionCount": 1,
          "duplicationRatio": 0.98
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.95
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/animations/src/animation_builder.ts",
        "metrics": {
          "complexity": 10,
          "loc": 149,
          "functionCount": 26,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.7,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/src/animation_event.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/src/animation_metadata.ts",
        "metrics": {
          "complexity": 1,
          "loc": 180,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/src/animations.ts",
        "metrics": {
          "complexity": 1,
          "loc": 41,
          "functionCount": 0,
          "duplicationRatio": 0.23
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 21,
          "instability": 0.19,
          "cohesionScore": 0.72,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.54
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/animations/src/errors.ts",
        "metrics": {
          "complexity": 1,
          "loc": 39,
          "functionCount": 0,
          "duplicationRatio": 0.79
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.57
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/animations/src/private_export.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.7,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/src/version.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0.83
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/src/common.ts",
        "metrics": {
          "complexity": 1,
          "loc": 100,
          "functionCount": 0,
          "duplicationRatio": 0.12
        },
        "dependencies": {
          "outgoingDependencies": 18,
          "incomingDependencies": 1,
          "instability": 0.95,
          "cohesionScore": 0.66,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/common_module.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/cookie.ts",
        "metrics": {
          "complexity": 4,
          "loc": 12,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/dom_adapter.ts",
        "metrics": {
          "complexity": 1,
          "loc": 23,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/dom_tokens.ts",
        "metrics": {
          "complexity": 2,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0.17
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 92
      },
      {
        "file": "packages/common/src/errors.ts",
        "metrics": {
          "complexity": 1,
          "loc": 24,
          "functionCount": 0,
          "duplicationRatio": 0.71
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 11,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 94,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.41
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/src/platform_id.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 2,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/private_export.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.68,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/version.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0.71
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.43
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/src/viewport_scroller.ts",
        "metrics": {
          "complexity": 14,
          "loc": 89,
          "functionCount": 21,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/common/src/xhr.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 1,
          "duplicationRatio": 0.17
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 92
      },
      {
        "file": "packages/common/testing/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/testing/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/upgrade/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/upgrade/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/ngcc/index.ts",
        "metrics": {
          "complexity": 5,
          "loc": 41,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 5,
          "instability": 0.62,
          "cohesionScore": 0.51,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/private/babel.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0.57
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.14
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/private/bazel.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0.5
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.33,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 31
      },
      {
        "file": "packages/compiler-cli/private/localize.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0.5
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.33,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 31
      },
      {
        "file": "packages/compiler-cli/private/migrations.ts",
        "metrics": {
          "complexity": 1,
          "loc": 18,
          "functionCount": 0,
          "duplicationRatio": 0.13
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.33,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/private/tooling.ts",
        "metrics": {
          "complexity": 1,
          "loc": 16,
          "functionCount": 1,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.29,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/extract_i18n.ts",
        "metrics": {
          "complexity": 4,
          "loc": 28,
          "functionCount": 2,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.7,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/main.ts",
        "metrics": {
          "complexity": 24,
          "loc": 209,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.7,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.04
          }
        ],
        "healthScore": 42
      },
      {
        "file": "packages/compiler-cli/src/perform_compile.ts",
        "metrics": {
          "complexity": 33,
          "loc": 296,
          "functionCount": 23,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 4,
          "instability": 0.6,
          "cohesionScore": 0.54,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.48
          }
        ],
        "healthScore": 30
      },
      {
        "file": "packages/compiler-cli/src/perform_watch.ts",
        "metrics": {
          "complexity": 35,
          "loc": 282,
          "functionCount": 25,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.64,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.41
          }
        ],
        "healthScore": 29
      },
      {
        "file": "packages/compiler-cli/src/typescript_support.ts",
        "metrics": {
          "complexity": 3,
          "loc": 21,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/version.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0.83
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/version_helpers.ts",
        "metrics": {
          "complexity": 13,
          "loc": 44,
          "functionCount": 5,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/core/global/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.4,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/assertions.ts",
        "metrics": {
          "complexity": 7,
          "loc": 21,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/chars.ts",
        "metrics": {
          "complexity": 15,
          "loc": 82,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/compiler/src/compiler.ts",
        "metrics": {
          "complexity": 1,
          "loc": 216,
          "functionCount": 0,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 57,
          "incomingDependencies": 1,
          "instability": 0.98,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.08
          }
        ],
        "healthScore": 93
      },
      {
        "file": "packages/compiler/src/compiler_facade_interface.ts",
        "metrics": {
          "complexity": 1,
          "loc": 337,
          "functionCount": 0,
          "duplicationRatio": 0.95
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.12
          },
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.9
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/config.ts",
        "metrics": {
          "complexity": 2,
          "loc": 26,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/constant_pool.ts",
        "metrics": {
          "complexity": 44,
          "loc": 239,
          "functionCount": 26,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 9,
          "instability": 0.1,
          "cohesionScore": 0.6,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.2
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 15
      },
      {
        "file": "packages/compiler/src/core.ts",
        "metrics": {
          "complexity": 14,
          "loc": 126,
          "functionCount": 5,
          "duplicationRatio": 0.41
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 27,
          "instability": 0.04,
          "cohesionScore": 0.75,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.38
          }
        ],
        "healthScore": 35
      },
      {
        "file": "packages/compiler/src/injectable_compiler_2.ts",
        "metrics": {
          "complexity": 13,
          "loc": 141,
          "functionCount": 4,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 3,
          "instability": 0.67,
          "cohesionScore": 0.61,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/compiler/src/jit_compiler_facade.ts",
        "metrics": {
          "complexity": 85,
          "loc": 909,
          "functionCount": 69,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 24,
          "incomingDependencies": 1,
          "instability": 0.96,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 3.03
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/parse_util.ts",
        "metrics": {
          "complexity": 26,
          "loc": 163,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 35,
          "instability": 0.05,
          "cohesionScore": 0.75,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/compiler/src/resource_loader.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/selector.ts",
        "metrics": {
          "complexity": 79,
          "loc": 361,
          "functionCount": 24,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.95
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/shadow_css.ts",
        "metrics": {
          "complexity": 71,
          "loc": 705,
          "functionCount": 72,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.55
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.35
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/style_url_resolver.ts",
        "metrics": {
          "complexity": 6,
          "loc": 6,
          "functionCount": 1,
          "duplicationRatio": 0.14
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/util.ts",
        "metrics": {
          "complexity": 26,
          "loc": 128,
          "functionCount": 16,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 12,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/compiler/src/version.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0.83
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/rollup.config.js",
        "metrics": {
          "complexity": 3,
          "loc": 44,
          "functionCount": 1,
          "duplicationRatio": 0.09
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/rxjs-interop/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.6,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/rxjs-interop/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.6,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/elements/src/component-factory-strategy.ts",
        "metrics": {
          "complexity": 14,
          "loc": 141,
          "functionCount": 22,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/elements/src/create-custom-element.ts",
        "metrics": {
          "complexity": 9,
          "loc": 108,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/elements/src/element-strategy.ts",
        "metrics": {
          "complexity": 1,
          "loc": 16,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/elements/src/extract-projectable-nodes.ts",
        "metrics": {
          "complexity": 7,
          "loc": 34,
          "functionCount": 5,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/elements/src/utils.ts",
        "metrics": {
          "complexity": 11,
          "loc": 60,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/elements/src/version.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/language-service/bundles/rollup.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 35,
          "functionCount": 0,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/testing/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/testing/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0.67
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/forms/src/directives.ts",
        "metrics": {
          "complexity": 1,
          "loc": 96,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 20,
          "incomingDependencies": 2,
          "instability": 0.91,
          "cohesionScore": 0.58,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/errors.ts",
        "metrics": {
          "complexity": 1,
          "loc": 19,
          "functionCount": 0,
          "duplicationRatio": 0.62
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 8,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.24
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/forms/src/form_builder.ts",
        "metrics": {
          "complexity": 13,
          "loc": 234,
          "functionCount": 26,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.17
          }
        ],
        "healthScore": 77
      },
      {
        "file": "packages/forms/src/form_providers.ts",
        "metrics": {
          "complexity": 1,
          "loc": 55,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.68,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/forms.ts",
        "metrics": {
          "complexity": 1,
          "loc": 100,
          "functionCount": 0,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 33,
          "incomingDependencies": 1,
          "instability": 0.97,
          "cohesionScore": 0.61,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/util.ts",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/validators.ts",
        "metrics": {
          "complexity": 51,
          "loc": 265,
          "functionCount": 54,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 12,
          "instability": 0.2,
          "cohesionScore": 0.65,
          "percentileUsageRank": 95,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.55
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.32
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/forms/src/version.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0.57
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.14
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/language-service/src/adapters.ts",
        "metrics": {
          "complexity": 12,
          "loc": 141,
          "functionCount": 24,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/language-service/src/attribute_completions.ts",
        "metrics": {
          "complexity": 73,
          "loc": 431,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.65
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.44
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/language-service/src/compiler_factory.ts",
        "metrics": {
          "complexity": 6,
          "loc": 60,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/language-service/src/completions.ts",
        "metrics": {
          "complexity": 190,
          "loc": 1090,
          "functionCount": 42,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 9.5
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.09
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/language-service/src/definitions.ts",
        "metrics": {
          "complexity": 77,
          "loc": 385,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.85
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.28
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/language-service/src/language_service.ts",
        "metrics": {
          "complexity": 65,
          "loc": 675,
          "functionCount": 71,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 13,
          "incomingDependencies": 3,
          "instability": 0.81,
          "cohesionScore": 0.71,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.25
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/language-service/src/outlining_spans.ts",
        "metrics": {
          "complexity": 14,
          "loc": 77,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/language-service/src/quick_info.ts",
        "metrics": {
          "complexity": 44,
          "loc": 251,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.2
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 15
      },
      {
        "file": "packages/language-service/src/quick_info_built_ins.ts",
        "metrics": {
          "complexity": 23,
          "loc": 213,
          "functionCount": 5,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.06
          }
        ],
        "healthScore": 43
      },
      {
        "file": "packages/language-service/src/references_and_rename.ts",
        "metrics": {
          "complexity": 53,
          "loc": 382,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.65
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/language-service/src/references_and_rename_utils.ts",
        "metrics": {
          "complexity": 57,
          "loc": 287,
          "functionCount": 8,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.75,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.85
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.44
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/language-service/src/signature_help.ts",
        "metrics": {
          "complexity": 19,
          "loc": 83,
          "functionCount": 1,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 61
      },
      {
        "file": "packages/language-service/src/template_target.ts",
        "metrics": {
          "complexity": 62,
          "loc": 453,
          "functionCount": 45,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 9,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.1
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.51
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/language-service/src/ts_plugin.ts",
        "metrics": {
          "complexity": 34,
          "loc": 322,
          "functionCount": 27,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.63,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 21
      },
      {
        "file": "packages/core/src/authoring.ts",
        "metrics": {
          "complexity": 1,
          "loc": 19,
          "functionCount": 0,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 1,
          "instability": 0.9,
          "cohesionScore": 0.51,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/cached_injector_service.ts",
        "metrics": {
          "complexity": 5,
          "loc": 39,
          "functionCount": 3,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/change_detection.ts",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 0,
          "duplicationRatio": 0.33
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.6,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/core/src/console.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.75,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/core.externs.js",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0.5
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 31
      },
      {
        "file": "packages/core/src/core.ts",
        "metrics": {
          "complexity": 3,
          "loc": 113,
          "functionCount": 1,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 48,
          "incomingDependencies": 2,
          "instability": 0.96,
          "cohesionScore": 0.63,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/core_private_export.ts",
        "metrics": {
          "complexity": 1,
          "loc": 164,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 58,
          "incomingDependencies": 1,
          "instability": 0.98,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/core_reactivity_export.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/core_reactivity_export_internal.ts",
        "metrics": {
          "complexity": 1,
          "loc": 25,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 1,
          "instability": 0.92,
          "cohesionScore": 0.49,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/core_render3_private_export.ts",
        "metrics": {
          "complexity": 1,
          "loc": 303,
          "functionCount": 0,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 30,
          "incomingDependencies": 1,
          "instability": 0.97,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.01
          }
        ],
        "healthScore": 81
      },
      {
        "file": "packages/core/src/di.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 42,
          "instability": 0.02,
          "cohesionScore": 0.6,
          "percentileUsageRank": 99,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/error_details_base_url.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0.2
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 87
      },
      {
        "file": "packages/core/src/error_handler.ts",
        "metrics": {
          "complexity": 3,
          "loc": 19,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 10,
          "instability": 0.17,
          "cohesionScore": 0.75,
          "percentileUsageRank": 93,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/errors.ts",
        "metrics": {
          "complexity": 5,
          "loc": 104,
          "functionCount": 3,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 52,
          "instability": 0.02,
          "cohesionScore": 0.75,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/event_delegation_utils.ts",
        "metrics": {
          "complexity": 15,
          "loc": 123,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 6,
          "instability": 0.45,
          "cohesionScore": 0.55,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/core/src/event_emitter.ts",
        "metrics": {
          "complexity": 10,
          "loc": 83,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 3,
          "instability": 0.67,
          "cohesionScore": 0.58,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/image_performance_warning.ts",
        "metrics": {
          "complexity": 31,
          "loc": 151,
          "functionCount": 13,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          }
        ],
        "healthScore": 45
      },
      {
        "file": "packages/core/src/linker.ts",
        "metrics": {
          "complexity": 1,
          "loc": 17,
          "functionCount": 0,
          "duplicationRatio": 0.09
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 2,
          "instability": 0.85,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/metadata.ts",
        "metrics": {
          "complexity": 1,
          "loc": 42,
          "functionCount": 0,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 3,
          "instability": 0.73,
          "cohesionScore": 0.6,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/pending_tasks.ts",
        "metrics": {
          "complexity": 6,
          "loc": 71,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 9,
          "instability": 0.31,
          "cohesionScore": 0.55,
          "percentileUsageRank": 91,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/profiler.ts",
        "metrics": {
          "complexity": 7,
          "loc": 42,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/r3_symbols.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 1,
          "instability": 0.89,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/transfer_state.ts",
        "metrics": {
          "complexity": 9,
          "loc": 71,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 4,
          "instability": 0.5,
          "cohesionScore": 0.55,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/version.ts",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 1,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/zone.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 9,
          "instability": 0.1,
          "cohesionScore": 0.6,
          "percentileUsageRank": 91,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/language-service/testing/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.6,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/localize/init/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/misc/angular-in-memory-web-api/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/misc/angular-in-memory-web-api/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/animations/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-browser/animations/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/localize/src/translate.ts",
        "metrics": {
          "complexity": 4,
          "loc": 35,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/testing/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-browser/testing/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-browser-dynamic/src/compiler_factory.ts",
        "metrics": {
          "complexity": 4,
          "loc": 61,
          "functionCount": 11,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser-dynamic/src/platform-browser-dynamic.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser-dynamic/src/platform_providers.ts",
        "metrics": {
          "complexity": 1,
          "loc": 25,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.68,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser-dynamic/src/private_export.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser-dynamic/src/version.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0.57
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.14
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/private/testing/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.6,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-browser/src/browser.ts",
        "metrics": {
          "complexity": 8,
          "loc": 138,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 1,
          "instability": 0.9,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/src/errors.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0.61
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.22
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-browser/src/hydration.ts",
        "metrics": {
          "complexity": 13,
          "loc": 110,
          "functionCount": 9,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/platform-browser/src/platform-browser.externs.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0.5
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 31
      },
      {
        "file": "packages/platform-browser/src/platform-browser.ts",
        "metrics": {
          "complexity": 1,
          "loc": 42,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 1,
          "instability": 0.92,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/src/private_export.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 1,
          "instability": 0.9,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/src/version.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0.57
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.14
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-browser-dynamic/testing/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-browser-dynamic/testing/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-server/init/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0.5
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.6,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 31
      },
      {
        "file": "packages/platform-server/testing/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-server/testing/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-server/src/bundled-domino.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-server/src/domino_adapter.ts",
        "metrics": {
          "complexity": 11,
          "loc": 74,
          "functionCount": 13,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/platform-server/src/http.ts",
        "metrics": {
          "complexity": 6,
          "loc": 52,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-server/src/location.ts",
        "metrics": {
          "complexity": 5,
          "loc": 109,
          "functionCount": 15,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-server/src/platform-server.ts",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-server/src/platform_state.ts",
        "metrics": {
          "complexity": 5,
          "loc": 35,
          "functionCount": 4,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.75,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-server/src/private_export.ts",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-server/src/provide_server.ts",
        "metrics": {
          "complexity": 2,
          "loc": 8,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-server/src/server.ts",
        "metrics": {
          "complexity": 8,
          "loc": 108,
          "functionCount": 5,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 4,
          "instability": 0.64,
          "cohesionScore": 0.75,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-server/src/server_events.ts",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 3,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-server/src/tokens.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-server/src/transfer_state.ts",
        "metrics": {
          "complexity": 8,
          "loc": 78,
          "functionCount": 5,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.75,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-server/src/types.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0.25
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/platform-server/src/utils.ts",
        "metrics": {
          "complexity": 15,
          "loc": 195,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/platform-server/src/version.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0.57
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.14
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/router/src/apply_redirects.ts",
        "metrics": {
          "complexity": 21,
          "loc": 170,
          "functionCount": 19,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/router/src/create_router_state.ts",
        "metrics": {
          "complexity": 8,
          "loc": 68,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/router/src/create_url_tree.ts",
        "metrics": {
          "complexity": 93,
          "loc": 364,
          "functionCount": 33,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 3,
          "instability": 0.57,
          "cohesionScore": 0.75,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.65
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.21
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/router/src/errors.ts",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 0,
          "duplicationRatio": 0.85
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 8,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.69
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/router/src/events.ts",
        "metrics": {
          "complexity": 33,
          "loc": 318,
          "functionCount": 36,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 13,
          "instability": 0.19,
          "cohesionScore": 0.75,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.06
          }
        ],
        "healthScore": 22
      },
      {
        "file": "packages/router/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 138,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 24,
          "incomingDependencies": 1,
          "instability": 0.96,
          "cohesionScore": 0.73,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/router/src/models.ts",
        "metrics": {
          "complexity": 1,
          "loc": 152,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 23,
          "instability": 0.08,
          "cohesionScore": 0.75,
          "percentileUsageRank": 98,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/router/src/models_deprecated.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0.67
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/router/src/navigation_canceling_error.ts",
        "metrics": {
          "complexity": 6,
          "loc": 48,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 4,
          "instability": 0.43,
          "cohesionScore": 0.75,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/router/src/navigation_transition.ts",
        "metrics": {
          "complexity": 45,
          "loc": 622,
          "functionCount": 45,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 19,
          "incomingDependencies": 11,
          "instability": 0.63,
          "cohesionScore": 0.7,
          "percentileUsageRank": 94,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.07
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/router/src/page_title_strategy.ts",
        "metrics": {
          "complexity": 3,
          "loc": 32,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/router/src/private_export.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/router/src/provide_router.ts",
        "metrics": {
          "complexity": 18,
          "loc": 296,
          "functionCount": 32,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 2,
          "instability": 0.85,
          "cohesionScore": 0.74,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.48
          }
        ],
        "healthScore": 52
      },
      {
        "file": "packages/router/src/recognize.ts",
        "metrics": {
          "complexity": 51,
          "loc": 494,
          "functionCount": 42,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 1,
          "instability": 0.9,
          "cohesionScore": 0.73,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.55
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.65
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/router/src/route_reuse_strategy.ts",
        "metrics": {
          "complexity": 1,
          "loc": 35,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 5,
          "instability": 0.29,
          "cohesionScore": 0.75,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/router/src/router.ts",
        "metrics": {
          "complexity": 47,
          "loc": 362,
          "functionCount": 37,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 14,
          "incomingDependencies": 6,
          "instability": 0.7,
          "cohesionScore": 0.72,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.35
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.21
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/router/src/router_config.ts",
        "metrics": {
          "complexity": 3,
          "loc": 32,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 6,
          "instability": 0.14,
          "cohesionScore": 0.75,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/router/src/router_config_loader.ts",
        "metrics": {
          "complexity": 20,
          "loc": 124,
          "functionCount": 12,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 9,
          "instability": 0.18,
          "cohesionScore": 0.68,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 58
      },
      {
        "file": "packages/router/src/router_devtools.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/router/src/router_module.ts",
        "metrics": {
          "complexity": 25,
          "loc": 162,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 15,
          "incomingDependencies": 2,
          "instability": 0.88,
          "cohesionScore": 0.71,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/router/src/router_outlet_context.ts",
        "metrics": {
          "complexity": 4,
          "loc": 52,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 6,
          "instability": 0.25,
          "cohesionScore": 0.68,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/router/src/router_preloader.ts",
        "metrics": {
          "complexity": 17,
          "loc": 98,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/router/src/router_scroller.ts",
        "metrics": {
          "complexity": 15,
          "loc": 101,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.75,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/router/src/router_state.ts",
        "metrics": {
          "complexity": 22,
          "loc": 274,
          "functionCount": 37,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 19,
          "instability": 0.14,
          "cohesionScore": 0.75,
          "percentileUsageRank": 97,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.37
          }
        ],
        "healthScore": 39
      },
      {
        "file": "packages/router/src/shared.ts",
        "metrics": {
          "complexity": 13,
          "loc": 70,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 13,
          "instability": 0.13,
          "cohesionScore": 0.75,
          "percentileUsageRank": 95,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/router/src/url_handling_strategy.ts",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.75,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/router/src/url_tree.ts",
        "metrics": {
          "complexity": 98,
          "loc": 502,
          "functionCount": 72,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 22,
          "instability": 0.08,
          "cohesionScore": 0.75,
          "percentileUsageRank": 98,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/router/src/version.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0.57
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.14
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/router/testing/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/router/testing/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/router/upgrade/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/router/upgrade/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/service-worker/cli/esbuild.config.js",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0.27
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.82
          }
        ],
        "healthScore": 76
      },
      {
        "file": "packages/service-worker/cli/filesystem.ts",
        "metrics": {
          "complexity": 1,
          "loc": 40,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/cli/main.ts",
        "metrics": {
          "complexity": 2,
          "loc": 15,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.63,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/cli/sha1.ts",
        "metrics": {
          "complexity": 25,
          "loc": 160,
          "functionCount": 21,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          },
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/service-worker/config/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.75,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/service-worker/config/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/testing/mock.ts",
        "metrics": {
          "complexity": 7,
          "loc": 80,
          "functionCount": 19,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/src/errors.ts",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0.9
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.8
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/service-worker/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/src/low_level.ts",
        "metrics": {
          "complexity": 9,
          "loc": 168,
          "functionCount": 23,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.75,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/src/module.ts",
        "metrics": {
          "complexity": 1,
          "loc": 16,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/src/provider.ts",
        "metrics": {
          "complexity": 21,
          "loc": 115,
          "functionCount": 13,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/service-worker/src/push.ts",
        "metrics": {
          "complexity": 12,
          "loc": 100,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.75,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/service-worker/src/update.ts",
        "metrics": {
          "complexity": 6,
          "loc": 50,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.75,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/worker/main.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.6,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/upgrade/static/common.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0.13
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 4,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/upgrade/static/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.75,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/upgrade/static/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 1,
          "instability": 0.89,
          "cohesionScore": 0.49,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/src/browser.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0.67
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.73,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/animations/browser/src/create_engine.ts",
        "metrics": {
          "complexity": 2,
          "loc": 11,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.61,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/src/error_helpers.ts",
        "metrics": {
          "complexity": 37,
          "loc": 254,
          "functionCount": 45,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 10,
          "instability": 0.09,
          "cohesionScore": 0.4,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.85
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 27
      },
      {
        "file": "packages/animations/browser/src/private_export.ts",
        "metrics": {
          "complexity": 1,
          "loc": 29,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 12,
          "incomingDependencies": 1,
          "instability": 0.92,
          "cohesionScore": 0.66,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/src/util.ts",
        "metrics": {
          "complexity": 49,
          "loc": 257,
          "functionCount": 28,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 11,
          "instability": 0.27,
          "cohesionScore": 0.63,
          "percentileUsageRank": 94,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.45
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.28
          }
        ],
        "healthScore": 3
      },
      {
        "file": "packages/animations/browser/src/warning_helpers.ts",
        "metrics": {
          "complexity": 2,
          "loc": 32,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/testing/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/animations/browser/testing/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/lib/zone-global.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0.75
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/lib/zone-impl.ts",
        "metrics": {
          "complexity": 150,
          "loc": 967,
          "functionCount": 76,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 41,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 7.5
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 3.22
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/lib/zone.api.extensions.ts",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/zone.configurations.api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 43,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/zone.ts",
        "metrics": {
          "complexity": 4,
          "loc": 52,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 5,
          "instability": 0.17,
          "cohesionScore": 0.75,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/http/src/backend.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 8,
          "instability": 0.2,
          "cohesionScore": 0.8,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/http/src/client.ts",
        "metrics": {
          "complexity": 28,
          "loc": 2122,
          "functionCount": 141,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 3,
          "instability": 0.7,
          "cohesionScore": 0.8,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 2.12
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/http/src/context.ts",
        "metrics": {
          "complexity": 2,
          "loc": 26,
          "functionCount": 6,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/http/src/errors.ts",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0.5
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 31
      },
      {
        "file": "packages/common/http/src/fetch.ts",
        "metrics": {
          "complexity": 32,
          "loc": 228,
          "functionCount": 18,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 3,
          "instability": 0.57,
          "cohesionScore": 0.8,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.14
          }
        ],
        "healthScore": 36
      },
      {
        "file": "packages/common/http/src/headers.ts",
        "metrics": {
          "complexity": 35,
          "loc": 176,
          "functionCount": 27,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 9,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          }
        ],
        "healthScore": 40
      },
      {
        "file": "packages/common/http/src/interceptor.ts",
        "metrics": {
          "complexity": 15,
          "loc": 152,
          "functionCount": 19,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 7,
          "instability": 0.46,
          "cohesionScore": 0.73,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/common/http/src/jsonp.ts",
        "metrics": {
          "complexity": 8,
          "loc": 142,
          "functionCount": 17,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.72,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/http/src/module.ts",
        "metrics": {
          "complexity": 1,
          "loc": 56,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/http/src/params.ts",
        "metrics": {
          "complexity": 27,
          "loc": 196,
          "functionCount": 29,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 6,
          "instability": 0.14,
          "cohesionScore": 0.8,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/common/http/src/private_export.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/http/src/provider.ts",
        "metrics": {
          "complexity": 11,
          "loc": 177,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 2,
          "instability": 0.78,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/common/http/src/request.ts",
        "metrics": {
          "complexity": 51,
          "loc": 316,
          "functionCount": 19,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 10,
          "instability": 0.23,
          "cohesionScore": 0.8,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.55
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/http/src/resource.ts",
        "metrics": {
          "complexity": 19,
          "loc": 277,
          "functionCount": 23,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.39
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/common/http/src/resource_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 31,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/http/src/response.ts",
        "metrics": {
          "complexity": 23,
          "loc": 221,
          "functionCount": 9,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 11,
          "instability": 0.08,
          "cohesionScore": 0.8,
          "percentileUsageRank": 94,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 43
      },
      {
        "file": "packages/common/http/src/transfer_cache.ts",
        "metrics": {
          "complexity": 46,
          "loc": 273,
          "functionCount": 18,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.3
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.36
          }
        ],
        "healthScore": 9
      },
      {
        "file": "packages/common/http/src/xhr.ts",
        "metrics": {
          "complexity": 45,
          "loc": 202,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 2,
          "instability": 0.75,
          "cohesionScore": 0.73,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.25
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.01
          }
        ],
        "healthScore": 16
      },
      {
        "file": "packages/common/http/src/xsrf.ts",
        "metrics": {
          "complexity": 15,
          "loc": 80,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 3,
          "instability": 0.63,
          "cohesionScore": 0.72,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/common/http/testing/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/http/testing/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/metric/multi_metric.ts",
        "metrics": {
          "complexity": 1,
          "loc": 42,
          "functionCount": 15,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/metric/perflog_metric.ts",
        "metrics": {
          "complexity": 81,
          "loc": 360,
          "functionCount": 30,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.05
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/benchpress/src/metric/user_metric.ts",
        "metrics": {
          "complexity": 3,
          "loc": 55,
          "functionCount": 11,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/reporter/console_reporter.ts",
        "metrics": {
          "complexity": 1,
          "loc": 41,
          "functionCount": 4,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.65,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/reporter/json_file_reporter.ts",
        "metrics": {
          "complexity": 1,
          "loc": 64,
          "functionCount": 5,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/reporter/json_file_reporter_types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/reporter/multi_reporter.ts",
        "metrics": {
          "complexity": 1,
          "loc": 34,
          "functionCount": 9,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/reporter/text_reporter_base.ts",
        "metrics": {
          "complexity": 1,
          "loc": 58,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/reporter/util.ts",
        "metrics": {
          "complexity": 2,
          "loc": 15,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/validator/regression_slope_validator.ts",
        "metrics": {
          "complexity": 4,
          "loc": 49,
          "functionCount": 3,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/validator/size_validator.ts",
        "metrics": {
          "complexity": 2,
          "loc": 24,
          "functionCount": 3,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/bazel/src/ng_package/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 17,
          "functionCount": 0,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/bazel/src/ng_package/cross_entry_points_imports.ts",
        "metrics": {
          "complexity": 15,
          "loc": 69,
          "functionCount": 3,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/bazel/src/ng_package/packager.ts",
        "metrics": {
          "complexity": 29,
          "loc": 245,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.45
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.23
          }
        ],
        "healthScore": 37
      },
      {
        "file": "packages/bazel/src/ng_package/rollup.config.js",
        "metrics": {
          "complexity": 27,
          "loc": 164,
          "functionCount": 9,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 25,
            "excessRatio": 1.08
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/common/locales/extra/ff-CM.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/locales/extra/ff-GN.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/locales/extra/ff-MR.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/benchpress/src/webdriver/chrome_driver_extension.ts",
        "metrics": {
          "complexity": 53,
          "loc": 236,
          "functionCount": 19,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.65
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.18
          }
        ],
        "healthScore": 2
      },
      {
        "file": "packages/benchpress/src/webdriver/firefox_driver_extension.ts",
        "metrics": {
          "complexity": 3,
          "loc": 38,
          "functionCount": 7,
          "duplicationRatio": 0.09
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/benchpress/src/webdriver/ios_driver_extension.ts",
        "metrics": {
          "complexity": 18,
          "loc": 113,
          "functionCount": 17,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/benchpress/src/webdriver/selenium_webdriver_adapter.ts",
        "metrics": {
          "complexity": 2,
          "loc": 59,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/locales/global/ff-CM.js",
        "metrics": {
          "complexity": 11,
          "loc": 59,
          "functionCount": 2,
          "duplicationRatio": 0.89
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          },
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.78
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/locales/global/ff-GN.js",
        "metrics": {
          "complexity": 11,
          "loc": 59,
          "functionCount": 2,
          "duplicationRatio": 0.89
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          },
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.78
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/locales/global/ff-MR.js",
        "metrics": {
          "complexity": 11,
          "loc": 59,
          "functionCount": 2,
          "duplicationRatio": 0.89
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          },
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.78
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/locales/generate-locales-tool/array-deduplication.ts",
        "metrics": {
          "complexity": 3,
          "loc": 15,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/locales/generate-locales-tool/cldr-data.ts",
        "metrics": {
          "complexity": 7,
          "loc": 75,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 11,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 94,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/locales/generate-locales-tool/closure-locale-file.ts",
        "metrics": {
          "complexity": 2,
          "loc": 204,
          "functionCount": 18,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.02
          }
        ],
        "healthScore": 94
      },
      {
        "file": "packages/common/locales/generate-locales-tool/day-periods.ts",
        "metrics": {
          "complexity": 6,
          "loc": 71,
          "functionCount": 8,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/locales/generate-locales-tool/file-header.ts",
        "metrics": {
          "complexity": 1,
          "loc": 0,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/locales/generate-locales-tool/locale-base-currencies.ts",
        "metrics": {
          "complexity": 11,
          "loc": 54,
          "functionCount": 3,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 7,
          "instability": 0.3,
          "cohesionScore": 0.8,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/common/locales/generate-locales-tool/locale-currencies.ts",
        "metrics": {
          "complexity": 16,
          "loc": 66,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/common/locales/generate-locales-tool/locale-extra-file.ts",
        "metrics": {
          "complexity": 3,
          "loc": 40,
          "functionCount": 5,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/locales/generate-locales-tool/locale-file.ts",
        "metrics": {
          "complexity": 11,
          "loc": 153,
          "functionCount": 10,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 3,
          "instability": 0.73,
          "cohesionScore": 0.8,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/common/locales/generate-locales-tool/locale-global-file.ts",
        "metrics": {
          "complexity": 1,
          "loc": 28,
          "functionCount": 2,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/locales/generate-locales-tool/object-stringify.ts",
        "metrics": {
          "complexity": 2,
          "loc": 9,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/locales/generate-locales-tool/plural-function.ts",
        "metrics": {
          "complexity": 2,
          "loc": 20,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/src/players/animation_group_player.ts",
        "metrics": {
          "complexity": 15,
          "loc": 135,
          "functionCount": 39,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/animations/src/players/animation_player.ts",
        "metrics": {
          "complexity": 8,
          "loc": 105,
          "functionCount": 23,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/directives/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 38,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 2,
          "instability": 0.8,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/directives/ng_class.ts",
        "metrics": {
          "complexity": 19,
          "loc": 99,
          "functionCount": 8,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 61
      },
      {
        "file": "packages/common/src/directives/ng_component_outlet.ts",
        "metrics": {
          "complexity": 16,
          "loc": 106,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/common/src/directives/ng_for_of.ts",
        "metrics": {
          "complexity": 22,
          "loc": 152,
          "functionCount": 17,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/common/src/directives/ng_if.ts",
        "metrics": {
          "complexity": 14,
          "loc": 94,
          "functionCount": 7,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/common/src/directives/ng_plural.ts",
        "metrics": {
          "complexity": 4,
          "loc": 47,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.7,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/directives/ng_style.ts",
        "metrics": {
          "complexity": 8,
          "loc": 57,
          "functionCount": 8,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/directives/ng_switch.ts",
        "metrics": {
          "complexity": 16,
          "loc": 120,
          "functionCount": 13,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/common/src/directives/ng_template_outlet.ts",
        "metrics": {
          "complexity": 7,
          "loc": 59,
          "functionCount": 6,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/i18n/currencies.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/i18n/format_date.ts",
        "metrics": {
          "complexity": 180,
          "loc": 713,
          "functionCount": 31,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.38
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/src/i18n/format_number.ts",
        "metrics": {
          "complexity": 58,
          "loc": 336,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.12
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/src/i18n/locale_data.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/i18n/locale_data_api.ts",
        "metrics": {
          "complexity": 20,
          "loc": 240,
          "functionCount": 25,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 5,
          "instability": 0.17,
          "cohesionScore": 0.8,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/common/src/i18n/localization.ts",
        "metrics": {
          "complexity": 11,
          "loc": 52,
          "functionCount": 5,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.8,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/bazel/src/ngc-wrapped/extract_i18n.ts",
        "metrics": {
          "complexity": 2,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/bazel/src/ngc-wrapped/index.ts",
        "metrics": {
          "complexity": 43,
          "loc": 310,
          "functionCount": 25,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.15
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.03
          }
        ],
        "healthScore": 7
      },
      {
        "file": "packages/bazel/src/ngc-wrapped/ngc-wrapped-main.ts",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/bazel/src/ngc-wrapped/utils.ts",
        "metrics": {
          "complexity": 20,
          "loc": 78,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 58
      },
      {
        "file": "packages/common/src/location/hash_location_strategy.ts",
        "metrics": {
          "complexity": 7,
          "loc": 64,
          "functionCount": 12,
          "duplicationRatio": 0.23
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.54
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/common/src/location/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/location/location.ts",
        "metrics": {
          "complexity": 9,
          "loc": 134,
          "functionCount": 23,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/location/location_strategy.ts",
        "metrics": {
          "complexity": 6,
          "loc": 79,
          "functionCount": 23,
          "duplicationRatio": 0.12
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.73,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/location/platform_location.ts",
        "metrics": {
          "complexity": 3,
          "loc": 103,
          "functionCount": 38,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.6,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/location/util.ts",
        "metrics": {
          "complexity": 9,
          "loc": 15,
          "functionCount": 3,
          "duplicationRatio": 0.09
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/navigation/platform_navigation.ts",
        "metrics": {
          "complexity": 1,
          "loc": 36,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/pipes/async_pipe.ts",
        "metrics": {
          "complexity": 9,
          "loc": 131,
          "functionCount": 21,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/pipes/case_conversion_pipes.ts",
        "metrics": {
          "complexity": 7,
          "loc": 53,
          "functionCount": 13,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/pipes/date_pipe.ts",
        "metrics": {
          "complexity": 8,
          "loc": 49,
          "functionCount": 5,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.73,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/pipes/date_pipe_config.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/pipes/i18n_plural_pipe.ts",
        "metrics": {
          "complexity": 4,
          "loc": 22,
          "functionCount": 2,
          "duplicationRatio": 0.14
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.7,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/pipes/i18n_select_pipe.ts",
        "metrics": {
          "complexity": 6,
          "loc": 20,
          "functionCount": 1,
          "duplicationRatio": 0.26
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.71
          }
        ],
        "healthScore": 78
      },
      {
        "file": "packages/common/src/pipes/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 44,
          "functionCount": 0,
          "duplicationRatio": 0.18
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 2,
          "instability": 0.83,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.18
          }
        ],
        "healthScore": 90
      },
      {
        "file": "packages/common/src/pipes/invalid_pipe_argument_error.ts",
        "metrics": {
          "complexity": 2,
          "loc": 8,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 7,
          "instability": 0.13,
          "cohesionScore": 0.6,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/pipes/json_pipe.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 1,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/pipes/keyvalue_pipe.ts",
        "metrics": {
          "complexity": 21,
          "loc": 100,
          "functionCount": 12,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/common/src/pipes/number_pipe.ts",
        "metrics": {
          "complexity": 23,
          "loc": 132,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/common/src/pipes/slice_pipe.ts",
        "metrics": {
          "complexity": 4,
          "loc": 29,
          "functionCount": 6,
          "duplicationRatio": 0.09
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/testing/src/location_mock.ts",
        "metrics": {
          "complexity": 18,
          "loc": 161,
          "functionCount": 23,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/common/testing/src/mock_location_strategy.ts",
        "metrics": {
          "complexity": 9,
          "loc": 69,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/testing/src/mock_platform_location.ts",
        "metrics": {
          "complexity": 29,
          "loc": 267,
          "functionCount": 43,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.53,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.45
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 36
      },
      {
        "file": "packages/common/testing/src/private_export.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/testing/src/provide_location_mocks.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/testing/src/testing.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0.33
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/common/upgrade/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/upgrade/src/location_shim.ts",
        "metrics": {
          "complexity": 90,
          "loc": 466,
          "functionCount": 51,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.5
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.55
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/upgrade/src/location_upgrade_module.ts",
        "metrics": {
          "complexity": 10,
          "loc": 91,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/upgrade/src/params.ts",
        "metrics": {
          "complexity": 41,
          "loc": 190,
          "functionCount": 29,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.05
          }
        ],
        "healthScore": 30
      },
      {
        "file": "packages/common/upgrade/src/utils.ts",
        "metrics": {
          "complexity": 9,
          "loc": 22,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/babel/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/fatal_linker_error.ts",
        "metrics": {
          "complexity": 2,
          "loc": 12,
          "functionCount": 2,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 13,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/linker_import_generator.ts",
        "metrics": {
          "complexity": 3,
          "loc": 25,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/bin/ng_xi18n.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0.33
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.55,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/compiler-cli/src/bin/ngc.ts",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 2,
          "duplicationRatio": 0.2
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.55,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 87
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/program.ts",
        "metrics": {
          "complexity": 44,
          "loc": 333,
          "functionCount": 24,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 13,
          "incomingDependencies": 2,
          "instability": 0.87,
          "cohesionScore": 0.64,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.2
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 3
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/tsc_plugin.ts",
        "metrics": {
          "complexity": 10,
          "loc": 135,
          "functionCount": 8,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 1,
          "instability": 0.89,
          "cohesionScore": 0.64,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/transformers/api.ts",
        "metrics": {
          "complexity": 2,
          "loc": 99,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 10,
          "instability": 0.09,
          "cohesionScore": 0.43,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/transformers/compiler_host.ts",
        "metrics": {
          "complexity": 2,
          "loc": 20,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/transformers/entry_points.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.8,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/transformers/i18n.ts",
        "metrics": {
          "complexity": 18,
          "loc": 62,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/compiler-cli/src/transformers/program.ts",
        "metrics": {
          "complexity": 1,
          "loc": 15,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.7,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/transformers/util.ts",
        "metrics": {
          "complexity": 1,
          "loc": 22,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/di/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/dom-navigation/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/event-dispatch/contract_binary.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/event-dispatch/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 15,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 2,
          "instability": 0.82,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/signals/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 45,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 30,
          "instability": 0.23,
          "cohesionScore": 0.67,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/expression_parser/ast.ts",
        "metrics": {
          "complexity": 9,
          "loc": 635,
          "functionCount": 94,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 11,
          "instability": 0.15,
          "cohesionScore": 0.6,
          "percentileUsageRank": 94,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.12
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/compiler/src/expression_parser/lexer.ts",
        "metrics": {
          "complexity": 113,
          "loc": 497,
          "functionCount": 55,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 5,
          "instability": 0.17,
          "cohesionScore": 0.6,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.65
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.66
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/expression_parser/parser.ts",
        "metrics": {
          "complexity": 184,
          "loc": 1183,
          "functionCount": 79,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 4,
          "instability": 0.56,
          "cohesionScore": 0.68,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 9.2
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.18
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/expression_parser/serializer.ts",
        "metrics": {
          "complexity": 17,
          "loc": 138,
          "functionCount": 37,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/compiler/src/i18n/digest.ts",
        "metrics": {
          "complexity": 32,
          "loc": 261,
          "functionCount": 33,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 7,
          "instability": 0.22,
          "cohesionScore": 0.7,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 34
      },
      {
        "file": "packages/compiler/src/i18n/extractor_merger.ts",
        "metrics": {
          "complexity": 89,
          "loc": 466,
          "functionCount": 51,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 2,
          "instability": 0.8,
          "cohesionScore": 0.7,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.45
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.55
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/i18n/i18n_ast.ts",
        "metrics": {
          "complexity": 2,
          "loc": 238,
          "functionCount": 50,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 26,
          "instability": 0.04,
          "cohesionScore": 0.6,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.19
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/compiler/src/i18n/i18n_html_parser.ts",
        "metrics": {
          "complexity": 12,
          "loc": 75,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 14,
          "incomingDependencies": 1,
          "instability": 0.93,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/compiler/src/i18n/i18n_parser.ts",
        "metrics": {
          "complexity": 31,
          "loc": 328,
          "functionCount": 27,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 2,
          "instability": 0.83,
          "cohesionScore": 0.63,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.09
          }
        ],
        "healthScore": 24
      },
      {
        "file": "packages/compiler/src/i18n/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 1,
          "instability": 0.89,
          "cohesionScore": 0.72,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/i18n/message_bundle.ts",
        "metrics": {
          "complexity": 10,
          "loc": 128,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/i18n/parse_util.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 6,
          "instability": 0.14,
          "cohesionScore": 0.6,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/i18n/translation_bundle.ts",
        "metrics": {
          "complexity": 15,
          "loc": 157,
          "functionCount": 25,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 2,
          "instability": 0.8,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/compiler/src/ml_parser/ast.ts",
        "metrics": {
          "complexity": 5,
          "loc": 205,
          "functionCount": 39,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 18,
          "instability": 0.14,
          "cohesionScore": 0.67,
          "percentileUsageRank": 97,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.02
          }
        ],
        "healthScore": 94
      },
      {
        "file": "packages/compiler/src/ml_parser/defaults.ts",
        "metrics": {
          "complexity": 2,
          "loc": 19,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 13,
          "instability": 0.07,
          "cohesionScore": 0.6,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/ml_parser/entities.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2129,
          "functionCount": 0,
          "duplicationRatio": 0.39
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 2.13
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 2
      },
      {
        "file": "packages/compiler/src/ml_parser/html_parser.ts",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 5,
          "instability": 0.38,
          "cohesionScore": 0.8,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/ml_parser/html_tags.ts",
        "metrics": {
          "complexity": 11,
          "loc": 163,
          "functionCount": 6,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.7,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/compiler/src/ml_parser/html_whitespaces.ts",
        "metrics": {
          "complexity": 23,
          "loc": 204,
          "functionCount": 26,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 4,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.02
          }
        ],
        "healthScore": 44
      },
      {
        "file": "packages/compiler/src/ml_parser/icu_ast_expander.ts",
        "metrics": {
          "complexity": 5,
          "loc": 178,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.7,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/ml_parser/lexer.ts",
        "metrics": {
          "complexity": 226,
          "loc": 1182,
          "functionCount": 110,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 6,
          "instability": 0.5,
          "cohesionScore": 0.73,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 11.3
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.18
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/ml_parser/parser.ts",
        "metrics": {
          "complexity": 103,
          "loc": 641,
          "functionCount": 32,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 7,
          "instability": 0.46,
          "cohesionScore": 0.77,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.15
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.14
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/ml_parser/tags.ts",
        "metrics": {
          "complexity": 6,
          "loc": 46,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 12,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/ml_parser/tokens.ts",
        "metrics": {
          "complexity": 1,
          "loc": 212,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 10,
          "instability": 0.09,
          "cohesionScore": 0.6,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.06
          }
        ],
        "healthScore": 93
      },
      {
        "file": "packages/compiler/src/ml_parser/xml_parser.ts",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 4,
          "instability": 0.43,
          "cohesionScore": 0.8,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/ml_parser/xml_tags.ts",
        "metrics": {
          "complexity": 1,
          "loc": 22,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/output/abstract_emitter.ts",
        "metrics": {
          "complexity": 86,
          "loc": 524,
          "functionCount": 61,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 4,
          "instability": 0.43,
          "cohesionScore": 0.73,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.3
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.75
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/output/abstract_js_emitter.ts",
        "metrics": {
          "complexity": 10,
          "loc": 120,
          "functionCount": 18,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/output/map_util.ts",
        "metrics": {
          "complexity": 1,
          "loc": 22,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.8,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/output/output_ast.ts",
        "metrics": {
          "complexity": 110,
          "loc": 1666,
          "functionCount": 309,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 80,
          "instability": 0.05,
          "cohesionScore": 0.56,
          "percentileUsageRank": 100,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.5
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/output/output_jit.ts",
        "metrics": {
          "complexity": 10,
          "loc": 112,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 3,
          "instability": 0.63,
          "cohesionScore": 0.76,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/output/output_jit_trusted_types.ts",
        "metrics": {
          "complexity": 7,
          "loc": 50,
          "functionCount": 5,
          "duplicationRatio": 0.21
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.41
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/compiler/src/output/source_map.ts",
        "metrics": {
          "complexity": 28,
          "loc": 144,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 47
      },
      {
        "file": "packages/compiler/src/render3/r3_ast.ts",
        "metrics": {
          "complexity": 12,
          "loc": 634,
          "functionCount": 87,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 14,
          "instability": 0.22,
          "cohesionScore": 0.6,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.11
          }
        ],
        "healthScore": 55
      },
      {
        "file": "packages/compiler/src/render3/r3_class_debug_info_compiler.ts",
        "metrics": {
          "complexity": 3,
          "loc": 33,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.7,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/r3_class_metadata_compiler.ts",
        "metrics": {
          "complexity": 4,
          "loc": 74,
          "functionCount": 9,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.72,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/r3_control_flow.ts",
        "metrics": {
          "complexity": 82,
          "loc": 560,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.64,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.1
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.87
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/render3/r3_deferred_blocks.ts",
        "metrics": {
          "complexity": 36,
          "loc": 240,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.68,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.8
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 30
      },
      {
        "file": "packages/compiler/src/render3/r3_deferred_triggers.ts",
        "metrics": {
          "complexity": 59,
          "loc": 526,
          "functionCount": 27,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.95
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.75
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/render3/r3_factory.ts",
        "metrics": {
          "complexity": 37,
          "loc": 203,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 7,
          "instability": 0.42,
          "cohesionScore": 0.68,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.85
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.01
          }
        ],
        "healthScore": 31
      },
      {
        "file": "packages/compiler/src/render3/r3_hmr_compiler.ts",
        "metrics": {
          "complexity": 6,
          "loc": 126,
          "functionCount": 5,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.73,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/r3_identifiers.ts",
        "metrics": {
          "complexity": 1,
          "loc": 501,
          "functionCount": 0,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 26,
          "instability": 0.04,
          "cohesionScore": 0.6,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 68
      },
      {
        "file": "packages/compiler/src/render3/r3_injector_compiler.ts",
        "metrics": {
          "complexity": 3,
          "loc": 29,
          "functionCount": 2,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 3,
          "instability": 0.57,
          "cohesionScore": 0.72,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/r3_jit.ts",
        "metrics": {
          "complexity": 3,
          "loc": 16,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/r3_module_compiler.ts",
        "metrics": {
          "complexity": 35,
          "loc": 191,
          "functionCount": 9,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 3,
          "instability": 0.63,
          "cohesionScore": 0.69,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          }
        ],
        "healthScore": 40
      },
      {
        "file": "packages/compiler/src/render3/r3_pipe_compiler.ts",
        "metrics": {
          "complexity": 2,
          "loc": 36,
          "functionCount": 2,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 3,
          "instability": 0.57,
          "cohesionScore": 0.75,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/r3_template_transform.ts",
        "metrics": {
          "complexity": 85,
          "loc": 761,
          "functionCount": 40,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 15,
          "incomingDependencies": 1,
          "instability": 0.94,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.54
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/render3/util.ts",
        "metrics": {
          "complexity": 9,
          "loc": 97,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 20,
          "instability": 0.13,
          "cohesionScore": 0.67,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/schema/dom_element_schema_registry.ts",
        "metrics": {
          "complexity": 63,
          "loc": 403,
          "functionCount": 23,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 5,
          "instability": 0.5,
          "cohesionScore": 0.68,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.15
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.34
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/schema/dom_security_schema.ts",
        "metrics": {
          "complexity": 3,
          "loc": 59,
          "functionCount": 3,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.6,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/schema/element_schema_registry.ts",
        "metrics": {
          "complexity": 1,
          "loc": 21,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.6,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/schema/trusted_types_sinks.ts",
        "metrics": {
          "complexity": 2,
          "loc": 15,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template_parser/binding_parser.ts",
        "metrics": {
          "complexity": 83,
          "loc": 756,
          "functionCount": 34,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 7,
          "instability": 0.59,
          "cohesionScore": 0.6,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.15
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.52
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/template_parser/template_preparser.ts",
        "metrics": {
          "complexity": 14,
          "loc": 69,
          "functionCount": 4,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/core/rxjs-interop/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 2,
          "instability": 0.78,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/rxjs-interop/src/output_from_observable.ts",
        "metrics": {
          "complexity": 4,
          "loc": 44,
          "functionCount": 6,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/rxjs-interop/src/output_to_observable.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/rxjs-interop/src/pending_until_event.ts",
        "metrics": {
          "complexity": 3,
          "loc": 41,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/rxjs-interop/src/rx_resource.ts",
        "metrics": {
          "complexity": 3,
          "loc": 51,
          "functionCount": 10,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/rxjs-interop/src/take_until_destroyed.ts",
        "metrics": {
          "complexity": 2,
          "loc": 16,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/rxjs-interop/src/to_observable.ts",
        "metrics": {
          "complexity": 5,
          "loc": 63,
          "functionCount": 10,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/rxjs-interop/src/to_signal.ts",
        "metrics": {
          "complexity": 20,
          "loc": 132,
          "functionCount": 12,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 58
      },
      {
        "file": "packages/core/testing/src/application_error_handler.ts",
        "metrics": {
          "complexity": 4,
          "loc": 23,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/testing/src/async.ts",
        "metrics": {
          "complexity": 5,
          "loc": 21,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/testing/src/component_fixture.ts",
        "metrics": {
          "complexity": 18,
          "loc": 169,
          "functionCount": 17,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/core/testing/src/defer.ts",
        "metrics": {
          "complexity": 14,
          "loc": 68,
          "functionCount": 5,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/core/testing/src/fake_async.ts",
        "metrics": {
          "complexity": 11,
          "loc": 51,
          "functionCount": 7,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/core/testing/src/logger.ts",
        "metrics": {
          "complexity": 1,
          "loc": 22,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/testing/src/metadata_override.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0.14
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/testing/src/metadata_overrider.ts",
        "metrics": {
          "complexity": 26,
          "loc": 116,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/core/testing/src/resolvers.ts",
        "metrics": {
          "complexity": 12,
          "loc": 85,
          "functionCount": 11,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/core/testing/src/styling.ts",
        "metrics": {
          "complexity": 9,
          "loc": 45,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/testing/src/test_bed.ts",
        "metrics": {
          "complexity": 31,
          "loc": 569,
          "functionCount": 86,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 3,
          "instability": 0.57,
          "cohesionScore": 0.8,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.9
          }
        ],
        "healthScore": 13
      },
      {
        "file": "packages/core/testing/src/test_bed_common.ts",
        "metrics": {
          "complexity": 1,
          "loc": 35,
          "functionCount": 2,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/testing/src/test_bed_compiler.ts",
        "metrics": {
          "complexity": 125,
          "loc": 867,
          "functionCount": 101,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.72,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.89
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/testing/src/test_hooks.ts",
        "metrics": {
          "complexity": 2,
          "loc": 14,
          "functionCount": 2,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/testing/src/testing.ts",
        "metrics": {
          "complexity": 1,
          "loc": 34,
          "functionCount": 0,
          "duplicationRatio": 0.12
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 1,
          "instability": 0.9,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/testing/src/testing_internal.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/testing/src/testing_private_export.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/directives/abstract_control_directive.ts",
        "metrics": {
          "complexity": 22,
          "loc": 93,
          "functionCount": 26,
          "duplicationRatio": 0.14
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 5,
          "instability": 0.38,
          "cohesionScore": 0.67,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/forms/src/directives/abstract_form_group_directive.ts",
        "metrics": {
          "complexity": 4,
          "loc": 30,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 7,
          "instability": 0.36,
          "cohesionScore": 0.75,
          "percentileUsageRank": 87,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/directives/checkbox_value_accessor.ts",
        "metrics": {
          "complexity": 1,
          "loc": 26,
          "functionCount": 2,
          "duplicationRatio": 0.36
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.19
          }
        ],
        "healthScore": 62
      },
      {
        "file": "packages/forms/src/directives/control_container.ts",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 11,
          "instability": 0.15,
          "cohesionScore": 0.8,
          "percentileUsageRank": 94,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/directives/control_value_accessor.ts",
        "metrics": {
          "complexity": 2,
          "loc": 33,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 14,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/directives/default_value_accessor.ts",
        "metrics": {
          "complexity": 9,
          "loc": 69,
          "functionCount": 7,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.8,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/directives/error_examples.ts",
        "metrics": {
          "complexity": 1,
          "loc": 43,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/directives/form_interface.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 5,
          "instability": 0.44,
          "cohesionScore": 0.7,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/directives/ng_control.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 10,
          "instability": 0.23,
          "cohesionScore": 0.8,
          "percentileUsageRank": 93,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/directives/ng_control_status.ts",
        "metrics": {
          "complexity": 1,
          "loc": 74,
          "functionCount": 11,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.77,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/directives/ng_form.ts",
        "metrics": {
          "complexity": 6,
          "loc": 174,
          "functionCount": 28,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 5,
          "instability": 0.69,
          "cohesionScore": 0.73,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/directives/ng_model.ts",
        "metrics": {
          "complexity": 33,
          "loc": 171,
          "functionCount": 20,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 12,
          "incomingDependencies": 3,
          "instability": 0.8,
          "cohesionScore": 0.75,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          }
        ],
        "healthScore": 42
      },
      {
        "file": "packages/forms/src/directives/ng_model_group.ts",
        "metrics": {
          "complexity": 5,
          "loc": 53,
          "functionCount": 3,
          "duplicationRatio": 0.16
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 4,
          "instability": 0.6,
          "cohesionScore": 0.77,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.08
          }
        ],
        "healthScore": 92
      },
      {
        "file": "packages/forms/src/directives/ng_no_validate_directive.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/directives/number_value_accessor.ts",
        "metrics": {
          "complexity": 3,
          "loc": 32,
          "functionCount": 4,
          "duplicationRatio": 0.34
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 63
      },
      {
        "file": "packages/forms/src/directives/radio_control_value_accessor.ts",
        "metrics": {
          "complexity": 17,
          "loc": 140,
          "functionCount": 17,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/forms/src/directives/range_value_accessor.ts",
        "metrics": {
          "complexity": 2,
          "loc": 35,
          "functionCount": 4,
          "duplicationRatio": 0.33
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.09
          }
        ],
        "healthScore": 65
      },
      {
        "file": "packages/forms/src/directives/reactive_errors.ts",
        "metrics": {
          "complexity": 7,
          "loc": 112,
          "functionCount": 11,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 6,
          "instability": 0.25,
          "cohesionScore": 0.7,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/directives/select_control_value_accessor.ts",
        "metrics": {
          "complexity": 14,
          "loc": 117,
          "functionCount": 15,
          "duplicationRatio": 0.17
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.7,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 73
      },
      {
        "file": "packages/forms/src/directives/select_multiple_control_value_accessor.ts",
        "metrics": {
          "complexity": 20,
          "loc": 161,
          "functionCount": 19,
          "duplicationRatio": 0.16
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.7,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 51
      },
      {
        "file": "packages/forms/src/directives/shared.ts",
        "metrics": {
          "complexity": 69,
          "loc": 283,
          "functionCount": 40,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 15,
          "incomingDependencies": 11,
          "instability": 0.58,
          "cohesionScore": 0.71,
          "percentileUsageRank": 94,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.45
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.42
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/forms/src/directives/template_driven_errors.ts",
        "metrics": {
          "complexity": 1,
          "loc": 51,
          "functionCount": 4,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.7,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/directives/validators.ts",
        "metrics": {
          "complexity": 6,
          "loc": 220,
          "functionCount": 31,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 17,
          "instability": 0.11,
          "cohesionScore": 0.6,
          "percentileUsageRank": 97,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 93
      },
      {
        "file": "packages/language-service/src/codefixes/all_codefixes_metas.ts",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/language-service/src/codefixes/code_fixes.ts",
        "metrics": {
          "complexity": 11,
          "loc": 97,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/language-service/src/codefixes/fix_invalid_banana_in_box.ts",
        "metrics": {
          "complexity": 13,
          "loc": 99,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.7,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/language-service/src/codefixes/fix_missing_import.ts",
        "metrics": {
          "complexity": 9,
          "loc": 70,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.7,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/language-service/src/codefixes/fix_missing_member.ts",
        "metrics": {
          "complexity": 11,
          "loc": 101,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.7,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/language-service/src/codefixes/fix_unused_standalone_imports.ts",
        "metrics": {
          "complexity": 26,
          "loc": 141,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/language-service/src/codefixes/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/language-service/src/codefixes/utils.ts",
        "metrics": {
          "complexity": 12,
          "loc": 103,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 6,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/forms/src/model/abstract_model.ts",
        "metrics": {
          "complexity": 89,
          "loc": 657,
          "functionCount": 126,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 12,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 95,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.45
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.19
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/forms/src/model/form_array.ts",
        "metrics": {
          "complexity": 17,
          "loc": 184,
          "functionCount": 36,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 6,
          "instability": 0.25,
          "cohesionScore": 0.7,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/forms/src/model/form_control.ts",
        "metrics": {
          "complexity": 17,
          "loc": 218,
          "functionCount": 17,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 9,
          "instability": 0.25,
          "cohesionScore": 0.67,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.09
          }
        ],
        "healthScore": 60
      },
      {
        "file": "packages/forms/src/model/form_group.ts",
        "metrics": {
          "complexity": 24,
          "loc": 317,
          "functionCount": 44,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 8,
          "instability": 0.2,
          "cohesionScore": 0.7,
          "percentileUsageRank": 89,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.06
          }
        ],
        "healthScore": 29
      },
      {
        "file": "packages/language-service/src/refactorings/refactoring.ts",
        "metrics": {
          "complexity": 1,
          "loc": 49,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 5,
          "instability": 0.5,
          "cohesionScore": 0.61,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/application/application_config.ts",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/application/application_init.ts",
        "metrics": {
          "complexity": 10,
          "loc": 82,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/application/application_module.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.7,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/application/application_ngmodule_factory_compiler.ts",
        "metrics": {
          "complexity": 8,
          "loc": 53,
          "functionCount": 7,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 2,
          "instability": 0.82,
          "cohesionScore": 0.59,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/application/application_ref.ts",
        "metrics": {
          "complexity": 61,
          "loc": 388,
          "functionCount": 41,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 35,
          "incomingDependencies": 17,
          "instability": 0.67,
          "cohesionScore": 0.59,
          "percentileUsageRank": 97,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.05
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.29
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/application/application_tokens.ts",
        "metrics": {
          "complexity": 9,
          "loc": 42,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 8,
          "instability": 0.2,
          "cohesionScore": 0.55,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/application/create_application.ts",
        "metrics": {
          "complexity": 8,
          "loc": 47,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 13,
          "incomingDependencies": 1,
          "instability": 0.93,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/application/platform_tokens.ts",
        "metrics": {
          "complexity": 7,
          "loc": 22,
          "functionCount": 3,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/application/tracing.ts",
        "metrics": {
          "complexity": 2,
          "loc": 16,
          "functionCount": 0,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 6,
          "instability": 0.14,
          "cohesionScore": 0.6,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/authoring/queries.ts",
        "metrics": {
          "complexity": 6,
          "loc": 165,
          "functionCount": 12,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.55,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/change_detection/change_detection.ts",
        "metrics": {
          "complexity": 1,
          "loc": 34,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 3,
          "instability": 0.75,
          "cohesionScore": 0.7,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/change_detection/change_detector_ref.ts",
        "metrics": {
          "complexity": 4,
          "loc": 36,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 6,
          "instability": 0.57,
          "cohesionScore": 0.54,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/change_detection/constants.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/change_detection/pipe_transform.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/compiler/compiler_facade.ts",
        "metrics": {
          "complexity": 6,
          "loc": 35,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 7,
          "instability": 0.22,
          "cohesionScore": 0.7,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/compiler/compiler_facade_interface.ts",
        "metrics": {
          "complexity": 1,
          "loc": 337,
          "functionCount": 0,
          "duplicationRatio": 0.95
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.12
          },
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.9
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/debug/debug_node.ts",
        "metrics": {
          "complexity": 84,
          "loc": 451,
          "functionCount": 42,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 12,
          "incomingDependencies": 2,
          "instability": 0.86,
          "cohesionScore": 0.53,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.2
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/defer/cleanup.ts",
        "metrics": {
          "complexity": 6,
          "loc": 42,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.8,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/defer/discovery.ts",
        "metrics": {
          "complexity": 7,
          "loc": 31,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 2,
          "instability": 0.75,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/defer/dom_triggers.ts",
        "metrics": {
          "complexity": 31,
          "loc": 211,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 14,
          "incomingDependencies": 3,
          "instability": 0.82,
          "cohesionScore": 0.59,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 38
      },
      {
        "file": "packages/core/src/defer/idle_scheduler.ts",
        "metrics": {
          "complexity": 11,
          "loc": 71,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/core/src/defer/instructions.ts",
        "metrics": {
          "complexity": 100,
          "loc": 546,
          "functionCount": 32,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 23,
          "incomingDependencies": 1,
          "instability": 0.96,
          "cohesionScore": 0.65,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.82
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/defer/interfaces.ts",
        "metrics": {
          "complexity": 1,
          "loc": 103,
          "functionCount": 0,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 16,
          "instability": 0.24,
          "cohesionScore": 0.5,
          "percentileUsageRank": 96,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/defer/registry.ts",
        "metrics": {
          "complexity": 8,
          "loc": 78,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 7,
          "instability": 0.5,
          "cohesionScore": 0.61,
          "percentileUsageRank": 87,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/defer/rendering.ts",
        "metrics": {
          "complexity": 48,
          "loc": 305,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 21,
          "incomingDependencies": 4,
          "instability": 0.84,
          "cohesionScore": 0.59,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.4
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.02
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/defer/timer_scheduler.ts",
        "metrics": {
          "complexity": 22,
          "loc": 136,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 4,
          "instability": 0.43,
          "cohesionScore": 0.6,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/core/src/defer/triggering.ts",
        "metrics": {
          "complexity": 74,
          "loc": 490,
          "functionCount": 37,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 27,
          "incomingDependencies": 4,
          "instability": 0.87,
          "cohesionScore": 0.64,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.7
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.63
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/defer/utils.ts",
        "metrics": {
          "complexity": 22,
          "loc": 124,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 7,
          "instability": 0.5,
          "cohesionScore": 0.57,
          "percentileUsageRank": 87,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/core/src/di/contextual.ts",
        "metrics": {
          "complexity": 7,
          "loc": 45,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 6,
          "instability": 0.5,
          "cohesionScore": 0.72,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/create_injector.ts",
        "metrics": {
          "complexity": 6,
          "loc": 33,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 3,
          "instability": 0.7,
          "cohesionScore": 0.72,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/forward_ref.ts",
        "metrics": {
          "complexity": 4,
          "loc": 24,
          "functionCount": 4,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 14,
          "instability": 0.18,
          "cohesionScore": 0.6,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/host_attribute_token.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/host_tag_name_token.ts",
        "metrics": {
          "complexity": 10,
          "loc": 42,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 49,
          "functionCount": 0,
          "duplicationRatio": 0.14
        },
        "dependencies": {
          "outgoingDependencies": 17,
          "incomingDependencies": 1,
          "instability": 0.94,
          "cohesionScore": 0.78,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/initializer_token.ts",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 5,
          "instability": 0.17,
          "cohesionScore": 0.8,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/inject_switch.ts",
        "metrics": {
          "complexity": 7,
          "loc": 40,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 6,
          "instability": 0.5,
          "cohesionScore": 0.66,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/injectable.ts",
        "metrics": {
          "complexity": 1,
          "loc": 39,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 5,
          "instability": 0.44,
          "cohesionScore": 0.63,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/injection_token.ts",
        "metrics": {
          "complexity": 6,
          "loc": 36,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 19,
          "instability": 0.14,
          "cohesionScore": 0.62,
          "percentileUsageRank": 97,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/injector.ts",
        "metrics": {
          "complexity": 2,
          "loc": 57,
          "functionCount": 9,
          "duplicationRatio": 0.18
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 35,
          "instability": 0.2,
          "cohesionScore": 0.76,
          "percentileUsageRank": 99,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.22
          }
        ],
        "healthScore": 89
      },
      {
        "file": "packages/core/src/di/injector_compatibility.ts",
        "metrics": {
          "complexity": 33,
          "loc": 200,
          "functionCount": 26,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 12,
          "incomingDependencies": 31,
          "instability": 0.28,
          "cohesionScore": 0.66,
          "percentileUsageRank": 99,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          }
        ],
        "healthScore": 42
      },
      {
        "file": "packages/core/src/di/injector_marker.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/injector_token.ts",
        "metrics": {
          "complexity": 2,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/internal_tokens.ts",
        "metrics": {
          "complexity": 2,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.7,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/metadata.ts",
        "metrics": {
          "complexity": 1,
          "loc": 42,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.69,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/metadata_attr.ts",
        "metrics": {
          "complexity": 1,
          "loc": 16,
          "functionCount": 2,
          "duplicationRatio": 0.09
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.55,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/null_injector.ts",
        "metrics": {
          "complexity": 2,
          "loc": 13,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.73,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/provider_collection.ts",
        "metrics": {
          "complexity": 51,
          "loc": 255,
          "functionCount": 20,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 16,
          "incomingDependencies": 10,
          "instability": 0.62,
          "cohesionScore": 0.65,
          "percentileUsageRank": 93,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.55
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/di/provider_token.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 15,
          "instability": 0.12,
          "cohesionScore": 0.7,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/r3_injector.ts",
        "metrics": {
          "complexity": 92,
          "loc": 488,
          "functionCount": 44,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 26,
          "incomingDependencies": 21,
          "instability": 0.55,
          "cohesionScore": 0.7,
          "percentileUsageRank": 98,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.6
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.63
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/di/scope.ts",
        "metrics": {
          "complexity": 2,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.8,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/hydration/annotate.ts",
        "metrics": {
          "complexity": 87,
          "loc": 569,
          "functionCount": 21,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 27,
          "incomingDependencies": 3,
          "instability": 0.9,
          "cohesionScore": 0.64,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.35
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.9
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/hydration/api.ts",
        "metrics": {
          "complexity": 27,
          "loc": 253,
          "functionCount": 25,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 25,
          "incomingDependencies": 1,
          "instability": 0.96,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.26
          }
        ],
        "healthScore": 38
      },
      {
        "file": "packages/core/src/hydration/cleanup.ts",
        "metrics": {
          "complexity": 21,
          "loc": 105,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 13,
          "incomingDependencies": 3,
          "instability": 0.81,
          "cohesionScore": 0.62,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/core/src/hydration/compression.ts",
        "metrics": {
          "complexity": 8,
          "loc": 30,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/hydration/error_handling.ts",
        "metrics": {
          "complexity": 55,
          "loc": 279,
          "functionCount": 19,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 8,
          "instability": 0.5,
          "cohesionScore": 0.56,
          "percentileUsageRank": 89,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.75
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/hydration/event_replay.ts",
        "metrics": {
          "complexity": 31,
          "loc": 224,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 14,
          "incomingDependencies": 3,
          "instability": 0.82,
          "cohesionScore": 0.59,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.12
          }
        ],
        "healthScore": 37
      },
      {
        "file": "packages/core/src/hydration/i18n.ts",
        "metrics": {
          "complexity": 78,
          "loc": 425,
          "functionCount": 27,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 18,
          "incomingDependencies": 5,
          "instability": 0.78,
          "cohesionScore": 0.62,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.42
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/hydration/interfaces.ts",
        "metrics": {
          "complexity": 1,
          "loc": 74,
          "functionCount": 0,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 18,
          "instability": 0.14,
          "cohesionScore": 0.53,
          "percentileUsageRank": 97,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/hydration/node_lookup_utils.ts",
        "metrics": {
          "complexity": 55,
          "loc": 272,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 12,
          "incomingDependencies": 9,
          "instability": 0.57,
          "cohesionScore": 0.62,
          "percentileUsageRank": 91,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.75
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.36
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/hydration/skip_hydration.ts",
        "metrics": {
          "complexity": 12,
          "loc": 42,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 7,
          "instability": 0.22,
          "cohesionScore": 0.5,
          "percentileUsageRank": 87,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/core/src/hydration/tokens.ts",
        "metrics": {
          "complexity": 12,
          "loc": 29,
          "functionCount": 2,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 8,
          "instability": 0.11,
          "cohesionScore": 0.6,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/core/src/hydration/utils.ts",
        "metrics": {
          "complexity": 65,
          "loc": 444,
          "functionCount": 44,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 18,
          "incomingDependencies": 19,
          "instability": 0.49,
          "cohesionScore": 0.6,
          "percentileUsageRank": 97,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.48
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/hydration/views.ts",
        "metrics": {
          "complexity": 8,
          "loc": 57,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 4,
          "instability": 0.56,
          "cohesionScore": 0.68,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/i18n/locale_data_api.ts",
        "metrics": {
          "complexity": 12,
          "loc": 92,
          "functionCount": 7,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/core/src/i18n/locale_en.ts",
        "metrics": {
          "complexity": 3,
          "loc": 8,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/i18n/localization.ts",
        "metrics": {
          "complexity": 2,
          "loc": 9,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 5,
          "instability": 0.17,
          "cohesionScore": 0.8,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/i18n/tokens.ts",
        "metrics": {
          "complexity": 12,
          "loc": 38,
          "functionCount": 3,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.63,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/core/src/i18n/utils.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 7,
          "instability": 0.13,
          "cohesionScore": 0.5,
          "percentileUsageRank": 87,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/interface/lifecycle_hooks.ts",
        "metrics": {
          "complexity": 1,
          "loc": 25,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 9,
          "instability": 0.1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/interface/simple_change.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/interface/type.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 1,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 66,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/internal/get_closest_component_name.ts",
        "metrics": {
          "complexity": 10,
          "loc": 32,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.54,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/linker/compiler.ts",
        "metrics": {
          "complexity": 3,
          "loc": 60,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 2,
          "instability": 0.85,
          "cohesionScore": 0.62,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/linker/component_factory.ts",
        "metrics": {
          "complexity": 1,
          "loc": 36,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 8,
          "instability": 0.47,
          "cohesionScore": 0.69,
          "percentileUsageRank": 89,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/linker/component_factory_resolver.ts",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 2,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 5,
          "instability": 0.38,
          "cohesionScore": 0.67,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/linker/destroy_ref.ts",
        "metrics": {
          "complexity": 2,
          "loc": 27,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 11,
          "instability": 0.31,
          "cohesionScore": 0.54,
          "percentileUsageRank": 94,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/linker/element_ref.ts",
        "metrics": {
          "complexity": 2,
          "loc": 21,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 8,
          "instability": 0.38,
          "cohesionScore": 0.52,
          "percentileUsageRank": 89,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/linker/ng_module_factory.ts",
        "metrics": {
          "complexity": 1,
          "loc": 19,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 12,
          "instability": 0.25,
          "cohesionScore": 0.65,
          "percentileUsageRank": 95,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/linker/ng_module_factory_loader.ts",
        "metrics": {
          "complexity": 3,
          "loc": 17,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.7,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/linker/ng_module_factory_loader_impl.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/linker/ng_module_registration.ts",
        "metrics": {
          "complexity": 5,
          "loc": 26,
          "functionCount": 5,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 4,
          "instability": 0.43,
          "cohesionScore": 0.6,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/linker/query_list.ts",
        "metrics": {
          "complexity": 6,
          "loc": 78,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 5,
          "instability": 0.38,
          "cohesionScore": 0.6,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/linker/template_ref.ts",
        "metrics": {
          "complexity": 4,
          "loc": 64,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 4,
          "instability": 0.71,
          "cohesionScore": 0.62,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/linker/view_container_ref.ts",
        "metrics": {
          "complexity": 52,
          "loc": 491,
          "functionCount": 46,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 35,
          "incomingDependencies": 5,
          "instability": 0.88,
          "cohesionScore": 0.6,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.6
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.64
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/linker/view_ref.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 7,
          "instability": 0.13,
          "cohesionScore": 0.6,
          "percentileUsageRank": 87,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/metadata/di.ts",
        "metrics": {
          "complexity": 1,
          "loc": 115,
          "functionCount": 4,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/metadata/directives.ts",
        "metrics": {
          "complexity": 3,
          "loc": 142,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 4,
          "instability": 0.67,
          "cohesionScore": 0.61,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/metadata/do_bootstrap.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/metadata/ng_module.ts",
        "metrics": {
          "complexity": 1,
          "loc": 26,
          "functionCount": 2,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/metadata/ng_module_def.ts",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 9,
          "instability": 0.18,
          "cohesionScore": 0.7,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/metadata/resource_loading.ts",
        "metrics": {
          "complexity": 16,
          "loc": 98,
          "functionCount": 18,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.7,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/core/src/metadata/schema.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 9,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/metadata/view.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 12,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/platform/bootstrap.ts",
        "metrics": {
          "complexity": 23,
          "loc": 173,
          "functionCount": 19,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 18,
          "incomingDependencies": 3,
          "instability": 0.86,
          "cohesionScore": 0.59,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/core/src/platform/platform.ts",
        "metrics": {
          "complexity": 14,
          "loc": 115,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 4,
          "instability": 0.64,
          "cohesionScore": 0.66,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/core/src/platform/platform_core_providers.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.73,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/platform/platform_destroy_listeners.ts",
        "metrics": {
          "complexity": 2,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0.17
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.6,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 92
      },
      {
        "file": "packages/core/src/platform/platform_ref.ts",
        "metrics": {
          "complexity": 4,
          "loc": 92,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 14,
          "incomingDependencies": 3,
          "instability": 0.82,
          "cohesionScore": 0.61,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/reflection/platform_reflection_capabilities.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/reflection/reflection_capabilities.ts",
        "metrics": {
          "complexity": 58,
          "loc": 190,
          "functionCount": 21,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.64,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.9
          }
        ],
        "healthScore": 9
      },
      {
        "file": "packages/core/src/render/api.ts",
        "metrics": {
          "complexity": 2,
          "loc": 55,
          "functionCount": 26,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 5,
          "instability": 0.5,
          "cohesionScore": 0.58,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render/api_flags.ts",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.6,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/apply_value_input_field.ts",
        "metrics": {
          "complexity": 2,
          "loc": 13,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/assert.ts",
        "metrics": {
          "complexity": 22,
          "loc": 157,
          "functionCount": 21,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 43,
          "instability": 0.19,
          "cohesionScore": 0.67,
          "percentileUsageRank": 99,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/core/src/render3/bindings.ts",
        "metrics": {
          "complexity": 13,
          "loc": 71,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 10,
          "instability": 0.38,
          "cohesionScore": 0.71,
          "percentileUsageRank": 93,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/core/src/render3/chained_injector.ts",
        "metrics": {
          "complexity": 3,
          "loc": 26,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 4,
          "instability": 0.56,
          "cohesionScore": 0.58,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/collect_native_nodes.ts",
        "metrics": {
          "complexity": 17,
          "loc": 69,
          "functionCount": 2,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 3,
          "instability": 0.77,
          "cohesionScore": 0.71,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/core/src/render3/component.ts",
        "metrics": {
          "complexity": 4,
          "loc": 74,
          "functionCount": 16,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/component_ref.ts",
        "metrics": {
          "complexity": 32,
          "loc": 349,
          "functionCount": 21,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 43,
          "incomingDependencies": 6,
          "instability": 0.88,
          "cohesionScore": 0.68,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.16
          }
        ],
        "healthScore": 22
      },
      {
        "file": "packages/core/src/render3/context_discovery.ts",
        "metrics": {
          "complexity": 58,
          "loc": 223,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 14,
          "instability": 0.44,
          "cohesionScore": 0.66,
          "percentileUsageRank": 96,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.9
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 1
      },
      {
        "file": "packages/core/src/render3/def_getters.ts",
        "metrics": {
          "complexity": 10,
          "loc": 27,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 26,
          "instability": 0.16,
          "cohesionScore": 0.65,
          "percentileUsageRank": 98,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/definition.ts",
        "metrics": {
          "complexity": 51,
          "loc": 324,
          "functionCount": 21,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 19,
          "incomingDependencies": 4,
          "instability": 0.83,
          "cohesionScore": 0.65,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.55
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.08
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/render3/definition_factory.ts",
        "metrics": {
          "complexity": 5,
          "loc": 16,
          "functionCount": 3,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 6,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/di.ts",
        "metrics": {
          "complexity": 124,
          "loc": 618,
          "functionCount": 31,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 27,
          "incomingDependencies": 14,
          "instability": 0.66,
          "cohesionScore": 0.67,
          "percentileUsageRank": 96,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.2
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.06
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/render3/di_setup.ts",
        "metrics": {
          "complexity": 43,
          "loc": 292,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 15,
          "incomingDependencies": 1,
          "instability": 0.94,
          "cohesionScore": 0.64,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.15
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.46
          }
        ],
        "healthScore": 14
      },
      {
        "file": "packages/core/src/render3/dom_node_manipulation.ts",
        "metrics": {
          "complexity": 19,
          "loc": 88,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 13,
          "instability": 0.32,
          "cohesionScore": 0.64,
          "percentileUsageRank": 95,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 61
      },
      {
        "file": "packages/core/src/render3/errors.ts",
        "metrics": {
          "complexity": 20,
          "loc": 128,
          "functionCount": 7,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 5,
          "instability": 0.62,
          "cohesionScore": 0.67,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 58
      },
      {
        "file": "packages/core/src/render3/errors_di.ts",
        "metrics": {
          "complexity": 10,
          "loc": 54,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 4,
          "instability": 0.6,
          "cohesionScore": 0.59,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/fields.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 11,
          "instability": 0.08,
          "cohesionScore": 0.6,
          "percentileUsageRank": 94,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/global_utils_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 15,
          "functionCount": 0,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/hmr.ts",
        "metrics": {
          "complexity": 33,
          "loc": 219,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 20,
          "incomingDependencies": 1,
          "instability": 0.95,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.09
          }
        ],
        "healthScore": 35
      },
      {
        "file": "packages/core/src/render3/hooks.ts",
        "metrics": {
          "complexity": 31,
          "loc": 191,
          "functionCount": 8,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 6,
          "instability": 0.65,
          "cohesionScore": 0.68,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          }
        ],
        "healthScore": 45
      },
      {
        "file": "packages/core/src/render3/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 246,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 33,
          "incomingDependencies": 4,
          "instability": 0.89,
          "cohesionScore": 0.71,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.23
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/core/src/render3/list_reconciliation.ts",
        "metrics": {
          "complexity": 51,
          "loc": 331,
          "functionCount": 22,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.62,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.55
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/render3/local_compilation.ts",
        "metrics": {
          "complexity": 2,
          "loc": 22,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/metadata.ts",
        "metrics": {
          "complexity": 8,
          "loc": 55,
          "functionCount": 6,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 4,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/namespaces.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/render3/ng_module_ref.ts",
        "metrics": {
          "complexity": 8,
          "loc": 143,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 12,
          "incomingDependencies": 10,
          "instability": 0.55,
          "cohesionScore": 0.63,
          "percentileUsageRank": 93,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/node_assert.ts",
        "metrics": {
          "complexity": 11,
          "loc": 37,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 13,
          "instability": 0.13,
          "cohesionScore": 0.63,
          "percentileUsageRank": 95,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/core/src/render3/node_manipulation.ts",
        "metrics": {
          "complexity": 123,
          "loc": 645,
          "functionCount": 27,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 24,
          "incomingDependencies": 19,
          "instability": 0.56,
          "cohesionScore": 0.67,
          "percentileUsageRank": 97,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.15
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.15
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/render3/node_manipulation_i18n.ts",
        "metrics": {
          "complexity": 10,
          "loc": 48,
          "functionCount": 2,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 2,
          "instability": 0.8,
          "cohesionScore": 0.69,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/node_selector_matcher.ts",
        "metrics": {
          "complexity": 89,
          "loc": 295,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 5,
          "instability": 0.58,
          "cohesionScore": 0.65,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.45
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.48
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/render3/pipe.ts",
        "metrics": {
          "complexity": 21,
          "loc": 196,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 15,
          "incomingDependencies": 1,
          "instability": 0.94,
          "cohesionScore": 0.68,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/core/src/render3/profiler.ts",
        "metrics": {
          "complexity": 2,
          "loc": 10,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 12,
          "instability": 0.08,
          "cohesionScore": 0.8,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/profiler_types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 31,
          "functionCount": 0,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 13,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/pure_function.ts",
        "metrics": {
          "complexity": 28,
          "loc": 282,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.73,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.41
          }
        ],
        "healthScore": 36
      },
      {
        "file": "packages/core/src/render3/reactive_lview_consumer.ts",
        "metrics": {
          "complexity": 5,
          "loc": 67,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 3,
          "instability": 0.57,
          "cohesionScore": 0.58,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/scope.ts",
        "metrics": {
          "complexity": 8,
          "loc": 52,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 1,
          "instability": 0.91,
          "cohesionScore": 0.66,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/standalone_service.ts",
        "metrics": {
          "complexity": 6,
          "loc": 45,
          "functionCount": 4,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.62,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/state.ts",
        "metrics": {
          "complexity": 38,
          "loc": 378,
          "functionCount": 58,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 67,
          "instability": 0.11,
          "cohesionScore": 0.67,
          "percentileUsageRank": 100,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.26
          }
        ],
        "healthScore": 12
      },
      {
        "file": "packages/core/src/render3/tnode_manipulation.ts",
        "metrics": {
          "complexity": 27,
          "loc": 266,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 8,
          "instability": 0.47,
          "cohesionScore": 0.71,
          "percentileUsageRank": 89,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 38
      },
      {
        "file": "packages/core/src/render3/tokens.ts",
        "metrics": {
          "complexity": 3,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 13,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/view_context.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.71,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/view_engine_compatibility_prebound.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.64,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/view_manipulation.ts",
        "metrics": {
          "complexity": 8,
          "loc": 61,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 5,
          "instability": 0.67,
          "cohesionScore": 0.63,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/view_ref.ts",
        "metrics": {
          "complexity": 20,
          "loc": 147,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 17,
          "incomingDependencies": 7,
          "instability": 0.71,
          "cohesionScore": 0.66,
          "percentileUsageRank": 87,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 58
      },
      {
        "file": "packages/core/src/resource/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 57,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.53,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/resource/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/resource/resource.ts",
        "metrics": {
          "complexity": 33,
          "loc": 266,
          "functionCount": 33,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 13,
          "incomingDependencies": 2,
          "instability": 0.87,
          "cohesionScore": 0.55,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 32
      },
      {
        "file": "packages/core/src/sanitization/bypass.ts",
        "metrics": {
          "complexity": 8,
          "loc": 100,
          "functionCount": 24,
          "duplicationRatio": 0.16
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.6,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 92
      },
      {
        "file": "packages/core/src/sanitization/html_sanitizer.ts",
        "metrics": {
          "complexity": 38,
          "loc": 227,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 3,
          "instability": 0.63,
          "cohesionScore": 0.64,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.9
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.14
          }
        ],
        "healthScore": 28
      },
      {
        "file": "packages/core/src/sanitization/iframe_attrs_validation.ts",
        "metrics": {
          "complexity": 4,
          "loc": 30,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 2,
          "instability": 0.82,
          "cohesionScore": 0.53,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/sanitization/inert_body.ts",
        "metrics": {
          "complexity": 5,
          "loc": 48,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/sanitization/sanitization.ts",
        "metrics": {
          "complexity": 38,
          "loc": 129,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 14,
          "incomingDependencies": 3,
          "instability": 0.82,
          "cohesionScore": 0.63,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.9
          }
        ],
        "healthScore": 36
      },
      {
        "file": "packages/core/src/sanitization/sanitizer.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 4,
          "instability": 0.33,
          "cohesionScore": 0.65,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/sanitization/security.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/sanitization/url_sanitizer.ts",
        "metrics": {
          "complexity": 4,
          "loc": 10,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.6,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/testability/testability.externs.js",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/testability/testability.ts",
        "metrics": {
          "complexity": 15,
          "loc": 175,
          "functionCount": 29,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 3,
          "instability": 0.57,
          "cohesionScore": 0.6,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/core/src/util/array_utils.ts",
        "metrics": {
          "complexity": 24,
          "loc": 139,
          "functionCount": 18,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 19,
          "instability": 0.05,
          "cohesionScore": 0.8,
          "percentileUsageRank": 97,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/core/src/util/assert.ts",
        "metrics": {
          "complexity": 23,
          "loc": 116,
          "functionCount": 22,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 79,
          "instability": 0.02,
          "cohesionScore": 0.6,
          "percentileUsageRank": 100,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/core/src/util/callback_scheduler.ts",
        "metrics": {
          "complexity": 6,
          "loc": 34,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/util/char_code.ts",
        "metrics": {
          "complexity": 1,
          "loc": 36,
          "functionCount": 0,
          "duplicationRatio": 0.23
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.54
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/core/src/util/closure.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/util/coercion.ts",
        "metrics": {
          "complexity": 5,
          "loc": 7,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/util/comparison.ts",
        "metrics": {
          "complexity": 11,
          "loc": 16,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.8,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/core/src/util/decorators.ts",
        "metrics": {
          "complexity": 20,
          "loc": 132,
          "functionCount": 14,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 8,
          "instability": 0.2,
          "cohesionScore": 0.7,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 58
      },
      {
        "file": "packages/core/src/util/dom.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 2,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/util/empty.ts",
        "metrics": {
          "complexity": 4,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 14,
          "instability": 0.07,
          "cohesionScore": 0.8,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/util/global.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 11,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 94,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/util/is_dev_mode.ts",
        "metrics": {
          "complexity": 4,
          "loc": 9,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/util/iterable.ts",
        "metrics": {
          "complexity": 17,
          "loc": 42,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/core/src/util/lang.ts",
        "metrics": {
          "complexity": 3,
          "loc": 7,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/util/ng_dev_mode.ts",
        "metrics": {
          "complexity": 9,
          "loc": 88,
          "functionCount": 2,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 10,
          "instability": 0.09,
          "cohesionScore": 0.8,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/util/ng_hmr_mode.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0.23
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.54
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/core/src/util/ng_i18n_closure_mode.ts",
        "metrics": {
          "complexity": 3,
          "loc": 10,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/util/ng_jit_mode.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/util/ng_reflect.ts",
        "metrics": {
          "complexity": 3,
          "loc": 15,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/util/ng_server_mode.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0.21
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.43
          }
        ],
        "healthScore": 84
      },
      {
        "file": "packages/core/src/util/noop.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/util/performance.ts",
        "metrics": {
          "complexity": 2,
          "loc": 8,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 12,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/util/promise_with_resolvers.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/util/property.ts",
        "metrics": {
          "complexity": 6,
          "loc": 15,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 6,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/util/stringify.ts",
        "metrics": {
          "complexity": 15,
          "loc": 32,
          "functionCount": 3,
          "duplicationRatio": 0.16
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 22,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.09
          }
        ],
        "healthScore": 71
      },
      {
        "file": "packages/core/src/view/provider_flags.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/zone/async-stack-tagging.ts",
        "metrics": {
          "complexity": 3,
          "loc": 45,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/zone/ng_zone.ts",
        "metrics": {
          "complexity": 39,
          "loc": 310,
          "functionCount": 33,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 8,
          "instability": 0.43,
          "cohesionScore": 0.62,
          "percentileUsageRank": 89,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.95
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.03
          }
        ],
        "healthScore": 15
      },
      {
        "file": "packages/language-service/testing/src/buffer.ts",
        "metrics": {
          "complexity": 6,
          "loc": 97,
          "functionCount": 18,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.4,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/language-service/testing/src/env.ts",
        "metrics": {
          "complexity": 5,
          "loc": 84,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/language-service/testing/src/host.ts",
        "metrics": {
          "complexity": 3,
          "loc": 93,
          "functionCount": 24,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/language-service/testing/src/language_service_test_cache.ts",
        "metrics": {
          "complexity": 3,
          "loc": 54,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/language-service/testing/src/project.ts",
        "metrics": {
          "complexity": 21,
          "loc": 229,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 3,
          "instability": 0.57,
          "cohesionScore": 0.6,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 42
      },
      {
        "file": "packages/language-service/testing/src/util.ts",
        "metrics": {
          "complexity": 12,
          "loc": 103,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/localize/schematics/ng-add/index.ts",
        "metrics": {
          "complexity": 38,
          "loc": 129,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.9
          }
        ],
        "healthScore": 36
      },
      {
        "file": "packages/localize/schematics/ng-add/index_spec.ts",
        "metrics": {
          "complexity": 1,
          "loc": 188,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/localize/schematics/ng-add/schema.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/animations/async/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-browser/animations/async/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/misc/angular-in-memory-web-api/src/backend-service.ts",
        "metrics": {
          "complexity": 82,
          "loc": 485,
          "functionCount": 54,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.1
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.62
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/misc/angular-in-memory-web-api/src/delay-response.ts",
        "metrics": {
          "complexity": 3,
          "loc": 28,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/misc/angular-in-memory-web-api/src/http-client-backend-service.ts",
        "metrics": {
          "complexity": 8,
          "loc": 74,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/misc/angular-in-memory-web-api/src/http-client-in-memory-web-api-module.ts",
        "metrics": {
          "complexity": 1,
          "loc": 38,
          "functionCount": 3,
          "duplicationRatio": 0.44
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.45
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/misc/angular-in-memory-web-api/src/http-status-codes.ts",
        "metrics": {
          "complexity": 3,
          "loc": 509,
          "functionCount": 2,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.7
          }
        ],
        "healthScore": 68
      },
      {
        "file": "packages/misc/angular-in-memory-web-api/src/in-memory-web-api-module.ts",
        "metrics": {
          "complexity": 1,
          "loc": 31,
          "functionCount": 2,
          "duplicationRatio": 0.52
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.04
          }
        ],
        "healthScore": 16
      },
      {
        "file": "packages/misc/angular-in-memory-web-api/src/in-memory-web-api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/misc/angular-in-memory-web-api/src/interfaces.ts",
        "metrics": {
          "complexity": 4,
          "loc": 135,
          "functionCount": 4,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/animations/src/animations.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0.44
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.48
          }
        ],
        "healthScore": 46
      },
      {
        "file": "packages/platform-browser/animations/src/module.ts",
        "metrics": {
          "complexity": 2,
          "loc": 39,
          "functionCount": 3,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/animations/src/private_export.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/animations/src/providers.ts",
        "metrics": {
          "complexity": 5,
          "loc": 74,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.4,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/localize/src/localize/doc_index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/localize/src/localize/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/testing/src/browser.ts",
        "metrics": {
          "complexity": 1,
          "loc": 28,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/testing/src/dom_test_component_renderer.ts",
        "metrics": {
          "complexity": 3,
          "loc": 26,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/testing/src/testing.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0.8
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-browser-dynamic/src/resource_loader/resource_loader_impl.ts",
        "metrics": {
          "complexity": 5,
          "loc": 33,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/private/testing/matchers/index.ts",
        "metrics": {
          "complexity": 19,
          "loc": 144,
          "functionCount": 22,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.6,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 61
      },
      {
        "file": "packages/private/testing/src/browser_utils.ts",
        "metrics": {
          "complexity": 16,
          "loc": 111,
          "functionCount": 18,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/private/testing/src/globals.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/private/testing/src/utils.ts",
        "metrics": {
          "complexity": 11,
          "loc": 90,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/platform-browser/src/browser/browser_adapter.ts",
        "metrics": {
          "complexity": 8,
          "loc": 72,
          "functionCount": 17,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/src/browser/meta.ts",
        "metrics": {
          "complexity": 16,
          "loc": 97,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/platform-browser/src/browser/testability.ts",
        "metrics": {
          "complexity": 10,
          "loc": 62,
          "functionCount": 8,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/src/browser/title.ts",
        "metrics": {
          "complexity": 2,
          "loc": 12,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/src/browser/xhr.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/src/dom/dom_renderer.ts",
        "metrics": {
          "complexity": 61,
          "loc": 489,
          "functionCount": 52,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.69,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.05
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.63
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-browser/src/dom/shared_styles_host.ts",
        "metrics": {
          "complexity": 19,
          "loc": 141,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 61
      },
      {
        "file": "packages/platform-browser/src/dom/util.ts",
        "metrics": {
          "complexity": 4,
          "loc": 7,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser-dynamic/testing/src/testing.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.4,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-server/init/src/bundled-domino.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-server/init/src/init.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0.6
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-server/init/src/shims.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/src/security/dom_sanitization_service.ts",
        "metrics": {
          "complexity": 20,
          "loc": 104,
          "functionCount": 14,
          "duplicationRatio": 0.16
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.06
          }
        ],
        "healthScore": 51
      },
      {
        "file": "packages/platform-server/testing/src/server.ts",
        "metrics": {
          "complexity": 1,
          "loc": 28,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.4,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-server/testing/src/testing.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0.8
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/router/src/components/empty_outlet.ts",
        "metrics": {
          "complexity": 9,
          "loc": 25,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 5,
          "instability": 0.38,
          "cohesionScore": 0.6,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/router/testing/src/router_testing_harness.ts",
        "metrics": {
          "complexity": 12,
          "loc": 98,
          "functionCount": 12,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.4,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/router/testing/src/router_testing_module.ts",
        "metrics": {
          "complexity": 2,
          "loc": 35,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.4,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/router/testing/src/testing.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0.44
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.53,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.48
          }
        ],
        "healthScore": 46
      },
      {
        "file": "packages/router/src/directives/router_link.ts",
        "metrics": {
          "complexity": 33,
          "loc": 185,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 4,
          "instability": 0.64,
          "cohesionScore": 0.6,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          }
        ],
        "healthScore": 42
      },
      {
        "file": "packages/router/src/directives/router_link_active.ts",
        "metrics": {
          "complexity": 15,
          "loc": 133,
          "functionCount": 20,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 3,
          "instability": 0.57,
          "cohesionScore": 0.65,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/router/src/directives/router_outlet.ts",
        "metrics": {
          "complexity": 33,
          "loc": 259,
          "functionCount": 21,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 8,
          "instability": 0.38,
          "cohesionScore": 0.6,
          "percentileUsageRank": 89,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.29
          }
        ],
        "healthScore": 32
      },
      {
        "file": "packages/router/src/operators/activate_routes.ts",
        "metrics": {
          "complexity": 33,
          "loc": 197,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          }
        ],
        "healthScore": 42
      },
      {
        "file": "packages/router/src/operators/check_guards.ts",
        "metrics": {
          "complexity": 26,
          "loc": 246,
          "functionCount": 35,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 2,
          "instability": 0.78,
          "cohesionScore": 0.63,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.23
          }
        ],
        "healthScore": 39
      },
      {
        "file": "packages/router/src/operators/prioritized_guard_value.ts",
        "metrics": {
          "complexity": 7,
          "loc": 31,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/router/src/operators/recognize.ts",
        "metrics": {
          "complexity": 1,
          "loc": 32,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/router/src/operators/resolve_data.ts",
        "metrics": {
          "complexity": 13,
          "loc": 120,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/router/src/operators/switch_tap.ts",
        "metrics": {
          "complexity": 2,
          "loc": 13,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/router/src/statemanager/state_manager.ts",
        "metrics": {
          "complexity": 32,
          "loc": 193,
          "functionCount": 22,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 44
      },
      {
        "file": "packages/router/upgrade/src/upgrade.ts",
        "metrics": {
          "complexity": 6,
          "loc": 65,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.4,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/config/testing/mock.ts",
        "metrics": {
          "complexity": 1,
          "loc": 31,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/config/src/duration.ts",
        "metrics": {
          "complexity": 9,
          "loc": 38,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/config/src/filesystem.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/config/src/generator.ts",
        "metrics": {
          "complexity": 27,
          "loc": 166,
          "functionCount": 28,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/service-worker/config/src/glob.ts",
        "metrics": {
          "complexity": 6,
          "loc": 35,
          "functionCount": 2,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/config/src/in.ts",
        "metrics": {
          "complexity": 1,
          "loc": 32,
          "functionCount": 0,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/worker/src/adapter.ts",
        "metrics": {
          "complexity": 3,
          "loc": 42,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 9,
          "instability": 0.18,
          "cohesionScore": 0.8,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/worker/src/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 45,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/worker/src/app-version.ts",
        "metrics": {
          "complexity": 28,
          "loc": 182,
          "functionCount": 30,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 1,
          "instability": 0.89,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 47
      },
      {
        "file": "packages/service-worker/worker/src/assets.ts",
        "metrics": {
          "complexity": 54,
          "loc": 339,
          "functionCount": 32,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 1,
          "instability": 0.9,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.7
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/service-worker/worker/src/data.ts",
        "metrics": {
          "complexity": 48,
          "loc": 346,
          "functionCount": 26,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.4
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/service-worker/worker/src/database.ts",
        "metrics": {
          "complexity": 1,
          "loc": 19,
          "functionCount": 1,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/worker/src/db-cache.ts",
        "metrics": {
          "complexity": 4,
          "loc": 59,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 4,
          "instability": 0.43,
          "cohesionScore": 0.8,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/worker/src/debug.ts",
        "metrics": {
          "complexity": 10,
          "loc": 90,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.8,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/worker/src/driver.ts",
        "metrics": {
          "complexity": 101,
          "loc": 797,
          "functionCount": 86,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 1,
          "instability": 0.91,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.05
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.66
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/service-worker/worker/src/error.ts",
        "metrics": {
          "complexity": 2,
          "loc": 13,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/worker/src/idle.ts",
        "metrics": {
          "complexity": 9,
          "loc": 84,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.8,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/worker/src/manifest.ts",
        "metrics": {
          "complexity": 1,
          "loc": 37,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 6,
          "instability": 0.14,
          "cohesionScore": 0.8,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/worker/src/msg.ts",
        "metrics": {
          "complexity": 1,
          "loc": 24,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/worker/src/named-cache-storage.ts",
        "metrics": {
          "complexity": 1,
          "loc": 28,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/worker/src/service-worker.d.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/worker/src/sha1.ts",
        "metrics": {
          "complexity": 25,
          "loc": 160,
          "functionCount": 21,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          },
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/service-worker/worker/testing/cache.ts",
        "metrics": {
          "complexity": 17,
          "loc": 180,
          "functionCount": 31,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/service-worker/worker/testing/clients.ts",
        "metrics": {
          "complexity": 7,
          "loc": 81,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/worker/testing/events.ts",
        "metrics": {
          "complexity": 2,
          "loc": 111,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/service-worker/worker/testing/fetch.ts",
        "metrics": {
          "complexity": 24,
          "loc": 187,
          "functionCount": 26,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/service-worker/worker/testing/mock.ts",
        "metrics": {
          "complexity": 15,
          "loc": 245,
          "functionCount": 46,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.23
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/service-worker/worker/testing/scope.ts",
        "metrics": {
          "complexity": 26,
          "loc": 286,
          "functionCount": 40,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.73,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.43
          }
        ],
        "healthScore": 36
      },
      {
        "file": "packages/service-worker/worker/testing/utils.ts",
        "metrics": {
          "complexity": 5,
          "loc": 20,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/upgrade/static/src/angular1_providers.ts",
        "metrics": {
          "complexity": 2,
          "loc": 28,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.33,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/upgrade/static/src/downgrade_module.ts",
        "metrics": {
          "complexity": 4,
          "loc": 81,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.73,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/upgrade/static/src/upgrade_component.ts",
        "metrics": {
          "complexity": 29,
          "loc": 183,
          "functionCount": 16,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.45
          }
        ],
        "healthScore": 46
      },
      {
        "file": "packages/upgrade/static/src/upgrade_module.ts",
        "metrics": {
          "complexity": 9,
          "loc": 145,
          "functionCount": 23,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.73,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/upgrade/static/src/util.ts",
        "metrics": {
          "complexity": 2,
          "loc": 13,
          "functionCount": 2,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/upgrade/static/testing/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/upgrade/static/testing/public_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/src/dsl/animation.ts",
        "metrics": {
          "complexity": 9,
          "loc": 67,
          "functionCount": 2,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 1,
          "instability": 0.91,
          "cohesionScore": 0.72,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/src/dsl/animation_ast.ts",
        "metrics": {
          "complexity": 1,
          "loc": 96,
          "functionCount": 0,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 8,
          "instability": 0.11,
          "cohesionScore": 0.33,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/src/dsl/animation_ast_builder.ts",
        "metrics": {
          "complexity": 73,
          "loc": 570,
          "functionCount": 42,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 3,
          "instability": 0.75,
          "cohesionScore": 0.69,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.65
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.9
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/animations/browser/src/dsl/animation_dsl_visitor.ts",
        "metrics": {
          "complexity": 1,
          "loc": 30,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.33,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/src/dsl/animation_timeline_builder.ts",
        "metrics": {
          "complexity": 111,
          "loc": 805,
          "functionCount": 68,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 3,
          "instability": 0.7,
          "cohesionScore": 0.69,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.55
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.68
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/animations/browser/src/dsl/animation_timeline_instruction.ts",
        "metrics": {
          "complexity": 1,
          "loc": 40,
          "functionCount": 1,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 7,
          "instability": 0.22,
          "cohesionScore": 0.5,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/src/dsl/animation_transition_expr.ts",
        "metrics": {
          "complexity": 27,
          "loc": 82,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/animations/browser/src/dsl/animation_transition_factory.ts",
        "metrics": {
          "complexity": 25,
          "loc": 209,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 2,
          "instability": 0.85,
          "cohesionScore": 0.73,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.04
          }
        ],
        "healthScore": 42
      },
      {
        "file": "packages/animations/browser/src/dsl/animation_transition_instruction.ts",
        "metrics": {
          "complexity": 1,
          "loc": 53,
          "functionCount": 1,
          "duplicationRatio": 0.1
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.61,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/src/dsl/animation_trigger.ts",
        "metrics": {
          "complexity": 7,
          "loc": 79,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.68,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/src/dsl/element_instruction_map.ts",
        "metrics": {
          "complexity": 3,
          "loc": 20,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 5,
          "instability": 0.17,
          "cohesionScore": 0.83,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/testing/src/mock_animation_driver.ts",
        "metrics": {
          "complexity": 8,
          "loc": 127,
          "functionCount": 22,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.42,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/testing/src/testing.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/browser/api-util.ts",
        "metrics": {
          "complexity": 3,
          "loc": 75,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.68,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/browser/browser-legacy.ts",
        "metrics": {
          "complexity": 5,
          "loc": 32,
          "functionCount": 6,
          "duplicationRatio": 0.1
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/browser/browser-util.ts",
        "metrics": {
          "complexity": 10,
          "loc": 37,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/browser/browser.ts",
        "metrics": {
          "complexity": 40,
          "loc": 258,
          "functionCount": 33,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 3,
          "instability": 0.73,
          "cohesionScore": 0.67,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.29
          }
        ],
        "healthScore": 22
      },
      {
        "file": "packages/zone.js/lib/browser/canvas.ts",
        "metrics": {
          "complexity": 4,
          "loc": 15,
          "functionCount": 3,
          "duplicationRatio": 0.23
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.54
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/zone.js/lib/browser/custom-elements.ts",
        "metrics": {
          "complexity": 5,
          "loc": 17,
          "functionCount": 1,
          "duplicationRatio": 0.23
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.54
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/zone.js/lib/browser/define-property.ts",
        "metrics": {
          "complexity": 26,
          "loc": 118,
          "functionCount": 11,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/zone.js/lib/browser/event-target-legacy.ts",
        "metrics": {
          "complexity": 21,
          "loc": 108,
          "functionCount": 5,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/zone.js/lib/browser/event-target.ts",
        "metrics": {
          "complexity": 6,
          "loc": 26,
          "functionCount": 2,
          "duplicationRatio": 0.15
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/browser/message-port.ts",
        "metrics": {
          "complexity": 3,
          "loc": 9,
          "functionCount": 2,
          "duplicationRatio": 0.36
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.21
          }
        ],
        "healthScore": 61
      },
      {
        "file": "packages/zone.js/lib/browser/property-descriptor-legacy.ts",
        "metrics": {
          "complexity": 20,
          "loc": 352,
          "functionCount": 9,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.17
          }
        ],
        "healthScore": 36
      },
      {
        "file": "packages/zone.js/lib/browser/property-descriptor.ts",
        "metrics": {
          "complexity": 16,
          "loc": 100,
          "functionCount": 8,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/zone.js/lib/browser/register-element.ts",
        "metrics": {
          "complexity": 4,
          "loc": 13,
          "functionCount": 1,
          "duplicationRatio": 0.09
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/browser/rollup-browser-legacy.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/browser/rollup-canvas.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/browser/rollup-common.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 1,
          "duplicationRatio": 0.17
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 3,
          "instability": 0.57,
          "cohesionScore": 0.65,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 92
      },
      {
        "file": "packages/zone.js/lib/browser/rollup-legacy-main.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0.17
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 92
      },
      {
        "file": "packages/zone.js/lib/browser/rollup-legacy-test-main.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.7,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/lib/browser/rollup-main.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0.2
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.73,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 87
      },
      {
        "file": "packages/zone.js/lib/browser/rollup-message-port.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/browser/rollup-shadydom.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/browser/rollup-webapis-media-query.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/browser/rollup-webapis-notification.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/browser/rollup-webapis-resize-observer.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/browser/rollup-webapis-rtc-peer-connection.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/browser/rollup-webapis-user-media.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/browser/shadydom.ts",
        "metrics": {
          "complexity": 4,
          "loc": 23,
          "functionCount": 3,
          "duplicationRatio": 0.27
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.82
          }
        ],
        "healthScore": 76
      },
      {
        "file": "packages/zone.js/lib/browser/webapis-media-query.ts",
        "metrics": {
          "complexity": 12,
          "loc": 54,
          "functionCount": 10,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/zone.js/lib/browser/webapis-notification.ts",
        "metrics": {
          "complexity": 5,
          "loc": 14,
          "functionCount": 2,
          "duplicationRatio": 0.25
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/zone.js/lib/browser/webapis-resize-observer.ts",
        "metrics": {
          "complexity": 18,
          "loc": 96,
          "functionCount": 13,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/zone.js/lib/browser/webapis-rtc-peer-connection.ts",
        "metrics": {
          "complexity": 2,
          "loc": 16,
          "functionCount": 2,
          "duplicationRatio": 0.19
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/zone.js/lib/browser/webapis-user-media.ts",
        "metrics": {
          "complexity": 4,
          "loc": 16,
          "functionCount": 4,
          "duplicationRatio": 0.14
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/browser/websocket.ts",
        "metrics": {
          "complexity": 10,
          "loc": 40,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/common/error-rewrite.ts",
        "metrics": {
          "complexity": 53,
          "loc": 329,
          "functionCount": 36,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.65
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/lib/common/events.ts",
        "metrics": {
          "complexity": 185,
          "loc": 634,
          "functionCount": 29,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.8,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 9.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.11
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/lib/common/fetch.ts",
        "metrics": {
          "complexity": 12,
          "loc": 111,
          "functionCount": 16,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/zone.js/lib/common/promise.ts",
        "metrics": {
          "complexity": 100,
          "loc": 529,
          "functionCount": 55,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.7,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.76
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/lib/common/queue-microtask.ts",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 3,
          "duplicationRatio": 0.3
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 2
          }
        ],
        "healthScore": 72
      },
      {
        "file": "packages/zone.js/lib/common/rollup-error-rewrite.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/common/rollup-fetch.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/common/timers.ts",
        "metrics": {
          "complexity": 21,
          "loc": 126,
          "functionCount": 10,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/zone.js/lib/common/to-string.ts",
        "metrics": {
          "complexity": 10,
          "loc": 45,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.7,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/common/utils.ts",
        "metrics": {
          "complexity": 107,
          "loc": 430,
          "functionCount": 41,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 10,
          "instability": 0.09,
          "cohesionScore": 0.6,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.35
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.43
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/lib/extra/bluebird.ts",
        "metrics": {
          "complexity": 14,
          "loc": 72,
          "functionCount": 15,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/zone.js/lib/extra/cordova.ts",
        "metrics": {
          "complexity": 9,
          "loc": 40,
          "functionCount": 8,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/extra/electron.ts",
        "metrics": {
          "complexity": 8,
          "loc": 30,
          "functionCount": 5,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/extra/jsonp.ts",
        "metrics": {
          "complexity": 11,
          "loc": 71,
          "functionCount": 14,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/zone.js/lib/extra/rollup-bluebird.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/extra/rollup-cordova.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/extra/rollup-electron.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/extra/rollup-jsonp.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/extra/rollup-socket-io.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/extra/socket-io.ts",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 4,
          "duplicationRatio": 0.1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/src/render/animation_driver.ts",
        "metrics": {
          "complexity": 2,
          "loc": 50,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 10,
          "instability": 0.17,
          "cohesionScore": 0.58,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/src/render/animation_engine_instruction.ts",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/src/render/animation_engine_next.ts",
        "metrics": {
          "complexity": 8,
          "loc": 111,
          "functionCount": 15,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 4,
          "instability": 0.73,
          "cohesionScore": 0.69,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/src/render/animation_renderer.ts",
        "metrics": {
          "complexity": 11,
          "loc": 104,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/animations/browser/src/render/renderer.ts",
        "metrics": {
          "complexity": 15,
          "loc": 169,
          "functionCount": 31,
          "duplicationRatio": 0.1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.83,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/animations/browser/src/render/shared.ts",
        "metrics": {
          "complexity": 40,
          "loc": 197,
          "functionCount": 22,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 8,
          "instability": 0.33,
          "cohesionScore": 0.57,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2
          }
        ],
        "healthScore": 32
      },
      {
        "file": "packages/animations/browser/src/render/special_cased_styles.ts",
        "metrics": {
          "complexity": 18,
          "loc": 88,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/animations/browser/src/render/timeline_animation_engine.ts",
        "metrics": {
          "complexity": 21,
          "loc": 177,
          "functionCount": 15,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 12,
          "incomingDependencies": 1,
          "instability": 0.92,
          "cohesionScore": 0.66,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/animations/browser/src/render/transition_animation_engine.ts",
        "metrics": {
          "complexity": 227,
          "loc": 1510,
          "functionCount": 192,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 2,
          "instability": 0.85,
          "cohesionScore": 0.66,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 11.35
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.51
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/lib/jest/jest.ts",
        "metrics": {
          "complexity": 31,
          "loc": 243,
          "functionCount": 45,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.22
          }
        ],
        "healthScore": 36
      },
      {
        "file": "packages/zone.js/lib/mix/rollup-mix.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.6,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/mocha/mocha.ts",
        "metrics": {
          "complexity": 12,
          "loc": 140,
          "functionCount": 33,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/zone.js/lib/mocha/rollup-mocha.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/jasmine/jasmine.ts",
        "metrics": {
          "complexity": 58,
          "loc": 304,
          "functionCount": 33,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.01
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/lib/jasmine/rollup-jasmine.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/node/events.ts",
        "metrics": {
          "complexity": 9,
          "loc": 50,
          "functionCount": 5,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/node/fs.ts",
        "metrics": {
          "complexity": 7,
          "loc": 72,
          "functionCount": 6,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/node/main.ts",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 1,
          "duplicationRatio": 0.17
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.64,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 92
      },
      {
        "file": "packages/zone.js/lib/node/node.ts",
        "metrics": {
          "complexity": 16,
          "loc": 128,
          "functionCount": 17,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 2,
          "instability": 0.8,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/zone.js/lib/node/node_util.ts",
        "metrics": {
          "complexity": 1,
          "loc": 17,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/node/rollup-main.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/node/rollup-test-main.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.7,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/lib/rxjs/rollup-rxjs.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/rxjs/rxjs-fake-async.ts",
        "metrics": {
          "complexity": 1,
          "loc": 15,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.7,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/rxjs/rxjs.ts",
        "metrics": {
          "complexity": 26,
          "loc": 178,
          "functionCount": 26,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/zone.js/lib/testing/async-testing.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.6,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/testing/fake-async.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.6,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/testing/promise-testing.ts",
        "metrics": {
          "complexity": 5,
          "loc": 33,
          "functionCount": 5,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/testing/rollup-promise-testing.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/testing/rollup-zone-testing.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/testing/zone-testing.ts",
        "metrics": {
          "complexity": 1,
          "loc": 21,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 3,
          "instability": 0.77,
          "cohesionScore": 0.62,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/http/testing/src/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 29,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.67,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/http/testing/src/backend.ts",
        "metrics": {
          "complexity": 17,
          "loc": 106,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.72,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/common/http/testing/src/module.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/http/testing/src/provider.ts",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.72,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/http/testing/src/request.ts",
        "metrics": {
          "complexity": 43,
          "loc": 181,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.5,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.15
          }
        ],
        "healthScore": 26
      },
      {
        "file": "packages/zone.js/lib/zone-spec/async-test.ts",
        "metrics": {
          "complexity": 38,
          "loc": 232,
          "functionCount": 29,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.9
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.16
          }
        ],
        "healthScore": 28
      },
      {
        "file": "packages/zone.js/lib/zone-spec/fake-async-test.ts",
        "metrics": {
          "complexity": 110,
          "loc": 761,
          "functionCount": 70,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.5
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.54
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/zone.js/lib/zone-spec/long-stack-trace.ts",
        "metrics": {
          "complexity": 32,
          "loc": 155,
          "functionCount": 12,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 44
      },
      {
        "file": "packages/zone.js/lib/zone-spec/proxy.ts",
        "metrics": {
          "complexity": 35,
          "loc": 218,
          "functionCount": 23,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.09
          }
        ],
        "healthScore": 33
      },
      {
        "file": "packages/zone.js/lib/zone-spec/rollup-long-stack-trace.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/zone-spec/rollup-proxy.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/zone-spec/rollup-sync-test.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/zone-spec/rollup-task-tracking.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/zone-spec/rollup-wtf.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.8,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/zone-spec/sync-test.ts",
        "metrics": {
          "complexity": 5,
          "loc": 22,
          "functionCount": 3,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/zone.js/lib/zone-spec/task-tracking.ts",
        "metrics": {
          "complexity": 12,
          "loc": 75,
          "functionCount": 7,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/zone.js/lib/zone-spec/wtf.ts",
        "metrics": {
          "complexity": 26,
          "loc": 168,
          "functionCount": 10,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/common/locales/generate-locales-tool/bin/base-locale.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/locales/generate-locales-tool/bin/get-base-currencies-file.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.72,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/locales/generate-locales-tool/bin/get-base-locale-file.ts",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.71,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/locales/generate-locales-tool/bin/get-closure-locale-file.ts",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.71,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/locales/generate-locales-tool/bin/write-locale-files-to-dist.ts",
        "metrics": {
          "complexity": 2,
          "loc": 35,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "incomingDependencies": 0,
          "outgoingDependencies": 0,
          "instability": 0,
          "cohesionScore": 0,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/testing/src/navigation/fake_navigation.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/testing/src/navigation/provide_fake_platform_navigation.ts",
        "metrics": {
          "complexity": 2,
          "loc": 29,
          "functionCount": 3,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.61,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/asserts.ts",
        "metrics": {
          "complexity": 2,
          "loc": 11,
          "functionCount": 1,
          "duplicationRatio": 0.15
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.03
          }
        ],
        "healthScore": 93
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/error_helper.ts",
        "metrics": {
          "complexity": 2,
          "loc": 6,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 1,
          "instability": 0.89,
          "cohesionScore": 0.74,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/lcp_image_observer.ts",
        "metrics": {
          "complexity": 16,
          "loc": 108,
          "functionCount": 9,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/ng_optimized_image.ts",
        "metrics": {
          "complexity": 131,
          "loc": 866,
          "functionCount": 68,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 1,
          "instability": 0.91,
          "cohesionScore": 0.74,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.55
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.89
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/preconnect_link_checker.ts",
        "metrics": {
          "complexity": 12,
          "loc": 76,
          "functionCount": 7,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.7,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/preload-link-creator.ts",
        "metrics": {
          "complexity": 7,
          "loc": 49,
          "functionCount": 1,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.61,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/tokens.ts",
        "metrics": {
          "complexity": 3,
          "loc": 9,
          "functionCount": 1,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/url.ts",
        "metrics": {
          "complexity": 8,
          "loc": 27,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/babel/src/babel_declaration_scope.ts",
        "metrics": {
          "complexity": 8,
          "loc": 31,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/babel/src/babel_plugin.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/babel/src/es2015_linker_plugin.ts",
        "metrics": {
          "complexity": 19,
          "loc": 119,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.72,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 61
      },
      {
        "file": "packages/compiler-cli/linker/babel/src/linker_plugin_options.ts",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.39,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 30,
          "functionCount": 0,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 9,
          "instability": 0.4,
          "cohesionScore": 0.71,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/ast/ast_host.ts",
        "metrics": {
          "complexity": 1,
          "loc": 27,
          "functionCount": 0,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 6,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/ast/ast_value.ts",
        "metrics": {
          "complexity": 4,
          "loc": 166,
          "functionCount": 39,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 12,
          "instability": 0.14,
          "cohesionScore": 0.75,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/ast/utils.ts",
        "metrics": {
          "complexity": 2,
          "loc": 10,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/declaration_scope.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/file_linker.ts",
        "metrics": {
          "complexity": 5,
          "loc": 77,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/get_source_file.ts",
        "metrics": {
          "complexity": 3,
          "loc": 20,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.33,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/linker_environment.ts",
        "metrics": {
          "complexity": 2,
          "loc": 38,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 3,
          "instability": 0.7,
          "cohesionScore": 0.52,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/linker_options.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/needs_linking.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/translator.ts",
        "metrics": {
          "complexity": 1,
          "loc": 41,
          "functionCount": 3,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.33,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/core/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.71,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/cycles/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.71,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/diagnostics/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 52,
          "instability": 0.1,
          "cohesionScore": 0.71,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/entry_point/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.71,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/file_system/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 31,
          "functionCount": 0,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 58,
          "instability": 0.12,
          "cohesionScore": 0.71,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/hmr/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/imports/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 40,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 68,
          "instability": 0.14,
          "cohesionScore": 0.71,
          "percentileUsageRank": 100,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/indexer/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 5,
          "instability": 0.38,
          "cohesionScore": 0.71,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/incremental/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 9,
          "instability": 0.1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/incremental/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 4,
          "instability": 0.5,
          "cohesionScore": 0.71,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/metadata/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 25,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 27,
          "instability": 0.25,
          "cohesionScore": 0.71,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/logging/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 8,
          "instability": 0.2,
          "cohesionScore": 0.71,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/partial_evaluator/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 17,
          "instability": 0.26,
          "cohesionScore": 0.71,
          "percentileUsageRank": 97,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/perf/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 16,
          "instability": 0.16,
          "cohesionScore": 0.71,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/program_driver/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 7,
          "instability": 0.22,
          "cohesionScore": 0.71,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/reflection/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 15,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 100,
          "instability": 0.04,
          "cohesionScore": 0.71,
          "percentileUsageRank": 100,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/resource/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/scope/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 9,
          "instability": 0.4,
          "cohesionScore": 0.71,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/sourcemaps/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 3,
          "instability": 0.57,
          "cohesionScore": 0.71,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/shims/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 15,
          "functionCount": 0,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.67,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/shims/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 7,
          "instability": 0.3,
          "cohesionScore": 0.71,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/testing/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 17,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 17,
          "instability": 0.26,
          "cohesionScore": 0.71,
          "percentileUsageRank": 97,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 33,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 18,
          "instability": 0.33,
          "cohesionScore": 0.68,
          "percentileUsageRank": 97,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 4,
          "instability": 0.5,
          "cohesionScore": 0.71,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/di/src/injection_token.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.83,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/di/src/injector.ts",
        "metrics": {
          "complexity": 1,
          "loc": 16,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/di/src/not_found.ts",
        "metrics": {
          "complexity": 2,
          "loc": 10,
          "functionCount": 2,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/di/src/type.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 1,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/primitives/dom-navigation/src/navigation_types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 145,
          "functionCount": 21,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/validation/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/xi18n/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.71,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/dom-navigation/testing/fake_navigation.ts",
        "metrics": {
          "complexity": 79,
          "loc": 919,
          "functionCount": 95,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.95
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 3.06
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/primitives/dom-navigation/testing/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/signals/src/computed.ts",
        "metrics": {
          "complexity": 10,
          "loc": 86,
          "functionCount": 5,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/signals/src/equality.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/signals/src/errors.ts",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.83,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/signals/src/graph.ts",
        "metrics": {
          "complexity": 44,
          "loc": 253,
          "functionCount": 25,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 6,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.2
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.26
          }
        ],
        "healthScore": 14
      },
      {
        "file": "packages/core/primitives/signals/src/linked_signal.ts",
        "metrics": {
          "complexity": 11,
          "loc": 106,
          "functionCount": 7,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/core/primitives/signals/src/signal.ts",
        "metrics": {
          "complexity": 5,
          "loc": 75,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/signals/src/untracked.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/signals/src/watch.ts",
        "metrics": {
          "complexity": 9,
          "loc": 98,
          "functionCount": 11,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/signals/src/weak_ref.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/i18n/serializers/placeholder.ts",
        "metrics": {
          "complexity": 12,
          "loc": 121,
          "functionCount": 13,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/compiler/src/i18n/serializers/serializer.ts",
        "metrics": {
          "complexity": 6,
          "loc": 72,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 8,
          "instability": 0.11,
          "cohesionScore": 0.67,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/i18n/serializers/xliff.ts",
        "metrics": {
          "complexity": 25,
          "loc": 303,
          "functionCount": 45,
          "duplicationRatio": 0.31
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 2,
          "instability": 0.78,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.01
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.04
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/i18n/serializers/xliff2.ts",
        "metrics": {
          "complexity": 38,
          "loc": 358,
          "functionCount": 53,
          "duplicationRatio": 0.26
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 2,
          "instability": 0.78,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.19
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.73
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/i18n/serializers/xmb.ts",
        "metrics": {
          "complexity": 10,
          "loc": 171,
          "functionCount": 26,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 4,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/i18n/serializers/xml_helper.ts",
        "metrics": {
          "complexity": 3,
          "loc": 100,
          "functionCount": 22,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/i18n/serializers/xtb.ts",
        "metrics": {
          "complexity": 14,
          "loc": 172,
          "functionCount": 35,
          "duplicationRatio": 0.18
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 2,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.19
          }
        ],
        "healthScore": 72
      },
      {
        "file": "packages/compiler/src/render3/partial/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 141,
          "functionCount": 0,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 10,
          "instability": 0.23,
          "cohesionScore": 0.5,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/partial/class_metadata.ts",
        "metrics": {
          "complexity": 3,
          "loc": 48,
          "functionCount": 3,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/partial/component.ts",
        "metrics": {
          "complexity": 23,
          "loc": 205,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 14,
          "incomingDependencies": 1,
          "instability": 0.93,
          "cohesionScore": 0.65,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.02
          }
        ],
        "healthScore": 44
      },
      {
        "file": "packages/compiler/src/render3/partial/directive.ts",
        "metrics": {
          "complexity": 34,
          "loc": 216,
          "functionCount": 17,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 2,
          "instability": 0.8,
          "cohesionScore": 0.69,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.08
          }
        ],
        "healthScore": 34
      },
      {
        "file": "packages/compiler/src/render3/partial/factory.ts",
        "metrics": {
          "complexity": 1,
          "loc": 23,
          "functionCount": 1,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 1,
          "instability": 0.89,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/partial/injectable.ts",
        "metrics": {
          "complexity": 8,
          "loc": 47,
          "functionCount": 2,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/partial/injector.ts",
        "metrics": {
          "complexity": 2,
          "loc": 27,
          "functionCount": 2,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/partial/ng_module.ts",
        "metrics": {
          "complexity": 9,
          "loc": 50,
          "functionCount": 3,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/partial/pipe.ts",
        "metrics": {
          "complexity": 3,
          "loc": 30,
          "functionCount": 2,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/partial/util.ts",
        "metrics": {
          "complexity": 11,
          "loc": 58,
          "functionCount": 6,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 4,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/core/schematics/ng-generate/cleanup-unused-imports/index.ts",
        "metrics": {
          "complexity": 5,
          "loc": 37,
          "functionCount": 7,
          "duplicationRatio": 0.17
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.83,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/core/schematics/ng-generate/cleanup-unused-imports/unused_imports_migration.ts",
        "metrics": {
          "complexity": 40,
          "loc": 259,
          "functionCount": 22,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.29
          }
        ],
        "healthScore": 22
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/a11y_click.ts",
        "metrics": {
          "complexity": 9,
          "loc": 36,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/action_resolver.ts",
        "metrics": {
          "complexity": 32,
          "loc": 166,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 2,
          "instability": 0.8,
          "cohesionScore": 0.83,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 44
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/attribute.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/bootstrap_app_scoped.ts",
        "metrics": {
          "complexity": 3,
          "loc": 54,
          "functionCount": 5,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.83,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/bootstrap_global.ts",
        "metrics": {
          "complexity": 1,
          "loc": 33,
          "functionCount": 5,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.83,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/cache.ts",
        "metrics": {
          "complexity": 2,
          "loc": 24,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.83,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/char.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0.1
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/dispatcher.ts",
        "metrics": {
          "complexity": 9,
          "loc": 70,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/earlyeventcontract.ts",
        "metrics": {
          "complexity": 6,
          "loc": 96,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.83,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/event.ts",
        "metrics": {
          "complexity": 98,
          "loc": 364,
          "functionCount": 26,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 5,
          "instability": 0.38,
          "cohesionScore": 0.83,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.21
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/event_contract_container.ts",
        "metrics": {
          "complexity": 4,
          "loc": 33,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/event_contract_defines.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0.25
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/event_dispatcher.ts",
        "metrics": {
          "complexity": 9,
          "loc": 126,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.76,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/event_handler.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/event_info.ts",
        "metrics": {
          "complexity": 4,
          "loc": 206,
          "functionCount": 42,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 9,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.03
          }
        ],
        "healthScore": 94
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/event_type.ts",
        "metrics": {
          "complexity": 1,
          "loc": 111,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/eventcontract.ts",
        "metrics": {
          "complexity": 16,
          "loc": 124,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 3,
          "instability": 0.7,
          "cohesionScore": 0.83,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/key_code.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0.13
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/property.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/restriction.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0.2
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 87
      },
      {
        "file": "packages/compiler/src/render3/view/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 149,
          "functionCount": 0,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 10,
          "instability": 0.41,
          "cohesionScore": 0.57,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/view/compiler.ts",
        "metrics": {
          "complexity": 99,
          "loc": 565,
          "functionCount": 32,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 17,
          "incomingDependencies": 4,
          "instability": 0.81,
          "cohesionScore": 0.61,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.95
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.88
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/render3/view/config.ts",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/view/query_generation.ts",
        "metrics": {
          "complexity": 24,
          "loc": 178,
          "functionCount": 13,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.64,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/compiler/src/render3/view/t2_api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 85,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.58,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/view/t2_binder.ts",
        "metrics": {
          "complexity": 89,
          "loc": 828,
          "functionCount": 170,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 2,
          "instability": 0.75,
          "cohesionScore": 0.69,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.45
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.76
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/render3/view/template.ts",
        "metrics": {
          "complexity": 13,
          "loc": 153,
          "functionCount": 2,
          "duplicationRatio": 0.12
        },
        "dependencies": {
          "outgoingDependencies": 13,
          "incomingDependencies": 5,
          "instability": 0.72,
          "cohesionScore": 0.54,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/compiler/src/render3/view/util.ts",
        "metrics": {
          "complexity": 23,
          "loc": 155,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 16,
          "instability": 0.3,
          "cohesionScore": 0.55,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/core/schematics/ng-generate/inject-migration/analysis.ts",
        "metrics": {
          "complexity": 91,
          "loc": 303,
          "functionCount": 28,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.55
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.01
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/ng-generate/inject-migration/index.ts",
        "metrics": {
          "complexity": 11,
          "loc": 64,
          "functionCount": 4,
          "duplicationRatio": 0.23
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.83,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.55
          }
        ],
        "healthScore": 73
      },
      {
        "file": "packages/core/schematics/ng-generate/inject-migration/internal.ts",
        "metrics": {
          "complexity": 61,
          "loc": 221,
          "functionCount": 19,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.05
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 1
      },
      {
        "file": "packages/core/schematics/ng-generate/inject-migration/migration.ts",
        "metrics": {
          "complexity": 128,
          "loc": 614,
          "functionCount": 31,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.4
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.05
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/ng-generate/control-flow-migration/cases.ts",
        "metrics": {
          "complexity": 15,
          "loc": 91,
          "functionCount": 3,
          "duplicationRatio": 0.32
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 44
      },
      {
        "file": "packages/core/schematics/ng-generate/control-flow-migration/fors.ts",
        "metrics": {
          "complexity": 37,
          "loc": 208,
          "functionCount": 5,
          "duplicationRatio": 0.14
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.85
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.04
          }
        ],
        "healthScore": 30
      },
      {
        "file": "packages/core/schematics/ng-generate/control-flow-migration/identifier-lookup.ts",
        "metrics": {
          "complexity": 3,
          "loc": 15,
          "functionCount": 2,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/ng-generate/control-flow-migration/ifs.ts",
        "metrics": {
          "complexity": 29,
          "loc": 219,
          "functionCount": 10,
          "duplicationRatio": 0.13
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.45
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.09
          }
        ],
        "healthScore": 39
      },
      {
        "file": "packages/core/schematics/ng-generate/control-flow-migration/index.ts",
        "metrics": {
          "complexity": 15,
          "loc": 116,
          "functionCount": 9,
          "duplicationRatio": 0.15
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.83,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/core/schematics/ng-generate/control-flow-migration/migration.ts",
        "metrics": {
          "complexity": 16,
          "loc": 84,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/core/schematics/ng-generate/control-flow-migration/switches.ts",
        "metrics": {
          "complexity": 13,
          "loc": 92,
          "functionCount": 3,
          "duplicationRatio": 0.25
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/core/schematics/ng-generate/control-flow-migration/types.ts",
        "metrics": {
          "complexity": 54,
          "loc": 415,
          "functionCount": 51,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 7,
          "instability": 0.13,
          "cohesionScore": 0.83,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.7
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.38
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/ng-generate/control-flow-migration/util.ts",
        "metrics": {
          "complexity": 165,
          "loc": 756,
          "functionCount": 53,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 6,
          "instability": 0.14,
          "cohesionScore": 0.83,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 8.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.52
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/ng-generate/output-migration/index.ts",
        "metrics": {
          "complexity": 4,
          "loc": 60,
          "functionCount": 12,
          "duplicationRatio": 0.55
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 4
      },
      {
        "file": "packages/core/schematics/ng-generate/route-lazy-loading/index.ts",
        "metrics": {
          "complexity": 14,
          "loc": 109,
          "functionCount": 5,
          "duplicationRatio": 0.13
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.83,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/core/schematics/ng-generate/route-lazy-loading/to-lazy-routes.ts",
        "metrics": {
          "complexity": 40,
          "loc": 259,
          "functionCount": 12,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.29
          }
        ],
        "healthScore": 22
      },
      {
        "file": "packages/core/schematics/ng-generate/route-lazy-loading/util.ts",
        "metrics": {
          "complexity": 22,
          "loc": 89,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/core/schematics/ng-generate/self-closing-tags-migration/index.ts",
        "metrics": {
          "complexity": 3,
          "loc": 49,
          "functionCount": 9,
          "duplicationRatio": 0.45
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.52
          }
        ],
        "healthScore": 44
      },
      {
        "file": "packages/core/schematics/ng-generate/signal-input-migration/index.ts",
        "metrics": {
          "complexity": 7,
          "loc": 71,
          "functionCount": 12,
          "duplicationRatio": 0.44
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.43,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.46
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/core/schematics/ng-generate/signal-queries-migration/index.ts",
        "metrics": {
          "complexity": 7,
          "loc": 73,
          "functionCount": 12,
          "duplicationRatio": 0.35
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.16
          }
        ],
        "healthScore": 63
      },
      {
        "file": "packages/core/schematics/ng-generate/signals/index.ts",
        "metrics": {
          "complexity": 6,
          "loc": 36,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/ng-generate/standalone-migration/index.ts",
        "metrics": {
          "complexity": 17,
          "loc": 164,
          "functionCount": 5,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.83,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/core/schematics/ng-generate/standalone-migration/prune-modules.ts",
        "metrics": {
          "complexity": 103,
          "loc": 505,
          "functionCount": 28,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.15
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.68
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/ng-generate/standalone-migration/standalone-bootstrap.ts",
        "metrics": {
          "complexity": 138,
          "loc": 706,
          "functionCount": 32,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.35
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/ng-generate/standalone-migration/to-standalone.ts",
        "metrics": {
          "complexity": 137,
          "loc": 643,
          "functionCount": 37,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.83,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.85
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.14
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/ng-generate/standalone-migration/util.ts",
        "metrics": {
          "complexity": 49,
          "loc": 255,
          "functionCount": 33,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.45
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 3
      },
      {
        "file": "packages/core/schematics/migrations/explicit-standalone-flag/index.ts",
        "metrics": {
          "complexity": 7,
          "loc": 42,
          "functionCount": 5,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.83,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/migrations/explicit-standalone-flag/migration.ts",
        "metrics": {
          "complexity": 36,
          "loc": 117,
          "functionCount": 7,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.8
          }
        ],
        "healthScore": 39
      },
      {
        "file": "packages/forms/src/directives/reactive_directives/form_control_directive.ts",
        "metrics": {
          "complexity": 10,
          "loc": 111,
          "functionCount": 9,
          "duplicationRatio": 0.14
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 3,
          "instability": 0.7,
          "cohesionScore": 0.62,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/forms/src/directives/reactive_directives/form_control_name.ts",
        "metrics": {
          "complexity": 17,
          "loc": 119,
          "functionCount": 10,
          "duplicationRatio": 0.12
        },
        "dependencies": {
          "outgoingDependencies": 12,
          "incomingDependencies": 3,
          "instability": 0.8,
          "cohesionScore": 0.68,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/forms/src/directives/reactive_directives/form_group_directive.ts",
        "metrics": {
          "complexity": 16,
          "loc": 202,
          "functionCount": 32,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 12,
          "incomingDependencies": 5,
          "instability": 0.71,
          "cohesionScore": 0.62,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.01
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/forms/src/directives/reactive_directives/form_group_name.ts",
        "metrics": {
          "complexity": 11,
          "loc": 102,
          "functionCount": 11,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 5,
          "instability": 0.62,
          "cohesionScore": 0.65,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/core/schematics/migrations/output-migration/output-migration.ts",
        "metrics": {
          "complexity": 61,
          "loc": 430,
          "functionCount": 15,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.05
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.43
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/migrations/output-migration/output-replacements.ts",
        "metrics": {
          "complexity": 11,
          "loc": 181,
          "functionCount": 10,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/core/schematics/migrations/output-migration/output_helpers.ts",
        "metrics": {
          "complexity": 26,
          "loc": 153,
          "functionCount": 13,
          "duplicationRatio": 0.1
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.44,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/core/schematics/migrations/pending-tasks/index.ts",
        "metrics": {
          "complexity": 7,
          "loc": 42,
          "functionCount": 5,
          "duplicationRatio": 0.84
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.83,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.68
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/migrations/pending-tasks/migration.ts",
        "metrics": {
          "complexity": 10,
          "loc": 48,
          "functionCount": 2,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/provide-initializer/index.ts",
        "metrics": {
          "complexity": 7,
          "loc": 42,
          "functionCount": 5,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.83,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/migrations/provide-initializer/utils.ts",
        "metrics": {
          "complexity": 25,
          "loc": 144,
          "functionCount": 7,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/core/schematics/migrations/self-closing-tags-migration/self-closing-tags-migration.ts",
        "metrics": {
          "complexity": 8,
          "loc": 128,
          "functionCount": 12,
          "duplicationRatio": 0.12
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/self-closing-tags-migration/to-self-closing-tags.ts",
        "metrics": {
          "complexity": 13,
          "loc": 99,
          "functionCount": 8,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/core/schematics/migrations/self-closing-tags-migration/util.ts",
        "metrics": {
          "complexity": 4,
          "loc": 26,
          "functionCount": 2,
          "duplicationRatio": 0.48
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 37
      },
      {
        "file": "packages/language-service/src/refactorings/convert_to_signal_input/apply_input_refactoring.ts",
        "metrics": {
          "complexity": 16,
          "loc": 128,
          "functionCount": 7,
          "duplicationRatio": 0.21
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.33,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.42
          }
        ],
        "healthScore": 55
      },
      {
        "file": "packages/language-service/src/refactorings/convert_to_signal_input/decorators.ts",
        "metrics": {
          "complexity": 3,
          "loc": 23,
          "functionCount": 3,
          "duplicationRatio": 0.44
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.48
          }
        ],
        "healthScore": 46
      },
      {
        "file": "packages/language-service/src/refactorings/convert_to_signal_input/full_class_input_refactoring.ts",
        "metrics": {
          "complexity": 14,
          "loc": 89,
          "functionCount": 5,
          "duplicationRatio": 0.52
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          },
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.04
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/language-service/src/refactorings/convert_to_signal_input/individual_input_refactoring.ts",
        "metrics": {
          "complexity": 15,
          "loc": 89,
          "functionCount": 5,
          "duplicationRatio": 0.48
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.61
          }
        ],
        "healthScore": 15
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/convert_query_property.ts",
        "metrics": {
          "complexity": 34,
          "loc": 125,
          "functionCount": 4,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          }
        ],
        "healthScore": 41
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/field_tracking.ts",
        "metrics": {
          "complexity": 7,
          "loc": 38,
          "functionCount": 2,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.44,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/fn_first_last_replacement.ts",
        "metrics": {
          "complexity": 11,
          "loc": 67,
          "functionCount": 1,
          "duplicationRatio": 0.29
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.7,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.92
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/fn_get_replacement.ts",
        "metrics": {
          "complexity": 11,
          "loc": 62,
          "functionCount": 1,
          "duplicationRatio": 0.6
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.7,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          },
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/fn_to_array_removal.ts",
        "metrics": {
          "complexity": 11,
          "loc": 62,
          "functionCount": 1,
          "duplicationRatio": 0.56
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.7,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          },
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.12
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/identify_queries.ts",
        "metrics": {
          "complexity": 14,
          "loc": 83,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.64,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/incompatibility.ts",
        "metrics": {
          "complexity": 6,
          "loc": 38,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.63,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/incompatible_query_list_fns.ts",
        "metrics": {
          "complexity": 8,
          "loc": 40,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/known_queries.ts",
        "metrics": {
          "complexity": 15,
          "loc": 153,
          "functionCount": 16,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 5,
          "instability": 0.67,
          "cohesionScore": 0.65,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/migration.ts",
        "metrics": {
          "complexity": 72,
          "loc": 527,
          "functionCount": 23,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 24,
          "incomingDependencies": 8,
          "instability": 0.75,
          "cohesionScore": 0.63,
          "percentileUsageRank": 89,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.6
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.76
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/migration_config.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.44,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/property_accesses.ts",
        "metrics": {
          "complexity": 14,
          "loc": 78,
          "functionCount": 4,
          "duplicationRatio": 0.16
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 4,
          "instability": 0.33,
          "cohesionScore": 0.51,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 74
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/query_api_names.ts",
        "metrics": {
          "complexity": 5,
          "loc": 13,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/query_list_type.ts",
        "metrics": {
          "complexity": 7,
          "loc": 18,
          "functionCount": 1,
          "duplicationRatio": 0.1
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/language-service/src/refactorings/convert_to_signal_queries/apply_query_refactoring.ts",
        "metrics": {
          "complexity": 17,
          "loc": 117,
          "functionCount": 8,
          "duplicationRatio": 0.24
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.2,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.59
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/language-service/src/refactorings/convert_to_signal_queries/decorators.ts",
        "metrics": {
          "complexity": 3,
          "loc": 29,
          "functionCount": 3,
          "duplicationRatio": 0.33
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/language-service/src/refactorings/convert_to_signal_queries/full_class_query_refactoring.ts",
        "metrics": {
          "complexity": 14,
          "loc": 89,
          "functionCount": 5,
          "duplicationRatio": 0.52
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          },
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.04
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/language-service/src/refactorings/convert_to_signal_queries/individual_query_refactoring.ts",
        "metrics": {
          "complexity": 14,
          "loc": 86,
          "functionCount": 5,
          "duplicationRatio": 0.5
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 13
      },
      {
        "file": "packages/core/src/authoring/input/input.ts",
        "metrics": {
          "complexity": 3,
          "loc": 46,
          "functionCount": 3,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.72,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/authoring/input/input_signal.ts",
        "metrics": {
          "complexity": 5,
          "loc": 49,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 5,
          "instability": 0.44,
          "cohesionScore": 0.54,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/authoring/input/input_signal_node.ts",
        "metrics": {
          "complexity": 1,
          "loc": 16,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 9,
          "instability": 0.1,
          "cohesionScore": 0.33,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/authoring/input/input_type_checking.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/authoring/model/model.ts",
        "metrics": {
          "complexity": 3,
          "loc": 25,
          "functionCount": 3,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/authoring/model/model_signal.ts",
        "metrics": {
          "complexity": 5,
          "loc": 66,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 2,
          "instability": 0.8,
          "cohesionScore": 0.56,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/authoring/output/output.ts",
        "metrics": {
          "complexity": 2,
          "loc": 9,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/authoring/output/output_emitter_ref.ts",
        "metrics": {
          "complexity": 10,
          "loc": 68,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 3,
          "instability": 0.67,
          "cohesionScore": 0.53,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/authoring/output/output_ref.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.5,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/change_detection/differs/default_iterable_differ.ts",
        "metrics": {
          "complexity": 89,
          "loc": 523,
          "functionCount": 40,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.57,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.45
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.74
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/change_detection/differs/default_keyvalue_differ.ts",
        "metrics": {
          "complexity": 37,
          "loc": 224,
          "functionCount": 22,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.58,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.85
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.12
          }
        ],
        "healthScore": 29
      },
      {
        "file": "packages/core/src/change_detection/differs/iterable_differs.ts",
        "metrics": {
          "complexity": 6,
          "loc": 81,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.57,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/change_detection/differs/keyvalue_differs.ts",
        "metrics": {
          "complexity": 5,
          "loc": 63,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.61,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/change_detection/scheduling/exhaustive_check_no_changes.ts",
        "metrics": {
          "complexity": 20,
          "loc": 130,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 1,
          "instability": 0.92,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 58
      },
      {
        "file": "packages/core/src/change_detection/scheduling/flags.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/change_detection/scheduling/ng_zone_scheduling.ts",
        "metrics": {
          "complexity": 18,
          "loc": 178,
          "functionCount": 20,
          "duplicationRatio": 0.12
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 5,
          "instability": 0.64,
          "cohesionScore": 0.57,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/core/src/change_detection/scheduling/zoneless_scheduling.ts",
        "metrics": {
          "complexity": 9,
          "loc": 35,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 21,
          "instability": 0.05,
          "cohesionScore": 0.5,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/change_detection/scheduling/zoneless_scheduling_impl.ts",
        "metrics": {
          "complexity": 57,
          "loc": 240,
          "functionCount": 16,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 12,
          "incomingDependencies": 5,
          "instability": 0.71,
          "cohesionScore": 0.53,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.85
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/di/interface/defs.ts",
        "metrics": {
          "complexity": 13,
          "loc": 103,
          "functionCount": 7,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 24,
          "instability": 0.11,
          "cohesionScore": 0.61,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/core/src/di/interface/injector.ts",
        "metrics": {
          "complexity": 1,
          "loc": 24,
          "functionCount": 0,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 16,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/interface/provider.ts",
        "metrics": {
          "complexity": 2,
          "loc": 79,
          "functionCount": 1,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 26,
          "instability": 0.04,
          "cohesionScore": 0.5,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/jit/environment.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/di/jit/injectable.ts",
        "metrics": {
          "complexity": 13,
          "loc": 104,
          "functionCount": 8,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 1,
          "instability": 0.91,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/core/src/di/jit/util.ts",
        "metrics": {
          "complexity": 21,
          "loc": 61,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 4,
          "instability": 0.6,
          "cohesionScore": 0.56,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/core/src/render3/after_render/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/after_render/hooks.ts",
        "metrics": {
          "complexity": 10,
          "loc": 149,
          "functionCount": 9,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 4,
          "instability": 0.71,
          "cohesionScore": 0.6,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/after_render/manager.ts",
        "metrics": {
          "complexity": 18,
          "loc": 158,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 12,
          "incomingDependencies": 5,
          "instability": 0.71,
          "cohesionScore": 0.58,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/core/src/render3/after_render/view.ts",
        "metrics": {
          "complexity": 3,
          "loc": 9,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/debug/framework_injector_profiler.ts",
        "metrics": {
          "complexity": 28,
          "loc": 178,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 3,
          "instability": 0.79,
          "cohesionScore": 0.62,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 47
      },
      {
        "file": "packages/core/src/render3/debug/injector_profiler.ts",
        "metrics": {
          "complexity": 15,
          "loc": 150,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 11,
          "instability": 0.5,
          "cohesionScore": 0.55,
          "percentileUsageRank": 94,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/core/src/render3/debug/set_debug_info.ts",
        "metrics": {
          "complexity": 2,
          "loc": 9,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.61,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/deps_tracker/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 41,
          "functionCount": 0,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/deps_tracker/deps_tracker.ts",
        "metrics": {
          "complexity": 38,
          "loc": 216,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 6,
          "instability": 0.63,
          "cohesionScore": 0.6,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.9
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.08
          }
        ],
        "healthScore": 29
      },
      {
        "file": "packages/core/src/render3/i18n/i18n_apply.ts",
        "metrics": {
          "complexity": 93,
          "loc": 426,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 20,
          "incomingDependencies": 2,
          "instability": 0.91,
          "cohesionScore": 0.63,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.65
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.42
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/render3/i18n/i18n_debug.ts",
        "metrics": {
          "complexity": 40,
          "loc": 191,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2
          }
        ],
        "healthScore": 32
      },
      {
        "file": "packages/core/src/render3/i18n/i18n_icu_container_visitor.ts",
        "metrics": {
          "complexity": 12,
          "loc": 78,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 2,
          "instability": 0.8,
          "cohesionScore": 0.65,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/core/src/render3/i18n/i18n_insert_before_index.ts",
        "metrics": {
          "complexity": 10,
          "loc": 41,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.62,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/i18n/i18n_locale_id.ts",
        "metrics": {
          "complexity": 3,
          "loc": 12,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.5,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/i18n/i18n_parse.ts",
        "metrics": {
          "complexity": 89,
          "loc": 697,
          "functionCount": 23,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 21,
          "incomingDependencies": 1,
          "instability": 0.95,
          "cohesionScore": 0.64,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.45
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.32
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/render3/i18n/i18n_postprocess.ts",
        "metrics": {
          "complexity": 16,
          "loc": 71,
          "functionCount": 6,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/core/src/render3/i18n/i18n_tree_shaking.ts",
        "metrics": {
          "complexity": 2,
          "loc": 20,
          "functionCount": 2,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/i18n/i18n_util.ts",
        "metrics": {
          "complexity": 18,
          "loc": 91,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 5,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/core/src/render3/features/copy_definition_feature.ts",
        "metrics": {
          "complexity": 5,
          "loc": 35,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.72,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/features/external_styles_feature.ts",
        "metrics": {
          "complexity": 3,
          "loc": 19,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/features/host_directives_feature.ts",
        "metrics": {
          "complexity": 28,
          "loc": 157,
          "functionCount": 9,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 47
      },
      {
        "file": "packages/core/src/render3/features/inherit_definition_feature.ts",
        "metrics": {
          "complexity": 29,
          "loc": 159,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 2,
          "instability": 0.82,
          "cohesionScore": 0.59,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.45
          }
        ],
        "healthScore": 46
      },
      {
        "file": "packages/core/src/render3/features/ng_onchanges_feature.ts",
        "metrics": {
          "complexity": 10,
          "loc": 68,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 2,
          "instability": 0.78,
          "cohesionScore": 0.55,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/features/providers_feature.ts",
        "metrics": {
          "complexity": 2,
          "loc": 17,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.61,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/advance.ts",
        "metrics": {
          "complexity": 8,
          "loc": 44,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.63,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/all.ts",
        "metrics": {
          "complexity": 1,
          "loc": 39,
          "functionCount": 0,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 34,
          "incomingDependencies": 3,
          "instability": 0.92,
          "cohesionScore": 0.82,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/attach_source_locations.ts",
        "metrics": {
          "complexity": 4,
          "loc": 24,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/attribute.ts",
        "metrics": {
          "complexity": 3,
          "loc": 20,
          "functionCount": 1,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/attribute_interpolation.ts",
        "metrics": {
          "complexity": 20,
          "loc": 390,
          "functionCount": 9,
          "duplicationRatio": 0.15
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.73,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.3
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1
          }
        ],
        "healthScore": 27
      },
      {
        "file": "packages/core/src/render3/instructions/change_detection.ts",
        "metrics": {
          "complexity": 68,
          "loc": 368,
          "functionCount": 11,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 18,
          "incomingDependencies": 6,
          "instability": 0.75,
          "cohesionScore": 0.64,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.4
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.23
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/render3/instructions/class_map_interpolation.ts",
        "metrics": {
          "complexity": 1,
          "loc": 207,
          "functionCount": 9,
          "duplicationRatio": 0.27
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.03
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.77
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/core/src/render3/instructions/component_instance.ts",
        "metrics": {
          "complexity": 2,
          "loc": 8,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.61,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/control_flow.ts",
        "metrics": {
          "complexity": 30,
          "loc": 338,
          "functionCount": 28,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 21,
          "incomingDependencies": 1,
          "instability": 0.95,
          "cohesionScore": 0.61,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.5
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 25
      },
      {
        "file": "packages/core/src/render3/instructions/di.ts",
        "metrics": {
          "complexity": 5,
          "loc": 36,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 2,
          "instability": 0.82,
          "cohesionScore": 0.57,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/di_attr.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.67,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/element.ts",
        "metrics": {
          "complexity": 36,
          "loc": 206,
          "functionCount": 6,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 22,
          "incomingDependencies": 2,
          "instability": 0.92,
          "cohesionScore": 0.64,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.8
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.03
          }
        ],
        "healthScore": 33
      },
      {
        "file": "packages/core/src/render3/instructions/element_container.ts",
        "metrics": {
          "complexity": 25,
          "loc": 175,
          "functionCount": 7,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 23,
          "incomingDependencies": 2,
          "instability": 0.92,
          "cohesionScore": 0.64,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/core/src/render3/instructions/element_validation.ts",
        "metrics": {
          "complexity": 42,
          "loc": 160,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 9,
          "instability": 0.53,
          "cohesionScore": 0.6,
          "percentileUsageRank": 91,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.1
          }
        ],
        "healthScore": 28
      },
      {
        "file": "packages/core/src/render3/instructions/get_current_view.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/host_property.ts",
        "metrics": {
          "complexity": 5,
          "loc": 48,
          "functionCount": 2,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/i18n.ts",
        "metrics": {
          "complexity": 9,
          "loc": 90,
          "functionCount": 7,
          "duplicationRatio": 0.09
        },
        "dependencies": {
          "outgoingDependencies": 14,
          "incomingDependencies": 2,
          "instability": 0.88,
          "cohesionScore": 0.62,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/interpolation.ts",
        "metrics": {
          "complexity": 19,
          "loc": 242,
          "functionCount": 9,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 6,
          "instability": 0.5,
          "cohesionScore": 0.64,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.21
          }
        ],
        "healthScore": 52
      },
      {
        "file": "packages/core/src/render3/instructions/let_declaration.ts",
        "metrics": {
          "complexity": 3,
          "loc": 36,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.62,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/listener.ts",
        "metrics": {
          "complexity": 26,
          "loc": 130,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 12,
          "incomingDependencies": 2,
          "instability": 0.86,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/core/src/render3/instructions/mark_view_dirty.ts",
        "metrics": {
          "complexity": 5,
          "loc": 22,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 5,
          "instability": 0.5,
          "cohesionScore": 0.63,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/namespace.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/next_context.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/projection.ts",
        "metrics": {
          "complexity": 23,
          "loc": 137,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 15,
          "incomingDependencies": 1,
          "instability": 0.94,
          "cohesionScore": 0.64,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/core/src/render3/instructions/property.ts",
        "metrics": {
          "complexity": 4,
          "loc": 43,
          "functionCount": 2,
          "duplicationRatio": 0.23
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 3,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.55
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/core/src/render3/instructions/property_interpolation.ts",
        "metrics": {
          "complexity": 20,
          "loc": 480,
          "functionCount": 10,
          "duplicationRatio": 0.14
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.72,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 27
      },
      {
        "file": "packages/core/src/render3/instructions/queries.ts",
        "metrics": {
          "complexity": 4,
          "loc": 53,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/queries_signals.ts",
        "metrics": {
          "complexity": 1,
          "loc": 26,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.64,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/render.ts",
        "metrics": {
          "complexity": 16,
          "loc": 82,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 3,
          "instability": 0.77,
          "cohesionScore": 0.65,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/core/src/render3/instructions/shared.ts",
        "metrics": {
          "complexity": 97,
          "loc": 504,
          "functionCount": 25,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 36,
          "incomingDependencies": 17,
          "instability": 0.68,
          "cohesionScore": 0.63,
          "percentileUsageRank": 97,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.85
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.68
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/render3/instructions/storage.ts",
        "metrics": {
          "complexity": 1,
          "loc": 7,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/instructions/style_map_interpolation.ts",
        "metrics": {
          "complexity": 1,
          "loc": 206,
          "functionCount": 9,
          "duplicationRatio": 0.27
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.78,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.03
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.8
          }
        ],
        "healthScore": 69
      },
      {
        "file": "packages/core/src/render3/instructions/style_prop_interpolation.ts",
        "metrics": {
          "complexity": 1,
          "loc": 239,
          "functionCount": 9,
          "duplicationRatio": 0.09
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.78,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/core/src/render3/instructions/styling.ts",
        "metrics": {
          "complexity": 109,
          "loc": 505,
          "functionCount": 25,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 21,
          "incomingDependencies": 4,
          "instability": 0.84,
          "cohesionScore": 0.63,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 5.45
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.68
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/render3/instructions/template.ts",
        "metrics": {
          "complexity": 22,
          "loc": 211,
          "functionCount": 6,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 24,
          "incomingDependencies": 5,
          "instability": 0.83,
          "cohesionScore": 0.62,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 43
      },
      {
        "file": "packages/core/src/render3/instructions/text.ts",
        "metrics": {
          "complexity": 11,
          "loc": 76,
          "functionCount": 4,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 12,
          "incomingDependencies": 2,
          "instability": 0.86,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/core/src/render3/instructions/text_interpolation.ts",
        "metrics": {
          "complexity": 14,
          "loc": 241,
          "functionCount": 11,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 1,
          "instability": 0.89,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.21
          }
        ],
        "healthScore": 73
      },
      {
        "file": "packages/core/src/render3/instructions/two_way.ts",
        "metrics": {
          "complexity": 5,
          "loc": 49,
          "functionCount": 3,
          "duplicationRatio": 0.17
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.16
          }
        ],
        "healthScore": 90
      },
      {
        "file": "packages/core/src/render3/instructions/write_to_directive_input.ts",
        "metrics": {
          "complexity": 9,
          "loc": 47,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/interfaces/attribute_marker.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0.74
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 8,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.48
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/render3/interfaces/container.ts",
        "metrics": {
          "complexity": 1,
          "loc": 26,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 27,
          "instability": 0.13,
          "cohesionScore": 0.75,
          "percentileUsageRank": 98,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/interfaces/context.ts",
        "metrics": {
          "complexity": 1,
          "loc": 16,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.83,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/interfaces/definition.ts",
        "metrics": {
          "complexity": 1,
          "loc": 177,
          "functionCount": 0,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 46,
          "instability": 0.19,
          "cohesionScore": 0.64,
          "percentileUsageRank": 99,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/interfaces/document.ts",
        "metrics": {
          "complexity": 5,
          "loc": 17,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 9,
          "instability": 0.1,
          "cohesionScore": 0.5,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/interfaces/i18n.ts",
        "metrics": {
          "complexity": 1,
          "loc": 108,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 11,
          "instability": 0.08,
          "cohesionScore": 0.83,
          "percentileUsageRank": 94,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/interfaces/injector.ts",
        "metrics": {
          "complexity": 3,
          "loc": 46,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 9,
          "instability": 0.36,
          "cohesionScore": 0.63,
          "percentileUsageRank": 91,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/interfaces/input_flags.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/interfaces/lview_tracking.ts",
        "metrics": {
          "complexity": 5,
          "loc": 22,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 6,
          "instability": 0.25,
          "cohesionScore": 0.67,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/interfaces/node.ts",
        "metrics": {
          "complexity": 14,
          "loc": 174,
          "functionCount": 5,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 84,
          "instability": 0.09,
          "cohesionScore": 0.75,
          "percentileUsageRank": 100,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/core/src/render3/interfaces/projection.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/interfaces/public_definitions.ts",
        "metrics": {
          "complexity": 1,
          "loc": 41,
          "functionCount": 0,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/interfaces/query.ts",
        "metrics": {
          "complexity": 1,
          "loc": 47,
          "functionCount": 0,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 4,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/interfaces/renderer.ts",
        "metrics": {
          "complexity": 1,
          "loc": 43,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 14,
          "instability": 0.22,
          "cohesionScore": 0.58,
          "percentileUsageRank": 96,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/interfaces/renderer_dom.ts",
        "metrics": {
          "complexity": 1,
          "loc": 47,
          "functionCount": 0,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 45,
          "instability": 0.02,
          "cohesionScore": 0.5,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/interfaces/sanitization.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0.14
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 10,
          "instability": 0.09,
          "cohesionScore": 0.5,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/interfaces/styling.ts",
        "metrics": {
          "complexity": 15,
          "loc": 66,
          "functionCount": 10,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 5,
          "instability": 0.29,
          "cohesionScore": 0.5,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/core/src/render3/interfaces/type_checks.ts",
        "metrics": {
          "complexity": 3,
          "loc": 35,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 37,
          "instability": 0.12,
          "cohesionScore": 0.83,
          "percentileUsageRank": 99,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/interfaces/view.ts",
        "metrics": {
          "complexity": 1,
          "loc": 183,
          "functionCount": 0,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 18,
          "incomingDependencies": 112,
          "instability": 0.14,
          "cohesionScore": 0.68,
          "percentileUsageRank": 100,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/jit/directive.ts",
        "metrics": {
          "complexity": 94,
          "loc": 447,
          "functionCount": 33,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 21,
          "incomingDependencies": 2,
          "instability": 0.91,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.7
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.49
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/render3/jit/environment.ts",
        "metrics": {
          "complexity": 1,
          "loc": 203,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 4,
          "instability": 0.64,
          "cohesionScore": 0.52,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.01
          }
        ],
        "healthScore": 94
      },
      {
        "file": "packages/core/src/render3/jit/jit_options.ts",
        "metrics": {
          "complexity": 6,
          "loc": 31,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.5,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/jit/module.ts",
        "metrics": {
          "complexity": 89,
          "loc": 530,
          "functionCount": 47,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 22,
          "incomingDependencies": 3,
          "instability": 0.88,
          "cohesionScore": 0.6,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.45
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.77
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/render3/jit/module_patch.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/jit/partial.ts",
        "metrics": {
          "complexity": 7,
          "loc": 137,
          "functionCount": 11,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/jit/pipe.ts",
        "metrics": {
          "complexity": 5,
          "loc": 63,
          "functionCount": 4,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 2,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/jit/util.ts",
        "metrics": {
          "complexity": 13,
          "loc": 70,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 5,
          "instability": 0.58,
          "cohesionScore": 0.57,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/core/src/render3/queries/query.ts",
        "metrics": {
          "complexity": 78,
          "loc": 424,
          "functionCount": 43,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 16,
          "incomingDependencies": 3,
          "instability": 0.84,
          "cohesionScore": 0.59,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.9
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.41
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/render3/queries/query_execution.ts",
        "metrics": {
          "complexity": 11,
          "loc": 66,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 5,
          "instability": 0.58,
          "cohesionScore": 0.6,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/core/src/render3/queries/query_reactive.ts",
        "metrics": {
          "complexity": 12,
          "loc": 88,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 2,
          "instability": 0.83,
          "cohesionScore": 0.58,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/core/src/render3/styling/class_differ.ts",
        "metrics": {
          "complexity": 8,
          "loc": 24,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/styling/static_styling.ts",
        "metrics": {
          "complexity": 11,
          "loc": 32,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.63,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/core/src/render3/styling/style_binding_list.ts",
        "metrics": {
          "complexity": 36,
          "loc": 159,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.62,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.8
          }
        ],
        "healthScore": 39
      },
      {
        "file": "packages/core/src/render3/styling/styling_parser.ts",
        "metrics": {
          "complexity": 34,
          "loc": 161,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          }
        ],
        "healthScore": 41
      },
      {
        "file": "packages/core/src/render3/reactivity/after_render_effect.ts",
        "metrics": {
          "complexity": 20,
          "loc": 210,
          "functionCount": 12,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 15,
          "incomingDependencies": 1,
          "instability": 0.94,
          "cohesionScore": 0.61,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 51
      },
      {
        "file": "packages/core/src/render3/reactivity/api.ts",
        "metrics": {
          "complexity": 2,
          "loc": 8,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 13,
          "instability": 0.07,
          "cohesionScore": 0.33,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/reactivity/asserts.ts",
        "metrics": {
          "complexity": 4,
          "loc": 13,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 5,
          "instability": 0.29,
          "cohesionScore": 0.42,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/reactivity/computed.ts",
        "metrics": {
          "complexity": 2,
          "loc": 14,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.58,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/reactivity/effect.ts",
        "metrics": {
          "complexity": 23,
          "loc": 227,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 17,
          "incomingDependencies": 8,
          "instability": 0.68,
          "cohesionScore": 0.62,
          "percentileUsageRank": 89,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.15
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.14
          }
        ],
        "healthScore": 42
      },
      {
        "file": "packages/core/src/render3/reactivity/linked_signal.ts",
        "metrics": {
          "complexity": 3,
          "loc": 58,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/reactivity/microtask_effect.ts",
        "metrics": {
          "complexity": 10,
          "loc": 108,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 14,
          "incomingDependencies": 2,
          "instability": 0.88,
          "cohesionScore": 0.6,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/reactivity/patch.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0.33
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/core/src/render3/reactivity/root_effect_scheduler.ts",
        "metrics": {
          "complexity": 8,
          "loc": 63,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.5,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/reactivity/signal.ts",
        "metrics": {
          "complexity": 4,
          "loc": 48,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 7,
          "instability": 0.22,
          "cohesionScore": 0.58,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/reactivity/untracked.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.33,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/reactivity/view_effect_runner.ts",
        "metrics": {
          "complexity": 8,
          "loc": 22,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/util/attrs_utils.ts",
        "metrics": {
          "complexity": 34,
          "loc": 128,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 9,
          "instability": 0.4,
          "cohesionScore": 0.64,
          "percentileUsageRank": 91,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          }
        ],
        "healthScore": 41
      },
      {
        "file": "packages/core/src/render3/util/change_detection_utils.ts",
        "metrics": {
          "complexity": 2,
          "loc": 17,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 2,
          "instability": 0.78,
          "cohesionScore": 0.64,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/util/defer.ts",
        "metrics": {
          "complexity": 20,
          "loc": 126,
          "functionCount": 5,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 1,
          "instability": 0.91,
          "cohesionScore": 0.62,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 58
      },
      {
        "file": "packages/core/src/render3/util/discovery_utils.ts",
        "metrics": {
          "complexity": 56,
          "loc": 223,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 13,
          "incomingDependencies": 6,
          "instability": 0.68,
          "cohesionScore": 0.65,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.8
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 1
      },
      {
        "file": "packages/core/src/render3/util/global_utils.ts",
        "metrics": {
          "complexity": 7,
          "loc": 86,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 3,
          "instability": 0.77,
          "cohesionScore": 0.72,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/util/injector_discovery_utils.ts",
        "metrics": {
          "complexity": 51,
          "loc": 320,
          "functionCount": 18,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 26,
          "incomingDependencies": 1,
          "instability": 0.96,
          "cohesionScore": 0.59,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.55
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/render3/util/injector_utils.ts",
        "metrics": {
          "complexity": 3,
          "loc": 37,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 3,
          "instability": 0.63,
          "cohesionScore": 0.6,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/util/misc_utils.ts",
        "metrics": {
          "complexity": 2,
          "loc": 18,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 9,
          "instability": 0.1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/util/signal_debug.ts",
        "metrics": {
          "complexity": 14,
          "loc": 133,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 1,
          "instability": 0.91,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/core/src/render3/util/stringify_utils.ts",
        "metrics": {
          "complexity": 14,
          "loc": 28,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 16,
          "instability": 0.11,
          "cohesionScore": 0.58,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/core/src/render3/util/view_traversal_utils.ts",
        "metrics": {
          "complexity": 9,
          "loc": 34,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 2,
          "instability": 0.78,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/util/view_utils.ts",
        "metrics": {
          "complexity": 42,
          "loc": 215,
          "functionCount": 28,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 56,
          "instability": 0.14,
          "cohesionScore": 0.61,
          "percentileUsageRank": 99,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.1
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 21
      },
      {
        "file": "packages/core/src/util/security/trusted_type_defs.ts",
        "metrics": {
          "complexity": 1,
          "loc": 25,
          "functionCount": 0,
          "duplicationRatio": 0.26
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.75
          }
        ],
        "healthScore": 77
      },
      {
        "file": "packages/core/src/util/security/trusted_types.ts",
        "metrics": {
          "complexity": 10,
          "loc": 53,
          "functionCount": 9,
          "duplicationRatio": 0.27
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 4,
          "instability": 0.33,
          "cohesionScore": 0.75,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.79
          }
        ],
        "healthScore": 76
      },
      {
        "file": "packages/core/src/util/security/trusted_types_bypass.ts",
        "metrics": {
          "complexity": 7,
          "loc": 37,
          "functionCount": 7,
          "duplicationRatio": 0.3
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.01
          }
        ],
        "healthScore": 65
      },
      {
        "file": "packages/core/src/render3/view/construction.ts",
        "metrics": {
          "complexity": 34,
          "loc": 251,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 14,
          "incomingDependencies": 8,
          "instability": 0.64,
          "cohesionScore": 0.62,
          "percentileUsageRank": 89,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 32
      },
      {
        "file": "packages/core/src/render3/view/container.ts",
        "metrics": {
          "complexity": 31,
          "loc": 180,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 6,
          "instability": 0.63,
          "cohesionScore": 0.63,
          "percentileUsageRank": 85,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.55
          }
        ],
        "healthScore": 45
      },
      {
        "file": "packages/core/src/render3/view/directive_outputs.ts",
        "metrics": {
          "complexity": 20,
          "loc": 99,
          "functionCount": 4,
          "duplicationRatio": 0.1
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 58
      },
      {
        "file": "packages/core/src/render3/view/directives.ts",
        "metrics": {
          "complexity": 97,
          "loc": 449,
          "functionCount": 17,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 18,
          "incomingDependencies": 3,
          "instability": 0.86,
          "cohesionScore": 0.64,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.85
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/src/render3/view/elements.ts",
        "metrics": {
          "complexity": 9,
          "loc": 53,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 2,
          "instability": 0.83,
          "cohesionScore": 0.68,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/src/render3/view/listeners.ts",
        "metrics": {
          "complexity": 8,
          "loc": 54,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 2,
          "instability": 0.82,
          "cohesionScore": 0.63,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/animations/async/src/async-animations.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0.67
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/platform-browser/animations/async/src/async_animation_renderer.ts",
        "metrics": {
          "complexity": 14,
          "loc": 213,
          "functionCount": 40,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.33,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.06
          }
        ],
        "healthScore": 75
      },
      {
        "file": "packages/platform-browser/animations/async/src/private_export.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/animations/async/src/providers.ts",
        "metrics": {
          "complexity": 4,
          "loc": 32,
          "functionCount": 2,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/localize/src/localize/src/localize.ts",
        "metrics": {
          "complexity": 4,
          "loc": 33,
          "functionCount": 2,
          "duplicationRatio": 0.48
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 36
      },
      {
        "file": "packages/platform-browser/src/dom/debug/by.ts",
        "metrics": {
          "complexity": 8,
          "loc": 27,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/src/dom/events/dom_events.ts",
        "metrics": {
          "complexity": 1,
          "loc": 29,
          "functionCount": 5,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.83,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/src/dom/events/event_manager.ts",
        "metrics": {
          "complexity": 6,
          "loc": 66,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 6,
          "instability": 0.14,
          "cohesionScore": 0.5,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/platform-browser/src/dom/events/hammer_gestures.ts",
        "metrics": {
          "complexity": 22,
          "loc": 175,
          "functionCount": 17,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.83,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/platform-browser/src/dom/events/key_events.ts",
        "metrics": {
          "complexity": 18,
          "loc": 114,
          "functionCount": 16,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.83,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/upgrade/src/dynamic/src/upgrade_adapter.ts",
        "metrics": {
          "complexity": 17,
          "loc": 278,
          "functionCount": 41,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.39
          }
        ],
        "healthScore": 56
      },
      {
        "file": "packages/upgrade/src/dynamic/src/upgrade_ng1_adapter.ts",
        "metrics": {
          "complexity": 32,
          "loc": 260,
          "functionCount": 20,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.49,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 34
      },
      {
        "file": "packages/upgrade/static/testing/src/create_angular_testing_module.ts",
        "metrics": {
          "complexity": 1,
          "loc": 25,
          "functionCount": 4,
          "duplicationRatio": 0.28
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.42,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.86
          }
        ],
        "healthScore": 75
      },
      {
        "file": "packages/upgrade/static/testing/src/create_angularjs_testing_module.ts",
        "metrics": {
          "complexity": 1,
          "loc": 19,
          "functionCount": 2,
          "duplicationRatio": 0.3
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.42,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.01
          }
        ],
        "healthScore": 65
      },
      {
        "file": "packages/upgrade/src/common/src/angular1.ts",
        "metrics": {
          "complexity": 3,
          "loc": 279,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 10,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 89
      },
      {
        "file": "packages/upgrade/src/common/src/component_info.ts",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/upgrade/src/common/src/constants.ts",
        "metrics": {
          "complexity": 1,
          "loc": 25,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 8,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/upgrade/src/common/src/downgrade_component.ts",
        "metrics": {
          "complexity": 13,
          "loc": 135,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.83,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/upgrade/src/common/src/downgrade_component_adapter.ts",
        "metrics": {
          "complexity": 42,
          "loc": 310,
          "functionCount": 31,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.1
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.03
          }
        ],
        "healthScore": 9
      },
      {
        "file": "packages/upgrade/src/common/src/downgrade_injectable.ts",
        "metrics": {
          "complexity": 4,
          "loc": 20,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.83,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/upgrade/src/common/src/promise_util.ts",
        "metrics": {
          "complexity": 6,
          "loc": 43,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/upgrade/src/common/src/upgrade_helper.ts",
        "metrics": {
          "complexity": 43,
          "loc": 250,
          "functionCount": 30,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.79,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.15
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 17
      },
      {
        "file": "packages/upgrade/src/common/src/util.ts",
        "metrics": {
          "complexity": 21,
          "loc": 145,
          "functionCount": 19,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 10,
          "instability": 0.17,
          "cohesionScore": 0.83,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/upgrade/src/common/src/version.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 0.57
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.14
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/animations/browser/src/dsl/style_normalization/animation_style_normalizer.ts",
        "metrics": {
          "complexity": 1,
          "loc": 22,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 9,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 91,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/src/dsl/style_normalization/web_animations_style_normalizer.ts",
        "metrics": {
          "complexity": 7,
          "loc": 59,
          "functionCount": 2,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/image_loaders/cloudflare_loader.ts",
        "metrics": {
          "complexity": 4,
          "loc": 17,
          "functionCount": 1,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.86,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/image_loaders/cloudinary_loader.ts",
        "metrics": {
          "complexity": 5,
          "loc": 31,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.86,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/image_loaders/constants.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0.33
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/image_loaders/image_loader.ts",
        "metrics": {
          "complexity": 7,
          "loc": 59,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 7,
          "instability": 0.22,
          "cohesionScore": 0.57,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/image_loaders/imagekit_loader.ts",
        "metrics": {
          "complexity": 5,
          "loc": 28,
          "functionCount": 2,
          "duplicationRatio": 0.12
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.86,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/image_loaders/imgix_loader.ts",
        "metrics": {
          "complexity": 4,
          "loc": 26,
          "functionCount": 2,
          "duplicationRatio": 0.13
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.86,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/image_loaders/netlify_loader.ts",
        "metrics": {
          "complexity": 14,
          "loc": 73,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.71,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/animations/browser/src/render/web_animations/animatable_props_set.ts",
        "metrics": {
          "complexity": 1,
          "loc": 201,
          "functionCount": 0,
          "duplicationRatio": 0.36
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.21
          }
        ],
        "healthScore": 55
      },
      {
        "file": "packages/animations/browser/src/render/web_animations/web_animations_driver.ts",
        "metrics": {
          "complexity": 8,
          "loc": 72,
          "functionCount": 11,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 2,
          "instability": 0.75,
          "cohesionScore": 0.64,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/animations/browser/src/render/web_animations/web_animations_player.ts",
        "metrics": {
          "complexity": 17,
          "loc": 171,
          "functionCount": 31,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.52,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/compiler-cli/integrationtest/bazel/injectable_def/lib1/module.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/integrationtest/bazel/injectable_def/lib2/module.ts",
        "metrics": {
          "complexity": 1,
          "loc": 21,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/babel/src/ast/babel_ast_factory.ts",
        "metrics": {
          "complexity": 18,
          "loc": 182,
          "functionCount": 24,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.36,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/compiler-cli/linker/babel/src/ast/babel_ast_host.ts",
        "metrics": {
          "complexity": 24,
          "loc": 145,
          "functionCount": 22,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.43,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 13,
          "incomingDependencies": 11,
          "instability": 0.54,
          "cohesionScore": 0.75,
          "percentileUsageRank": 94,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/component/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/directive/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 3,
          "instability": 0.73,
          "cohesionScore": 0.75,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/src/injectable.ts",
        "metrics": {
          "complexity": 59,
          "loc": 394,
          "functionCount": 22,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.95
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.31
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/src/pipe.ts",
        "metrics": {
          "complexity": 22,
          "loc": 247,
          "functionCount": 12,
          "duplicationRatio": 0.14
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 1,
          "instability": 0.91,
          "cohesionScore": 0.59,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.24
          }
        ],
        "healthScore": 41
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/ng_module/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.75,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/ast/typescript/typescript_ast_host.ts",
        "metrics": {
          "complexity": 21,
          "loc": 141,
          "functionCount": 22,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.67,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/emit_scopes/emit_scope.ts",
        "metrics": {
          "complexity": 2,
          "loc": 42,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.57,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/emit_scopes/local_emit_scope.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.79,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/partial_linkers/partial_class_metadata_async_linker_1.ts",
        "metrics": {
          "complexity": 2,
          "loc": 48,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/partial_linkers/partial_class_metadata_linker_1.ts",
        "metrics": {
          "complexity": 3,
          "loc": 32,
          "functionCount": 2,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/partial_linkers/partial_component_linker_1.ts",
        "metrics": {
          "complexity": 50,
          "loc": 343,
          "functionCount": 22,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 1,
          "instability": 0.89,
          "cohesionScore": 0.66,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.5
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.14
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/partial_linkers/partial_directive_linker_1.ts",
        "metrics": {
          "complexity": 37,
          "loc": 230,
          "functionCount": 19,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 2,
          "instability": 0.75,
          "cohesionScore": 0.62,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.85
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.15
          }
        ],
        "healthScore": 29
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/partial_linkers/partial_factory_linker_1.ts",
        "metrics": {
          "complexity": 5,
          "loc": 58,
          "functionCount": 4,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/partial_linkers/partial_injectable_linker_1.ts",
        "metrics": {
          "complexity": 8,
          "loc": 59,
          "functionCount": 3,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/partial_linkers/partial_injector_linker_1.ts",
        "metrics": {
          "complexity": 4,
          "loc": 39,
          "functionCount": 3,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/partial_linkers/partial_linker.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 12,
          "instability": 0.08,
          "cohesionScore": 0.57,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/partial_linkers/partial_linker_selector.ts",
        "metrics": {
          "complexity": 9,
          "loc": 129,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 15,
          "incomingDependencies": 2,
          "instability": 0.88,
          "cohesionScore": 0.76,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/partial_linkers/partial_ng_module_linker_1.ts",
        "metrics": {
          "complexity": 12,
          "loc": 87,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.76,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/partial_linkers/partial_pipe_linker_1.ts",
        "metrics": {
          "complexity": 4,
          "loc": 49,
          "functionCount": 3,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/partial_linkers/util.ts",
        "metrics": {
          "complexity": 13,
          "loc": 83,
          "functionCount": 5,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 8,
          "instability": 0.2,
          "cohesionScore": 0.57,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/core/api/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 15,
          "instability": 0.21,
          "cohesionScore": 0.75,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/core/src/compiler.ts",
        "metrics": {
          "complexity": 145,
          "loc": 1395,
          "functionCount": 67,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 34,
          "incomingDependencies": 1,
          "instability": 0.97,
          "cohesionScore": 0.59,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 7.25
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/core/src/core_version.ts",
        "metrics": {
          "complexity": 7,
          "loc": 23,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/core/src/feature_detection.ts",
        "metrics": {
          "complexity": 2,
          "loc": 7,
          "functionCount": 1,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/core/src/host.ts",
        "metrics": {
          "complexity": 13,
          "loc": 248,
          "functionCount": 18,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 1,
          "instability": 0.9,
          "cohesionScore": 0.59,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.24
          }
        ],
        "healthScore": 76
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/cycles/src/analyzer.ts",
        "metrics": {
          "complexity": 10,
          "loc": 77,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.86,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/cycles/src/imports.ts",
        "metrics": {
          "complexity": 24,
          "loc": 102,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.57,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/entry_point/src/generator.ts",
        "metrics": {
          "complexity": 2,
          "loc": 32,
          "functionCount": 2,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/entry_point/src/logic.ts",
        "metrics": {
          "complexity": 6,
          "loc": 21,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/entry_point/src/private_export_checker.ts",
        "metrics": {
          "complexity": 19,
          "loc": 91,
          "functionCount": 9,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 61
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/entry_point/src/reference_graph.ts",
        "metrics": {
          "complexity": 9,
          "loc": 51,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.57,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/diagnostics/src/docs.ts",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.86,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/diagnostics/src/error.ts",
        "metrics": {
          "complexity": 4,
          "loc": 90,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.86,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/diagnostics/src/error_code.ts",
        "metrics": {
          "complexity": 1,
          "loc": 95,
          "functionCount": 0,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/diagnostics/src/error_details_base_url.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0.4
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 56
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/diagnostics/src/extended_template_diagnostic_name.ts",
        "metrics": {
          "complexity": 1,
          "loc": 15,
          "functionCount": 0,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/diagnostics/src/util.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.86,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/file_system/src/compiler_host.ts",
        "metrics": {
          "complexity": 8,
          "loc": 66,
          "functionCount": 12,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.86,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/file_system/src/helpers.ts",
        "metrics": {
          "complexity": 6,
          "loc": 61,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 5,
          "instability": 0.38,
          "cohesionScore": 0.86,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/file_system/src/invalid_file_system.ts",
        "metrics": {
          "complexity": 1,
          "loc": 89,
          "functionCount": 28,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.86,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/file_system/src/logical.ts",
        "metrics": {
          "complexity": 6,
          "loc": 67,
          "functionCount": 8,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.86,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/file_system/src/node_js_file_system.ts",
        "metrics": {
          "complexity": 7,
          "loc": 113,
          "functionCount": 29,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.86,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/file_system/src/ts_read_directory.ts",
        "metrics": {
          "complexity": 6,
          "loc": 74,
          "functionCount": 6,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.86,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/file_system/src/types.ts",
        "metrics": {
          "complexity": 1,
          "loc": 45,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 13,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/file_system/src/util.ts",
        "metrics": {
          "complexity": 2,
          "loc": 21,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 5,
          "instability": 0.17,
          "cohesionScore": 0.86,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/file_system/testing/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.75,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/hmr/src/extract_dependencies.ts",
        "metrics": {
          "complexity": 98,
          "loc": 280,
          "functionCount": 17,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.9
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/hmr/src/metadata.ts",
        "metrics": {
          "complexity": 4,
          "loc": 53,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/hmr/src/update_declaration.ts",
        "metrics": {
          "complexity": 2,
          "loc": 53,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/imports/src/alias.ts",
        "metrics": {
          "complexity": 9,
          "loc": 89,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/imports/src/core.ts",
        "metrics": {
          "complexity": 5,
          "loc": 63,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/imports/src/default.ts",
        "metrics": {
          "complexity": 6,
          "loc": 48,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.71,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/imports/src/deferred_symbol_tracker.ts",
        "metrics": {
          "complexity": 32,
          "loc": 139,
          "functionCount": 8,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          }
        ],
        "healthScore": 44
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/imports/src/emitter.ts",
        "metrics": {
          "complexity": 34,
          "loc": 319,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 2,
          "instability": 0.82,
          "cohesionScore": 0.67,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.06
          }
        ],
        "healthScore": 21
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/imports/src/find_export.ts",
        "metrics": {
          "complexity": 6,
          "loc": 25,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/imports/src/imported_symbols_tracker.ts",
        "metrics": {
          "complexity": 15,
          "loc": 75,
          "functionCount": 5,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/imports/src/local_compilation_extra_imports_tracker.ts",
        "metrics": {
          "complexity": 9,
          "loc": 46,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/imports/src/patch_alias_reference_resolution.ts",
        "metrics": {
          "complexity": 9,
          "loc": 53,
          "functionCount": 5,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/imports/src/reexport.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/imports/src/references.ts",
        "metrics": {
          "complexity": 12,
          "loc": 90,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 4,
          "instability": 0.33,
          "cohesionScore": 0.57,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/imports/src/resolver.ts",
        "metrics": {
          "complexity": 2,
          "loc": 24,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.57,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/indexer/src/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 82,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.57,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/indexer/src/context.ts",
        "metrics": {
          "complexity": 1,
          "loc": 22,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.57,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/indexer/src/template.ts",
        "metrics": {
          "complexity": 32,
          "loc": 384,
          "functionCount": 38,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.76,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.6
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.28
          }
        ],
        "healthScore": 20
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/indexer/src/transform.ts",
        "metrics": {
          "complexity": 3,
          "loc": 42,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.79,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/metadata/src/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 115,
          "functionCount": 0,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 8,
          "instability": 0.27,
          "cohesionScore": 0.67,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/metadata/src/dts.ts",
        "metrics": {
          "complexity": 57,
          "loc": 287,
          "functionCount": 13,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.85
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.44
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/metadata/src/host_directives_resolver.ts",
        "metrics": {
          "complexity": 13,
          "loc": 84,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.8,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/metadata/src/inheritance.ts",
        "metrics": {
          "complexity": 14,
          "loc": 69,
          "functionCount": 2,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.71,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/metadata/src/ng_module_index.ts",
        "metrics": {
          "complexity": 21,
          "loc": 96,
          "functionCount": 5,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/metadata/src/property_mapping.ts",
        "metrics": {
          "complexity": 11,
          "loc": 97,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 6,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/metadata/src/providers.ts",
        "metrics": {
          "complexity": 10,
          "loc": 49,
          "functionCount": 4,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/metadata/src/registry.ts",
        "metrics": {
          "complexity": 11,
          "loc": 61,
          "functionCount": 14,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/metadata/src/resource_registry.ts",
        "metrics": {
          "complexity": 13,
          "loc": 80,
          "functionCount": 8,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/metadata/src/util.ts",
        "metrics": {
          "complexity": 59,
          "loc": 273,
          "functionCount": 26,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 3,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.95
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.36
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/logging/src/console_logger.ts",
        "metrics": {
          "complexity": 5,
          "loc": 23,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.86,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/logging/src/logger.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 0,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/logging/testing/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.75,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/incremental/semantic_graph/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 12,
          "instability": 0.25,
          "cohesionScore": 0.75,
          "percentileUsageRank": 95,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/incremental/src/dependency_tracking.ts",
        "metrics": {
          "complexity": 14,
          "loc": 84,
          "functionCount": 7,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.64,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/incremental/src/incremental.ts",
        "metrics": {
          "complexity": 41,
          "loc": 271,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 1,
          "instability": 0.91,
          "cohesionScore": 0.66,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.05
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.35
          }
        ],
        "healthScore": 19
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/incremental/src/noop.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/incremental/src/state.ts",
        "metrics": {
          "complexity": 1,
          "loc": 33,
          "functionCount": 0,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 3,
          "instability": 0.63,
          "cohesionScore": 0.66,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/incremental/src/strategy.ts",
        "metrics": {
          "complexity": 3,
          "loc": 51,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.86,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/partial_evaluator/src/builtin.ts",
        "metrics": {
          "complexity": 11,
          "loc": 55,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.86,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/partial_evaluator/src/diagnostics.ts",
        "metrics": {
          "complexity": 38,
          "loc": 153,
          "functionCount": 18,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.9
          }
        ],
        "healthScore": 36
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/partial_evaluator/src/dynamic.ts",
        "metrics": {
          "complexity": 12,
          "loc": 131,
          "functionCount": 21,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 6,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/partial_evaluator/src/interface.ts",
        "metrics": {
          "complexity": 1,
          "loc": 31,
          "functionCount": 2,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 2,
          "instability": 0.75,
          "cohesionScore": 0.71,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/partial_evaluator/src/interpreter.ts",
        "metrics": {
          "complexity": 163,
          "loc": 694,
          "functionCount": 73,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 2,
          "instability": 0.83,
          "cohesionScore": 0.71,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 8.15
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.31
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/partial_evaluator/src/result.ts",
        "metrics": {
          "complexity": 2,
          "loc": 50,
          "functionCount": 6,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 5,
          "instability": 0.44,
          "cohesionScore": 0.71,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/partial_evaluator/src/synthetic.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/perf/src/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 72,
          "functionCount": 0,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/perf/src/clock.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 2,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/perf/src/noop.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.86,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/perf/src/recorder.ts",
        "metrics": {
          "complexity": 7,
          "loc": 100,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.86,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/program_driver/src/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 0,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.57,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/program_driver/src/ts_create_program_driver.ts",
        "metrics": {
          "complexity": 12,
          "loc": 178,
          "functionCount": 12,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.64,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/reflection/src/host.ts",
        "metrics": {
          "complexity": 4,
          "loc": 170,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.86,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/reflection/src/type_to_value.ts",
        "metrics": {
          "complexity": 37,
          "loc": 207,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.86,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.85
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.03
          }
        ],
        "healthScore": 31
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/reflection/src/typescript.ts",
        "metrics": {
          "complexity": 160,
          "loc": 631,
          "functionCount": 54,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 8,
          "instability": 0.27,
          "cohesionScore": 0.86,
          "percentileUsageRank": 89,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 8
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.1
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/reflection/src/util.ts",
        "metrics": {
          "complexity": 11,
          "loc": 35,
          "functionCount": 5,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.86,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/resource/src/loader.ts",
        "metrics": {
          "complexity": 27,
          "loc": 183,
          "functionCount": 18,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/scope/src/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 39,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 7,
          "instability": 0.3,
          "cohesionScore": 0.57,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/scope/src/component_scope.ts",
        "metrics": {
          "complexity": 5,
          "loc": 23,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/scope/src/dependency.ts",
        "metrics": {
          "complexity": 14,
          "loc": 88,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 3,
          "instability": 0.57,
          "cohesionScore": 0.64,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/scope/src/local.ts",
        "metrics": {
          "complexity": 82,
          "loc": 524,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 2,
          "instability": 0.8,
          "cohesionScore": 0.68,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.1
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.75
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/scope/src/standalone.ts",
        "metrics": {
          "complexity": 26,
          "loc": 105,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/scope/src/typecheck.ts",
        "metrics": {
          "complexity": 19,
          "loc": 111,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.64,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 61
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/scope/src/util.ts",
        "metrics": {
          "complexity": 6,
          "loc": 59,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 4,
          "instability": 0.5,
          "cohesionScore": 0.64,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/sourcemaps/src/content_origin.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/sourcemaps/src/raw_source_map.ts",
        "metrics": {
          "complexity": 1,
          "loc": 18,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.71,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/sourcemaps/src/segment_marker.ts",
        "metrics": {
          "complexity": 6,
          "loc": 28,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/sourcemaps/src/source_file.ts",
        "metrics": {
          "complexity": 34,
          "loc": 315,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.76,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 21
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/sourcemaps/src/source_file_loader.ts",
        "metrics": {
          "complexity": 26,
          "loc": 160,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.74,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/shims/src/adapter.ts",
        "metrics": {
          "complexity": 20,
          "loc": 114,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 58
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/shims/src/expando.ts",
        "metrics": {
          "complexity": 14,
          "loc": 82,
          "functionCount": 9,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.57,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/shims/src/reference_tagger.ts",
        "metrics": {
          "complexity": 8,
          "loc": 44,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/shims/src/util.ts",
        "metrics": {
          "complexity": 2,
          "loc": 18,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.57,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/testing/fake_common/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 109,
          "functionCount": 7,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/testing/src/cached_source_files.ts",
        "metrics": {
          "complexity": 6,
          "loc": 23,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.57,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/testing/src/compiler_host.ts",
        "metrics": {
          "complexity": 2,
          "loc": 15,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.71,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/testing/src/mock_file_loading.ts",
        "metrics": {
          "complexity": 6,
          "loc": 98,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/testing/src/runfile_helpers.ts",
        "metrics": {
          "complexity": 2,
          "loc": 25,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/testing/src/utils.ts",
        "metrics": {
          "complexity": 22,
          "loc": 147,
          "functionCount": 15,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.64,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/jit/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.75,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/src/alias.ts",
        "metrics": {
          "complexity": 3,
          "loc": 25,
          "functionCount": 4,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/src/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 110,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 5,
          "instability": 0.64,
          "cohesionScore": 0.56,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/src/compilation.ts",
        "metrics": {
          "complexity": 144,
          "loc": 595,
          "functionCount": 34,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 13,
          "incomingDependencies": 2,
          "instability": 0.87,
          "cohesionScore": 0.64,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 7.2
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.98
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/src/declaration.ts",
        "metrics": {
          "complexity": 22,
          "loc": 188,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.64,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/src/trait.ts",
        "metrics": {
          "complexity": 3,
          "loc": 114,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.71,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/src/transform.ts",
        "metrics": {
          "complexity": 53,
          "loc": 389,
          "functionCount": 32,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 1,
          "instability": 0.89,
          "cohesionScore": 0.64,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.65
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/context.ts",
        "metrics": {
          "complexity": 3,
          "loc": 9,
          "functionCount": 3,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 4,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/translator.ts",
        "metrics": {
          "complexity": 22,
          "loc": 419,
          "functionCount": 52,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.79,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 23
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/ts_util.ts",
        "metrics": {
          "complexity": 2,
          "loc": 8,
          "functionCount": 1,
          "duplicationRatio": 0.64
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/type_emitter.ts",
        "metrics": {
          "complexity": 16,
          "loc": 80,
          "functionCount": 11,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/type_translator.ts",
        "metrics": {
          "complexity": 36,
          "loc": 285,
          "functionCount": 41,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.74,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.8
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.43
          }
        ],
        "healthScore": 27
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/typescript_ast_factory.ts",
        "metrics": {
          "complexity": 25,
          "loc": 311,
          "functionCount": 28,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.8,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.04
          }
        ],
        "healthScore": 30
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/typescript_translator.ts",
        "metrics": {
          "complexity": 1,
          "loc": 38,
          "functionCount": 2,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/api/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 109,
          "functionCount": 0,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 4,
          "instability": 0.5,
          "cohesionScore": 0.57,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/api/checker.ts",
        "metrics": {
          "complexity": 1,
          "loc": 83,
          "functionCount": 0,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 1,
          "instability": 0.9,
          "cohesionScore": 0.7,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/api/completion.ts",
        "metrics": {
          "complexity": 1,
          "loc": 25,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.86,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/api/context.ts",
        "metrics": {
          "complexity": 1,
          "loc": 32,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.64,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/api/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 6,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 45,
          "instability": 0.12,
          "cohesionScore": 0.86,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/api/scope.ts",
        "metrics": {
          "complexity": 1,
          "loc": 33,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.57,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/api/symbols.ts",
        "metrics": {
          "complexity": 1,
          "loc": 135,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/diagnostics/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 6,
          "instability": 0.25,
          "cohesionScore": 0.75,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 35,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 14,
          "incomingDependencies": 1,
          "instability": 0.93,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/testing/index.ts",
        "metrics": {
          "complexity": 61,
          "loc": 883,
          "functionCount": 58,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 20,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.63,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.05
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.94
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/checker.ts",
        "metrics": {
          "complexity": 133,
          "loc": 913,
          "functionCount": 78,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 20,
          "incomingDependencies": 3,
          "instability": 0.87,
          "cohesionScore": 0.69,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.65
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 3.04
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/comments.ts",
        "metrics": {
          "complexity": 25,
          "loc": 155,
          "functionCount": 14,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/completion.ts",
        "metrics": {
          "complexity": 30,
          "loc": 209,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.5
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.04
          }
        ],
        "healthScore": 39
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/context.ts",
        "metrics": {
          "complexity": 39,
          "loc": 442,
          "functionCount": 21,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 19,
          "incomingDependencies": 4,
          "instability": 0.83,
          "cohesionScore": 0.74,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.95
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.47
          }
        ],
        "healthScore": 6
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/diagnostics.ts",
        "metrics": {
          "complexity": 9,
          "loc": 67,
          "functionCount": 6,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.76,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/dom.ts",
        "metrics": {
          "complexity": 10,
          "loc": 109,
          "functionCount": 4,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 4,
          "instability": 0.5,
          "cohesionScore": 0.71,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/environment.ts",
        "metrics": {
          "complexity": 5,
          "loc": 91,
          "functionCount": 7,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 3,
          "instability": 0.73,
          "cohesionScore": 0.73,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/expression.ts",
        "metrics": {
          "complexity": 30,
          "loc": 469,
          "functionCount": 60,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.81,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.5
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.56
          }
        ],
        "healthScore": 16
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/line_mappings.ts",
        "metrics": {
          "complexity": 10,
          "loc": 44,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/oob.ts",
        "metrics": {
          "complexity": 24,
          "loc": 517,
          "functionCount": 23,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 4,
          "instability": 0.56,
          "cohesionScore": 0.69,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.72
          }
        ],
        "healthScore": 17
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/reference_emit_environment.ts",
        "metrics": {
          "complexity": 1,
          "loc": 73,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 4,
          "instability": 0.43,
          "cohesionScore": 0.57,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/shim.ts",
        "metrics": {
          "complexity": 2,
          "loc": 26,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 4,
          "instability": 0.33,
          "cohesionScore": 0.57,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/source.ts",
        "metrics": {
          "complexity": 4,
          "loc": 56,
          "functionCount": 8,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.79,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/symbol_util.ts",
        "metrics": {
          "complexity": 12,
          "loc": 32,
          "functionCount": 3,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.71,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/tcb_util.ts",
        "metrics": {
          "complexity": 22,
          "loc": 131,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 8,
          "instability": 0.47,
          "cohesionScore": 0.71,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/template_symbol_builder.ts",
        "metrics": {
          "complexity": 132,
          "loc": 688,
          "functionCount": 27,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 1,
          "instability": 0.91,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.6
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.29
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/ts_util.ts",
        "metrics": {
          "complexity": 5,
          "loc": 104,
          "functionCount": 8,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 5,
          "instability": 0.17,
          "cohesionScore": 0.86,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/type_check_block.ts",
        "metrics": {
          "complexity": 332,
          "loc": 2130,
          "functionCount": 141,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 13,
          "incomingDependencies": 3,
          "instability": 0.81,
          "cohesionScore": 0.78,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 16.6
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 2.13
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/type_check_file.ts",
        "metrics": {
          "complexity": 6,
          "loc": 94,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 3,
          "instability": 0.77,
          "cohesionScore": 0.73,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/type_constructor.ts",
        "metrics": {
          "complexity": 17,
          "loc": 173,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 3,
          "instability": 0.63,
          "cohesionScore": 0.77,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/type_parameter_emitter.ts",
        "metrics": {
          "complexity": 18,
          "loc": 103,
          "functionCount": 12,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.57,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/util/src/path.ts",
        "metrics": {
          "complexity": 4,
          "loc": 24,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 6,
          "instability": 0.33,
          "cohesionScore": 0.67,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/util/src/typescript.ts",
        "metrics": {
          "complexity": 28,
          "loc": 156,
          "functionCount": 21,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 31,
          "instability": 0.06,
          "cohesionScore": 0.57,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 47
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/util/src/visitor.ts",
        "metrics": {
          "complexity": 13,
          "loc": 85,
          "functionCount": 10,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.86,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/validation/src/source_file_validator.ts",
        "metrics": {
          "complexity": 9,
          "loc": 56,
          "functionCount": 3,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.66,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/xi18n/src/context.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/ir/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 10,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 70,
          "instability": 0.13,
          "cohesionScore": 0.72,
          "percentileUsageRank": 100,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/render3/view/i18n/get_msg_utils.ts",
        "metrics": {
          "complexity": 4,
          "loc": 83,
          "functionCount": 16,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.64,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/view/i18n/icu_serializer.ts",
        "metrics": {
          "complexity": 2,
          "loc": 42,
          "functionCount": 13,
          "duplicationRatio": 0.31
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.64,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.03
          }
        ],
        "healthScore": 65
      },
      {
        "file": "packages/compiler/src/render3/view/i18n/localize_utils.ts",
        "metrics": {
          "complexity": 8,
          "loc": 132,
          "functionCount": 19,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.6,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/render3/view/i18n/meta.ts",
        "metrics": {
          "complexity": 36,
          "loc": 217,
          "functionCount": 21,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 3,
          "instability": 0.79,
          "cohesionScore": 0.47,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.8
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.08
          }
        ],
        "healthScore": 32
      },
      {
        "file": "packages/compiler/src/render3/view/i18n/util.ts",
        "metrics": {
          "complexity": 10,
          "loc": 56,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 8,
          "instability": 0.33,
          "cohesionScore": 0.43,
          "percentileUsageRank": 89,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/compilation.ts",
        "metrics": {
          "complexity": 12,
          "loc": 124,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 68,
          "instability": 0.06,
          "cohesionScore": 0.5,
          "percentileUsageRank": 100,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/conversion.ts",
        "metrics": {
          "complexity": 6,
          "loc": 57,
          "functionCount": 4,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 4,
          "instability": 0.33,
          "cohesionScore": 0.57,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/emit.ts",
        "metrics": {
          "complexity": 19,
          "loc": 261,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 68,
          "incomingDependencies": 1,
          "instability": 0.99,
          "cohesionScore": 0.74,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 51
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/ingest.ts",
        "metrics": {
          "complexity": 195,
          "loc": 1472,
          "functionCount": 62,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 15,
          "incomingDependencies": 2,
          "instability": 0.88,
          "cohesionScore": 0.5,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 9.75
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.47
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/instruction.ts",
        "metrics": {
          "complexity": 60,
          "loc": 863,
          "functionCount": 72,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.5,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.88
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/upgrade/src/common/src/security/trusted_types.ts",
        "metrics": {
          "complexity": 5,
          "loc": 20,
          "functionCount": 3,
          "duplicationRatio": 0.18
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.86,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.17
          }
        ],
        "healthScore": 90
      },
      {
        "file": "packages/upgrade/src/common/src/security/trusted_types_defs.ts",
        "metrics": {
          "complexity": 1,
          "loc": 12,
          "functionCount": 0,
          "duplicationRatio": 0.2
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 87
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/analysis_deps.ts",
        "metrics": {
          "complexity": 2,
          "loc": 51,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/best_effort_mode.ts",
        "metrics": {
          "complexity": 3,
          "loc": 12,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/cli.ts",
        "metrics": {
          "complexity": 1,
          "loc": 32,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.62,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 10,
          "instability": 0.41,
          "cohesionScore": 0.74,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/migration.ts",
        "metrics": {
          "complexity": 17,
          "loc": 198,
          "functionCount": 12,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 15,
          "incomingDependencies": 3,
          "instability": 0.83,
          "cohesionScore": 0.79,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/migration_config.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.75,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/migration_host.ts",
        "metrics": {
          "complexity": 1,
          "loc": 20,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 7,
          "instability": 0.13,
          "cohesionScore": 0.86,
          "percentileUsageRank": 87,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/phase_analysis.ts",
        "metrics": {
          "complexity": 12,
          "loc": 100,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 1,
          "instability": 0.9,
          "cohesionScore": 0.77,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/phase_migrate.ts",
        "metrics": {
          "complexity": 3,
          "loc": 44,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 1,
          "instability": 0.92,
          "cohesionScore": 0.77,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/result.ts",
        "metrics": {
          "complexity": 1,
          "loc": 16,
          "functionCount": 0,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 8,
          "instability": 0.27,
          "cohesionScore": 0.69,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/write_replacements.ts",
        "metrics": {
          "complexity": 2,
          "loc": 15,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/integrationtest/bazel/injectable_def/app/src/basic.ts",
        "metrics": {
          "complexity": 1,
          "loc": 16,
          "functionCount": 0,
          "duplicationRatio": 0.18
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.21
          }
        ],
        "healthScore": 89
      },
      {
        "file": "packages/compiler-cli/integrationtest/bazel/injectable_def/app/src/dep.ts",
        "metrics": {
          "complexity": 1,
          "loc": 27,
          "functionCount": 2,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/integrationtest/bazel/injectable_def/app/src/hierarchy.ts",
        "metrics": {
          "complexity": 1,
          "loc": 29,
          "functionCount": 1,
          "duplicationRatio": 0.12
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/integrationtest/bazel/injectable_def/app/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 1,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.88,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/integrationtest/bazel/injectable_def/app/src/root.ts",
        "metrics": {
          "complexity": 1,
          "loc": 27,
          "functionCount": 1,
          "duplicationRatio": 0.1
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.88,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/integrationtest/bazel/injectable_def/app/src/root_lazy.ts",
        "metrics": {
          "complexity": 1,
          "loc": 21,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.88,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/integrationtest/bazel/injectable_def/app/src/root_service.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/integrationtest/bazel/injectable_def/app/src/self.ts",
        "metrics": {
          "complexity": 1,
          "loc": 27,
          "functionCount": 2,
          "duplicationRatio": 0.17
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.16
          }
        ],
        "healthScore": 90
      },
      {
        "file": "packages/compiler-cli/integrationtest/bazel/injectable_def/app/src/string.ts",
        "metrics": {
          "complexity": 1,
          "loc": 25,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/integrationtest/bazel/injectable_def/app/src/token.ts",
        "metrics": {
          "complexity": 1,
          "loc": 45,
          "functionCount": 4,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/debug_info.ts",
        "metrics": {
          "complexity": 3,
          "loc": 24,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/di.ts",
        "metrics": {
          "complexity": 34,
          "loc": 220,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.63,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 34
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/diagnostics.ts",
        "metrics": {
          "complexity": 55,
          "loc": 399,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 3,
          "instability": 0.77,
          "cohesionScore": 0.57,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.75
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/evaluation.ts",
        "metrics": {
          "complexity": 16,
          "loc": 90,
          "functionCount": 8,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/factory.ts",
        "metrics": {
          "complexity": 1,
          "loc": 27,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/injectable_registry.ts",
        "metrics": {
          "complexity": 3,
          "loc": 31,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.63,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/input_transforms.ts",
        "metrics": {
          "complexity": 3,
          "loc": 20,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/jit_declaration_registry.ts",
        "metrics": {
          "complexity": 1,
          "loc": 4,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 3,
          "instability": 0.25,
          "cohesionScore": 0.5,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/metadata.ts",
        "metrics": {
          "complexity": 21,
          "loc": 157,
          "functionCount": 24,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/references_registry.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/schema.ts",
        "metrics": {
          "complexity": 9,
          "loc": 48,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/util.ts",
        "metrics": {
          "complexity": 66,
          "loc": 374,
          "functionCount": 35,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 5,
          "instability": 0.5,
          "cohesionScore": 0.5,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.3
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/component/src/diagnostics.ts",
        "metrics": {
          "complexity": 8,
          "loc": 32,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/component/src/handler.ts",
        "metrics": {
          "complexity": 275,
          "loc": 1905,
          "functionCount": 54,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 31,
          "incomingDependencies": 1,
          "instability": 0.97,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 13.75
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.91
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/component/src/metadata.ts",
        "metrics": {
          "complexity": 1,
          "loc": 67,
          "functionCount": 0,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/component/src/resources.ts",
        "metrics": {
          "complexity": 57,
          "loc": 562,
          "functionCount": 18,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 2,
          "instability": 0.82,
          "cohesionScore": 0.51,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.85
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.87
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/component/src/symbol.ts",
        "metrics": {
          "complexity": 11,
          "loc": 53,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/component/src/util.ts",
        "metrics": {
          "complexity": 25,
          "loc": 145,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 1,
          "instability": 0.86,
          "cohesionScore": 0.54,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/directive/src/handler.ts",
        "metrics": {
          "complexity": 27,
          "loc": 384,
          "functionCount": 14,
          "duplicationRatio": 0.1
        },
        "dependencies": {
          "outgoingDependencies": 12,
          "incomingDependencies": 1,
          "instability": 0.92,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.28
          }
        ],
        "healthScore": 24
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/directive/src/initializer_function_access.ts",
        "metrics": {
          "complexity": 2,
          "loc": 28,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 4,
          "instability": 0.5,
          "cohesionScore": 0.59,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/directive/src/initializer_functions.ts",
        "metrics": {
          "complexity": 25,
          "loc": 137,
          "functionCount": 8,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 6,
          "instability": 0.25,
          "cohesionScore": 0.5,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/directive/src/input_function.ts",
        "metrics": {
          "complexity": 5,
          "loc": 48,
          "functionCount": 1,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 2,
          "instability": 0.75,
          "cohesionScore": 0.69,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/directive/src/input_output_parse_options.ts",
        "metrics": {
          "complexity": 4,
          "loc": 28,
          "functionCount": 1,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.5,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/directive/src/model_function.ts",
        "metrics": {
          "complexity": 5,
          "loc": 57,
          "functionCount": 1,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 2,
          "instability": 0.75,
          "cohesionScore": 0.69,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/directive/src/output_function.ts",
        "metrics": {
          "complexity": 6,
          "loc": 65,
          "functionCount": 1,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 2,
          "instability": 0.78,
          "cohesionScore": 0.66,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/directive/src/query_functions.ts",
        "metrics": {
          "complexity": 21,
          "loc": 142,
          "functionCount": 6,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 2,
          "instability": 0.75,
          "cohesionScore": 0.65,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/directive/src/shared.ts",
        "metrics": {
          "complexity": 231,
          "loc": 1501,
          "functionCount": 54,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 2,
          "instability": 0.85,
          "cohesionScore": 0.65,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 11.55
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/directive/src/symbol.ts",
        "metrics": {
          "complexity": 25,
          "loc": 122,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.5,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/ng_module/src/handler.ts",
        "metrics": {
          "complexity": 129,
          "loc": 979,
          "functionCount": 37,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 13,
          "incomingDependencies": 1,
          "instability": 0.93,
          "cohesionScore": 0.54,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 6.45
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 3.26
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/ng_module/src/module_with_providers.ts",
        "metrics": {
          "complexity": 38,
          "loc": 115,
          "functionCount": 5,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.5,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.9
          }
        ],
        "healthScore": 36
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/core/api/src/adapter.ts",
        "metrics": {
          "complexity": 1,
          "loc": 25,
          "functionCount": 0,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/core/api/src/interfaces.ts",
        "metrics": {
          "complexity": 1,
          "loc": 31,
          "functionCount": 0,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/core/api/src/options.ts",
        "metrics": {
          "complexity": 1,
          "loc": 40,
          "functionCount": 0,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.88,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/core/api/src/public_options.ts",
        "metrics": {
          "complexity": 1,
          "loc": 59,
          "functionCount": 0,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.5,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/file_system/testing/src/mock_file_system.ts",
        "metrics": {
          "complexity": 49,
          "loc": 322,
          "functionCount": 47,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 5,
          "instability": 0.29,
          "cohesionScore": 0.63,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.45
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/file_system/testing/src/mock_file_system_native.ts",
        "metrics": {
          "complexity": 2,
          "loc": 43,
          "functionCount": 11,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.71,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/file_system/testing/src/mock_file_system_posix.ts",
        "metrics": {
          "complexity": 1,
          "loc": 30,
          "functionCount": 8,
          "duplicationRatio": 0.12
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/file_system/testing/src/mock_file_system_windows.ts",
        "metrics": {
          "complexity": 1,
          "loc": 30,
          "functionCount": 8,
          "duplicationRatio": 0.12
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/file_system/testing/src/test_helper.ts",
        "metrics": {
          "complexity": 14,
          "loc": 148,
          "functionCount": 22,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.77,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/logging/testing/src/mock_logger.ts",
        "metrics": {
          "complexity": 1,
          "loc": 22,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/incremental/semantic_graph/src/api.ts",
        "metrics": {
          "complexity": 2,
          "loc": 30,
          "functionCount": 6,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.5,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/incremental/semantic_graph/src/graph.ts",
        "metrics": {
          "complexity": 26,
          "loc": 153,
          "functionCount": 15,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/incremental/semantic_graph/src/type_parameters.ts",
        "metrics": {
          "complexity": 6,
          "loc": 31,
          "functionCount": 5,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/incremental/semantic_graph/src/util.ts",
        "metrics": {
          "complexity": 16,
          "loc": 57,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.88,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/jit/src/downlevel_decorators_transform.ts",
        "metrics": {
          "complexity": 85,
          "loc": 449,
          "functionCount": 20,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.5,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 4.25
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/jit/src/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 37,
          "functionCount": 3,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.66,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/api/ast_factory.ts",
        "metrics": {
          "complexity": 1,
          "loc": 108,
          "functionCount": 0,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/api/import_generator.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 6,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 85,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/import_manager/check_unique_identifier_name.ts",
        "metrics": {
          "complexity": 5,
          "loc": 31,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.88,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/import_manager/import_manager.ts",
        "metrics": {
          "complexity": 39,
          "loc": 374,
          "functionCount": 25,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 6,
          "incomingDependencies": 5,
          "instability": 0.55,
          "cohesionScore": 0.79,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.95
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.25
          }
        ],
        "healthScore": 10
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/import_manager/import_typescript_transform.ts",
        "metrics": {
          "complexity": 18,
          "loc": 104,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/import_manager/reuse_generated_imports.ts",
        "metrics": {
          "complexity": 7,
          "loc": 46,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.81,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/import_manager/reuse_source_file_imports.ts",
        "metrics": {
          "complexity": 21,
          "loc": 77,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/diagnostics/src/diagnostic.ts",
        "metrics": {
          "complexity": 13,
          "loc": 158,
          "functionCount": 6,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/diagnostics/src/id.ts",
        "metrics": {
          "complexity": 3,
          "loc": 17,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/api/api.ts",
        "metrics": {
          "complexity": 9,
          "loc": 207,
          "functionCount": 33,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.54,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.03
          }
        ],
        "healthScore": 94
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/api/extended_template_checker.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0.43
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.43
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/api/index.ts",
        "metrics": {
          "complexity": 1,
          "loc": 2,
          "functionCount": 0,
          "duplicationRatio": 1
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 16,
          "instability": 0.11,
          "cohesionScore": 0.88,
          "percentileUsageRank": 96,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 2
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/src/extended_template_checker.ts",
        "metrics": {
          "complexity": 10,
          "loc": 90,
          "functionCount": 5,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.59,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/template_semantics/api/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0.43
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.63,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.43
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/template_semantics/src/template_semantics_checker.ts",
        "metrics": {
          "complexity": 17,
          "loc": 131,
          "functionCount": 13,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/validation/src/rules/api.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0.14
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 3,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/validation/src/rules/initializer_api_usage_rule.ts",
        "metrics": {
          "complexity": 20,
          "loc": 89,
          "functionCount": 5,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 58
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/validation/src/rules/unused_standalone_imports_rule.ts",
        "metrics": {
          "complexity": 33,
          "loc": 143,
          "functionCount": 9,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.65
          }
        ],
        "healthScore": 42
      },
      {
        "file": "packages/compiler/src/template/pipeline/ir/src/enums.ts",
        "metrics": {
          "complexity": 1,
          "loc": 154,
          "functionCount": 0,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 8,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/ir/src/expression.ts",
        "metrics": {
          "complexity": 145,
          "loc": 1054,
          "functionCount": 171,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 3,
          "instability": 0.75,
          "cohesionScore": 0.69,
          "percentileUsageRank": 67,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 7.25
          },
          {
            "type": "size",
            "severity": "critical",
            "line": 1,
            "threshold": 1000,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/template/pipeline/ir/src/handle.ts",
        "metrics": {
          "complexity": 1,
          "loc": 3,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 5,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/ir/src/operations.ts",
        "metrics": {
          "complexity": 24,
          "loc": 196,
          "functionCount": 13,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 8,
          "instability": 0.11,
          "cohesionScore": 0.88,
          "percentileUsageRank": 89,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/compiler/src/template/pipeline/ir/src/traits.ts",
        "metrics": {
          "complexity": 1,
          "loc": 66,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 5,
          "instability": 0.5,
          "cohesionScore": 0.68,
          "percentileUsageRank": 81,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/ir/src/variable.ts",
        "metrics": {
          "complexity": 1,
          "loc": 31,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.71,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/any_cast.ts",
        "metrics": {
          "complexity": 7,
          "loc": 23,
          "functionCount": 2,
          "duplicationRatio": 0.13
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/apply_i18n_expressions.ts",
        "metrics": {
          "complexity": 14,
          "loc": 49,
          "functionCount": 2,
          "duplicationRatio": 0.1
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/assign_i18n_slot_dependencies.ts",
        "metrics": {
          "complexity": 16,
          "loc": 54,
          "functionCount": 1,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/attach_source_locations.ts",
        "metrics": {
          "complexity": 8,
          "loc": 24,
          "functionCount": 1,
          "duplicationRatio": 0.17
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 92
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/attribute_extraction.ts",
        "metrics": {
          "complexity": 28,
          "loc": 162,
          "functionCount": 3,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 47
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/binding_specialization.ts",
        "metrics": {
          "complexity": 19,
          "loc": 115,
          "functionCount": 2,
          "duplicationRatio": 0.1
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.53,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 61
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/chaining.ts",
        "metrics": {
          "complexity": 11,
          "loc": 87,
          "functionCount": 2,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.53,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/collapse_singleton_interpolations.ts",
        "metrics": {
          "complexity": 7,
          "loc": 17,
          "functionCount": 2,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/conditionals.ts",
        "metrics": {
          "complexity": 11,
          "loc": 49,
          "functionCount": 2,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/const_collection.ts",
        "metrics": {
          "complexity": 46,
          "loc": 208,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.3
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.04
          }
        ],
        "healthScore": 13
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/convert_i18n_bindings.ts",
        "metrics": {
          "complexity": 14,
          "loc": 61,
          "functionCount": 1,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 82
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/create_i18n_contexts.ts",
        "metrics": {
          "complexity": 28,
          "loc": 97,
          "functionCount": 1,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 47
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/deduplicate_text_bindings.ts",
        "metrics": {
          "complexity": 10,
          "loc": 22,
          "functionCount": 1,
          "duplicationRatio": 0.21
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/defer_configs.ts",
        "metrics": {
          "complexity": 7,
          "loc": 22,
          "functionCount": 1,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/defer_resolve_targets.ts",
        "metrics": {
          "complexity": 34,
          "loc": 110,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          }
        ],
        "healthScore": 41
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/empty_elements.ts",
        "metrics": {
          "complexity": 8,
          "loc": 27,
          "functionCount": 1,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/expand_safe_reads.ts",
        "metrics": {
          "complexity": 44,
          "loc": 185,
          "functionCount": 21,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.2
          }
        ],
        "healthScore": 24
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/extract_i18n_messages.ts",
        "metrics": {
          "complexity": 37,
          "loc": 171,
          "functionCount": 9,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.85
          }
        ],
        "healthScore": 37
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/generate_advance.ts",
        "metrics": {
          "complexity": 13,
          "loc": 45,
          "functionCount": 2,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/generate_local_let_references.ts",
        "metrics": {
          "complexity": 4,
          "loc": 26,
          "functionCount": 1,
          "duplicationRatio": 0.15
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/generate_projection_def.ts",
        "metrics": {
          "complexity": 8,
          "loc": 27,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/generate_variables.ts",
        "metrics": {
          "complexity": 28,
          "loc": 182,
          "functionCount": 4,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 47
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/has_const_expression_collection.ts",
        "metrics": {
          "complexity": 4,
          "loc": 19,
          "functionCount": 2,
          "duplicationRatio": 0.16
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 93
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/host_style_property_parsing.ts",
        "metrics": {
          "complexity": 13,
          "loc": 60,
          "functionCount": 5,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/i18n_const_collection.ts",
        "metrics": {
          "complexity": 34,
          "loc": 248,
          "functionCount": 11,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 1,
          "instability": 0.92,
          "cohesionScore": 0.43,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.7
          },
          {
            "type": "size",
            "severity": "medium",
            "line": 1,
            "threshold": 200,
            "excessRatio": 1.24
          }
        ],
        "healthScore": 32
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/i18n_text_extraction.ts",
        "metrics": {
          "complexity": 21,
          "loc": 89,
          "functionCount": 1,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/local_refs.ts",
        "metrics": {
          "complexity": 9,
          "loc": 31,
          "functionCount": 2,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/namespace.ts",
        "metrics": {
          "complexity": 5,
          "loc": 16,
          "functionCount": 1,
          "duplicationRatio": 0.31
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.04
          }
        ],
        "healthScore": 65
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/naming.ts",
        "metrics": {
          "complexity": 45,
          "loc": 179,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.66,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.25
          }
        ],
        "healthScore": 22
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/next_context_merging.ts",
        "metrics": {
          "complexity": 19,
          "loc": 56,
          "functionCount": 3,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 61
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/ng_container.ts",
        "metrics": {
          "complexity": 7,
          "loc": 17,
          "functionCount": 1,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/nonbindable.ts",
        "metrics": {
          "complexity": 13,
          "loc": 39,
          "functionCount": 2,
          "duplicationRatio": 0.31
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          },
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.03
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/nullish_coalescing.ts",
        "metrics": {
          "complexity": 5,
          "loc": 36,
          "functionCount": 2,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/ordering.ts",
        "metrics": {
          "complexity": 20,
          "loc": 115,
          "functionCount": 14,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 58
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/parse_extracted_styles.ts",
        "metrics": {
          "complexity": 39,
          "loc": 140,
          "functionCount": 4,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.53,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.95
          }
        ],
        "healthScore": 34
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/phase_remove_content_selectors.ts",
        "metrics": {
          "complexity": 8,
          "loc": 31,
          "functionCount": 3,
          "duplicationRatio": 0.32
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.71,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 65
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/pipe_creation.ts",
        "metrics": {
          "complexity": 12,
          "loc": 52,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/pipe_variadic.ts",
        "metrics": {
          "complexity": 5,
          "loc": 28,
          "functionCount": 2,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/propagate_i18n_blocks.ts",
        "metrics": {
          "complexity": 13,
          "loc": 77,
          "functionCount": 4,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/pure_function_extraction.ts",
        "metrics": {
          "complexity": 8,
          "loc": 52,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.53,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/pure_literal_structures.ts",
        "metrics": {
          "complexity": 10,
          "loc": 54,
          "functionCount": 4,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/reify.ts",
        "metrics": {
          "complexity": 142,
          "loc": 657,
          "functionCount": 10,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.57,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 7.1
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.19
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/remove_empty_bindings.ts",
        "metrics": {
          "complexity": 12,
          "loc": 21,
          "functionCount": 1,
          "duplicationRatio": 0.25
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.67
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/remove_i18n_contexts.ts",
        "metrics": {
          "complexity": 6,
          "loc": 16,
          "functionCount": 1,
          "duplicationRatio": 0.27
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.78
          }
        ],
        "healthScore": 77
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/remove_illegal_let_references.ts",
        "metrics": {
          "complexity": 10,
          "loc": 27,
          "functionCount": 2,
          "duplicationRatio": 0.09
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/remove_unused_i18n_attrs.ts",
        "metrics": {
          "complexity": 9,
          "loc": 22,
          "functionCount": 1,
          "duplicationRatio": 0.19
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.27
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/resolve_contexts.ts",
        "metrics": {
          "complexity": 15,
          "loc": 62,
          "functionCount": 3,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/resolve_defer_deps_fns.ts",
        "metrics": {
          "complexity": 7,
          "loc": 26,
          "functionCount": 1,
          "duplicationRatio": 0.13
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/resolve_dollar_event.ts",
        "metrics": {
          "complexity": 8,
          "loc": 28,
          "functionCount": 3,
          "duplicationRatio": 0.11
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/resolve_i18n_element_placeholders.ts",
        "metrics": {
          "complexity": 44,
          "loc": 315,
          "functionCount": 8,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.2
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 4
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/resolve_i18n_expression_placeholders.ts",
        "metrics": {
          "complexity": 16,
          "loc": 61,
          "functionCount": 3,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/resolve_names.ts",
        "metrics": {
          "complexity": 29,
          "loc": 98,
          "functionCount": 4,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.45
          }
        ],
        "healthScore": 46
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/resolve_sanitizers.ts",
        "metrics": {
          "complexity": 27,
          "loc": 81,
          "functionCount": 3,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.52,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.35
          }
        ],
        "healthScore": 48
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/save_restore_view.ts",
        "metrics": {
          "complexity": 13,
          "loc": 62,
          "functionCount": 3,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/slot_allocation.ts",
        "metrics": {
          "complexity": 8,
          "loc": 25,
          "functionCount": 1,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/store_let_optimization.ts",
        "metrics": {
          "complexity": 8,
          "loc": 27,
          "functionCount": 3,
          "duplicationRatio": 0.14
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/style_binding_specialization.ts",
        "metrics": {
          "complexity": 12,
          "loc": 42,
          "functionCount": 1,
          "duplicationRatio": 0.1
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/temporary_variables.ts",
        "metrics": {
          "complexity": 15,
          "loc": 70,
          "functionCount": 6,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/track_fn_optimization.ts",
        "metrics": {
          "complexity": 24,
          "loc": 78,
          "functionCount": 3,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.53,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/track_variables.ts",
        "metrics": {
          "complexity": 7,
          "loc": 26,
          "functionCount": 2,
          "duplicationRatio": 0.17
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 92
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/transform_two_way_binding_set.ts",
        "metrics": {
          "complexity": 8,
          "loc": 29,
          "functionCount": 2,
          "duplicationRatio": 0.07
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.63,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/var_counting.ts",
        "metrics": {
          "complexity": 49,
          "loc": 118,
          "functionCount": 6,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.45
          }
        ],
        "healthScore": 13
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/variable_optimization.ts",
        "metrics": {
          "complexity": 79,
          "loc": 303,
          "functionCount": 16,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.58,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 3.95
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.01
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/wrap_icus.ts",
        "metrics": {
          "complexity": 10,
          "loc": 33,
          "functionCount": 1,
          "duplicationRatio": 0.21
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.69,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.41
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/util/elements.ts",
        "metrics": {
          "complexity": 5,
          "loc": 17,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 3,
          "instability": 0.4,
          "cohesionScore": 0.69,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/convert-input/convert_to_signal.ts",
        "metrics": {
          "complexity": 22,
          "loc": 156,
          "functionCount": 6,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.81,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/convert-input/prepare_and_check.ts",
        "metrics": {
          "complexity": 43,
          "loc": 154,
          "functionCount": 3,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 3,
          "instability": 0.5,
          "cohesionScore": 0.72,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 2.15
          }
        ],
        "healthScore": 26
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/batch/extract.ts",
        "metrics": {
          "complexity": 3,
          "loc": 27,
          "functionCount": 2,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.76,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/batch/merge_unit_data.ts",
        "metrics": {
          "complexity": 24,
          "loc": 106,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.77,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 49
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/batch/populate_global_data.ts",
        "metrics": {
          "complexity": 5,
          "loc": 27,
          "functionCount": 1,
          "duplicationRatio": 0.08
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.76,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/batch/test_bin.ts",
        "metrics": {
          "complexity": 5,
          "loc": 41,
          "functionCount": 5,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 0,
          "instability": 1,
          "cohesionScore": 0.79,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/batch/unit_data.ts",
        "metrics": {
          "complexity": 1,
          "loc": 15,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 5,
          "instability": 0.29,
          "cohesionScore": 0.67,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/flow_analysis/flow_containers.ts",
        "metrics": {
          "complexity": 10,
          "loc": 29,
          "functionCount": 4,
          "duplicationRatio": 0.06
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/flow_analysis/flow_node_internals.ts",
        "metrics": {
          "complexity": 1,
          "loc": 85,
          "functionCount": 0,
          "duplicationRatio": 0.05
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 1,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/flow_analysis/flow_node_traversal.ts",
        "metrics": {
          "complexity": 17,
          "loc": 70,
          "functionCount": 2,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.88,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.13
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/flow_analysis/index.ts",
        "metrics": {
          "complexity": 30,
          "loc": 189,
          "functionCount": 7,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.88,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 46
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/input_detection/directive_info.ts",
        "metrics": {
          "complexity": 1,
          "loc": 30,
          "functionCount": 5,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.74,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/input_detection/input_decorator.ts",
        "metrics": {
          "complexity": 28,
          "loc": 174,
          "functionCount": 5,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 4,
          "instability": 0.43,
          "cohesionScore": 0.58,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.4
          }
        ],
        "healthScore": 47
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/input_detection/input_node.ts",
        "metrics": {
          "complexity": 4,
          "loc": 14,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 7,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/input_detection/known_inputs.ts",
        "metrics": {
          "complexity": 7,
          "loc": 124,
          "functionCount": 16,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 14,
          "instability": 0.39,
          "cohesionScore": 0.77,
          "percentileUsageRank": 96,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/input_detection/nodes_to_input.ts",
        "metrics": {
          "complexity": 5,
          "loc": 22,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.88,
          "percentileUsageRank": 9,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/integrationtest/bazel/injector_def/ivy_build/app/src/module.ts",
        "metrics": {
          "complexity": 1,
          "loc": 21,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 0,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 0,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/jit/src/initializer_api_transforms/input_function.ts",
        "metrics": {
          "complexity": 4,
          "loc": 66,
          "functionCount": 3,
          "duplicationRatio": 0.18
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.23
          }
        ],
        "healthScore": 89
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/jit/src/initializer_api_transforms/model_function.ts",
        "metrics": {
          "complexity": 6,
          "loc": 85,
          "functionCount": 3,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/jit/src/initializer_api_transforms/output_function.ts",
        "metrics": {
          "complexity": 3,
          "loc": 45,
          "functionCount": 2,
          "duplicationRatio": 0.33
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/jit/src/initializer_api_transforms/query_functions.ts",
        "metrics": {
          "complexity": 6,
          "loc": 69,
          "functionCount": 1,
          "duplicationRatio": 0.1
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/jit/src/initializer_api_transforms/transform.ts",
        "metrics": {
          "complexity": 11,
          "loc": 105,
          "functionCount": 8,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 1,
          "instability": 0.91,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/jit/src/initializer_api_transforms/transform_api.ts",
        "metrics": {
          "complexity": 2,
          "loc": 36,
          "functionCount": 2,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 5,
          "instability": 0.38,
          "cohesionScore": 0.44,
          "percentileUsageRank": 81,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/checks/interpolated_signal_not_invoked/index.ts",
        "metrics": {
          "complexity": 20,
          "loc": 97,
          "functionCount": 8,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.33
          }
        ],
        "healthScore": 58
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/checks/invalid_banana_in_box/index.ts",
        "metrics": {
          "complexity": 4,
          "loc": 33,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/checks/missing_control_flow_directive/index.ts",
        "metrics": {
          "complexity": 8,
          "loc": 61,
          "functionCount": 4,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.53,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/10_apply_import_manager.ts",
        "metrics": {
          "complexity": 1,
          "loc": 13,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/1_identify_inputs.ts",
        "metrics": {
          "complexity": 13,
          "loc": 71,
          "functionCount": 2,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 7,
          "incomingDependencies": 1,
          "instability": 0.88,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          }
        ],
        "healthScore": 85
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/2_find_source_file_references.ts",
        "metrics": {
          "complexity": 1,
          "loc": 36,
          "functionCount": 1,
          "duplicationRatio": 0.26
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.76,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.72
          }
        ],
        "healthScore": 78
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/3_check_incompatible_patterns.ts",
        "metrics": {
          "complexity": 3,
          "loc": 32,
          "functionCount": 2,
          "duplicationRatio": 0.12
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.76,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/4_check_inheritance.ts",
        "metrics": {
          "complexity": 1,
          "loc": 19,
          "functionCount": 4,
          "duplicationRatio": 0.39
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.76,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.31
          }
        ],
        "healthScore": 57
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/5_migrate_ts_references.ts",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.78,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/6_migrate_input_declarations.ts",
        "metrics": {
          "complexity": 7,
          "loc": 48,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 1,
          "instability": 0.83,
          "cohesionScore": 0.76,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/7_migrate_template_references.ts",
        "metrics": {
          "complexity": 6,
          "loc": 36,
          "functionCount": 1,
          "duplicationRatio": 0.81
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.78,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.63
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/8_migrate_host_bindings.ts",
        "metrics": {
          "complexity": 7,
          "loc": 40,
          "functionCount": 1,
          "duplicationRatio": 0.85
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.78,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.71
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/9_migrate_ts_type_references.ts",
        "metrics": {
          "complexity": 1,
          "loc": 14,
          "functionCount": 1,
          "duplicationRatio": 0.33
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.78,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "high",
            "line": 1,
            "threshold": 0.3,
            "excessRatio": 1.11
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/pattern_advisors/debug_element_component_instance.ts",
        "metrics": {
          "complexity": 16,
          "loc": 52,
          "functionCount": 2,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.07
          }
        ],
        "healthScore": 70
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/pattern_advisors/partial_directive_type.ts",
        "metrics": {
          "complexity": 11,
          "loc": 40,
          "functionCount": 2,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 91
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/pattern_advisors/spy_on_pattern.ts",
        "metrics": {
          "complexity": 8,
          "loc": 33,
          "functionCount": 2,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.67,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/checks/missing_ngforof_let/index.ts",
        "metrics": {
          "complexity": 5,
          "loc": 39,
          "functionCount": 3,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/checks/nullish_coalescing_not_nullable/index.ts",
        "metrics": {
          "complexity": 11,
          "loc": 56,
          "functionCount": 2,
          "duplicationRatio": 0.27
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.53,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.1
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.81
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/checks/optional_chain_not_nullable/index.ts",
        "metrics": {
          "complexity": 13,
          "loc": 65,
          "functionCount": 2,
          "duplicationRatio": 0.23
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.53,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.3
          },
          {
            "type": "duplication",
            "severity": "medium",
            "line": 1,
            "threshold": 0.15,
            "excessRatio": 1.55
          }
        ],
        "healthScore": 67
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/checks/skip_hydration_not_static/index.ts",
        "metrics": {
          "complexity": 7,
          "loc": 40,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/checks/suffix_not_supported/index.ts",
        "metrics": {
          "complexity": 4,
          "loc": 37,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/checks/text_attribute_not_binding/index.ts",
        "metrics": {
          "complexity": 10,
          "loc": 45,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/checks/uninvoked_function_in_event_binding/index.ts",
        "metrics": {
          "complexity": 15,
          "loc": 76,
          "functionCount": 6,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.5
          }
        ],
        "healthScore": 79
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/checks/unused_let_declaration/index.ts",
        "metrics": {
          "complexity": 9,
          "loc": 64,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.56,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/ir/src/ops/create.ts",
        "metrics": {
          "complexity": 5,
          "loc": 841,
          "functionCount": 27,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 10,
          "incomingDependencies": 2,
          "instability": 0.83,
          "cohesionScore": 0.62,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 2.8
          }
        ],
        "healthScore": 66
      },
      {
        "file": "packages/compiler/src/template/pipeline/ir/src/ops/host.ts",
        "metrics": {
          "complexity": 1,
          "loc": 39,
          "functionCount": 1,
          "duplicationRatio": 0.03
        },
        "dependencies": {
          "outgoingDependencies": 8,
          "incomingDependencies": 2,
          "instability": 0.8,
          "cohesionScore": 0.64,
          "percentileUsageRank": 49,
          "isInCycle": true
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/ir/src/ops/shared.ts",
        "metrics": {
          "complexity": 1,
          "loc": 45,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 4,
          "instability": 0.5,
          "cohesionScore": 0.67,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/compiler/src/template/pipeline/ir/src/ops/update.ts",
        "metrics": {
          "complexity": 3,
          "loc": 532,
          "functionCount": 17,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 11,
          "incomingDependencies": 4,
          "instability": 0.73,
          "cohesionScore": 0.64,
          "percentileUsageRank": 76,
          "isInCycle": true
        },
        "issues": [
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.77
          }
        ],
        "healthScore": 68
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/problematic_patterns/check_inheritance.ts",
        "metrics": {
          "complexity": 18,
          "loc": 76,
          "functionCount": 3,
          "duplicationRatio": 0.14
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 4,
          "instability": 0.2,
          "cohesionScore": 0.78,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/problematic_patterns/common_incompatible_patterns.ts",
        "metrics": {
          "complexity": 18,
          "loc": 81,
          "functionCount": 2,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 2,
          "instability": 0.67,
          "cohesionScore": 0.81,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/problematic_patterns/incompatibility.ts",
        "metrics": {
          "complexity": 5,
          "loc": 53,
          "functionCount": 2,
          "duplicationRatio": 0.09
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 19,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 97,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/problematic_patterns/incompatibility_human.ts",
        "metrics": {
          "complexity": 21,
          "loc": 135,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.89,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/problematic_patterns/incompatibility_todos.ts",
        "metrics": {
          "complexity": 5,
          "loc": 36,
          "functionCount": 2,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 2,
          "instability": 0.5,
          "cohesionScore": 0.89,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/problematic_patterns/problematic_field_registry.ts",
        "metrics": {
          "complexity": 1,
          "loc": 8,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 4,
          "instability": 0.33,
          "cohesionScore": 0.83,
          "percentileUsageRank": 76,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_migration/migrate_host_bindings.ts",
        "metrics": {
          "complexity": 7,
          "loc": 40,
          "functionCount": 1,
          "duplicationRatio": 0.88
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.81,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.76
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_migration/migrate_template_references.ts",
        "metrics": {
          "complexity": 6,
          "loc": 36,
          "functionCount": 1,
          "duplicationRatio": 0.81
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 1,
          "instability": 0.75,
          "cohesionScore": 0.81,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "duplication",
            "severity": "critical",
            "line": 1,
            "threshold": 0.5,
            "excessRatio": 1.63
          }
        ],
        "healthScore": 0
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_migration/migrate_ts_references.ts",
        "metrics": {
          "complexity": 8,
          "loc": 51,
          "functionCount": 1,
          "duplicationRatio": 0.02
        },
        "dependencies": {
          "outgoingDependencies": 5,
          "incomingDependencies": 2,
          "instability": 0.71,
          "cohesionScore": 0.81,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_migration/migrate_ts_type_references.ts",
        "metrics": {
          "complexity": 8,
          "loc": 59,
          "functionCount": 1,
          "duplicationRatio": 0.09
        },
        "dependencies": {
          "outgoingDependencies": 3,
          "incomingDependencies": 2,
          "instability": 0.6,
          "cohesionScore": 0.81,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_migration/reference_migration_host.ts",
        "metrics": {
          "complexity": 1,
          "loc": 9,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 10,
          "instability": 0.09,
          "cohesionScore": 0.78,
          "percentileUsageRank": 93,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_resolution/identify_host_references.ts",
        "metrics": {
          "complexity": 22,
          "loc": 146,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.89,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_resolution/identify_template_references.ts",
        "metrics": {
          "complexity": 6,
          "loc": 106,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.89,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_resolution/identify_ts_references.ts",
        "metrics": {
          "complexity": 18,
          "loc": 89,
          "functionCount": 1,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 4,
          "incomingDependencies": 1,
          "instability": 0.8,
          "cohesionScore": 0.83,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "high",
            "line": 1,
            "threshold": 15,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 64
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_resolution/index.ts",
        "metrics": {
          "complexity": 9,
          "loc": 110,
          "functionCount": 4,
          "duplicationRatio": 0.04
        },
        "dependencies": {
          "outgoingDependencies": 9,
          "incomingDependencies": 3,
          "instability": 0.75,
          "cohesionScore": 0.81,
          "percentileUsageRank": 67,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_resolution/known_fields.ts",
        "metrics": {
          "complexity": 1,
          "loc": 11,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 36,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 99,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_resolution/reference_kinds.ts",
        "metrics": {
          "complexity": 1,
          "loc": 81,
          "functionCount": 4,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 23,
          "instability": 0.04,
          "cohesionScore": 0.89,
          "percentileUsageRank": 98,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_resolution/reference_result.ts",
        "metrics": {
          "complexity": 1,
          "loc": 5,
          "functionCount": 0,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 7,
          "instability": 0.22,
          "cohesionScore": 0.89,
          "percentileUsageRank": 87,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_resolution/template_reference_visitor.ts",
        "metrics": {
          "complexity": 35,
          "loc": 331,
          "functionCount": 32,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 2,
          "instability": 0.33,
          "cohesionScore": 0.89,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.75
          },
          {
            "type": "size",
            "severity": "high",
            "line": 1,
            "threshold": 300,
            "excessRatio": 1.1
          }
        ],
        "healthScore": 19
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_migration/helpers/create_block_arrow_function.ts",
        "metrics": {
          "complexity": 1,
          "loc": 39,
          "functionCount": 1,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 0,
          "incomingDependencies": 2,
          "instability": 0,
          "cohesionScore": 1,
          "percentileUsageRank": 49,
          "isInCycle": false
        },
        "issues": [],
        "healthScore": 100
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_migration/helpers/object_expansion_refs.ts",
        "metrics": {
          "complexity": 21,
          "loc": 135,
          "functionCount": 3,
          "duplicationRatio": 0.01
        },
        "dependencies": {
          "outgoingDependencies": 1,
          "incomingDependencies": 1,
          "instability": 0.5,
          "cohesionScore": 0.9,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "critical",
            "line": 1,
            "threshold": 20,
            "excessRatio": 1.05
          }
        ],
        "healthScore": 50
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_migration/helpers/standard_reference.ts",
        "metrics": {
          "complexity": 12,
          "loc": 109,
          "functionCount": 3,
          "duplicationRatio": 0
        },
        "dependencies": {
          "outgoingDependencies": 2,
          "incomingDependencies": 1,
          "instability": 0.67,
          "cohesionScore": 0.75,
          "percentileUsageRank": 9,
          "isInCycle": false
        },
        "issues": [
          {
            "type": "complexity",
            "severity": "medium",
            "line": 1,
            "threshold": 10,
            "excessRatio": 1.2
          }
        ],
        "healthScore": 88
      }
    ],
    "codeContext": [
      {
        "file": "packages/empty.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/system.d.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/types.d.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/animations/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/animations/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/esbuild.config.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/compiler.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/forms/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/forms/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/elements/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/localize/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-browser/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-browser/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-browser-dynamic/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-browser-dynamic/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-server/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-server/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/service-worker/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/service-worker/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/upgrade/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/upgrade/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/animations/browser/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/animations/browser/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/zone.js/karma-build-sauce-mocha.conf.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/karma-build-sauce-selenium3-mocha.conf.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/karma-build.conf.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/karma-dist-sauce-jasmine.conf.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/zone.js/karma-dist-sauce-jasmine.es2015.conf.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/karma-dist-sauce-selenium3-jasmine.conf.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/zone.js/karma-dist.conf.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/karma-evergreen-dist-sauce-jasmine.conf.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/zone.js/karma-evergreen-dist.conf.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/sauce-evergreen.conf.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 4,
            "lineCount": 68,
            "parameterCount": 2,
            "snippet": "function (config, ignoredLaunchers) {\n  config.files.unshift('test/saucelabs.js');\n  var basicLaunchers = {\n    'SL_CHROME': {base: 'SauceLabs', browserName: 'chrome', version: '72'},\n    'SL_CHROME_60': {base: 'SauceLabs', browserName: 'chrome', version: '60'},\n    'SL_ANDROID8.0': {\n      base: 'SauceLabs',\n      browserName: 'Chrome',\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/sauce-selenium3.conf.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 2,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "function (config) {\n  config.files.unshift('test/saucelabs.js');\n  var customLaunchers = {\n    'SL_CHROME60': {\n      base: 'SauceLabs',\n      browserName: 'Chrome',\n      platform: 'Windows 10',\n      version: '60.0',\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/sauce.conf.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 4,
            "lineCount": 143,
            "parameterCount": 2,
            "snippet": "function (config, ignoredLaunchers) {\n  config.files.unshift('test/saucelabs.js');\n  var basicLaunchers = {\n    'SL_CHROME': {base: 'SauceLabs', browserName: 'chrome', version: '48'},\n    'SL_CHROME_65': {base: 'SauceLabs', browserName: 'chrome', version: '60'},\n    'SL_FIREFOX': {base: 'SauceLabs', browserName: 'firefox', version: '52'},\n    'SL_FIREFOX_59': {base: 'SauceLabs', browserName: 'firefox', version: '54'},\n    /*'SL_SAFARI7': {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 143 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/sauce.es2015.conf.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 4,
            "lineCount": 59,
            "parameterCount": 2,
            "snippet": "function (config, ignoredLaunchers) {\n  config.files.unshift('test/saucelabs.js');\n  var basicLaunchers = {\n    'SL_CHROME_66': {base: 'SauceLabs', browserName: 'chrome', version: '66'},\n  };\n  var customLaunchers = {};\n  if (!ignoredLaunchers) {\n    customLaunchers = basicLaunchers;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/http/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/locales/closure-locale.ts",
        "criticalFunctions": [
          {
            "name": "plural_locale_pl",
            "complexity": 22,
            "lineCount": 11,
            "parameterCount": 1,
            "snippet": "function plural_locale_pl(val: number): number {\nconst n = val, i = Math.floor(Math.abs(val)), v = val.toString().replace(/^[^.]*\\.?/, '').length;\nif (i === 1 && v === 0)\n    return 1;\nif (v === 0 && (i % 10 === Math.floor(i % 10) && (i % 10 >= 2 && i % 10 <= 4) && !(i % 100 >= 12 && i % 100 <= 14)))\n    return 3;\nif (v === 0 && (!(i === 1) && (i % 10 === Math.floor(i % 10) && (i % 10 >= 0 && i % 10 <= 1))) || (v === 0 && (i % 10 === Math.floor(i % 10) && (i % 10 >= 5 && i % 10 <= 9)) || v === 0 && (i % 100 === Math.floor(i % 100) && (i % 100 >= 12 && i % 100 <= 14))))\n    return 4;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              }
            ]
          },
          {
            "name": "plural_locale_br",
            "complexity": 21,
            "lineCount": 13,
            "parameterCount": 1,
            "snippet": "function plural_locale_br(val: number): number {\nconst n = val;\nif (n % 10 === 1 && !(n % 100 === 11 || (n % 100 === 71 || n % 100 === 91)))\n    return 1;\nif (n % 10 === 2 && !(n % 100 === 12 || (n % 100 === 72 || n % 100 === 92)))\n    return 2;\nif (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) && !(n % 100 >= 10 && n % 100 <= 19 || (n % 100 >= 70 && n % 100 <= 79 || n % 100 >= 90 && n % 100 <= 99)))\n    return 3;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              }
            ]
          },
          {
            "name": "plural_locale_ru",
            "complexity": 20,
            "lineCount": 11,
            "parameterCount": 1,
            "snippet": "function plural_locale_ru(val: number): number {\nconst n = val, i = Math.floor(Math.abs(val)), v = val.toString().replace(/^[^.]*\\.?/, '').length;\nif (v === 0 && (i % 10 === 1 && !(i % 100 === 11)))\n    return 1;\nif (v === 0 && (i % 10 === Math.floor(i % 10) && (i % 10 >= 2 && i % 10 <= 4) && !(i % 100 >= 12 && i % 100 <= 14)))\n    return 3;\nif (v === 0 && i % 10 === 0 || (v === 0 && (i % 10 === Math.floor(i % 10) && (i % 10 >= 5 && i % 10 <= 9)) || v === 0 && (i % 100 === Math.floor(i % 100) && (i % 100 >= 11 && i % 100 <= 14))))\n    return 4;\n  // ... more code ...",
            "issues": []
          },
          {
            "name": "plural_locale_uk",
            "complexity": 20,
            "lineCount": 11,
            "parameterCount": 1,
            "snippet": "function plural_locale_uk(val: number): number {\nconst n = val, i = Math.floor(Math.abs(val)), v = val.toString().replace(/^[^.]*\\.?/, '').length;\nif (v === 0 && (i % 10 === 1 && !(i % 100 === 11)))\n    return 1;\nif (v === 0 && (i % 10 === Math.floor(i % 10) && (i % 10 >= 2 && i % 10 <= 4) && !(i % 100 >= 12 && i % 100 <= 14)))\n    return 3;\nif (v === 0 && i % 10 === 0 || (v === 0 && (i % 10 === Math.floor(i % 10) && (i % 10 >= 5 && i % 10 <= 9)) || v === 0 && (i % 100 === Math.floor(i % 100) && (i % 100 >= 11 && i % 100 <= 14))))\n    return 4;\n  // ... more code ...",
            "issues": []
          },
          {
            "name": "plural_locale_bs",
            "complexity": 18,
            "lineCount": 9,
            "parameterCount": 1,
            "snippet": "function plural_locale_bs(val: number): number {\nconst n = val, i = Math.floor(Math.abs(val)), v = val.toString().replace(/^[^.]*\\.?/, '').length, f = parseInt(val.toString().replace(/^[^.]*\\.?/, ''), 10) || 0;\nif (v === 0 && (i % 10 === 1 && !(i % 100 === 11)) || f % 10 === 1 && !(f % 100 === 11))\n    return 1;\nif (v === 0 && (i % 10 === Math.floor(i % 10) && (i % 10 >= 2 && i % 10 <= 4) && !(i % 100 >= 12 && i % 100 <= 14)) || f % 10 === Math.floor(f % 10) && (f % 10 >= 2 && f % 10 <= 4) && !(f % 100 >= 12 && f % 100 <= 14))\n    return 3;\nreturn 5;\n}",
            "issues": []
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/locales/ff-CM.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/locales/ff-GN.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/locales/ff-MR.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/animations/src/errors.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/animations/src/version.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/src/errors.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/src/version.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/testing/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/testing/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/upgrade/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/upgrade/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/private/babel.d.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/private/bazel.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/private/localize.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/main.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/perform_compile.ts",
        "criticalFunctions": [
          {
            "name": "readConfiguration",
            "complexity": 10,
            "lineCount": 107,
            "parameterCount": 3,
            "snippet": "export function readConfiguration(\n  project: string,\n  existingOptions?: api.CompilerOptions,\n  host: ConfigurationHost = getFileSystem(),\n): ParsedConfiguration {\n  try {\n    const fs = getFileSystem();\n    const readConfigFile = (configFile: string) =>\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 107 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "performCompilation",
            "complexity": 6,
            "lineCount": 73,
            "parameterCount": 1,
            "snippet": "export function performCompilation<CbEmitRes extends ts.EmitResult = ts.EmitResult>({\n  rootNames,\n  options,\n  host,\n  oldProgram,\n  emitCallback,\n  mergeEmitResultsCallback,\n  gatherDiagnostics = defaultGatherDiagnostics,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 73 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/perform_watch.ts",
        "criticalFunctions": [
          {
            "name": "performWatchCompilation",
            "complexity": 22,
            "lineCount": 205,
            "parameterCount": 1,
            "snippet": "export function performWatchCompilation(host: PerformWatchHost): {\n  close: () => void;\n  ready: (cb: () => void) => void;\n  firstCompileResult: ReadonlyArray<ts.Diagnostic>;\n} {\n  let cachedProgram: api.Program | undefined; // Program cached from last compilation\n  let cachedCompilerHost: api.CompilerHost | undefined; // CompilerHost cached from last compilation\n  let cachedOptions: ParsedConfiguration | undefined; // CompilerOptions cached from last compilation\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 205 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createPerformWatchHost",
            "complexity": 12,
            "lineCount": 56,
            "parameterCount": 4,
            "snippet": "export function createPerformWatchHost<CbEmitRes extends ts.EmitResult = ts.EmitResult>(\n  configFileName: string,\n  reportDiagnostics: (diagnostics: ReadonlyArray<ts.Diagnostic>) => void,\n  existingOptions?: ts.CompilerOptions,\n  createEmitCallback?: (options: api.CompilerOptions) => api.TsEmitCallback<CbEmitRes> | undefined,\n): PerformWatchHost {\n  return {\n    reportDiagnostics: reportDiagnostics,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "doCompilation",
            "complexity": 12,
            "lineCount": 93,
            "parameterCount": 0,
            "snippet": "function doCompilation(): ReadonlyArray<ts.Diagnostic> {\n    if (!cachedOptions) {\n      cachedOptions = host.readConfiguration();\n    }\n    if (cachedOptions.errors && cachedOptions.errors.length) {\n      host.reportDiagnostics(cachedOptions.errors);\n      return cachedOptions.errors;\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 93 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/version.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/global/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/chars.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/compiler_facade_interface.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/constant_pool.ts",
        "criticalFunctions": [
          {
            "name": "getConstLiteral",
            "complexity": 11,
            "lineCount": 60,
            "parameterCount": 2,
            "snippet": "getConstLiteral(literal: o.Expression, forceShared?: boolean): o.Expression {\n    if (\n      (literal instanceof o.LiteralExpr && !isLongStringLiteral(literal)) ||\n      literal instanceof FixupExpression\n    ) {\n      return literal;\n    }\n    const key = GenericKeyFn.INSTANCE.keyOf(literal);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 60 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/core.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/jit_compiler_facade.ts",
        "criticalFunctions": [
          {
            "name": "convertDirectiveFacadeToMetadata",
            "complexity": 16,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "function convertDirectiveFacadeToMetadata(facade: R3DirectiveMetadataFacade): R3DirectiveMetadata {\n  const inputsFromMetadata = parseInputsArray(facade.inputs || []);\n  const outputsFromMetadata = parseMappingStringArray(facade.outputs || []);\n  const propMetadata = facade.propMetadata;\n  const inputsFromType: Record<string, R3InputMetadata> = {};\n  const outputsFromType: Record<string, string> = {};\n  for (const field in propMetadata) {\n    if (propMetadata.hasOwnProperty(field)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "convertDeclareComponentFacadeToMetadata",
            "complexity": 14,
            "lineCount": 62,
            "parameterCount": 3,
            "snippet": "function convertDeclareComponentFacadeToMetadata(\n  decl: R3DeclareComponentFacade,\n  typeSourceSpan: ParseSourceSpan,\n  sourceMapUrl: string,\n): R3ComponentMetadata<R3TemplateDependencyMetadata> {\n  const {template, interpolation, defer} = parseJitTemplate(\n    decl.template,\n    decl.type.name,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/parse_util.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/selector.ts",
        "criticalFunctions": [
          {
            "name": "match",
            "complexity": 16,
            "lineCount": 51,
            "parameterCount": 2,
            "snippet": "match(\n    cssSelector: CssSelector,\n    matchedCallback: ((c: CssSelector, a: T) => void) | null,\n  ): boolean {\n    let result = false;\n    const element = cssSelector.element!;\n    const classNames = cssSelector.classNames;\n    const attrs = cssSelector.attrs;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "parse",
            "complexity": 15,
            "lineCount": 64,
            "parameterCount": 1,
            "snippet": "static parse(selector: string): CssSelector[] {\n    const results: CssSelector[] = [];\n    const _addResult = (res: CssSelector[], cssSel: CssSelector) => {\n      if (\n        cssSel.notSelectors.length > 0 &&\n        !cssSel.element &&\n        cssSel.classNames.length == 0 &&\n        cssSel.attrs.length == 0\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_addSelectable",
            "complexity": 13,
            "lineCount": 57,
            "parameterCount": 3,
            "snippet": "private _addSelectable(\n    cssSelector: CssSelector,\n    callbackCtxt: T,\n    listContext: SelectorListContext,\n  ) {\n    let matcher: SelectorMatcher<T> = this;\n    const element = cssSelector.element;\n    const classNames = cssSelector.classNames;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/shadow_css.ts",
        "criticalFunctions": [
          {
            "name": "_applySelectorScope",
            "complexity": 21,
            "lineCount": 184,
            "parameterCount": 1,
            "snippet": "private _applySelectorScope({\n    selector,\n    scopeSelector,\n    hostSelector,\n    isParentSelector,\n  }: {\n    selector: string;\n    scopeSelector: string;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 184 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_pseudoFunctionAwareScopeSelectorPart",
            "complexity": 10,
            "lineCount": 72,
            "parameterCount": 1,
            "snippet": "(selectorPart: string) => {\n      let scopedPart = '';\n      const pseudoSelectorParts = [];\n      let pseudoSelectorMatch: RegExpExecArray | null;\n      while (\n        (pseudoSelectorMatch = _cssPrefixWithPseudoSelectorFunction.exec(selectorPart)) !== null\n      ) {\n        let openedBrackets = 1;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_convertColonHostContextInSelectorPart",
            "complexity": 4,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "private _convertColonHostContextInSelectorPart(cssText: string): string {\n    return cssText.replace(_cssColonHostContextReGlobal, (selectorText, pseudoPrefix) => {\n      const contextSelectorGroups: string[][] = [[]];\n      let match: RegExpExecArray | null;\n      while ((match = _cssColonHostContextRe.exec(selectorText))) {\n        const newContextSelectors = (match[1] ?? '')\n          .trim()\n          .split(',')\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 4,
            "lineCount": 63,
            "parameterCount": 2,
            "snippet": "(selectorText, pseudoPrefix) => {\n      const contextSelectorGroups: string[][] = [[]];\n      let match: RegExpExecArray | null;\n      while ((match = _cssColonHostContextRe.exec(selectorText))) {\n        const newContextSelectors = (match[1] ?? '')\n          .trim()\n          .split(',')\n          .map((m) => m.trim())\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 63 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/util.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/version.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/rxjs-interop/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/testing/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/testing/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/forms/src/errors.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/forms/src/form_builder.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/forms/src/validators.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/forms/src/version.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/language-service/src/attribute_completions.ts",
        "criticalFunctions": [
          {
            "name": "buildAttributeCompletionTable",
            "complexity": 33,
            "lineCount": 201,
            "parameterCount": 3,
            "snippet": "export function buildAttributeCompletionTable(\n  component: ts.ClassDeclaration,\n  element: TmplAstElement | TmplAstTemplate,\n  checker: TemplateTypeChecker,\n): Map<string, AttributeCompletion> {\n  const table = new Map<string, AttributeCompletion>();\n  const symbol: ElementSymbol | TemplateSymbol = checker.getSymbolOfNode(element, component) as\n    | ElementSymbol\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 33 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 201 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "addAttributeCompletionEntries",
            "complexity": 18,
            "lineCount": 142,
            "parameterCount": 6,
            "snippet": "export function addAttributeCompletionEntries(\n  entries: ts.CompletionEntry[],\n  completion: AttributeCompletion,\n  isAttributeContext: boolean,\n  isElementContext: boolean,\n  replacementSpan: ts.TextSpan | undefined,\n  insertSnippet: true | undefined,\n): void {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 142 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getStructuralAttributes",
            "complexity": 13,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "function getStructuralAttributes(meta: TypeCheckableDirectiveMeta): string[] {\n  if (meta.selector === null) {\n    return [];\n  }\n  const structuralAttributes: string[] = [];\n  const selectors = CssSelector.parse(meta.selector);\n  for (const selector of selectors) {\n    if (selector.element !== null && selector.element !== 'ng-template') {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/language-service/src/completions.ts",
        "criticalFunctions": [
          {
            "name": "getElementAttributeCompletions",
            "complexity": 42,
            "lineCount": 150,
            "parameterCount": 2,
            "snippet": "private getElementAttributeCompletions(\n    this: ElementAttributeCompletionBuilder,\n    options: ts.GetCompletionsAtPositionOptions | undefined,\n  ): ts.WithMetadata<ts.CompletionInfo> | undefined {\n    let element: TmplAstElement | TmplAstTemplate;\n    if (this.node instanceof TmplAstElement) {\n      element = this.node;\n    } else if (\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 42 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 150 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getElementAttributeCompletionDetails",
            "complexity": 17,
            "lineCount": 92,
            "parameterCount": 2,
            "snippet": "private getElementAttributeCompletionDetails(\n    this: ElementAttributeCompletionBuilder,\n    entryName: string,\n  ): ts.CompletionEntryDetails | undefined {\n    const {name, kind} = stripBindingSugar(entryName);\n    let element: TmplAstElement | TmplAstTemplate;\n    if (this.node instanceof TmplAstElement || this.node instanceof TmplAstTemplate) {\n      element = this.node;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 92 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getPropertyExpressionCompletion",
            "complexity": 14,
            "lineCount": 62,
            "parameterCount": 2,
            "snippet": "private getPropertyExpressionCompletion(\n    this: PropertyExpressionCompletionBuilder,\n    options: ts.GetCompletionsAtPositionOptions | undefined,\n  ): ts.WithMetadata<ts.CompletionInfo> | undefined {\n    if (\n      this.node instanceof EmptyExpr ||\n      this.node instanceof BoundEvent ||\n      this.node.receiver instanceof ImplicitReceiver\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getLiteralCompletions",
            "complexity": 12,
            "lineCount": 57,
            "parameterCount": 2,
            "snippet": "private getLiteralCompletions(\n    this: LiteralCompletionBuilder,\n    options: ts.GetCompletionsAtPositionOptions | undefined,\n  ): ts.WithMetadata<ts.CompletionInfo> | undefined {\n    const location = this.compiler\n      .getTemplateTypeChecker()\n      .getLiteralCompletionLocation(this.node, this.component);\n    if (location === null) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getGlobalPropertyExpressionCompletion",
            "complexity": 12,
            "lineCount": 90,
            "parameterCount": 2,
            "snippet": "private getGlobalPropertyExpressionCompletion(\n    this: PropertyExpressionCompletionBuilder | LetCompletionBuilder,\n    options: ts.GetCompletionsAtPositionOptions | undefined,\n  ): ts.WithMetadata<ts.CompletionInfo> | undefined {\n    const completions = this.templateTypeChecker.getGlobalCompletions(\n      this.template,\n      this.component,\n      this.node,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 90 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/language-service/src/definitions.ts",
        "criticalFunctions": [
          {
            "name": "getDefinitionsForSymbol",
            "complexity": 18,
            "lineCount": 73,
            "parameterCount": 1,
            "snippet": "private getDefinitionsForSymbol({\n    symbol,\n    node,\n    parent,\n    declaration,\n  }: DefinitionMeta & TypeCheckInfo): readonly ts.DefinitionInfo[] | undefined {\n    switch (symbol.kind) {\n      case SymbolKind.Directive:\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 73 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getTypeDefinitionsAtPosition",
            "complexity": 16,
            "lineCount": 66,
            "parameterCount": 2,
            "snippet": "getTypeDefinitionsAtPosition(\n    fileName: string,\n    position: number,\n  ): readonly ts.DefinitionInfo[] | undefined {\n    const typeCheckInfo = getTypeCheckInfoAtPosition(fileName, position, this.compiler);\n    if (typeCheckInfo === undefined) {\n      return undefined;\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getDefinitionForExpressionAtPosition",
            "complexity": 12,
            "lineCount": 66,
            "parameterCount": 3,
            "snippet": "function getDefinitionForExpressionAtPosition(\n  fileName: string,\n  position: number,\n  compiler: NgCompiler,\n): ts.DefinitionInfoAndBoundSpan | undefined {\n  const sf = compiler.getCurrentProgram().getSourceFile(fileName);\n  if (sf === undefined) {\n    return;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/language-service/src/language_service.ts",
        "criticalFunctions": [
          {
            "name": "getSemanticDiagnostics",
            "complexity": 8,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "getSemanticDiagnostics(fileName: string): ts.Diagnostic[] {\n    return this.withCompilerAndPerfTracing(PerfPhase.LsDiagnostics, (compiler) => {\n      let diagnostics: ts.Diagnostic[] = [];\n      if (isTypeScriptFile(fileName)) {\n        const program = compiler.getCurrentProgram();\n        const sourceFile = program.getSourceFile(fileName);\n        if (sourceFile) {\n          let ngDiagnostics = compiler.getDiagnosticsForFile(sourceFile, OptimizeFor.SingleFile);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 8,
            "lineCount": 53,
            "parameterCount": 1,
            "snippet": "(compiler) => {\n      let diagnostics: ts.Diagnostic[] = [];\n      if (isTypeScriptFile(fileName)) {\n        const program = compiler.getCurrentProgram();\n        const sourceFile = program.getSourceFile(fileName);\n        if (sourceFile) {\n          let ngDiagnostics = compiler.getDiagnosticsForFile(sourceFile, OptimizeFor.SingleFile);\n          diagnostics.push(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/language-service/src/quick_info.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/language-service/src/quick_info_built_ins.ts",
        "criticalFunctions": [
          {
            "name": "createQuickInfoForBuiltIn",
            "complexity": 18,
            "lineCount": 61,
            "parameterCount": 2,
            "snippet": "export function createQuickInfoForBuiltIn(\n  node: TmplAstDeferredTrigger | TmplAstBlockNode,\n  cursorPositionInTemplate: number,\n): ts.QuickInfo | undefined {\n  let partSpan: ParseSourceSpan;\n  if (node instanceof TmplAstDeferredTrigger) {\n    if (node.prefetchSpan !== null && isWithin(cursorPositionInTemplate, node.prefetchSpan)) {\n      partSpan = node.prefetchSpan;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/language-service/src/references_and_rename.ts",
        "criticalFunctions": [
          {
            "name": "findRenameLocationsAtTypescriptPosition",
            "complexity": 9,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "findRenameLocationsAtTypescriptPosition(\n    renameRequest: RenameRequest,\n  ): readonly ts.RenameLocation[] | null {\n    return this.compiler.perfRecorder.inPhase(PerfPhase.LsReferencesAndRenames, () => {\n      const renameInfo = getExpectedRenameTextAndInitialRenameEntries(renameRequest);\n      if (renameInfo === null) {\n        return null;\n      }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 9,
            "lineCount": 51,
            "parameterCount": 0,
            "snippet": "() => {\n      const renameInfo = getExpectedRenameTextAndInitialRenameEntries(renameRequest);\n      if (renameInfo === null) {\n        return null;\n      }\n      const {entries, expectedRenameText} = renameInfo;\n      const {fileName, position} = getRenameRequestPosition(renameRequest);\n      const findInStrings = false;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getRenameInfo",
            "complexity": 6,
            "lineCount": 59,
            "parameterCount": 2,
            "snippet": "getRenameInfo(\n    filePath: string,\n    position: number,\n  ): Omit<ts.RenameInfoSuccess, 'kind' | 'kindModifiers'> | ts.RenameInfoFailure {\n    return this.compiler.perfRecorder.inPhase(PerfPhase.LsReferencesAndRenames, () => {\n      const typeCheckInfo = getTypeCheckInfoAtPosition(filePath, position, this.compiler);\n      if (typeCheckInfo === undefined) {\n        const renameRequest = this.buildRenameRequestAtTypescriptPosition(filePath, position);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 6,
            "lineCount": 54,
            "parameterCount": 0,
            "snippet": "() => {\n      const typeCheckInfo = getTypeCheckInfoAtPosition(filePath, position, this.compiler);\n      if (typeCheckInfo === undefined) {\n        const renameRequest = this.buildRenameRequestAtTypescriptPosition(filePath, position);\n        if (renameRequest === null) {\n          return {\n            canRename: false,\n            localizedErrorMessage: 'Could not determine rename info at typescript position.',\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/language-service/src/references_and_rename_utils.ts",
        "criticalFunctions": [
          {
            "name": "getTargetDetailsAtTemplatePosition",
            "complexity": 25,
            "lineCount": 138,
            "parameterCount": 3,
            "snippet": "export function getTargetDetailsAtTemplatePosition(\n  info: TypeCheckInfo,\n  position: number,\n  templateTypeChecker: TemplateTypeChecker,\n): TemplateLocationDetails[] | null {\n  const positionDetails = getTargetAtPosition(info.nodes, position);\n  if (positionDetails === null) {\n    return null;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 138 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getRenameTextAndSpanAtPosition",
            "complexity": 19,
            "lineCount": 40,
            "parameterCount": 2,
            "snippet": "export function getRenameTextAndSpanAtPosition(\n  node: TmplAstNode | AST,\n  position: number,\n): {text: string; span: ts.TextSpan} | null {\n  if (\n    node instanceof TmplAstBoundAttribute ||\n    node instanceof TmplAstTextAttribute ||\n    node instanceof TmplAstBoundEvent\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "convertToTemplateDocumentSpan",
            "complexity": 9,
            "lineCount": 63,
            "parameterCount": 4,
            "snippet": "export function convertToTemplateDocumentSpan<T extends ts.DocumentSpan>(\n  shimDocumentSpan: T,\n  templateTypeChecker: TemplateTypeChecker,\n  program: ts.Program,\n  requiredNodeText?: string,\n): T | null {\n  const sf = program.getSourceFile(shimDocumentSpan.fileName);\n  if (sf === undefined) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 63 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/language-service/src/signature_help.ts",
        "criticalFunctions": [
          {
            "name": "getSignatureHelp",
            "complexity": 18,
            "lineCount": 118,
            "parameterCount": 5,
            "snippet": "export function getSignatureHelp(\n  compiler: NgCompiler,\n  tsLS: ts.LanguageService,\n  fileName: string,\n  position: number,\n  options: ts.SignatureHelpItemsOptions | undefined,\n): ts.SignatureHelpItems | undefined {\n  const typeCheckInfo = getTypeCheckInfoAtPosition(fileName, position, compiler);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 118 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/language-service/src/template_target.ts",
        "criticalFunctions": [
          {
            "name": "getTargetAtPosition",
            "complexity": 21,
            "lineCount": 106,
            "parameterCount": 2,
            "snippet": "export function getTargetAtPosition(\n  template: TmplAstNode[],\n  position: number,\n): TemplateTarget | null {\n  const path = TemplateTargetVisitor.visitTemplate(template, position);\n  if (path.length === 0) {\n    return null;\n  }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 106 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/language-service/src/ts_plugin.ts",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 30,
            "lineCount": 348,
            "parameterCount": 1,
            "snippet": "export function create(info: ts.server.PluginCreateInfo): NgLanguageService {\n  const {project, languageService, config} = info;\n  const tsLS = isNgLanguageService(languageService)\n    ? languageService.getTypescriptLanguageService()\n    : languageService;\n  const angularOnly = config?.angularOnly === true;\n  const ngLS = new LanguageService(project, tsLS, config);\n  function getSyntacticDiagnostics(fileName: string): ts.DiagnosticWithLocation[] {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 30 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 348 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getCompletionEntryDetails",
            "complexity": 3,
            "lineCount": 41,
            "parameterCount": 7,
            "snippet": "function getCompletionEntryDetails(\n    fileName: string,\n    position: number,\n    entryName: string,\n    formatOptions: ts.FormatCodeOptions | ts.FormatCodeSettings | undefined,\n    source: string | undefined,\n    preferences: ts.UserPreferences | undefined,\n    data: ts.CompletionEntryData | undefined,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/change_detection.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/core.externs.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/core_reactivity_export.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/event_delegation_utils.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/image_performance_warning.ts",
        "criticalFunctions": [
          {
            "name": "isOversized",
            "complexity": 7,
            "lineCount": 58,
            "parameterCount": 1,
            "snippet": "private isOversized(image: HTMLImageElement): boolean {\n    if (!this.window) {\n      return false;\n    }\n    const nonOversizedImageExtentions = [\n      '.svg',\n    ];\n    const imageSource = (image.src || '').toLowerCase();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/language-service/testing/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/misc/angular-in-memory-web-api/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-browser/animations/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-browser/animations/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/platform-browser/testing/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-browser/testing/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/platform-browser-dynamic/src/version.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/private/testing/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/platform-browser/src/errors.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/platform-browser/src/platform-browser.externs.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/platform-browser/src/version.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/platform-browser-dynamic/testing/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-browser-dynamic/testing/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/platform-server/init/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/platform-server/testing/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-server/testing/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-server/src/bundled-domino.d.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/platform-server/src/types.d.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/platform-server/src/utils.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-server/src/version.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/router/src/apply_redirects.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/router/src/create_url_tree.ts",
        "criticalFunctions": [
          {
            "name": "computeNavigation",
            "complexity": 17,
            "lineCount": 50,
            "parameterCount": 1,
            "snippet": "function computeNavigation(commands: any[]): Navigation {\n  if (typeof commands[0] === 'string' && commands.length === 1 && commands[0] === '/') {\n    return new Navigation(true, 0, commands);\n  }\n  let numberOfDoubleDots = 0;\n  let isAbsolute = false;\n  const res: any[] = commands.reduce((res, cmd, cmdIdx) => {\n    if (typeof cmd === 'object' && cmd != null) {\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "updateSegmentGroupChildren",
            "complexity": 9,
            "lineCount": 62,
            "parameterCount": 3,
            "snippet": "function updateSegmentGroupChildren(\n  segmentGroup: UrlSegmentGroup,\n  startIndex: number,\n  commands: any[],\n): UrlSegmentGroup {\n  if (commands.length === 0) {\n    return new UrlSegmentGroup(segmentGroup.segments, {});\n  } else {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/src/errors.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/router/src/events.ts",
        "criticalFunctions": [
          {
            "name": "stringifyEvent",
            "complexity": 23,
            "lineCount": 41,
            "parameterCount": 1,
            "snippet": "export function stringifyEvent(routerEvent: Event): string {\n  switch (routerEvent.type) {\n    case EventType.ActivationEnd:\n      return `ActivationEnd(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.ActivationStart:\n      return `ActivationStart(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.ChildActivationEnd:\n      return `ChildActivationEnd(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/router/src/models_deprecated.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/router/src/navigation_transition.ts",
        "criticalFunctions": [
          {
            "name": "setupNavigations",
            "complexity": 40,
            "lineCount": 480,
            "parameterCount": 1,
            "snippet": "setupNavigations(router: InternalRouterInterface): Observable<NavigationTransition> {\n    this.transitions = new BehaviorSubject<NavigationTransition | null>(null);\n    return this.transitions.pipe(\n      filter((t): t is NavigationTransition => t !== null),\n      switchMap((overallTransitionState) => {\n        let completed = false;\n        let errored = false;\n        return of(overallTransitionState).pipe(\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 40 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 480 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 40,
            "lineCount": 472,
            "parameterCount": 1,
            "snippet": "(overallTransitionState) => {\n        let completed = false;\n        let errored = false;\n        return of(overallTransitionState).pipe(\n          switchMap((t) => {\n            if (this.navigationId > overallTransitionState.id) {\n              const cancellationReason =\n                typeof ngDevMode === 'undefined' || ngDevMode\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 40 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 472 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 18,
            "lineCount": 155,
            "parameterCount": 1,
            "snippet": "(t) => {\n            if (this.navigationId > overallTransitionState.id) {\n              const cancellationReason =\n                typeof ngDevMode === 'undefined' || ngDevMode\n                  ? `Navigation ID ${overallTransitionState.id} is not equal to the current navigation id ${this.navigationId}`\n                  : '';\n              this.cancelNavigationTransition(\n                overallTransitionState,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 155 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 7,
            "lineCount": 89,
            "parameterCount": 1,
            "snippet": "(e) => {\n            if (this.destroyed) {\n              overallTransitionState.resolve(false);\n              return EMPTY;\n            }\n            errored = true;\n            /* This error type is issued during Redirect, and is handled as a\n             * cancellation rather than an error. */\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 89 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/src/provide_router.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/src/recognize.ts",
        "criticalFunctions": [
          {
            "name": "matchSegmentAgainstRoute",
            "complexity": 9,
            "lineCount": 90,
            "parameterCount": 6,
            "snippet": "matchSegmentAgainstRoute(\n    injector: EnvironmentInjector,\n    rawSegment: UrlSegmentGroup,\n    route: Route,\n    segments: UrlSegment[],\n    outlet: string,\n    parentRoute: ActivatedRouteSnapshot,\n  ): Observable<TreeNode<ActivatedRouteSnapshot>> {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 90 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 8,
            "lineCount": 70,
            "parameterCount": 1,
            "snippet": "(result) => {\n        if (!result.matched) {\n          return noMatch(rawSegment);\n        }\n        injector = route._injector ?? injector;\n        return this.getChildConfig(injector, route, segments).pipe(\n          switchMap(({routes: childConfig}) => {\n            const childInjector = route._loadedInjector ?? injector;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 70 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "processSegmentAgainstRoute",
            "complexity": 7,
            "lineCount": 53,
            "parameterCount": 8,
            "snippet": "processSegmentAgainstRoute(\n    injector: EnvironmentInjector,\n    routes: Route[],\n    route: Route,\n    rawSegment: UrlSegmentGroup,\n    segments: UrlSegment[],\n    outlet: string,\n    allowRedirects: boolean,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 7,
            "lineCount": 61,
            "parameterCount": 1,
            "snippet": "({routes: childConfig}) => {\n            const childInjector = route._loadedInjector ?? injector;\n            const {parameters, consumedSegments, remainingSegments} = result;\n            const snapshot = new ActivatedRouteSnapshot(\n              consumedSegments,\n              parameters,\n              Object.freeze({...this.urlTree.queryParams}),\n              this.urlTree.fragment,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "expandSegmentAgainstRouteUsingRedirect",
            "complexity": 6,
            "lineCount": 65,
            "parameterCount": 7,
            "snippet": "private expandSegmentAgainstRouteUsingRedirect(\n    injector: EnvironmentInjector,\n    segmentGroup: UrlSegmentGroup,\n    routes: Route[],\n    route: Route,\n    segments: UrlSegment[],\n    outlet: string,\n    parentRoute: ActivatedRouteSnapshot,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/src/router.ts",
        "criticalFunctions": [
          {
            "name": "subscribeToNavigationEvents",
            "complexity": 12,
            "lineCount": 59,
            "parameterCount": 0,
            "snippet": "private subscribeToNavigationEvents() {\n    const subscription = this.navigationTransitions.events.subscribe((e) => {\n      try {\n        const currentTransition = this.navigationTransitions.currentTransition;\n        const currentNavigation = this.navigationTransitions.currentNavigation;\n        if (currentTransition !== null && currentNavigation !== null) {\n          this.stateManager.handleRouterEvent(e, currentNavigation);\n          if (\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 12,
            "lineCount": 56,
            "parameterCount": 1,
            "snippet": "(e) => {\n      try {\n        const currentTransition = this.navigationTransitions.currentTransition;\n        const currentNavigation = this.navigationTransitions.currentNavigation;\n        if (currentTransition !== null && currentNavigation !== null) {\n          this.stateManager.handleRouterEvent(e, currentNavigation);\n          if (\n            e instanceof NavigationCancel &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "scheduleNavigation",
            "complexity": 3,
            "lineCount": 57,
            "parameterCount": 5,
            "snippet": "private scheduleNavigation(\n    rawUrl: UrlTree,\n    source: NavigationTrigger,\n    restoredState: RestoredState | null,\n    extras: NavigationExtras,\n    priorPromise?: {\n      resolve: (result: boolean | PromiseLike<boolean>) => void;\n      reject: (reason?: any) => void;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/src/router_config_loader.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/src/router_module.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/src/router_preloader.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/src/router_scroller.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/router/src/router_state.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/src/url_tree.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/src/version.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/router/testing/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/testing/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/upgrade/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/upgrade/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/service-worker/cli/esbuild.config.js",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/service-worker/cli/sha1.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/service-worker/config/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/service-worker/src/errors.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/service-worker/src/provider.ts",
        "criticalFunctions": [
          {
            "name": "ngswAppInitializer",
            "complexity": 16,
            "lineCount": 87,
            "parameterCount": 0,
            "snippet": "export function ngswAppInitializer(): void {\n  if (typeof ngServerMode !== 'undefined' && ngServerMode) {\n    return;\n  }\n  const options = inject(SwRegistrationOptions);\n  if (!('serviceWorker' in navigator && options.enabled !== false)) {\n    return;\n  }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 12,
            "lineCount": 52,
            "parameterCount": 0,
            "snippet": "() => {\n    let readyToRegister: Promise<void>;\n    const {registrationStrategy} = options;\n    if (typeof registrationStrategy === 'function') {\n      readyToRegister = new Promise((resolve) => registrationStrategy().subscribe(() => resolve()));\n    } else {\n      const [strategy, ...args] = (registrationStrategy || 'registerWhenStable:30000').split(':');\n      switch (strategy) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/upgrade/static/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/animations/browser/src/browser.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/animations/browser/src/error_helpers.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/animations/browser/src/util.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/animations/browser/testing/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/animations/browser/testing/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/zone.js/lib/zone-global.d.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/zone.js/lib/zone-impl.ts",
        "criticalFunctions": [
          {
            "name": "initZone",
            "complexity": 149,
            "lineCount": 842,
            "parameterCount": 0,
            "snippet": "export function initZone(): ZoneType {\n  const performance: {mark(name: string): void; measure(name: string, label: string): void} =\n    global['performance'];\n  function mark(name: string) {\n    performance && performance['mark'] && performance['mark'](name);\n  }\n  function performanceMeasure(name: string, label: string) {\n    performance && performance['measure'] && performance['measure'](name, label);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 149 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 842 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "runTask",
            "complexity": 22,
            "lineCount": 59,
            "parameterCount": 3,
            "snippet": "runTask(task: Task, applyThis?: any, applyArgs?: any): any {\n      if (task.zone != this) {\n        throw new Error(\n          'A task can only be run in the zone of creation! (Creation: ' +\n            (task.zone || NO_ZONE).name +\n            '; Execution: ' +\n            this.name +\n            ')',\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/http/src/client.ts",
        "criticalFunctions": [
          {
            "name": "request",
            "complexity": 26,
            "lineCount": 145,
            "parameterCount": 3,
            "snippet": "request(\n    first: string | HttpRequest<any>,\n    url?: string,\n    options: {\n      body?: any;\n      headers?: HttpHeaders | Record<string, string | string[]>;\n      context?: HttpContext;\n      observe?: 'body' | 'events' | 'response';\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 145 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/http/src/errors.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/http/src/fetch.ts",
        "criticalFunctions": [
          {
            "name": "doRequest",
            "complexity": 18,
            "lineCount": 178,
            "parameterCount": 3,
            "snippet": "private async doRequest(\n    request: HttpRequest<any>,\n    signal: AbortSignal,\n    observer: Observer<HttpEvent<any>>,\n  ): Promise<void> {\n    const init = this.createRequestInit(request);\n    let response;\n    try {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 178 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/http/src/headers.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/common/http/src/interceptor.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/http/src/params.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/http/src/request.ts",
        "criticalFunctions": [
          {
            "name": "clone",
            "complexity": 9,
            "lineCount": 74,
            "parameterCount": 1,
            "snippet": "clone(\n    update: {\n      headers?: HttpHeaders;\n      context?: HttpContext;\n      reportProgress?: boolean;\n      params?: HttpParams;\n      responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n      withCredentials?: boolean;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/http/src/resource.ts",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 7,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "({request, abortSignal}) => {\n        let sub: Subscription;\n        const onAbort = () => sub.unsubscribe();\n        abortSignal.addEventListener('abort', onAbort);\n        const stream = signal<ResourceStreamItem<T>>({value: undefined as T});\n        let resolve: ((value: Signal<ResourceStreamItem<T>>) => void) | undefined;\n        const promise = new Promise<Signal<ResourceStreamItem<T>>>((r) => (resolve = r));\n        const send = (value: ResourceStreamItem<T>): void => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/http/src/response.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/http/src/transfer_cache.ts",
        "criticalFunctions": [
          {
            "name": "transferCacheInterceptorFn",
            "complexity": 28,
            "lineCount": 110,
            "parameterCount": 2,
            "snippet": "export function transferCacheInterceptorFn(\n  req: HttpRequest<unknown>,\n  next: HttpHandlerFn,\n): Observable<HttpEvent<unknown>> {\n  const {isCacheActive, ...globalOptions} = inject(CACHE_OPTIONS);\n  const {transferCache: requestOptions, method: requestMethod} = req;\n  if (\n    !isCacheActive ||\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 110 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/http/src/xhr.ts",
        "criticalFunctions": [
          {
            "name": "handle",
            "complexity": 42,
            "lineCount": 292,
            "parameterCount": 1,
            "snippet": "handle(req: HttpRequest<any>): Observable<HttpEvent<any>> {\n    if (req.method === 'JSONP') {\n      throw new RuntimeError(\n        RuntimeErrorCode.MISSING_JSONP_MODULE,\n        (typeof ngDevMode === 'undefined' || ngDevMode) &&\n          `Cannot make a JSONP request without JSONP support. To fix the problem, either add the \\`withJsonpSupport()\\` call (if \\`provideHttpClient()\\` is used) or import the \\`HttpClientJsonpModule\\` in the root NgModule.`,\n      );\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 42 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 292 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 38,
            "lineCount": 270,
            "parameterCount": 0,
            "snippet": "() => {\n        return new Observable((observer: Observer<HttpEvent<any>>) => {\n          const xhr = xhrFactory.build();\n          xhr.open(req.method, req.urlWithParams);\n          if (req.withCredentials) {\n            xhr.withCredentials = true;\n          }\n          req.headers.forEach((name, values) => xhr.setRequestHeader(name, values.join(',')));\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 38 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 270 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 38,
            "lineCount": 267,
            "parameterCount": 1,
            "snippet": "(observer: Observer<HttpEvent<any>>) => {\n          const xhr = xhrFactory.build();\n          xhr.open(req.method, req.urlWithParams);\n          if (req.withCredentials) {\n            xhr.withCredentials = true;\n          }\n          req.headers.forEach((name, values) => xhr.setRequestHeader(name, values.join(',')));\n          if (!req.headers.has(ACCEPT_HEADER)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 38 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 267 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "onLoad",
            "complexity": 14,
            "lineCount": 78,
            "parameterCount": 0,
            "snippet": "() => {\n            let {headers, status, statusText, url} = partialFromXhr();\n            let body: any | null = null;\n            if (status !== HTTP_STATUS_CODE_NO_CONTENT) {\n              body = typeof xhr.response === 'undefined' ? xhr.responseText : xhr.response;\n            }\n            if (status === 0) {\n              status = !!body ? HTTP_STATUS_CODE_OK : 0;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 78 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/http/src/xsrf.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/benchpress/src/metric/perflog_metric.ts",
        "criticalFunctions": [
          {
            "name": "_aggregateEvents",
            "complexity": 60,
            "lineCount": 186,
            "parameterCount": 2,
            "snippet": "private _aggregateEvents(\n    events: PerfLogEvent[],\n    markName: string,\n  ): {[key: string]: number} | null {\n    const result: {[key: string]: number} = {'scriptTime': 0, 'pureScriptTime': 0};\n    if (this._perfLogFeatures.gc) {\n      result['gcTime'] = 0;\n      result['majorGcTime'] = 0;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 60 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 186 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 37,
            "lineCount": 92,
            "parameterCount": 1,
            "snippet": "(event) => {\n      const ph = event['ph'];\n      let name = event['name']!;\n      let microIterations = 1;\n      const microIterationsMatch = name.match(_MICRO_ITERATIONS_REGEX);\n      if (microIterationsMatch) {\n        name = microIterationsMatch[1];\n        microIterations = parseInt(microIterationsMatch[2], 10);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 37 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 92 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/bazel/src/ng_package/cross_entry_points_imports.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/bazel/src/ng_package/packager.ts",
        "criticalFunctions": [
          {
            "name": "main",
            "complexity": 29,
            "lineCount": 387,
            "parameterCount": 1,
            "snippet": "function main(args: string[]): void {\n  const paramFilePath = args[0];\n  function unquoteParameter(s: string) {\n    return s.replace(/^'(.*)'$/, '$1');\n  }\n  const params = fs.readFileSync(paramFilePath, 'utf-8').split('\\n').map(unquoteParameter);\n  const [\n    outputDirExecPath,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 29 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 387 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkPackageJsonSideEffects",
            "complexity": 9,
            "lineCount": 51,
            "parameterCount": 1,
            "snippet": "function checkPackageJsonSideEffects(packageJson: PackageJson): void {\n    if (packageJson.sideEffects === false && sideEffectEntryPoints.length === 0) {\n      return;\n    }\n    if (packageJson.sideEffects === true) {\n      throw Error(\n        'Unexpected `sideEffects` field in `package.json`. ' +\n          'Side effects should be fine-grained and marked via the Bazel `side_effect_entry_points` option.',\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              }
            ]
          },
          {
            "name": "insertFormatFieldsIntoPackageJson",
            "complexity": 5,
            "lineCount": 57,
            "parameterCount": 3,
            "snippet": "function insertFormatFieldsIntoPackageJson(\n    packageJsonOutRelativePath: string,\n    parsedPackage: Readonly<PackageJson>,\n    isGeneratedPackageJson: boolean,\n  ): PackageJson {\n    const packageJson: PackageJson = {...parsedPackage};\n    const packageName = packageJson['name'];\n    const entryPointInfo = metadata.entryPoints[packageName];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/bazel/src/ng_package/rollup.config.js",
        "criticalFunctions": [
          {
            "name": "resolveBazel",
            "complexity": 18,
            "lineCount": 82,
            "parameterCount": 2,
            "snippet": "function resolveBazel(importee, importer) {\n  log_verbose(`resolving '${importee}' from ${importer}`);\n  const baseDir = process.cwd();\n  function resolveInRootDir(importee) {\n    var candidate = path.join(baseDir, rootDir, importee);\n    log_verbose(`try to resolve '${importee}' at '${candidate}'`);\n    try {\n      var result = require.resolve(candidate);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 82 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/locales/extra/ff-CM.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/locales/extra/ff-GN.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/locales/extra/ff-MR.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/benchpress/src/webdriver/chrome_driver_extension.ts",
        "criticalFunctions": [
          {
            "name": "_convertEvent",
            "complexity": 23,
            "lineCount": 69,
            "parameterCount": 2,
            "snippet": "private _convertEvent(event: {[key: string]: any}, categories: string[]) {\n    const name = event['name'];\n    const args = event['args'];\n    if (this._isEvent(categories, name, ['blink.console'])) {\n      return normalizeEvent(event, {'name': name});\n    } else if (this._isEvent(categories, name, ['blink.user_timing'])) {\n      return normalizeEvent(event, {'name': name});\n    } else if (\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 69 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/benchpress/src/webdriver/ios_driver_extension.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/locales/global/ff-CM.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 6,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "function (global) {\n  global.ng = global.ng || {};\n  global.ng.common = global.ng.common || {};\n  global.ng.common.locales = global.ng.common.locales || {};\n  const u = undefined;\n  function plural(n) {\n    let i = Math.floor(Math.abs(n));\n    if (i === 0 || i === 1) return 1;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/locales/global/ff-GN.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 6,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "function (global) {\n  global.ng = global.ng || {};\n  global.ng.common = global.ng.common || {};\n  global.ng.common.locales = global.ng.common.locales || {};\n  const u = undefined;\n  function plural(n) {\n    let i = Math.floor(Math.abs(n));\n    if (i === 0 || i === 1) return 1;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/locales/global/ff-MR.js",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 6,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "function (global) {\n  global.ng = global.ng || {};\n  global.ng.common = global.ng.common || {};\n  global.ng.common.locales = global.ng.common.locales || {};\n  const u = undefined;\n  function plural(n) {\n    let i = Math.floor(Math.abs(n));\n    if (i === 0 || i === 1) return 1;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/locales/generate-locales-tool/locale-currencies.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/animations/src/players/animation_group_player.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/src/directives/ng_class.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/src/directives/ng_component_outlet.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/src/directives/ng_for_of.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/src/directives/ng_switch.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/src/i18n/format_date.ts",
        "criticalFunctions": [
          {
            "name": "getDateFormatter",
            "complexity": 81,
            "lineCount": 309,
            "parameterCount": 1,
            "snippet": "function getDateFormatter(format: string): DateFormatter | null {\n  if (DATE_FORMATS[format]) {\n    return DATE_FORMATS[format];\n  }\n  let formatter;\n  switch (format) {\n    case 'G':\n    case 'GG':\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 81 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 309 lines, consider splitting"
              }
            ]
          },
          {
            "name": "getDateTranslation",
            "complexity": 20,
            "lineCount": 68,
            "parameterCount": 6,
            "snippet": "function getDateTranslation(\n  date: Date,\n  locale: string,\n  name: TranslationType,\n  width: TranslationWidth,\n  form: FormStyle,\n  extended: boolean,\n) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getNamedFormat",
            "complexity": 15,
            "lineCount": 72,
            "parameterCount": 2,
            "snippet": "function getNamedFormat(locale: string, format: string): string {\n  const localeId = getLocaleId(locale);\n  NAMED_FORMATS[localeId] ??= {};\n  if (NAMED_FORMATS[localeId][format]) {\n    return NAMED_FORMATS[localeId][format];\n  }\n  let formatValue = '';\n  switch (format) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/src/i18n/format_number.ts",
        "criticalFunctions": [
          {
            "name": "formatNumberToLocaleString",
            "complexity": 20,
            "lineCount": 106,
            "parameterCount": 7,
            "snippet": "function formatNumberToLocaleString(\n  value: number,\n  pattern: ParsedNumberFormat,\n  locale: string,\n  groupSymbol: NumberSymbol,\n  decimalSymbol: NumberSymbol,\n  digitsInfo?: string,\n  isPercent = false,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 106 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "roundNumber",
            "complexity": 15,
            "lineCount": 71,
            "parameterCount": 3,
            "snippet": "function roundNumber(parsedNumber: ParsedNumber, minFrac: number, maxFrac: number) {\n  if (minFrac > maxFrac) {\n    throw new Error(\n      `The minimum number of digits after fraction (${minFrac}) is higher than the maximum (${maxFrac}).`,\n    );\n  }\n  let digits = parsedNumber.digits;\n  let fractionLen = digits.length - parsedNumber.integerLen;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 71 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "parseNumberFormat",
            "complexity": 11,
            "lineCount": 57,
            "parameterCount": 2,
            "snippet": "function parseNumberFormat(format: string, minusSign = '-'): ParsedNumberFormat {\n  const p = {\n    minInt: 1,\n    minFrac: 0,\n    maxFrac: 0,\n    posPre: '',\n    posSuf: '',\n    negPre: '',\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "parseNumber",
            "complexity": 10,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "function parseNumber(num: number): ParsedNumber {\n  let numStr = Math.abs(num) + '';\n  let exponent = 0,\n    digits,\n    integerLen;\n  let i, j, zeros;\n  if ((integerLen = numStr.indexOf(DECIMAL_SEP)) > -1) {\n    numStr = numStr.replace(DECIMAL_SEP, '');\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/src/i18n/locale_data_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/bazel/src/ngc-wrapped/index.ts",
        "criticalFunctions": [
          {
            "name": "compile",
            "complexity": 24,
            "lineCount": 243,
            "parameterCount": 1,
            "snippet": "export function compile({\n  allDepsCompiledWithBazel = true,\n  useManifestPathsAsModuleName,\n  compilerOpts,\n  tsHost,\n  bazelOpts,\n  files,\n  inputs,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 243 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "runOneBuild",
            "complexity": 6,
            "lineCount": 95,
            "parameterCount": 2,
            "snippet": "export async function runOneBuild(\n  args: string[],\n  inputs?: {[path: string]: string},\n): Promise<boolean> {\n  if (args[0] === '-p') {\n    args.shift();\n  }\n  const project = args[0].replace(/^@+/, '');\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 95 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/bazel/src/ngc-wrapped/utils.ts",
        "criticalFunctions": [
          {
            "name": "patchNgHostWithFileNameToModuleName",
            "complexity": 17,
            "lineCount": 105,
            "parameterCount": 6,
            "snippet": "export function patchNgHostWithFileNameToModuleName(\n  ngHost: NgCompilerHost,\n  compilerOpts: ts.CompilerOptions,\n  rootDirs: string[],\n  workspaceName: string,\n  compilationTargetSrc: string[],\n  useManifestPathsAsModuleName: boolean,\n): void {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 105 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "doFileNameToModuleName",
            "complexity": 16,
            "lineCount": 81,
            "parameterCount": 2,
            "snippet": "function doFileNameToModuleName(importedFilePath: string, containingFilePath?: string): string {\n    const relativeTargetPath = relativeToRootDirs(importedFilePath, rootDirs).replace(EXT, '');\n    const manifestTargetPath = `${workspaceName}/${relativeTargetPath}`;\n    if (useManifestPathsAsModuleName === true) {\n      return manifestTargetPath;\n    }\n    try {\n      const sourceFile = ngHost.getSourceFile(importedFilePath, ts.ScriptTarget.Latest);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 81 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/src/pipes/i18n_select_pipe.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/src/pipes/keyvalue_pipe.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/src/pipes/number_pipe.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/testing/src/location_mock.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/testing/src/mock_platform_location.ts",
        "criticalFunctions": [
          {
            "name": "parseUrl",
            "complexity": 17,
            "lineCount": 46,
            "parameterCount": 2,
            "snippet": "function parseUrl(urlStr: string, baseHref: string) {\n  const verifyProtocol = /^((http[s]?|ftp):\\/\\/)/;\n  let serverBase: string | undefined;\n  if (!verifyProtocol.test(urlStr)) {\n    serverBase = 'http://empty.com/';\n  }\n  let parsedUrl: {\n    protocol: string;\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/testing/src/testing.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/upgrade/src/location_shim.ts",
        "criticalFunctions": [
          {
            "name": "initialize",
            "complexity": 30,
            "lineCount": 164,
            "parameterCount": 1,
            "snippet": "private initialize($injector: any) {\n    const $rootScope = $injector.get('$rootScope');\n    const $rootElement = $injector.get('$rootElement');\n    $rootElement.on('click', (event: any) => {\n      if (\n        event.ctrlKey ||\n        event.metaKey ||\n        event.shiftKey ||\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 30 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 164 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 17,
            "lineCount": 46,
            "parameterCount": 1,
            "snippet": "(event: any) => {\n      if (\n        event.ctrlKey ||\n        event.metaKey ||\n        event.shiftKey ||\n        event.which === 2 ||\n        event.button === 2\n      ) {\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 11,
            "lineCount": 64,
            "parameterCount": 0,
            "snippet": "() => {\n      if (this.initializing || this.updateBrowser) {\n        this.updateBrowser = false;\n        const oldUrl = this.browserUrl();\n        const newUrl = this.absUrl();\n        const oldState = this.browserState();\n        let currentReplace = this.$$replace;\n        const urlOrStateChanged =\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/upgrade/src/params.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/bin/ng_xi18n.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/program.ts",
        "criticalFunctions": [
          {
            "name": "emit",
            "complexity": 21,
            "lineCount": 110,
            "parameterCount": 1,
            "snippet": "emit<CbEmitRes extends ts.EmitResult>(\n    opts?: api.EmitOptions<CbEmitRes> | undefined,\n  ): ts.EmitResult {\n    if (\n      opts !== undefined &&\n      opts.emitFlags !== undefined &&\n      opts.emitFlags & api.EmitFlags.I18nBundle\n    ) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 110 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 16,
            "lineCount": 72,
            "parameterCount": 0,
            "snippet": "() => {\n      const {transformers} = this.compiler.prepareEmit();\n      const ignoreFiles = this.compiler.ignoreForEmit;\n      const emitCallback = (opts?.emitCallback ??\n        defaultEmitCallback) as api.TsEmitCallback<CbEmitRes>;\n      const writeFile: ts.WriteFileCallback = (\n        fileName: string,\n        data: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/transformers/i18n.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/expression_parser/ast.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/expression_parser/lexer.ts",
        "criticalFunctions": [
          {
            "name": "scanToken",
            "complexity": 36,
            "lineCount": 93,
            "parameterCount": 0,
            "snippet": "private scanToken(): Token | null {\n    const input = this.input;\n    const length = this.length;\n    let peek = this.peek;\n    let index = this.index;\n    while (peek <= chars.$SPACE) {\n      if (++index >= length) {\n        peek = chars.$EOF;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 36 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 93 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/expression_parser/parser.ts",
        "criticalFunctions": [
          {
            "name": "parsePrimary",
            "complexity": 17,
            "lineCount": 60,
            "parameterCount": 0,
            "snippet": "private parsePrimary(): AST {\n    const start = this.inputIndex;\n    if (this.consumeOptionalCharacter(chars.$LPAREN)) {\n      this.rparensExpected++;\n      const result = this.parsePipe();\n      this.rparensExpected--;\n      this.expectCharacter(chars.$RPAREN);\n      return result;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 60 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "splitInterpolation",
            "complexity": 9,
            "lineCount": 72,
            "parameterCount": 4,
            "snippet": "splitInterpolation(\n    input: string,\n    location: string,\n    interpolatedTokens: InterpolatedAttributeToken[] | InterpolatedTextToken[] | null,\n    interpolationConfig: InterpolationConfig = DEFAULT_INTERPOLATION_CONFIG,\n  ): SplitInterpolation {\n    const strings: InterpolationPiece[] = [];\n    const expressions: InterpolationPiece[] = [];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "parsePipe",
            "complexity": 7,
            "lineCount": 54,
            "parameterCount": 0,
            "snippet": "private parsePipe(): AST {\n    const start = this.inputIndex;\n    let result = this.parseExpression();\n    if (this.consumeOptionalOperator('|')) {\n      if (this.parseFlags & ParseFlags.Action) {\n        this.error(`Cannot have a pipe in an action expression`);\n      }\n      do {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "parseAccessMember",
            "complexity": 6,
            "lineCount": 54,
            "parameterCount": 3,
            "snippet": "private parseAccessMember(readReceiver: AST, start: number, isSafe: boolean): AST {\n    const nameStart = this.inputIndex;\n    const id = this.withContext(ParseContextFlags.Writable, () => {\n      const id = this.expectIdentifierOrKeyword() ?? '';\n      if (id.length === 0) {\n        this.error(`Expected identifier for property access`, readReceiver.span.end);\n      }\n      return id;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/expression_parser/serializer.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/i18n/digest.ts",
        "criticalFunctions": [
          {
            "name": "hash32",
            "complexity": 13,
            "lineCount": 64,
            "parameterCount": 3,
            "snippet": "function hash32(view: DataView, length: number, c: number): number {\n  let a = 0x9e3779b9,\n    b = 0x9e3779b9;\n  let index = 0;\n  const end = length - 12;\n  for (; index <= end; index += 12) {\n    a += view.getUint32(index, true);\n    b += view.getUint32(index + 4, true);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/i18n/extractor_merger.ts",
        "criticalFunctions": [
          {
            "name": "visitElement",
            "complexity": 22,
            "lineCount": 78,
            "parameterCount": 2,
            "snippet": "visitElement(el: html.Element, context: any): html.Element | null {\n    this._mayBeAddBlockChildren(el);\n    this._depth++;\n    const wasInI18nNode = this._inI18nNode;\n    const wasInImplicitNode = this._inImplicitNode;\n    let childNodes: html.Node[] = [];\n    let translatedChildNodes: html.Node[] = undefined!;\n    const i18nAttr = _getI18nAttr(el);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 78 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "visitComment",
            "complexity": 15,
            "lineCount": 52,
            "parameterCount": 2,
            "snippet": "visitComment(comment: html.Comment, context: any): any {\n    const isOpening = _isOpeningComment(comment);\n    if (isOpening && this._isInTranslatableSection) {\n      this._reportError(comment, 'Could not start a block inside a translatable section');\n      return;\n    }\n    const isClosing = _isClosingComment(comment);\n    if (isClosing && !this._inI18nBlock) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_translateAttributes",
            "complexity": 12,
            "lineCount": 75,
            "parameterCount": 1,
            "snippet": "private _translateAttributes(el: html.Element): html.Attribute[] {\n    const attributes = el.attrs;\n    const i18nParsedMessageMeta: {\n      [name: string]: {meaning: string; description: string; id: string};\n    } = {};\n    attributes.forEach((attr) => {\n      if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n        i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] = _parseMessageMeta(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 11,
            "lineCount": 56,
            "parameterCount": 1,
            "snippet": "(attr) => {\n      if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n        return;\n      }\n      if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n        const {meaning, description, id} = i18nParsedMessageMeta[attr.name];\n        const message: i18n.Message = this._createI18nMessage([attr], meaning, description, id);\n        const nodes = this._translations.get(message);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/i18n/i18n_parser.ts",
        "criticalFunctions": [
          {
            "name": "_visitTextWithInterpolation",
            "complexity": 11,
            "lineCount": 84,
            "parameterCount": 4,
            "snippet": "private _visitTextWithInterpolation(\n    tokens: (InterpolatedTextToken | InterpolatedAttributeToken)[],\n    sourceSpan: ParseSourceSpan,\n    context: I18nMessageVisitorContext,\n    previousI18n: i18n.I18nMeta | undefined,\n  ): i18n.Node {\n    const nodes: i18n.Node[] = [];\n    let hasInterpolation = false;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 84 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/i18n/translation_bundle.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/ml_parser/entities.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/ml_parser/html_whitespaces.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/ml_parser/lexer.ts",
        "criticalFunctions": [
          {
            "name": "tokenize",
            "complexity": 21,
            "lineCount": 54,
            "parameterCount": 0,
            "snippet": "tokenize(): void {\n    while (this._cursor.peek() !== chars.$EOF) {\n      const start = this._cursor.clone();\n      try {\n        if (this._attemptCharCode(chars.$LT)) {\n          if (this._attemptCharCode(chars.$BANG)) {\n            if (this._attemptCharCode(chars.$LBRACKET)) {\n              this._consumeCdata(start);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_consumeBlockParameters",
            "complexity": 16,
            "lineCount": 44,
            "parameterCount": 0,
            "snippet": "private _consumeBlockParameters() {\n    this._attemptCharCodeUntilFn(isBlockParameterChar);\n    while (this._cursor.peek() !== chars.$RPAREN && this._cursor.peek() !== chars.$EOF) {\n      this._beginToken(TokenType.BLOCK_PARAMETER);\n      const start = this._cursor.clone();\n      let inQuote: number | null = null;\n      let openParens = 0;\n      while (\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "processEscapeSequence",
            "complexity": 16,
            "lineCount": 80,
            "parameterCount": 0,
            "snippet": "protected processEscapeSequence(): void {\n    const peek = () => this.internalState.peek;\n    if (peek() === chars.$BACKSLASH) {\n      this.internalState = {...this.state};\n      this.advanceState(this.internalState);\n      if (peek() === chars.$n) {\n        this.state.peek = chars.$LF;\n      } else if (peek() === chars.$r) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_consumeInterpolation",
            "complexity": 13,
            "lineCount": 60,
            "parameterCount": 3,
            "snippet": "private _consumeInterpolation(\n    interpolationTokenType: TokenType,\n    interpolationStart: CharacterCursor,\n    prematureEndPredicate: (() => boolean) | null,\n  ): void {\n    const parts: string[] = [];\n    this._beginToken(interpolationTokenType, interpolationStart);\n    parts.push(this._interpolationConfig.start);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 60 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_consumeTagOpen",
            "complexity": 12,
            "lineCount": 56,
            "parameterCount": 1,
            "snippet": "private _consumeTagOpen(start: CharacterCursor) {\n    let tagName: string;\n    let prefix: string;\n    let openTagToken: TagOpenStartToken | IncompleteTagOpenToken | undefined;\n    try {\n      if (!chars.isAsciiLetter(this._cursor.peek())) {\n        throw this._createError(\n          _unexpectedCharacterErrorMsg(this._cursor.peek()),\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/ml_parser/parser.ts",
        "criticalFunctions": [
          {
            "name": "build",
            "complexity": 18,
            "lineCount": 58,
            "parameterCount": 0,
            "snippet": "build(): void {\n    while (this._peek.type !== TokenType.EOF) {\n      if (\n        this._peek.type === TokenType.TAG_OPEN_START ||\n        this._peek.type === TokenType.INCOMPLETE_TAG_OPEN\n      ) {\n        this._consumeStartTag(this._advance());\n      } else if (this._peek.type === TokenType.TAG_CLOSE) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_consumeAttr",
            "complexity": 12,
            "lineCount": 64,
            "parameterCount": 1,
            "snippet": "private _consumeAttr(attrName: AttributeNameToken): html.Attribute {\n    const fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n    let attrEnd = attrName.sourceSpan.end;\n    if (this._peek.type === TokenType.ATTR_QUOTE) {\n      this._advance();\n    }\n    let value = '';\n    const valueTokens: InterpolatedAttributeToken[] = [];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_consumeStartTag",
            "complexity": 10,
            "lineCount": 59,
            "parameterCount": 1,
            "snippet": "private _consumeStartTag(startTagToken: TagOpenStartToken | IncompleteTagOpenToken) {\n    const [prefix, name] = startTagToken.parts;\n    const attrs: html.Attribute[] = [];\n    while (this._peek.type === TokenType.ATTR_NAME) {\n      attrs.push(this._consumeAttr(this._advance<AttributeNameToken>()));\n    }\n    const fullName = this._getElementFullName(prefix, name, this._getClosestParentElement());\n    let selfClosing = false;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_consumeLet",
            "complexity": 3,
            "lineCount": 54,
            "parameterCount": 1,
            "snippet": "private _consumeLet(startToken: LetStartToken) {\n    const name = startToken.parts[0];\n    let valueToken: LetValueToken;\n    let endToken: LetEndToken;\n    if (this._peek.type !== TokenType.LET_VALUE) {\n      this.errors.push(\n        TreeError.create(\n          startToken.parts[0],\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/output/abstract_emitter.ts",
        "criticalFunctions": [
          {
            "name": "visitBinaryOperatorExpr",
            "complexity": 21,
            "lineCount": 67,
            "parameterCount": 2,
            "snippet": "visitBinaryOperatorExpr(ast: o.BinaryOperatorExpr, ctx: EmitterVisitorContext): any {\n    let opStr: string;\n    switch (ast.operator) {\n      case o.BinaryOperator.Equals:\n        opStr = '==';\n        break;\n      case o.BinaryOperator.Identical:\n        opStr = '===';\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              }
            ]
          },
          {
            "name": "toSourceMapGenerator",
            "complexity": 12,
            "lineCount": 59,
            "parameterCount": 2,
            "snippet": "toSourceMapGenerator(genFilePath: string, startsAtLine: number = 0): SourceMapGenerator {\n    const map = new SourceMapGenerator(genFilePath);\n    let firstOffsetMapped = false;\n    const mapFirstOffsetIfNeeded = () => {\n      if (!firstOffsetMapped) {\n        map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n        firstOffsetMapped = true;\n      }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/output/output_ast.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/output/source_map.ts",
        "criticalFunctions": [
          {
            "name": "toJSON",
            "complexity": 5,
            "lineCount": 59,
            "parameterCount": 0,
            "snippet": "toJSON(): SourceMap | null {\n    if (!this.hasMappings) {\n      return null;\n    }\n    const sourcesIndex = new Map<string, number>();\n    const sources: string[] = [];\n    const sourcesContent: (string | null)[] = [];\n    Array.from(this.sourcesContent.keys()).forEach((url: string, i: number) => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/render3/r3_ast.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/render3/r3_control_flow.ts",
        "criticalFunctions": [
          {
            "name": "parseLetParameter",
            "complexity": 13,
            "lineCount": 75,
            "parameterCount": 6,
            "snippet": "function parseLetParameter(\n  sourceSpan: ParseSourceSpan,\n  expression: string,\n  span: ParseSourceSpan,\n  loopItemName: string,\n  context: t.Variable[],\n  errors: ParseError[],\n): void {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createSwitchBlock",
            "complexity": 10,
            "lineCount": 62,
            "parameterCount": 3,
            "snippet": "export function createSwitchBlock(\n  ast: html.Block,\n  visitor: html.Visitor,\n  bindingParser: BindingParser,\n): {node: t.SwitchBlock | null; errors: ParseError[]} {\n  const errors = validateSwitchBlock(ast);\n  const primaryExpression =\n    ast.parameters.length > 0\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "parseForLoopParameters",
            "complexity": 10,
            "lineCount": 114,
            "parameterCount": 3,
            "snippet": "function parseForLoopParameters(\n  block: html.Block,\n  errors: ParseError[],\n  bindingParser: BindingParser,\n) {\n  if (block.parameters.length === 0) {\n    errors.push(new ParseError(block.startSourceSpan, '@for loop does not have an expression'));\n    return null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 114 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createIfBlock",
            "complexity": 9,
            "lineCount": 84,
            "parameterCount": 4,
            "snippet": "export function createIfBlock(\n  ast: html.Block,\n  connectedBlocks: html.Block[],\n  visitor: html.Visitor,\n  bindingParser: BindingParser,\n): {node: t.IfBlock | null; errors: ParseError[]} {\n  const errors: ParseError[] = validateIfConnectedBlocks(connectedBlocks);\n  const branches: t.IfBlockBranch[] = [];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 84 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createForLoop",
            "complexity": 7,
            "lineCount": 65,
            "parameterCount": 4,
            "snippet": "export function createForLoop(\n  ast: html.Block,\n  connectedBlocks: html.Block[],\n  visitor: html.Visitor,\n  bindingParser: BindingParser,\n): {node: t.ForLoopBlock | null; errors: ParseError[]} {\n  const errors: ParseError[] = [];\n  const params = parseForLoopParameters(ast, errors, bindingParser);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/render3/r3_deferred_blocks.ts",
        "criticalFunctions": [
          {
            "name": "parseConnectedBlocks",
            "complexity": 10,
            "lineCount": 60,
            "parameterCount": 3,
            "snippet": "function parseConnectedBlocks(\n  connectedBlocks: html.Block[],\n  errors: ParseError[],\n  visitor: html.Visitor,\n) {\n  let placeholder: t.DeferredBlockPlaceholder | null = null;\n  let loading: t.DeferredBlockLoading | null = null;\n  let error: t.DeferredBlockError | null = null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 60 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/render3/r3_deferred_triggers.ts",
        "criticalFunctions": [
          {
            "name": "consumeParameters",
            "complexity": 17,
            "lineCount": 70,
            "parameterCount": 0,
            "snippet": "private consumeParameters(): string[] {\n    const parameters: string[] = [];\n    if (!this.token().isCharacter(chars.$LPAREN)) {\n      this.unexpectedToken(this.token());\n      return parameters;\n    }\n    this.advance();\n    const commaDelimStack: number[] = [];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 70 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "consumeTrigger",
            "complexity": 12,
            "lineCount": 121,
            "parameterCount": 2,
            "snippet": "private consumeTrigger(identifier: Token, parameters: string[]) {\n    const triggerNameStartSpan = this.span.start.moveBy(\n      this.start + identifier.index - this.tokens[0].index,\n    );\n    const nameSpan = new ParseSourceSpan(\n      triggerNameStartSpan,\n      triggerNameStartSpan.moveBy(identifier.strValue.length),\n    );\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 121 lines, consider splitting"
              }
            ]
          },
          {
            "name": "createHoverTrigger",
            "complexity": 1,
            "lineCount": 20,
            "parameterCount": 8,
            "snippet": "function createHoverTrigger(\n  parameters: string[],\n  nameSpan: ParseSourceSpan,\n  sourceSpan: ParseSourceSpan,\n  prefetchSpan: ParseSourceSpan | null,\n  onSourceSpan: ParseSourceSpan | null,\n  hydrateSpan: ParseSourceSpan | null,\n  placeholder: t.DeferredBlockPlaceholder | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "createInteractionTrigger",
            "complexity": 1,
            "lineCount": 20,
            "parameterCount": 8,
            "snippet": "function createInteractionTrigger(\n  parameters: string[],\n  nameSpan: ParseSourceSpan,\n  sourceSpan: ParseSourceSpan,\n  prefetchSpan: ParseSourceSpan | null,\n  onSourceSpan: ParseSourceSpan | null,\n  hydrateSpan: ParseSourceSpan | null,\n  placeholder: t.DeferredBlockPlaceholder | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "createViewportTrigger",
            "complexity": 1,
            "lineCount": 20,
            "parameterCount": 8,
            "snippet": "function createViewportTrigger(\n  parameters: string[],\n  nameSpan: ParseSourceSpan,\n  sourceSpan: ParseSourceSpan,\n  prefetchSpan: ParseSourceSpan | null,\n  onSourceSpan: ParseSourceSpan | null,\n  hydrateSpan: ParseSourceSpan | null,\n  placeholder: t.DeferredBlockPlaceholder | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/render3/r3_factory.ts",
        "criticalFunctions": [
          {
            "name": "compileFactoryFunction",
            "complexity": 11,
            "lineCount": 95,
            "parameterCount": 1,
            "snippet": "export function compileFactoryFunction(meta: R3FactoryMetadata): R3CompiledExpression {\n  const t = o.variable('__ngFactoryType__');\n  let baseFactoryVar: o.ReadVarExpr | null = null;\n  const typeForCtor = !isDelegatedFactoryMetadata(meta)\n    ? new o.BinaryOperatorExpr(o.BinaryOperator.Or, t, meta.type.value)\n    : t;\n  let ctorExpr: o.Expression | null = null;\n  if (meta.deps !== null) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 95 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/render3/r3_identifiers.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/render3/r3_module_compiler.ts",
        "criticalFunctions": [
          {
            "name": "generateSetNgModuleScopeCall",
            "complexity": 13,
            "lineCount": 63,
            "parameterCount": 1,
            "snippet": "function generateSetNgModuleScopeCall(meta: R3NgModuleMetadata): o.Statement | null {\n  const scopeMap = new DefinitionMap<{\n    declarations: o.Expression;\n    imports: o.Expression;\n    exports: o.Expression;\n    bootstrap: o.Expression;\n  }>();\n  if (meta.kind === R3NgModuleMetadataKind.Global) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 63 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "compileNgModule",
            "complexity": 12,
            "lineCount": 61,
            "parameterCount": 1,
            "snippet": "export function compileNgModule(meta: R3NgModuleMetadata): R3CompiledExpression {\n  const statements: o.Statement[] = [];\n  const definitionMap = new DefinitionMap<R3NgModuleDefMap>();\n  definitionMap.set('type', meta.type.value);\n  if (meta.kind === R3NgModuleMetadataKind.Global && meta.bootstrap.length > 0) {\n    definitionMap.set('bootstrap', refsToArray(meta.bootstrap, meta.containsForwardDecls));\n  }\n  if (meta.selectorScopeMode === R3SelectorScopeMode.Inline) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/render3/r3_template_transform.ts",
        "criticalFunctions": [
          {
            "name": "visitElement",
            "complexity": 24,
            "lineCount": 209,
            "parameterCount": 1,
            "snippet": "visitElement(element: html.Element): t.Node | null {\n    const isI18nRootElement = isI18nRootNode(element.i18n);\n    if (isI18nRootElement) {\n      if (this.inI18nBlock) {\n        this.reportError(\n          'Cannot mark an element as translatable inside of a translatable section. Please remove the nested i18n marker.',\n          element.sourceSpan,\n        );\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 209 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "parseAttribute",
            "complexity": 20,
            "lineCount": 198,
            "parameterCount": 7,
            "snippet": "private parseAttribute(\n    isTemplateElement: boolean,\n    attribute: html.Attribute,\n    matchableAttributes: string[][],\n    parsedProperties: ParsedProperty[],\n    boundEvents: t.BoundEvent[],\n    variables: t.Variable[],\n    references: t.Reference[],\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 198 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "visitBlock",
            "complexity": 11,
            "lineCount": 74,
            "parameterCount": 2,
            "snippet": "visitBlock(block: html.Block, context: html.Node[]) {\n    const index = Array.isArray(context) ? context.indexOf(block) : -1;\n    if (index === -1) {\n      throw new Error(\n        'Visitor invoked incorrectly. Expecting visitBlock to be invoked siblings array as its context',\n      );\n    }\n    if (this.processedNodes.has(block)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "parseAssignmentEvent",
            "complexity": 2,
            "lineCount": 22,
            "parameterCount": 7,
            "snippet": "private parseAssignmentEvent(\n    name: string,\n    expression: string,\n    sourceSpan: ParseSourceSpan,\n    valueSpan: ParseSourceSpan | undefined,\n    targetMatchableAttrs: string[][],\n    boundEvents: t.BoundEvent[],\n    keySpan: ParseSourceSpan,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/schema/dom_element_schema_registry.ts",
        "criticalFunctions": [
          {
            "name": "_isPixelDimensionStyle",
            "complexity": 29,
            "lineCount": 36,
            "parameterCount": 1,
            "snippet": "function _isPixelDimensionStyle(prop: string): boolean {\n  switch (prop) {\n    case 'width':\n    case 'height':\n    case 'minWidth':\n    case 'minHeight':\n    case 'maxWidth':\n    case 'maxHeight':\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 29 exceeds recommended threshold of 15"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template_parser/binding_parser.ts",
        "criticalFunctions": [
          {
            "name": "createBoundElementProperty",
            "complexity": 13,
            "lineCount": 87,
            "parameterCount": 4,
            "snippet": "createBoundElementProperty(\n    elementSelector: string,\n    boundProp: ParsedProperty,\n    skipValidation: boolean = false,\n    mapPropertyName: boolean = true,\n  ): BoundElementProperty {\n    if (boundProp.isAnimation) {\n      return new BoundElementProperty(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "parsePropertyBinding",
            "complexity": 8,
            "lineCount": 64,
            "parameterCount": 10,
            "snippet": "parsePropertyBinding(\n    name: string,\n    expression: string,\n    isHost: boolean,\n    isPartOfAssignmentBinding: boolean,\n    sourceSpan: ParseSourceSpan,\n    absoluteOffset: number,\n    valueSpan: ParseSourceSpan | undefined,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "10 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "parseInlineTemplateBinding",
            "complexity": 7,
            "lineCount": 61,
            "parameterCount": 8,
            "snippet": "parseInlineTemplateBinding(\n    tplKey: string,\n    tplValue: string,\n    sourceSpan: ParseSourceSpan,\n    absoluteValueOffset: number,\n    targetMatchableAttrs: string[][],\n    targetProps: ParsedProperty[],\n    targetVars: ParsedVariable[],\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_parseRegularEvent",
            "complexity": 5,
            "lineCount": 37,
            "parameterCount": 8,
            "snippet": "private _parseRegularEvent(\n    name: string,\n    expression: string,\n    isAssignmentEvent: boolean,\n    sourceSpan: ParseSourceSpan,\n    handlerSpan: ParseSourceSpan,\n    targetMatchableAttrs: string[][],\n    targetEvents: ParsedEvent[],\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "parseLiteralAttr",
            "complexity": 4,
            "lineCount": 49,
            "parameterCount": 8,
            "snippet": "parseLiteralAttr(\n    name: string,\n    value: string | null,\n    sourceSpan: ParseSourceSpan,\n    absoluteOffset: number,\n    valueSpan: ParseSourceSpan | undefined,\n    targetMatchableAttrs: string[][],\n    targetProps: ParsedProperty[],\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/rxjs-interop/src/to_signal.ts",
        "criticalFunctions": [
          {
            "name": "toSignal",
            "complexity": 17,
            "lineCount": 92,
            "parameterCount": 2,
            "snippet": "export function toSignal<T, U = undefined>(\n  source: Observable<T> | Subscribable<T>,\n  options?: ToSignalOptions<T | U> & {initialValue?: U},\n): Signal<T | U> {\n  typeof ngDevMode !== 'undefined' &&\n    ngDevMode &&\n    assertNotInReactiveContext(\n      toSignal,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 92 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/testing/src/component_fixture.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/testing/src/metadata_overrider.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/core/testing/src/test_bed.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/testing/src/test_bed_compiler.ts",
        "criticalFunctions": [
          {
            "name": "applyProviderOverridesInScope",
            "complexity": 12,
            "lineCount": 63,
            "parameterCount": 1,
            "snippet": "private applyProviderOverridesInScope(type: Type<any>): void {\n    const hasScope = isStandaloneComponent(type) || isNgModule(type);\n    if (!hasScope || this.scopesWithOverriddenProviders.has(type)) {\n      return;\n    }\n    this.scopesWithOverriddenProviders.add(type);\n    const injectorDef: any = (type as any)[NG_INJ_DEF];\n    if (this.providerOverridesByToken.size === 0) return;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 63 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "queueType",
            "complexity": 10,
            "lineCount": 54,
            "parameterCount": 2,
            "snippet": "private queueType(type: Type<any>, moduleType: Type<any> | TestingModuleOverride | null): void {\n    this.maybeRegisterComponentWithAsyncMetadata(type);\n    const component = this.resolvers.component.resolve(type);\n    if (component) {\n      if (ɵisComponentDefPendingResolution(type) || !type.hasOwnProperty(NG_COMP_DEF)) {\n        this.pendingComponents.add(type);\n      }\n      this.seenComponents.add(type);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/forms/src/directives/abstract_control_directive.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/forms/src/directives/checkbox_value_accessor.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/forms/src/directives/ng_model.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/forms/src/directives/number_value_accessor.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/forms/src/directives/radio_control_value_accessor.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/forms/src/directives/range_value_accessor.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/forms/src/directives/select_control_value_accessor.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/forms/src/directives/select_multiple_control_value_accessor.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/forms/src/directives/shared.ts",
        "criticalFunctions": [
          {
            "name": "selectValueAccessor",
            "complexity": 18,
            "lineCount": 36,
            "parameterCount": 2,
            "snippet": "export function selectValueAccessor(\n  dir: NgControl,\n  valueAccessors: ControlValueAccessor[],\n): ControlValueAccessor | null {\n  if (!valueAccessors) return null;\n  if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode))\n    _throwInvalidValueAccessorError(dir);\n  let defaultAccessor: ControlValueAccessor | undefined = undefined;\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/language-service/src/codefixes/fix_unused_standalone_imports.ts",
        "criticalFunctions": [
          {
            "name": "getAllCodeActions",
            "complexity": 15,
            "lineCount": 69,
            "parameterCount": 1,
            "snippet": "({diagnostics}) => {\n    const arrayUpdates = new Map<tss.ArrayLiteralExpression, Set<tss.Expression>>();\n    const arraysToClear = new Set<tss.ArrayLiteralExpression>();\n    const changes: tss.FileTextChanges[] = [];\n    for (const diag of diagnostics) {\n      const {start, length, file} = diag;\n      if (file === undefined || start === undefined || length == undefined) {\n        continue;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 69 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getCodeActions",
            "complexity": 10,
            "lineCount": 72,
            "parameterCount": 1,
            "snippet": "({start, fileName, compiler}) => {\n    const file = compiler.programDriver.getProgram().getSourceFile(fileName) || null;\n    if (file === null) {\n      return [];\n    }\n    const node = findFirstMatchingNode(file, {\n      filter: (n): n is tss.Identifier =>\n        tss.isIdentifier(n) && start >= n.getStart() && start <= n.getEnd(),\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/forms/src/model/abstract_model.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/forms/src/model/form_array.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/forms/src/model/form_control.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/forms/src/model/form_group.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/application/application_ref.ts",
        "criticalFunctions": [
          {
            "name": "bootstrapImpl",
            "complexity": 13,
            "lineCount": 59,
            "parameterCount": 3,
            "snippet": "private bootstrapImpl<C>(\n    componentOrFactory: ComponentFactory<C> | Type<C>,\n    rootSelectorOrNode?: string | any,\n    injector: Injector = Injector.NULL,\n  ): ComponentRef<C> {\n    profiler(ProfilerEvent.BootstrapComponentStart);\n    (typeof ngDevMode === 'undefined' || ngDevMode) && warnIfDestroyed(this._destroyed);\n    const isComponentFactory = componentOrFactory instanceof ComponentFactory;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "synchronizeOnce",
            "complexity": 6,
            "lineCount": 61,
            "parameterCount": 0,
            "snippet": "private synchronizeOnce(): void {\n    if (this.dirtyFlags & ApplicationRefDirtyFlags.RootEffects) {\n      this.dirtyFlags &= ~ApplicationRefDirtyFlags.RootEffects;\n      this.rootEffectScheduler.flush();\n    }\n    if (this.dirtyFlags & ApplicationRefDirtyFlags.ViewTreeAny) {\n      const useGlobalCheck = Boolean(this.dirtyFlags & ApplicationRefDirtyFlags.ViewTreeGlobal);\n      this.dirtyFlags &= ~ApplicationRefDirtyFlags.ViewTreeAny;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/compiler/compiler_facade_interface.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/debug/debug_node.ts",
        "criticalFunctions": [
          {
            "name": "_queryNodeChildren",
            "complexity": 18,
            "lineCount": 96,
            "parameterCount": 6,
            "snippet": "function _queryNodeChildren(\n  tNode: TNode,\n  lView: LView,\n  predicate: Predicate<DebugElement> | Predicate<DebugNode>,\n  matches: DebugElement[] | DebugNode[],\n  elementsOnly: boolean,\n  rootNativeNode: any,\n) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 96 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/defer/dom_triggers.ts",
        "criticalFunctions": [
          {
            "name": "registerDomTrigger",
            "complexity": 8,
            "lineCount": 77,
            "parameterCount": 7,
            "snippet": "export function registerDomTrigger(\n  initialLView: LView,\n  tNode: TNode,\n  triggerIndex: number,\n  walkUpTimes: number | undefined,\n  registerFn: (element: Element, callback: VoidFunction, injector: Injector) => VoidFunction,\n  callback: VoidFunction,\n  type: TriggerType,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 77 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "pollDomTrigger",
            "complexity": 8,
            "lineCount": 61,
            "parameterCount": 0,
            "snippet": "function pollDomTrigger() {\n    if (isDestroyed(initialLView)) {\n      poll.destroy();\n      return;\n    }\n    const lDetails = getLDeferBlockDetails(initialLView, tNode);\n    const renderedState = lDetails[DEFER_BLOCK_STATE];\n    if (\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/defer/instructions.ts",
        "criticalFunctions": [
          {
            "name": "ɵɵdefer",
            "complexity": 9,
            "lineCount": 97,
            "parameterCount": 10,
            "snippet": "export function ɵɵdefer(\n  index: number,\n  primaryTmplIndex: number,\n  dependencyResolverFn?: DependencyResolverFn | null,\n  loadingTmplIndex?: number | null,\n  placeholderTmplIndex?: number | null,\n  errorTmplIndex?: number | null,\n  loadingConfigIndex?: number | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 97 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "10 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/defer/rendering.ts",
        "criticalFunctions": [
          {
            "name": "renderDeferBlockState",
            "complexity": 17,
            "lineCount": 57,
            "parameterCount": 4,
            "snippet": "export function renderDeferBlockState(\n  newState: DeferBlockState,\n  tNode: TNode,\n  lContainer: LContainer,\n  skipTimerScheduling = false,\n): void {\n  const hostLView = lContainer[PARENT];\n  const hostTView = hostLView[TVIEW];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "applyDeferBlockState",
            "complexity": 10,
            "lineCount": 80,
            "parameterCount": 5,
            "snippet": "function applyDeferBlockState(\n  newState: DeferBlockState,\n  lDetails: LDeferBlockDetails,\n  lContainer: LContainer,\n  tNode: TNode,\n  hostLView: LView<unknown>,\n) {\n  profiler(ProfilerEvent.DeferBlockStateStart);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "applyDeferBlockStateWithScheduling",
            "complexity": 9,
            "lineCount": 53,
            "parameterCount": 5,
            "snippet": "function applyDeferBlockStateWithScheduling(\n  newState: DeferBlockState,\n  lDetails: LDeferBlockDetails,\n  lContainer: LContainer,\n  tNode: TNode,\n  hostLView: LView<unknown>,\n) {\n  const now = Date.now();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/defer/timer_scheduler.ts",
        "criticalFunctions": [
          {
            "name": "scheduleTimer",
            "complexity": 12,
            "lineCount": 87,
            "parameterCount": 1,
            "snippet": "private scheduleTimer(ngZone: NgZone) {\n    const callback = () => {\n      this.clearTimeout();\n      this.executingCallbacks = true;\n      const current = [...this.current];\n      const now = Date.now();\n      for (let i = 0; i < current.length; i += 2) {\n        const invokeAt = current[i] as number;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "callback",
            "complexity": 8,
            "lineCount": 54,
            "parameterCount": 0,
            "snippet": "() => {\n      this.clearTimeout();\n      this.executingCallbacks = true;\n      const current = [...this.current];\n      const now = Date.now();\n      for (let i = 0; i < current.length; i += 2) {\n        const invokeAt = current[i] as number;\n        const callback = current[i + 1] as VoidFunction;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/defer/triggering.ts",
        "criticalFunctions": [
          {
            "name": "triggerResourceLoading",
            "complexity": 16,
            "lineCount": 123,
            "parameterCount": 3,
            "snippet": "export function triggerResourceLoading(\n  tDetails: TDeferBlockDetails,\n  lView: LView,\n  tNode: TNode,\n): Promise<unknown> {\n  const injector = lView[INJECTOR];\n  const tView = lView[TVIEW];\n  if (tDetails.loadingState !== DeferDependenciesLoadingState.NOT_STARTED) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 123 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 12,
            "lineCount": 62,
            "parameterCount": 1,
            "snippet": "(results) => {\n    let failed = false;\n    const directiveDefs: DirectiveDefList = [];\n    const pipeDefs: PipeDefList = [];\n    for (const result of results) {\n      if (result.status === 'fulfilled') {\n        const dependency = result.value;\n        const directiveDef = getComponentDef(dependency) || getDirectiveDef(dependency);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "triggerHydrationFromBlockName",
            "complexity": 6,
            "lineCount": 54,
            "parameterCount": 3,
            "snippet": "export async function triggerHydrationFromBlockName(\n  injector: Injector,\n  blockName: string,\n  replayQueuedEventsFn?: Function,\n) {\n  const dehydratedBlockRegistry = injector.get(DEHYDRATED_BLOCK_REGISTRY);\n  const blocksBeingHydrated = dehydratedBlockRegistry.hydrating;\n  if (blocksBeingHydrated.has(blockName)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              }
            ]
          },
          {
            "name": "triggerHydrationForBlockQueue",
            "complexity": 5,
            "lineCount": 70,
            "parameterCount": 3,
            "snippet": "export async function triggerHydrationForBlockQueue(\n  injector: Injector,\n  hydrationQueue: string[],\n  replayQueuedEventsFn?: Function,\n): Promise<void> {\n  const dehydratedBlockRegistry = injector.get(DEHYDRATED_BLOCK_REGISTRY);\n  const blocksBeingHydrated = dehydratedBlockRegistry.hydrating;\n  const pendingTasks = injector.get(PendingTasksInternal);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 70 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/defer/utils.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/di/injector_compatibility.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/di/provider_collection.ts",
        "criticalFunctions": [
          {
            "name": "walkProviderTree",
            "complexity": 28,
            "lineCount": 132,
            "parameterCount": 4,
            "snippet": "export function walkProviderTree(\n  container: Type<unknown> | InjectorTypeWithProviders<unknown>,\n  visitor: WalkProviderTreeVisitor,\n  parents: Type<unknown>[],\n  dedup: Set<Type<unknown>>,\n): container is InjectorTypeWithProviders<unknown> {\n  container = resolveForwardRef(container);\n  if (!container) return false;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 132 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/di/r3_injector.ts",
        "criticalFunctions": [
          {
            "name": "get",
            "complexity": 18,
            "lineCount": 80,
            "parameterCount": 3,
            "snippet": "override get<T>(\n    token: ProviderToken<T>,\n    notFoundValue: any = THROW_IF_NOT_FOUND,\n    flags: InjectFlags | InjectOptions = InjectFlags.Default,\n  ): T {\n    assertNotDestroyed(this);\n    if (token.hasOwnProperty(NG_ENV_ID)) {\n      return (token as any)[NG_ENV_ID](this);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "providerToFactory",
            "complexity": 17,
            "lineCount": 41,
            "parameterCount": 3,
            "snippet": "export function providerToFactory(\n  provider: SingleProvider,\n  ngModuleType?: InjectorType<any>,\n  providers?: any[],\n): (type?: Type<unknown>, flags?: number) => any {\n  let factory: ((type?: Type<unknown>, flags?: InjectFlags) => any) | undefined = undefined;\n  if (ngDevMode && isEnvironmentProviders(provider)) {\n    throwInvalidProviderError(undefined, providers, provider);\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/hydration/annotate.ts",
        "criticalFunctions": [
          {
            "name": "serializeLView",
            "complexity": 35,
            "lineCount": 198,
            "parameterCount": 3,
            "snippet": "function serializeLView(\n  lView: LView,\n  parentDeferBlockId: string | null = null,\n  context: HydrationContext,\n): SerializedView {\n  const ngh: SerializedView = {};\n  const tView = lView[TVIEW];\n  const i18nChildren = getOrComputeI18nChildren(tView, context);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 35 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 198 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "serializeLContainer",
            "complexity": 20,
            "lineCount": 154,
            "parameterCount": 5,
            "snippet": "function serializeLContainer(\n  lContainer: LContainer,\n  tNode: TNode,\n  lView: LView,\n  parentDeferBlockId: string | null,\n  context: HydrationContext,\n): SerializedContainerView[] {\n  const views: SerializedContainerView[] = [];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 154 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "annotateForHydration",
            "complexity": 6,
            "lineCount": 59,
            "parameterCount": 2,
            "snippet": "export function annotateForHydration(appRef: ApplicationRef, doc: Document) {\n  const injector = appRef.injector;\n  const isI18nHydrationEnabledVal = isI18nHydrationEnabled(injector);\n  const isIncrementalHydrationEnabledVal = isIncrementalHydrationEnabled(injector);\n  const serializedViewCollection = new SerializedViewCollection();\n  const corruptedTextNodes = new Map<HTMLElement, TextNodeMarker>();\n  const viewRefs = appRef._views;\n  const shouldReplayEvents = injector.get(IS_EVENT_REPLAY_ENABLED, EVENT_REPLAY_ENABLED_DEFAULT);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/hydration/api.ts",
        "criticalFunctions": [
          {
            "name": "withDomHydration",
            "complexity": 16,
            "lineCount": 107,
            "parameterCount": 0,
            "snippet": "export function withDomHydration(): EnvironmentProviders {\n  const providers: Provider[] = [\n    {\n      provide: IS_HYDRATION_DOM_REUSE_ENABLED,\n      useFactory: () => {\n        let isEnabled = true;\n        if (typeof ngServerMode === 'undefined' || !ngServerMode) {\n          const transferState = inject(TransferState, {optional: true});\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 107 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/hydration/cleanup.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/hydration/error_handling.ts",
        "criticalFunctions": [
          {
            "name": "validateMatchingNode",
            "complexity": 6,
            "lineCount": 52,
            "parameterCount": 6,
            "snippet": "export function validateMatchingNode(\n  node: RNode | null,\n  nodeType: number,\n  tagName: string | null,\n  lView: LView,\n  tNode: TNode,\n  isViewContainerAnchor = false,\n): void {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/hydration/event_replay.ts",
        "criticalFunctions": [
          {
            "name": "withEventReplay",
            "complexity": 15,
            "lineCount": 127,
            "parameterCount": 0,
            "snippet": "export function withEventReplay(): Provider[] {\n  const providers: Provider[] = [\n    {\n      provide: IS_EVENT_REPLAY_ENABLED,\n      useFactory: () => {\n        let isEnabled = true;\n        if (typeof ngServerMode === 'undefined' || !ngServerMode) {\n          const appId = inject(APP_ID);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 127 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "useFactory",
            "complexity": 7,
            "lineCount": 62,
            "parameterCount": 0,
            "snippet": "() => {\n          const appRef = inject(ApplicationRef);\n          const {injector} = appRef;\n          return () => {\n            if (!shouldEnableEventReplay(injector) || appsWithEventReplay.has(appRef)) {\n              return;\n            }\n            appsWithEventReplay.add(appRef);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 7,
            "lineCount": 57,
            "parameterCount": 0,
            "snippet": "() => {\n            if (!shouldEnableEventReplay(injector) || appsWithEventReplay.has(appRef)) {\n              return;\n            }\n            appsWithEventReplay.add(appRef);\n            appRef.onDestroy(() => {\n              appsWithEventReplay.delete(appRef);\n              if (typeof ngServerMode !== 'undefined' && !ngServerMode) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/hydration/i18n.ts",
        "criticalFunctions": [
          {
            "name": "collectI18nNodesFromDom",
            "complexity": 18,
            "lineCount": 144,
            "parameterCount": 3,
            "snippet": "function collectI18nNodesFromDom(\n  context: I18nHydrationContext,\n  state: I18nHydrationState,\n  nodeOrNodes: I18nNode | I18nNode[],\n) {\n  if (Array.isArray(nodeOrNodes)) {\n    let nextState = state;\n    for (const node of nodeOrNodes) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 144 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "prepareI18nBlockForHydrationImpl",
            "complexity": 12,
            "lineCount": 67,
            "parameterCount": 4,
            "snippet": "function prepareI18nBlockForHydrationImpl(\n  lView: LView,\n  index: number,\n  parentTNode: TNode | null,\n  subTemplateIndex: number,\n) {\n  const hydrationInfo = lView[HYDRATION];\n  if (!hydrationInfo) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/hydration/node_lookup_utils.ts",
        "criticalFunctions": [
          {
            "name": "calcPathForNode",
            "complexity": 11,
            "lineCount": 76,
            "parameterCount": 3,
            "snippet": "export function calcPathForNode(\n  tNode: TNode,\n  lView: LView,\n  excludedParentNodes: Set<number> | null,\n): string {\n  let parentTNode = tNode.parent;\n  let parentIndex: number | string;\n  let parentRNode: RNode;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 76 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "locateNextRNode",
            "complexity": 9,
            "lineCount": 61,
            "parameterCount": 4,
            "snippet": "export function locateNextRNode<T extends RNode>(\n  hydrationInfo: DehydratedView,\n  tView: TView,\n  lView: LView<unknown>,\n  tNode: TNode,\n): T | null {\n  const noOffsetIndex = getNoOffsetIndex(tNode);\n  let native = locateI18nRNodeByIndex(hydrationInfo, noOffsetIndex);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/hydration/utils.ts",
        "criticalFunctions": [
          {
            "name": "retrieveHydrationInfoImpl",
            "complexity": 13,
            "lineCount": 84,
            "parameterCount": 3,
            "snippet": "export function retrieveHydrationInfoImpl(\n  rNode: RElement,\n  injector: Injector,\n  isRootView = false,\n): DehydratedView | null {\n  let nghAttrValue = rNode.getAttribute(NGH_ATTR_NAME);\n  if (nghAttrValue == null) return null;\n  const [componentViewNgh, rootViewNgh] = nghAttrValue.split('|');\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 84 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/interface/type.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/linker/view_container_ref.ts",
        "criticalFunctions": [
          {
            "name": "createComponent",
            "complexity": 16,
            "lineCount": 121,
            "parameterCount": 5,
            "snippet": "override createComponent<C>(\n    componentFactoryOrType: ComponentFactory<C> | Type<C>,\n    indexOrOptions?:\n      | number\n      | undefined\n      | {\n          index?: number;\n          injector?: Injector;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 121 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "populateDehydratedViewsInLContainerImpl",
            "complexity": 8,
            "lineCount": 55,
            "parameterCount": 3,
            "snippet": "function populateDehydratedViewsInLContainerImpl(\n  lContainer: LContainer,\n  tNode: TNode,\n  hostLView: LView,\n): boolean {\n  if (lContainer[NATIVE] && lContainer[DEHYDRATED_VIEWS]) {\n    return true;\n  }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/metadata/resource_loading.ts",
        "criticalFunctions": [
          {
            "name": "resolveComponentResources",
            "complexity": 10,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "export function resolveComponentResources(\n  resourceResolver: (url: string) => Promise<string | {text(): Promise<string>}>,\n): Promise<void> {\n  const componentResolved: Promise<void>[] = [];\n  const urlMap = new Map<string, Promise<string>>();\n  function cachedResourceResolve(url: string): Promise<string> {\n    let promise = urlMap.get(url);\n    if (!promise) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/platform/bootstrap.ts",
        "criticalFunctions": [
          {
            "name": "bootstrap",
            "complexity": 17,
            "lineCount": 103,
            "parameterCount": 1,
            "snippet": "export function bootstrap<M>(\n  config: ModuleBootstrapConfig<M> | ApplicationBootstrapConfig,\n): Promise<ApplicationRef> | Promise<NgModuleRef<M>> {\n  const envInjector = isApplicationBootstrapConfig(config)\n    ? config.r3Injector\n    : config.moduleRef.injector;\n  const ngZone = envInjector.get(NgZone);\n  return ngZone.run(() => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 103 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 16,
            "lineCount": 95,
            "parameterCount": 0,
            "snippet": "() => {\n    if (isApplicationBootstrapConfig(config)) {\n      config.r3Injector.resolveInjectorInitializers();\n    } else {\n      config.moduleRef.resolveInjectorInitializers();\n    }\n    const exceptionHandler = envInjector.get(ErrorHandler, null);\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 95 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/reflection/reflection_capabilities.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/assert.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/collect_native_nodes.ts",
        "criticalFunctions": [
          {
            "name": "collectNativeNodes",
            "complexity": 14,
            "lineCount": 56,
            "parameterCount": 5,
            "snippet": "export function collectNativeNodes(\n  tView: TView,\n  lView: LView,\n  tNode: TNode | null,\n  result: any[],\n  isProjection: boolean = false,\n): any[] {\n  while (tNode !== null) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/component_ref.ts",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 9,
            "lineCount": 129,
            "parameterCount": 4,
            "snippet": "override create(\n    injector: Injector,\n    projectableNodes?: any[][] | undefined,\n    rootSelectorOrNode?: any,\n    environmentInjector?: NgModuleRef<any> | EnvironmentInjector | undefined,\n  ): AbstractComponentRef<T> {\n    profiler(ProfilerEvent.DynamicComponentStart);\n    const prevConsumer = setActiveConsumer(null);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 129 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/context_discovery.ts",
        "criticalFunctions": [
          {
            "name": "getLContext",
            "complexity": 22,
            "lineCount": 89,
            "parameterCount": 1,
            "snippet": "export function getLContext(target: any): LContext | null {\n  let mpValue = readPatchedData(target);\n  if (mpValue) {\n    if (isLView(mpValue)) {\n      const lView: LView = mpValue!;\n      let nodeIndex: number;\n      let component: any = undefined;\n      let directives: any[] | null | undefined = undefined;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 89 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/definition.ts",
        "criticalFunctions": [
          {
            "name": "getComponentId",
            "complexity": 12,
            "lineCount": 92,
            "parameterCount": 1,
            "snippet": "function getComponentId<T>(componentDef: ComponentDef<T>): string {\n  let hash = 0;\n  const componentDefConsts = typeof componentDef.consts === 'function' ? '' : componentDef.consts;\n  const hashSelectors = [\n    componentDef.selectors,\n    componentDef.ngContentSelectors,\n    componentDef.hostVars,\n    componentDef.hostAttrs,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 92 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/di.ts",
        "criticalFunctions": [
          {
            "name": "lookupTokenUsingNodeInjector",
            "complexity": 23,
            "lineCount": 122,
            "parameterCount": 5,
            "snippet": "function lookupTokenUsingNodeInjector<T>(\n  tNode: TDirectiveHostNode,\n  lView: LView,\n  token: ProviderToken<T>,\n  flags: InjectFlags,\n  notFoundValue?: any,\n) {\n  const bloomHash = bloomHashBitOrFactory(token);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 122 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getNodeInjectable",
            "complexity": 13,
            "lineCount": 66,
            "parameterCount": 5,
            "snippet": "export function getNodeInjectable(\n  lView: LView,\n  tView: TView,\n  index: number,\n  tNode: TDirectiveHostNode,\n  flags?: InjectFlags,\n): any {\n  let value = lView[index];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "lookupTokenUsingEmbeddedInjector",
            "complexity": 10,
            "lineCount": 67,
            "parameterCount": 5,
            "snippet": "function lookupTokenUsingEmbeddedInjector<T>(\n  tNode: TDirectiveHostNode,\n  lView: LView,\n  token: ProviderToken<T>,\n  flags: InjectFlags,\n  notFoundValue?: any,\n) {\n  let currentTNode: TDirectiveHostNode | null = tNode;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/di_setup.ts",
        "criticalFunctions": [
          {
            "name": "resolveProvider",
            "complexity": 26,
            "lineCount": 170,
            "parameterCount": 5,
            "snippet": "function resolveProvider(\n  provider: Provider,\n  tInjectables: TData,\n  lInjectablesBlueprint: NodeInjectorFactory[],\n  isComponent: boolean,\n  isViewProvider: boolean,\n): void {\n  provider = resolveForwardRef(provider);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 170 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/dom_node_manipulation.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/errors.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/hmr.ts",
        "criticalFunctions": [
          {
            "name": "recreateLView",
            "complexity": 6,
            "lineCount": 85,
            "parameterCount": 5,
            "snippet": "function recreateLView(\n  importMeta: ImportMetaExtended | null,\n  id: string | null,\n  newDef: ComponentDef<unknown>,\n  oldDef: ComponentDef<unknown>,\n  lView: LView<unknown>,\n): void {\n  const instance = lView[CONTEXT];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 85 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "recreate",
            "complexity": 2,
            "lineCount": 60,
            "parameterCount": 0,
            "snippet": "() => {\n    if (oldDef.encapsulation === ViewEncapsulation.ShadowDom) {\n      const newHost = host.cloneNode(false) as HTMLElement;\n      host.replaceWith(newHost);\n      host = newHost;\n    }\n    const newTView = getOrCreateComponentTView(newDef);\n    const newLView = createLView(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 60 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/hooks.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/list_reconciliation.ts",
        "criticalFunctions": [
          {
            "name": "reconcile",
            "complexity": 31,
            "lineCount": 238,
            "parameterCount": 3,
            "snippet": "export function reconcile<T, V>(\n  liveCollection: LiveCollection<T, V>,\n  newCollection: Iterable<V> | undefined | null,\n  trackByFn: TrackByFunction<V>,\n): void {\n  let detachedItems: UniqueValueMultiKeyMap<unknown, T> | undefined = undefined;\n  let liveKeysInTheFuture: Set<unknown> | undefined = undefined;\n  let liveStartIdx = 0;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 31 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 238 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/namespaces.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/render3/node_manipulation.ts",
        "criticalFunctions": [
          {
            "name": "applyToElementOrContainer",
            "complexity": 16,
            "lineCount": 45,
            "parameterCount": 5,
            "snippet": "function applyToElementOrContainer(\n  action: WalkTNodeTreeAction,\n  renderer: Renderer,\n  parent: RElement | null,\n  lNodeToHandle: RNode | LContainer | LView,\n  beforeNode?: RNode | null,\n) {\n  if (lNodeToHandle != null) {\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "applyNodes",
            "complexity": 15,
            "lineCount": 59,
            "parameterCount": 7,
            "snippet": "function applyNodes(\n  renderer: Renderer,\n  action: WalkTNodeTreeAction,\n  tNode: TNode | null,\n  lView: LView,\n  parentRElement: RElement | null,\n  beforeNode: RNode | null,\n  isProjection: boolean,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getFirstNativeNode",
            "complexity": 14,
            "lineCount": 53,
            "parameterCount": 2,
            "snippet": "export function getFirstNativeNode(lView: LView, tNode: TNode | null): RNode | null {\n  if (tNode !== null) {\n    ngDevMode &&\n      assertTNodeType(\n        tNode,\n        TNodeType.AnyRNode |\n          TNodeType.AnyContainer |\n          TNodeType.Icu |\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "long-function",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/node_selector_matcher.ts",
        "criticalFunctions": [
          {
            "name": "isNodeMatchingSelector",
            "complexity": 30,
            "lineCount": 89,
            "parameterCount": 3,
            "snippet": "export function isNodeMatchingSelector(\n  tNode: TNode,\n  selector: CssSelector,\n  isProjectionMode: boolean,\n): boolean {\n  ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n  let mode: SelectorFlags = SelectorFlags.ELEMENT;\n  const nodeAttrs = tNode.attrs;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 30 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 89 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "stringifyCSSSelector",
            "complexity": 11,
            "lineCount": 52,
            "parameterCount": 1,
            "snippet": "function stringifyCSSSelector(selector: CssSelector): string {\n  let result = selector[0] as string;\n  let i = 1;\n  let mode = SelectorFlags.ATTRIBUTE;\n  let currentChunk = '';\n  let isNegativeMode = false;\n  while (i < selector.length) {\n    let valueOrMarker = selector[i];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/pipe.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/pure_function.ts",
        "criticalFunctions": [
          {
            "name": "ɵɵpureFunction5",
            "complexity": 4,
            "lineCount": 23,
            "parameterCount": 8,
            "snippet": "export function ɵɵpureFunction5(\n  slotOffset: number,\n  pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any) => any,\n  exp1: any,\n  exp2: any,\n  exp3: any,\n  exp4: any,\n  exp5: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵpureFunction6",
            "complexity": 4,
            "lineCount": 24,
            "parameterCount": 9,
            "snippet": "export function ɵɵpureFunction6(\n  slotOffset: number,\n  pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any, v6: any) => any,\n  exp1: any,\n  exp2: any,\n  exp3: any,\n  exp4: any,\n  exp5: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "9 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵpureFunction7",
            "complexity": 4,
            "lineCount": 25,
            "parameterCount": 10,
            "snippet": "export function ɵɵpureFunction7(\n  slotOffset: number,\n  pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any, v6: any, v7: any) => any,\n  exp1: any,\n  exp2: any,\n  exp3: any,\n  exp4: any,\n  exp5: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "10 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵpureFunction8",
            "complexity": 4,
            "lineCount": 26,
            "parameterCount": 11,
            "snippet": "export function ɵɵpureFunction8(\n  slotOffset: number,\n  pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any, v6: any, v7: any, v8: any) => any,\n  exp1: any,\n  exp2: any,\n  exp3: any,\n  exp4: any,\n  exp5: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "11 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "pureFunction2Internal",
            "complexity": 3,
            "lineCount": 18,
            "parameterCount": 7,
            "snippet": "export function pureFunction2Internal(\n  lView: LView,\n  bindingRoot: number,\n  slotOffset: number,\n  pureFn: (v1: any, v2: any) => any,\n  exp1: any,\n  exp2: any,\n  thisArg?: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/state.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/tnode_manipulation.ts",
        "criticalFunctions": [
          {
            "name": "createTNode",
            "complexity": 10,
            "lineCount": 70,
            "parameterCount": 6,
            "snippet": "export function createTNode(\n  tView: TView,\n  tParent: TElementNode | TContainerNode | null,\n  type: TNodeType,\n  index: number,\n  value: string | null,\n  attrs: TAttributes | null,\n): TNode {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 70 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/view_ref.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/resource/resource.ts",
        "criticalFunctions": [
          {
            "name": "loadEffect",
            "complexity": 8,
            "lineCount": 75,
            "parameterCount": 0,
            "snippet": "private async loadEffect(): Promise<void> {\n    const extRequest = this.extRequest();\n    const {status: currentStatus, previousStatus} = untracked(this.state);\n    if (extRequest.request === undefined) {\n      return;\n    } else if (currentStatus !== ResourceStatus.Loading) {\n      return;\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/sanitization/html_sanitizer.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/sanitization/sanitization.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/testability/testability.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/util/array_utils.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/util/assert.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/util/decorators.ts",
        "criticalFunctions": [
          {
            "name": "makePropDecorator",
            "complexity": 8,
            "lineCount": 51,
            "parameterCount": 4,
            "snippet": "export function makePropDecorator(\n  name: string,\n  props?: (...args: any[]) => any,\n  parentClass?: any,\n  additionalProcessing?: (target: any, name: string, ...args: any[]) => void,\n): any {\n  return noSideEffects(() => {\n    const metaCtor = makeMetadataCtor(props);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/util/iterable.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/util/stringify.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/view/provider_flags.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/zone/ng_zone.ts",
        "criticalFunctions": [
          {
            "name": "forkInnerZoneWithAngularBehavior",
            "complexity": 11,
            "lineCount": 99,
            "parameterCount": 1,
            "snippet": "function forkInnerZoneWithAngularBehavior(zone: NgZonePrivate) {\n  const delayChangeDetectionForEventsDelegate = () => {\n    delayChangeDetectionForEvents(zone);\n  };\n  const instanceId = ngZoneInstanceId++;\n  zone._inner = zone._inner.fork({\n    name: 'angular',\n    properties: <any>{\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 99 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "onInvoke",
            "complexity": 4,
            "lineCount": 32,
            "parameterCount": 7,
            "snippet": "(\n      delegate: ZoneDelegate,\n      current: Zone,\n      target: Zone,\n      callback: Function,\n      applyThis: any,\n      applyArgs?: any[],\n      source?: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/language-service/testing/src/project.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/localize/schematics/ng-add/index.ts",
        "criticalFunctions": [
          {
            "name": "addTypeScriptConfigTypes",
            "complexity": 20,
            "lineCount": 68,
            "parameterCount": 1,
            "snippet": "function addTypeScriptConfigTypes(projectName: string): Rule {\n  return async (host: Tree) => {\n    const workspace = await readWorkspace(host);\n    const project = workspace.projects.get(projectName);\n    if (!project) {\n      throw new SchematicsException(`Invalid project name '${projectName}'.`);\n    }\n    const tsConfigFiles = new Set<string>();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 20,
            "lineCount": 66,
            "parameterCount": 1,
            "snippet": "async (host: Tree) => {\n    const workspace = await readWorkspace(host);\n    const project = workspace.projects.get(projectName);\n    if (!project) {\n      throw new SchematicsException(`Invalid project name '${projectName}'.`);\n    }\n    const tsConfigFiles = new Set<string>();\n    for (const target of project.targets.values()) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/platform-browser/animations/async/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-browser/animations/async/public_api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/misc/angular-in-memory-web-api/src/backend-service.ts",
        "criticalFunctions": [
          {
            "name": "post",
            "complexity": 11,
            "lineCount": 57,
            "parameterCount": 1,
            "snippet": "protected post({\n    collection,\n    collectionName,\n    headers,\n    id,\n    req,\n    resourceUrl,\n    url,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "handleRequest_",
            "complexity": 9,
            "lineCount": 61,
            "parameterCount": 1,
            "snippet": "protected handleRequest_(req: RequestCore): Observable<any> {\n    const url = req.urlWithParams ? req.urlWithParams : req.url;\n    const parser = this.bind('parseRequestUrl');\n    const parsed: ParsedRequestUrl =\n      (parser && parser(url, this.requestInfoUtils)) || this.parseRequestUrl(url);\n    const collectionName = parsed.collectionName;\n    const collection = this.db[collectionName];\n    const reqInfo: RequestInfo = {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/misc/angular-in-memory-web-api/src/http-client-in-memory-web-api-module.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/misc/angular-in-memory-web-api/src/http-status-codes.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/misc/angular-in-memory-web-api/src/in-memory-web-api-module.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/misc/angular-in-memory-web-api/src/in-memory-web-api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/platform-browser/animations/src/animations.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/platform-browser/testing/src/testing.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/private/testing/matchers/index.ts",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 10,
            "lineCount": 110,
            "parameterCount": 0,
            "snippet": "function () {\n  jasmine.addMatchers({\n    toHaveText: function () {\n      return {\n        compare: function (actual: any, expectedText: string) {\n          const actualText = elementText(actual);\n          return {\n            pass: actualText == expectedText,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 110 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/private/testing/src/browser_utils.ts",
        "criticalFunctions": [
          {
            "name": "stringifyElement",
            "complexity": 9,
            "lineCount": 52,
            "parameterCount": 1,
            "snippet": "export function stringifyElement(el: Element): string {\n  let result = '';\n  if (getDOM().isElementNode(el)) {\n    const tagName = el.tagName.toLowerCase();\n    result += `<${tagName}`;\n    const attributeMap = getAttributeMap(el);\n    const sortedKeys = Array.from(attributeMap.keys()).sort();\n    for (const key of sortedKeys) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-browser/src/browser/meta.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-browser/src/dom/dom_renderer.ts",
        "criticalFunctions": [
          {
            "name": "getOrCreateRenderer",
            "complexity": 4,
            "lineCount": 58,
            "parameterCount": 2,
            "snippet": "private getOrCreateRenderer(element: any, type: RendererType2): Renderer2 {\n    const rendererByCompId = this.rendererByCompId;\n    let renderer = rendererByCompId.get(type.id);\n    if (!renderer) {\n      const doc = this.doc;\n      const ngZone = this.ngZone;\n      const eventManager = this.eventManager;\n      const sharedStylesHost = this.sharedStylesHost;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-browser/src/dom/shared_styles_host.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/platform-server/init/src/bundled-domino.d.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/platform-server/init/src/init.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/platform-browser/src/security/dom_sanitization_service.ts",
        "criticalFunctions": [
          {
            "name": "sanitize",
            "complexity": 19,
            "lineCount": 46,
            "parameterCount": 2,
            "snippet": "override sanitize(ctx: SecurityContext, value: SafeValue | string | null): string | null {\n    if (value == null) return null;\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return value as string;\n      case SecurityContext.HTML:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Html)) {\n          return unwrapSafeValue(value);\n  // ... more code ...",
            "issues": []
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-server/testing/src/testing.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/router/testing/src/testing.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/router/src/directives/router_link.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/src/directives/router_link_active.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/src/directives/router_outlet.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/src/operators/activate_routes.ts",
        "criticalFunctions": [
          {
            "name": "activateRoutes",
            "complexity": 14,
            "lineCount": 74,
            "parameterCount": 3,
            "snippet": "private activateRoutes(\n    futureNode: TreeNode<ActivatedRoute>,\n    currNode: TreeNode<ActivatedRoute>,\n    parentContexts: ChildrenOutletContexts,\n  ): void {\n    const future = futureNode.value;\n    const curr = currNode ? currNode.value : null;\n    advanceActivatedRoute(future);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/router/src/operators/check_guards.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/router/src/statemanager/state_manager.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/service-worker/config/src/generator.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/service-worker/worker/src/app-version.ts",
        "criticalFunctions": [
          {
            "name": "handleFetch",
            "complexity": 9,
            "lineCount": 65,
            "parameterCount": 2,
            "snippet": "async handleFetch(req: Request, event: ExtendableEvent): Promise<Response | null> {\n    const asset = await this.assetGroups.reduce(async (potentialResponse, group) => {\n      const resp = await potentialResponse;\n      if (resp !== null) {\n        return resp;\n      }\n      return group.handleFetch(req, event);\n    }, Promise.resolve<Response | null>(null));\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/service-worker/worker/src/assets.ts",
        "criticalFunctions": [
          {
            "name": "needToRevalidate",
            "complexity": 10,
            "lineCount": 71,
            "parameterCount": 2,
            "snippet": "private async needToRevalidate(req: Request, res: Response): Promise<boolean> {\n    if (res.headers.has('Cache-Control')) {\n      const cacheControl = res.headers.get('Cache-Control')!;\n      const cacheDirectives = cacheControl\n        .split(',')\n        .map((v) => v.trim())\n        .map((v) => v.split('='));\n      cacheDirectives.forEach((v) => (v[0] = v[0].toLowerCase()));\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 71 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "initializeFully",
            "complexity": 10,
            "lineCount": 86,
            "parameterCount": 1,
            "snippet": "override async initializeFully(updateFrom?: UpdateSource): Promise<void> {\n    const cache = await this.cache;\n    await this.urls.reduce(async (previous: Promise<void>, url: string) => {\n      await previous;\n      const req = this.adapter.newRequest(url);\n      let alreadyCached = false;\n      try {\n        alreadyCached = (await cache.match(req, this.config.cacheQueryOptions)) !== undefined;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 86 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "cacheBustedFetchFromNetwork",
            "complexity": 8,
            "lineCount": 79,
            "parameterCount": 1,
            "snippet": "protected async cacheBustedFetchFromNetwork(req: Request): Promise<Response> {\n    const url = this.adapter.normalizeUrl(req.url);\n    if (this.hashes.has(url)) {\n      const canonicalHash = this.hashes.get(url)!;\n      let response = await this.safeFetch(req);\n      let makeCacheBustedRequest = response.ok;\n      if (makeCacheBustedRequest) {\n        const fetchedHash = sha1Binary(await response.clone().arrayBuffer());\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "handleFetch",
            "complexity": 7,
            "lineCount": 56,
            "parameterCount": 2,
            "snippet": "async handleFetch(req: Request, _event: ExtendableEvent): Promise<Response | null> {\n    const url = this.adapter.normalizeUrl(req.url);\n    if (this.urls.indexOf(url) !== -1 || this.patterns.some((pattern) => pattern.test(url))) {\n      const cache = await this.cache;\n      let cachedResponse: Response | undefined;\n      try {\n        cachedResponse = await cache.match(req, this.config.cacheQueryOptions);\n      } catch (error) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "initializeFully",
            "complexity": 7,
            "lineCount": 59,
            "parameterCount": 1,
            "snippet": "override async initializeFully(updateFrom?: UpdateSource): Promise<void> {\n    if (updateFrom === undefined) {\n      return;\n    }\n    const cache = await this.cache;\n    await this.urls.reduce(async (previous: Promise<void>, url: string) => {\n      await previous;\n      const req = this.adapter.newRequest(url);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/service-worker/worker/src/data.ts",
        "criticalFunctions": [
          {
            "name": "remove",
            "complexity": 5,
            "lineCount": 54,
            "parameterCount": 1,
            "snippet": "remove(url: string): boolean {\n    const node = this.state.map[url];\n    if (node === undefined) {\n      return false;\n    }\n    if (this.state.head === url) {\n      if (node.next === null) {\n        this.state.head = null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/service-worker/worker/src/driver.ts",
        "criticalFunctions": [
          {
            "name": "assignVersion",
            "complexity": 22,
            "lineCount": 125,
            "parameterCount": 1,
            "snippet": "private async assignVersion(event: FetchEvent): Promise<AppVersion | null> {\n    const isWorkerScriptRequest =\n      event.request.destination === 'worker' && event.resultingClientId && event.clientId;\n    const clientId = isWorkerScriptRequest\n      ? event.clientId\n      : event.resultingClientId || event.clientId;\n    if (clientId) {\n      if (this.clientVersionMap.has(clientId)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 125 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "handleFetch",
            "complexity": 11,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "private async handleFetch(event: FetchEvent): Promise<Response> {\n    try {\n      await this.ensureInitialized(event);\n    } catch {\n      return this.safeFetch(event.request);\n    }\n    if (event.request.mode === 'navigate' && !this.scheduledNavUpdateCheck) {\n      this.scheduledNavUpdateCheck = true;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "onFetch",
            "complexity": 10,
            "lineCount": 61,
            "parameterCount": 1,
            "snippet": "private onFetch(event: FetchEvent): void {\n    const req = event.request;\n    const scopeUrl = this.scope.registration.scope;\n    const requestUrlObj = this.adapter.parseUrl(req.url, scopeUrl);\n    if (req.headers.has('ngsw-bypass') || /[?&]ngsw-bypass(?:[=&]|$)/i.test(requestUrlObj.search)) {\n      return;\n    }\n    if (requestUrlObj.path === this.ngswStatePath) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "handleClick",
            "complexity": 9,
            "lineCount": 52,
            "parameterCount": 2,
            "snippet": "private async handleClick(notification: Notification, action?: string): Promise<void> {\n    notification.close();\n    const options: {-readonly [K in keyof Notification]?: Notification[K]} = {};\n    NOTIFICATION_OPTION_NAMES.filter((name) => name in notification).forEach(\n      (name) => (options[name] = notification[name]),\n    );\n    const notificationAction = action === '' || action === undefined ? 'default' : action;\n    const onActionClick = notification?.data?.onActionClick?.[notificationAction];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "initialize",
            "complexity": 8,
            "lineCount": 133,
            "parameterCount": 0,
            "snippet": "private async initialize(): Promise<void> {\n    const table = await this.controlTable;\n    let manifests: ManifestMap, assignments: ClientAssignments, latest: LatestEntry;\n    try {\n      [manifests, assignments, latest] = await Promise.all([\n        table.read<ManifestMap>('manifests'),\n        table.read<ClientAssignments>('assignments'),\n        table.read<LatestEntry>('latest'),\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 133 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/service-worker/worker/src/sha1.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/service-worker/worker/testing/cache.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/service-worker/worker/testing/fetch.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/service-worker/worker/testing/mock.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/service-worker/worker/testing/scope.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "mock-heavy"
          ]
        }
      },
      {
        "file": "packages/upgrade/static/src/upgrade_component.ts",
        "criticalFunctions": [
          {
            "name": "ngOnInit",
            "complexity": 16,
            "lineCount": 71,
            "parameterCount": 0,
            "snippet": "ngOnInit() {\n    const attachChildNodes: ɵangular1.ILinkFn | undefined = this.helper.prepareTransclusion();\n    const linkFn = this.helper.compileTemplate();\n    const controllerType = this.directive.controller;\n    const bindToController = this.directive.bindToController;\n    let controllerInstance = controllerType\n      ? this.helper.buildController(controllerType, this.$componentScope)\n      : undefined;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 71 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/animations/browser/src/dsl/animation_ast_builder.ts",
        "criticalFunctions": [
          {
            "name": "visitKeyframes",
            "complexity": 14,
            "lineCount": 67,
            "parameterCount": 2,
            "snippet": "visitKeyframes(\n    metadata: AnimationKeyframesSequenceMetadata,\n    context: AnimationAstBuilderContext,\n  ): KeyframesAst {\n    const ast: KeyframesAst = {type: AnimationMetadataType.Keyframes, styles: [], options: null};\n    if (!context.currentAnimateTimings) {\n      context.errors.push(invalidKeyframes());\n      return ast;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_validateStyleAst",
            "complexity": 13,
            "lineCount": 59,
            "parameterCount": 2,
            "snippet": "private _validateStyleAst(ast: StyleAst, context: AnimationAstBuilderContext): void {\n    const timings = context.currentAnimateTimings;\n    let endTime = context.currentTime;\n    let startTime = context.currentTime;\n    if (timings && startTime > 0) {\n      startTime -= timings.duration + timings.delay;\n    }\n    ast.styles.forEach((tuple) => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/animations/browser/src/dsl/animation_timeline_builder.ts",
        "criticalFunctions": [
          {
            "name": "visitQuery",
            "complexity": 11,
            "lineCount": 61,
            "parameterCount": 2,
            "snippet": "visitQuery(ast: QueryAst, context: AnimationTimelineContext) {\n    const startTime = context.currentTimeline.currentTime;\n    const options = (ast.options || {}) as AnimationQueryOptions;\n    const delay = options.delay ? resolveTimingValue(options.delay) : 0;\n    if (\n      delay &&\n      (context.previousNode.type === AnimationMetadataType.Style ||\n        (startTime == 0 && context.currentTimeline.hasCurrentStyleProperties()))\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "buildKeyframes",
            "complexity": 10,
            "lineCount": 53,
            "parameterCount": 10,
            "snippet": "buildKeyframes(\n    driver: AnimationDriver,\n    rootElement: any,\n    ast: Ast<AnimationMetadataType>,\n    enterClassName: string,\n    leaveClassName: string,\n    startingStyles: ɵStyleDataMap,\n    finalStyles: ɵStyleDataMap,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "10 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "buildKeyframes",
            "complexity": 4,
            "lineCount": 61,
            "parameterCount": 0,
            "snippet": "override buildKeyframes(): AnimationTimelineInstruction {\n    let keyframes = this.keyframes;\n    let {delay, duration, easing} = this.timings;\n    if (this._stretchStartingKeyframe && delay) {\n      const newKeyframes: Array<ɵStyleDataMap> = [];\n      const totalTime = duration + delay;\n      const startingGap = delay / totalTime;\n      const newFirstKeyframe = new Map(keyframes[0]);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "buildAnimationTimelines",
            "complexity": 1,
            "lineCount": 25,
            "parameterCount": 10,
            "snippet": "export function buildAnimationTimelines(\n  driver: AnimationDriver,\n  rootElement: any,\n  ast: Ast<AnimationMetadataType>,\n  enterClassName: string,\n  leaveClassName: string,\n  startingStyles: ɵStyleDataMap = new Map(),\n  finalStyles: ɵStyleDataMap = new Map(),\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "10 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/animations/browser/src/dsl/animation_transition_expr.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/animations/browser/src/dsl/animation_transition_factory.ts",
        "criticalFunctions": [
          {
            "name": "build",
            "complexity": 12,
            "lineCount": 100,
            "parameterCount": 10,
            "snippet": "build(\n    driver: AnimationDriver,\n    element: any,\n    currentState: any,\n    nextState: any,\n    enterClassName: string,\n    leaveClassName: string,\n    currentOptions?: AnimationOptions,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 100 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "10 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/lib/browser/browser.ts",
        "criticalFunctions": [
          {
            "name": "patchBrowser",
            "complexity": 40,
            "lineCount": 308,
            "parameterCount": 1,
            "snippet": "export function patchBrowser(Zone: ZoneType): void {\n  Zone.__load_patch('legacy', (global: any) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n      legacyPatch();\n    }\n  });\n  Zone.__load_patch('timers', (global: any) => {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 40 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 308 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 32,
            "lineCount": 202,
            "parameterCount": 2,
            "snippet": "(global: any, Zone: ZoneType) => {\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 202 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "patchXHR",
            "complexity": 32,
            "lineCount": 183,
            "parameterCount": 1,
            "snippet": "function patchXHR(window: any) {\n      const XMLHttpRequest = window['XMLHttpRequest'];\n      if (!XMLHttpRequest) {\n        return;\n      }\n      const XMLHttpRequestPrototype: any = XMLHttpRequest.prototype;\n      function findPendingTask(target: any) {\n        return target[XHR_TASK];\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 183 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "scheduleTask",
            "complexity": 17,
            "lineCount": 63,
            "parameterCount": 1,
            "snippet": "function scheduleTask(task: Task) {\n        const data = <XHROptions>task.data;\n        const target = data.target;\n        target[XHR_SCHEDULED] = false;\n        target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n        const listener = target[XHR_LISTENER];\n        if (!oriAddListener) {\n          oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 63 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/lib/browser/define-property.ts",
        "criticalFunctions": [
          {
            "name": "propertyPatch",
            "complexity": 9,
            "lineCount": 61,
            "parameterCount": 0,
            "snippet": "export function propertyPatch() {\n  zoneSymbol = Zone.__symbol__;\n  _defineProperty = (Object as any)[zoneSymbol('defineProperty')] = Object.defineProperty;\n  _getOwnPropertyDescriptor = (Object as any)[zoneSymbol('getOwnPropertyDescriptor')] =\n    Object.getOwnPropertyDescriptor;\n  _create = Object.create;\n  unconfigurablesKey = zoneSymbol('unconfigurables');\n  Object.defineProperty = function (obj: any, prop: string, desc: any) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/zone.js/lib/browser/event-target-legacy.ts",
        "criticalFunctions": [
          {
            "name": "eventTargetLegacyPatch",
            "complexity": 21,
            "lineCount": 121,
            "parameterCount": 2,
            "snippet": "export function eventTargetLegacyPatch(_global: any, api: _ZonePrivate) {\n  const {eventNames, globalSources, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX} =\n    api.getGlobalObjects()!;\n  const WTF_ISSUE_555 =\n    'Anchor,Area,Audio,BR,Base,BaseFont,Body,Button,Canvas,Content,DList,Directory,Div,Embed,FieldSet,Font,Form,Frame,FrameSet,HR,Head,Heading,Html,IFrame,Image,Input,Keygen,LI,Label,Legend,Link,Map,Marquee,Media,Menu,Meta,Meter,Mod,OList,Object,OptGroup,Option,Output,Paragraph,Pre,Progress,Quote,Script,Select,Source,Span,Style,TableCaption,TableCell,TableCol,Table,TableRow,TableSection,TextArea,Title,Track,UList,Unknown,Video';\n  const NO_EVENT_TARGET =\n    'ApplicationCache,EventSource,FileReader,InputMethodContext,MediaController,MessagePort,Node,Performance,SVGElementInstance,SharedWorker,TextTrack,TextTrackCue,TextTrackList,WebKitNamedFlow,Window,Worker,WorkerGlobalScope,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload,IDBRequest,IDBOpenDBRequest,IDBDatabase,IDBTransaction,IDBCursor,DBIndex,WebSocket'.split(\n      ',',\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 121 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/lib/browser/message-port.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/zone.js/lib/browser/property-descriptor-legacy.ts",
        "criticalFunctions": [
          {
            "name": "canPatchViaPropertyDescriptor",
            "complexity": 11,
            "lineCount": 80,
            "parameterCount": 2,
            "snippet": "function canPatchViaPropertyDescriptor(api: _ZonePrivate, _global: any) {\n  const {isBrowser, isMix} = api.getGlobalObjects()!;\n  if (\n    (isBrowser || isMix) &&\n    !api.ObjectGetOwnPropertyDescriptor(HTMLElement.prototype, 'onclick') &&\n    typeof Element !== 'undefined'\n  ) {\n    const desc = api.ObjectGetOwnPropertyDescriptor(Element.prototype, 'onclick');\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/zone.js/lib/browser/property-descriptor.ts",
        "criticalFunctions": [
          {
            "name": "propertyDescriptorPatch",
            "complexity": 10,
            "lineCount": 60,
            "parameterCount": 2,
            "snippet": "export function propertyDescriptorPatch(api: _ZonePrivate, _global: any) {\n  if (isNode && !isMix) {\n    return;\n  }\n  if ((Zone as any)[api.symbol('patchEvents')]) {\n    return;\n  }\n  const ignoreProperties: IgnoreProperty[] = _global['__Zone_ignore_on_properties'];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 60 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/zone.js/lib/browser/rollup-legacy-test-main.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/lib/browser/shadydom.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/zone.js/lib/browser/webapis-notification.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/zone.js/lib/browser/webapis-resize-observer.ts",
        "criticalFunctions": [
          {
            "name": "patchResizeObserver",
            "complexity": 18,
            "lineCount": 101,
            "parameterCount": 1,
            "snippet": "export function patchResizeObserver(Zone: ZoneType): void {\n  Zone.__load_patch('ResizeObserver', (global: any, Zone: any, api: _ZonePrivate) => {\n    const ResizeObserver = global['ResizeObserver'];\n    if (!ResizeObserver) {\n      return;\n    }\n    const resizeObserverSymbol = api.symbol('ResizeObserver');\n    api.patchMethod(global, 'ResizeObserver', (delegate: Function) => (self: any, args: any[]) => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 101 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 18,
            "lineCount": 99,
            "parameterCount": 3,
            "snippet": "(global: any, Zone: any, api: _ZonePrivate) => {\n    const ResizeObserver = global['ResizeObserver'];\n    if (!ResizeObserver) {\n      return;\n    }\n    const resizeObserverSymbol = api.symbol('ResizeObserver');\n    api.patchMethod(global, 'ResizeObserver', (delegate: Function) => (self: any, args: any[]) => {\n      const callback = args.length > 0 ? args[0] : null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 99 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/zone.js/lib/common/error-rewrite.ts",
        "criticalFunctions": [
          {
            "name": "patchError",
            "complexity": 52,
            "lineCount": 407,
            "parameterCount": 1,
            "snippet": "export function patchError(Zone: ZoneType): void {\n  Zone.__load_patch('Error', (global: any, Zone: ZoneType, api: _ZonePrivate) => {\n    /*\n     * This code patches Error so that:\n     *   - It ignores un-needed stack frames.\n     *   - It Shows the associated Zone for reach frame.\n     */\n    const enum FrameType {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 52 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 407 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 52,
            "lineCount": 405,
            "parameterCount": 3,
            "snippet": "(global: any, Zone: ZoneType, api: _ZonePrivate) => {\n    /*\n     * This code patches Error so that:\n     *   - It ignores un-needed stack frames.\n     *   - It Shows the associated Zone for reach frame.\n     */\n    const enum FrameType {\n      zoneJsInternal,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 52 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 405 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "onHandleError",
            "complexity": 15,
            "lineCount": 61,
            "parameterCount": 4,
            "snippet": "function (\n        parentZD: ZoneDelegate,\n        current: Zone,\n        target: Zone,\n        error: any,\n      ): boolean {\n        if (error.originalStack && Error === ZoneAwareError) {\n          let frames = error.originalStack.split(/\\n/);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "onInvoke",
            "complexity": 1,
            "lineCount": 3,
            "parameterCount": 7,
            "snippet": "function (delegate, curr, target, callback, applyThis, applyArgs, source) {\n        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n      }",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/lib/common/events.ts",
        "criticalFunctions": [
          {
            "name": "patchEventTarget",
            "complexity": 166,
            "lineCount": 715,
            "parameterCount": 4,
            "snippet": "export function patchEventTarget(\n  _global: any,\n  api: _ZonePrivate,\n  apis: any[],\n  patchOptions?: PatchEventTargetOptions,\n) {\n  const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n  const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 166 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 715 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "patchEventTargetMethods",
            "complexity": 135,
            "lineCount": 598,
            "parameterCount": 2,
            "snippet": "function patchEventTargetMethods(obj: any, patchOptions?: PatchEventTargetOptions) {\n    if (!obj) {\n      return false;\n    }\n    let useGlobalCallback = true;\n    if (patchOptions && patchOptions.useG !== undefined) {\n      useGlobalCallback = patchOptions.useG;\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 135 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 598 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "makeAddListener",
            "complexity": 43,
            "lineCount": 195,
            "parameterCount": 6,
            "snippet": "function (\n      nativeListener: any,\n      addSource: string,\n      customScheduleFn: any,\n      customCancelFn: any,\n      returnTarget = false,\n      prepend = false,\n    ) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 43 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 195 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 43,
            "lineCount": 186,
            "parameterCount": 1,
            "snippet": "function (this: unknown) {\n        const target = this || _global;\n        let eventName = arguments[0];\n        if (patchOptions && patchOptions.transferEventName) {\n          eventName = patchOptions.transferEventName(eventName);\n        }\n        let delegate = arguments[1];\n        if (!delegate) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 43 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 186 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 19,
            "lineCount": 74,
            "parameterCount": 0,
            "snippet": "function () {\n      const target = this || _global;\n      let eventName = arguments[0];\n      if (patchOptions && patchOptions.transferEventName) {\n        eventName = patchOptions.transferEventName(eventName);\n      }\n      const options = arguments[2];\n      const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/lib/common/promise.ts",
        "criticalFunctions": [
          {
            "name": "patchPromise",
            "complexity": 100,
            "lineCount": 626,
            "parameterCount": 1,
            "snippet": "export function patchPromise(Zone: ZoneType): void {\n  Zone.__load_patch('ZoneAwarePromise', (global: any, Zone: ZoneType, api: _ZonePrivate) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj: any) {\n      if (obj && obj.toString === Object.prototype.toString) {\n        const className = obj.constructor && obj.constructor.name;\n        return (className ? className : '') + ': ' + JSON.stringify(obj);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 100 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 626 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 100,
            "lineCount": 624,
            "parameterCount": 3,
            "snippet": "(global: any, Zone: ZoneType, api: _ZonePrivate) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj: any) {\n      if (obj && obj.toString === Object.prototype.toString) {\n        const className = obj.constructor && obj.constructor.name;\n        return (className ? className : '') + ': ' + JSON.stringify(obj);\n      }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 100 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 624 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "resolvePromise",
            "complexity": 29,
            "lineCount": 113,
            "parameterCount": 3,
            "snippet": "function resolvePromise(\n      promise: ZoneAwarePromise<any>,\n      state: boolean,\n      value: any,\n    ): ZoneAwarePromise<any> {\n      const onceWrapper = once();\n      if (promise === value) {\n        throw new TypeError(TYPE_ERROR);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 29 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 113 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "allWithCallback",
            "complexity": 9,
            "lineCount": 63,
            "parameterCount": 2,
            "snippet": "static allWithCallback<R>(\n        values: any,\n        callback?: {\n          thenCallback: (value: any) => any;\n          errorCallback: (err: any) => any;\n        },\n      ): Promise<R> {\n        let resolve: (v: any) => void;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 63 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/lib/common/queue-microtask.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/zone.js/lib/common/timers.ts",
        "criticalFunctions": [
          {
            "name": "patchTimer",
            "complexity": 21,
            "lineCount": 158,
            "parameterCount": 4,
            "snippet": "export function patchTimer(window: any, setName: string, cancelName: string, nameSuffix: string) {\n  let setNative: Function | null = null;\n  let clearNative: Function | null = null;\n  setName += nameSuffix;\n  cancelName += nameSuffix;\n  const tasksByHandleId: {[id: number]: Task} = {};\n  function scheduleTask(task: Task) {\n    const data = <TimerOptions>task.data;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 158 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 16,
            "lineCount": 83,
            "parameterCount": 1,
            "snippet": "(delegate: Function) =>\n      function (self: any, args: any[]) {\n        if (isFunction(args[0])) {\n          const options: TimerOptions = {\n            isRefreshable: false,\n            isPeriodic: nameSuffix === 'Interval',\n            delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n            args: args,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 83 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 16,
            "lineCount": 82,
            "parameterCount": 2,
            "snippet": "function (self: any, args: any[]) {\n        if (isFunction(args[0])) {\n          const options: TimerOptions = {\n            isRefreshable: false,\n            isPeriodic: nameSuffix === 'Interval',\n            delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n            args: args,\n          };\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 82 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/lib/common/utils.ts",
        "criticalFunctions": [
          {
            "name": "patchProperty",
            "complexity": 22,
            "lineCount": 101,
            "parameterCount": 3,
            "snippet": "export function patchProperty(obj: any, prop: string, prototype?: any) {\n  let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n  if (!desc && prototype) {\n    const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n    if (prototypeDesc) {\n      desc = {enumerable: true, configurable: true};\n    }\n  }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 101 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "wrapFn",
            "complexity": 17,
            "lineCount": 59,
            "parameterCount": 2,
            "snippet": "function (this: unknown, event: Event) {\n  event = event || _global.event;\n  if (!event) {\n    return;\n  }\n  let eventNameSymbol = zoneSymbolEventNames[event.type];\n  if (!eventNameSymbol) {\n    eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "patchClass",
            "complexity": 15,
            "lineCount": 70,
            "parameterCount": 1,
            "snippet": "export function patchClass(className: string) {\n  const OriginalClass = _global[className];\n  if (!OriginalClass) return;\n  _global[zoneSymbol(className)] = OriginalClass;\n  _global[className] = function () {\n    const a = bindArguments(<any>arguments, className);\n    switch (a.length) {\n      case 0:\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 70 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/animations/browser/src/render/renderer.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/animations/browser/src/render/shared.ts",
        "criticalFunctions": [
          {
            "name": "normalizeKeyframes",
            "complexity": 8,
            "lineCount": 52,
            "parameterCount": 4,
            "snippet": "export function normalizeKeyframes(\n  normalizer: AnimationStyleNormalizer,\n  keyframes: Array<ɵStyleDataMap>,\n  preStyles: ɵStyleDataMap = new Map(),\n  postStyles: ɵStyleDataMap = new Map(),\n): Array<ɵStyleDataMap> {\n  const errors: Error[] = [];\n  const normalizedKeyframes: Array<ɵStyleDataMap> = [];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "makeAnimationEvent",
            "complexity": 1,
            "lineCount": 11,
            "parameterCount": 7,
            "snippet": "export function makeAnimationEvent(\n  element: any,\n  triggerName: string,\n  fromState: string,\n  toState: string,\n  phaseName: string = '',\n  totalTime: number = 0,\n  disabled?: boolean,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/animations/browser/src/render/special_cased_styles.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/animations/browser/src/render/timeline_animation_engine.ts",
        "criticalFunctions": [
          {
            "name": "create",
            "complexity": 3,
            "lineCount": 54,
            "parameterCount": 3,
            "snippet": "create(id: string, element: any, options: AnimationOptions = {}): AnimationPlayer {\n    const errors: Error[] = [];\n    const ast = this._animations.get(id);\n    let instructions: AnimationTimelineInstruction[];\n    const autoStylesMap = new Map<any, ɵStyleDataMap>();\n    if (ast) {\n      instructions = buildAnimationTimelines(\n        this._driver,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/animations/browser/src/render/transition_animation_engine.ts",
        "criticalFunctions": [
          {
            "name": "_flushAnimations",
            "complexity": 48,
            "lineCount": 431,
            "parameterCount": 2,
            "snippet": "private _flushAnimations(\n    cleanupFns: Function[],\n    microtaskId: number,\n  ): TransitionAnimationPlayer[] {\n    const subTimelines = new ElementInstructionMap();\n    const skippedPlayers: TransitionAnimationPlayer[] = [];\n    const skippedPlayersMap = new Map<any, AnimationPlayer[]>();\n    const queuedInstructions: QueuedTransition[] = [];\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 48 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 431 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "trigger",
            "complexity": 19,
            "lineCount": 125,
            "parameterCount": 4,
            "snippet": "trigger(\n    element: any,\n    triggerName: string,\n    value: any,\n    defaultToFallback: boolean = true,\n  ): TransitionAnimationPlayer | undefined {\n    const trigger = this._getTrigger(triggerName);\n    const player = new TransitionAnimationPlayer(this.id, triggerName, element);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 125 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 17,
            "lineCount": 109,
            "parameterCount": 1,
            "snippet": "(entry) => {\n        const player = entry.player;\n        const element = entry.element;\n        allPlayers.push(player);\n        if (this.collectedEnterElements.length) {\n          const details = element[REMOVAL_FLAG] as ElementAnimationState;\n          if (details && details.setForMove) {\n            if (\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 109 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "removeNode",
            "complexity": 12,
            "lineCount": 56,
            "parameterCount": 2,
            "snippet": "removeNode(element: any, context: any): void {\n    const engine = this._engine;\n    if (element.childElementCount) {\n      this._signalRemovalForInnerTriggers(element, context);\n    }\n    if (this.triggerLeaveAnimation(element, context, true)) return;\n    let containsPotentialParentTransition = false;\n    if (engine.totalAnimations) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "flush",
            "complexity": 12,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "flush(microtaskId: number = -1) {\n    let players: AnimationPlayer[] = [];\n    if (this.newHostElements.size) {\n      this.newHostElements.forEach((ns, element) => this._balanceNamespaceList(ns, element));\n      this.newHostElements.clear();\n    }\n    if (this.totalAnimations && this.collectedEnterElements.length) {\n      for (let i = 0; i < this.collectedEnterElements.length; i++) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/lib/jest/jest.ts",
        "criticalFunctions": [
          {
            "name": "patchJest",
            "complexity": 31,
            "lineCount": 302,
            "parameterCount": 1,
            "snippet": "export function patchJest(Zone: ZoneType): void {\n  Zone.__load_patch('jest', (context: any, Zone: ZoneType, api: _ZonePrivate) => {\n    if (typeof jest === 'undefined' || jest['__zone_patch__']) {\n      return;\n    }\n    (Zone as any)[api.symbol('ignoreConsoleErrorUncaughtError')] = true;\n    jest['__zone_patch__'] = true;\n    const ProxyZoneSpec = (Zone as any)['ProxyZoneSpec'];\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 31 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 302 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 31,
            "lineCount": 300,
            "parameterCount": 3,
            "snippet": "(context: any, Zone: ZoneType, api: _ZonePrivate) => {\n    if (typeof jest === 'undefined' || jest['__zone_patch__']) {\n      return;\n    }\n    (Zone as any)[api.symbol('ignoreConsoleErrorUncaughtError')] = true;\n    jest['__zone_patch__'] = true;\n    const ProxyZoneSpec = (Zone as any)['ProxyZoneSpec'];\n    const SyncTestZoneSpec = (Zone as any)['SyncTestZoneSpec'];\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 31 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 300 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "patchJestObject",
            "complexity": 19,
            "lineCount": 160,
            "parameterCount": 2,
            "snippet": "function patchJestObject(Timer: any, isModern = false) {\n      function isPatchingFakeTimer() {\n        const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n        return !!fakeAsyncZoneSpec;\n      }\n      function isInTestFunc() {\n        const proxyZoneSpec = Zone.current.get('ProxyZoneSpec');\n        return proxyZoneSpec && proxyZoneSpec.isTestFunc;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 160 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/lib/jasmine/jasmine.ts",
        "criticalFunctions": [
          {
            "name": "patchJasmine",
            "complexity": 58,
            "lineCount": 376,
            "parameterCount": 1,
            "snippet": "export function patchJasmine(Zone: ZoneType): void {\n  Zone.__load_patch('jasmine', (global: any, Zone: ZoneType, api: _ZonePrivate) => {\n    const __extends = function (d: any, b: any) {\n      for (const p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __(this: Object) {\n        this.constructor = d;\n      }\n      d.prototype =\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 58 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 376 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 58,
            "lineCount": 374,
            "parameterCount": 3,
            "snippet": "(global: any, Zone: ZoneType, api: _ZonePrivate) => {\n    const __extends = function (d: any, b: any) {\n      for (const p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      function __(this: Object) {\n        this.constructor = d;\n      }\n      d.prototype =\n        b === null ? Object.create(b) : ((__.prototype = b.prototype), new (__ as any)());\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 58 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 374 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 18,
            "lineCount": 102,
            "parameterCount": 1,
            "snippet": "function (_super) {\n      __extends(ZoneQueueRunner, _super);\n      function ZoneQueueRunner(this: QueueRunner, attrs: QueueRunnerAttrs) {\n        if (attrs.onComplete) {\n          attrs.onComplete = ((fn) => () => {\n            this.testProxyZone = null;\n            this.testProxyZoneSpec = null;\n            ambientZone.scheduleMicroTask('jasmine.onComplete', fn);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 102 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ZoneQueueRunner",
            "complexity": 14,
            "lineCount": 60,
            "parameterCount": 2,
            "snippet": "function ZoneQueueRunner(this: QueueRunner, attrs: QueueRunnerAttrs) {\n        if (attrs.onComplete) {\n          attrs.onComplete = ((fn) => () => {\n            this.testProxyZone = null;\n            this.testProxyZoneSpec = null;\n            ambientZone.scheduleMicroTask('jasmine.onComplete', fn);\n          })(attrs.onComplete);\n        }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 60 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/lib/node/node.ts",
        "criticalFunctions": [
          {
            "name": "patchNode",
            "complexity": 16,
            "lineCount": 153,
            "parameterCount": 1,
            "snippet": "export function patchNode(Zone: ZoneType): void {\n  patchNodeUtil(Zone);\n  patchEvents(Zone);\n  patchFs(Zone);\n  Zone.__load_patch('node_timers', (global: any, Zone: ZoneType) => {\n    let globalUseTimeoutFromTimer = false;\n    try {\n      const timers = require('timers');\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 153 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 6,
            "lineCount": 52,
            "parameterCount": 2,
            "snippet": "(global: any, Zone: ZoneType) => {\n    let globalUseTimeoutFromTimer = false;\n    try {\n      const timers = require('timers');\n      let globalEqualTimersTimeout = global.setTimeout === timers.setTimeout;\n      if (!globalEqualTimersTimeout && !isMix) {\n        const originSetTimeout = timers.setTimeout;\n        timers.setTimeout = function () {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/zone.js/lib/node/rollup-test-main.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/lib/rxjs/rxjs.ts",
        "criticalFunctions": [
          {
            "name": "patchRxJs",
            "complexity": 26,
            "lineCount": 199,
            "parameterCount": 1,
            "snippet": "export function patchRxJs(Zone: ZoneType): void {\n  (Zone as any).__load_patch('rxjs', (global: any, Zone: ZoneType, api: _ZonePrivate) => {\n    const symbol: (symbolString: string) => string = (Zone as any).__symbol__;\n    const nextSource = 'rxjs.Subscriber.next';\n    const errorSource = 'rxjs.Subscriber.error';\n    const completeSource = 'rxjs.Subscriber.complete';\n    const ObjectDefineProperties = Object.defineProperties;\n    const patchObservable = function () {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 199 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 26,
            "lineCount": 197,
            "parameterCount": 3,
            "snippet": "(global: any, Zone: ZoneType, api: _ZonePrivate) => {\n    const symbol: (symbolString: string) => string = (Zone as any).__symbol__;\n    const nextSource = 'rxjs.Subscriber.next';\n    const errorSource = 'rxjs.Subscriber.error';\n    const completeSource = 'rxjs.Subscriber.complete';\n    const ObjectDefineProperties = Object.defineProperties;\n    const patchObservable = function () {\n      const ObservablePrototype: any = Observable.prototype;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 197 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "patchObservable",
            "complexity": 11,
            "lineCount": 72,
            "parameterCount": 0,
            "snippet": "function () {\n      const ObservablePrototype: any = Observable.prototype;\n      const _symbolSubscribe = symbol('_subscribe');\n      const _subscribe = (ObservablePrototype[_symbolSubscribe] = ObservablePrototype._subscribe);\n      ObjectDefineProperties(Observable.prototype, {\n        _zone: {value: null, writable: true, configurable: true},\n        _zoneSource: {value: null, writable: true, configurable: true},\n        _zoneSubscribe: {value: null, writable: true, configurable: true},\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "patchSubscriber",
            "complexity": 7,
            "lineCount": 57,
            "parameterCount": 0,
            "snippet": "function () {\n      const next = Subscriber.prototype.next;\n      const error = Subscriber.prototype.error;\n      const complete = Subscriber.prototype.complete;\n      Object.defineProperty(Subscriber.prototype, 'destination', {\n        configurable: true,\n        get: function (this: Subscriber<any>) {\n          return (this as any)._zoneDestination;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/http/testing/src/backend.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/http/testing/src/request.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/lib/zone-spec/async-test.ts",
        "criticalFunctions": [
          {
            "name": "patchAsyncTest",
            "complexity": 8,
            "lineCount": 109,
            "parameterCount": 1,
            "snippet": "export function patchAsyncTest(Zone: ZoneType): void {\n  (Zone as any)['AsyncTestZoneSpec'] = AsyncTestZoneSpec;\n  Zone.__load_patch('asynctest', (global: any, Zone: ZoneType, api: _ZonePrivate) => {\n    /**\n     * Wraps a test function in an asynchronous test zone. The test will automatically\n     * complete when all asynchronous calls within this zone are done.\n     */\n    (Zone as any)[api.symbol('asyncTest')] = function asyncTest(fn: Function): (done: any) => any {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 109 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 8,
            "lineCount": 103,
            "parameterCount": 3,
            "snippet": "(global: any, Zone: ZoneType, api: _ZonePrivate) => {\n    /**\n     * Wraps a test function in an asynchronous test zone. The test will automatically\n     * complete when all asynchronous calls within this zone are done.\n     */\n    (Zone as any)[api.symbol('asyncTest')] = function asyncTest(fn: Function): (done: any) => any {\n      if (global.jasmine) {\n        return function (this: unknown, done: any) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 103 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "runInTestZone",
            "complexity": 5,
            "lineCount": 63,
            "parameterCount": 4,
            "snippet": "function runInTestZone(\n      fn: Function,\n      context: any,\n      finishCallback: Function,\n      failCallback: Function,\n    ) {\n      const currentZone = Zone.current;\n      const AsyncTestZoneSpec = (Zone as any)['AsyncTestZoneSpec'];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 63 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "onInvoke",
            "complexity": 4,
            "lineCount": 31,
            "parameterCount": 7,
            "snippet": "onInvoke(\n    parentZoneDelegate: ZoneDelegate,\n    currentZone: Zone,\n    targetZone: Zone,\n    delegate: Function,\n    applyThis: any,\n    applyArgs?: any[],\n    source?: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/lib/zone-spec/fake-async-test.ts",
        "criticalFunctions": [
          {
            "name": "onScheduleTask",
            "complexity": 22,
            "lineCount": 87,
            "parameterCount": 4,
            "snippet": "onScheduleTask(delegate: ZoneDelegate, current: Zone, target: Zone, task: Task): Task {\n    switch (task.type) {\n      case 'microTask':\n        let args = task.data && (task.data as any).args;\n        let additionalArgs: any[] | undefined;\n        if (args) {\n          let callbackIndex = (task.data as any).cbIdx;\n          if (typeof args.length === 'number' && args.length > callbackIndex + 1) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "tick",
            "complexity": 15,
            "lineCount": 72,
            "parameterCount": 3,
            "snippet": "tick(\n    millis: number = 0,\n    doTick?: (elapsed: number) => void,\n    tickOptions?: {\n      processNewMacroTasksSynchronously: boolean;\n    },\n  ): void {\n    let finalTime = this._currentTickTime + millis;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "fakeAsync",
            "complexity": 10,
            "lineCount": 63,
            "parameterCount": 2,
            "snippet": "export function fakeAsync(fn: Function, options: {flush?: boolean} = {}): (...args: any[]) => any {\n  const {flush = true} = options;\n  const fakeAsyncFn: any = function (this: unknown, ...args: any[]) {\n    const ProxyZoneSpec = getProxyZoneSpec();\n    if (!ProxyZoneSpec) {\n      throw new Error(\n        'ProxyZoneSpec is needed for the async() test helper but could not be found. ' +\n          'Please make sure that your environment includes zone.js/plugins/proxy',\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 63 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "fakeAsyncFn",
            "complexity": 10,
            "lineCount": 57,
            "parameterCount": 2,
            "snippet": "function (this: unknown, ...args: any[]) {\n    const ProxyZoneSpec = getProxyZoneSpec();\n    if (!ProxyZoneSpec) {\n      throw new Error(\n        'ProxyZoneSpec is needed for the async() test helper but could not be found. ' +\n          'Please make sure that your environment includes zone.js/plugins/proxy',\n      );\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "onInvoke",
            "complexity": 2,
            "lineCount": 18,
            "parameterCount": 7,
            "snippet": "onInvoke(\n    delegate: ZoneDelegate,\n    current: Zone,\n    target: Zone,\n    callback: Function,\n    applyThis: any,\n    applyArgs?: any[],\n    source?: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/lib/zone-spec/long-stack-trace.ts",
        "criticalFunctions": [
          {
            "name": "patchLongStackTrace",
            "complexity": 32,
            "lineCount": 189,
            "parameterCount": 1,
            "snippet": "export function patchLongStackTrace(Zone: ZoneType): void {\n  const NEWLINE = '\\n';\n  const IGNORE_FRAMES: {[k: string]: true} = {};\n  const creationTrace = '__creationTrace__';\n  const ERROR_TAG = 'STACKTRACE TRACKING';\n  const SEP_TAG = '__SEP_TAG__';\n  let sepTemplate: string = SEP_TAG + '@[native]';\n  class LongStackTrace {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 189 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/lib/zone-spec/proxy.ts",
        "criticalFunctions": [
          {
            "name": "onInvoke",
            "complexity": 3,
            "lineCount": 24,
            "parameterCount": 7,
            "snippet": "onInvoke(\n    parentZoneDelegate: ZoneDelegate,\n    currentZone: Zone,\n    targetZone: Zone,\n    delegate: Function,\n    applyThis: any,\n    applyArgs?: any[],\n    source?: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/zone.js/lib/zone-spec/wtf.ts",
        "criticalFunctions": [
          {
            "name": "patchWtf",
            "complexity": 21,
            "lineCount": 180,
            "parameterCount": 1,
            "snippet": "export function patchWtf(Zone: ZoneType): void {\n  interface Wtf {\n    trace: WtfTrace;\n  }\n  interface WtfScope {}\n  interface WtfRange {}\n  interface WtfTrace {\n    events: WtfEvents;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 180 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "onInvoke",
            "complexity": 3,
            "lineCount": 21,
            "parameterCount": 7,
            "snippet": "onInvoke(\n      parentZoneDelegate: ZoneDelegate,\n      currentZone: Zone,\n      targetZone: Zone,\n      delegate: Function,\n      applyThis: any,\n      applyArgs?: any[],\n      source?: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/lcp_image_observer.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/ng_optimized_image.ts",
        "criticalFunctions": [
          {
            "name": "ngOnInit",
            "complexity": 11,
            "lineCount": 62,
            "parameterCount": 0,
            "snippet": "ngOnInit() {\n    performanceMarkFeature('NgOptimizedImage');\n    if (ngDevMode) {\n      const ngZone = this.injector.get(NgZone);\n      assertNonEmptyInput(this, 'ngSrc', this.ngSrc);\n      assertValidNgSrcset(this, this.ngSrcset);\n      assertNoConflictingSrc(this);\n      if (this.ngSrcset) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "assertNoImageDistortion",
            "complexity": 10,
            "lineCount": 113,
            "parameterCount": 3,
            "snippet": "function assertNoImageDistortion(\n  dir: NgOptimizedImage,\n  img: HTMLImageElement,\n  renderer: Renderer2,\n) {\n  const callback = () => {\n    removeLoadListenerFn();\n    removeErrorListenerFn();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 113 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "callback",
            "complexity": 10,
            "lineCount": 94,
            "parameterCount": 0,
            "snippet": "() => {\n    removeLoadListenerFn();\n    removeErrorListenerFn();\n    const computedStyle = window.getComputedStyle(img);\n    let renderedWidth = parseFloat(computedStyle.getPropertyValue('width'));\n    let renderedHeight = parseFloat(computedStyle.getPropertyValue('height'));\n    const boxSizing = computedStyle.getPropertyValue('box-sizing');\n    if (boxSizing === 'border-box') {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 94 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/linker/babel/src/es2015_linker_plugin.ts",
        "criticalFunctions": [
          {
            "name": "createEs2015LinkerPlugin",
            "complexity": 9,
            "lineCount": 83,
            "parameterCount": 1,
            "snippet": "export function createEs2015LinkerPlugin({\n  fileSystem,\n  logger,\n  ...options\n}: LinkerPluginOptions): PluginObj {\n  let fileLinker: FileLinker<ConstantScopePath, t.Statement, t.Expression> | null = null;\n  return {\n    visitor: {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 83 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/hmr/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/testing/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/primitives/di/src/type.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/primitives/dom-navigation/testing/fake_navigation.ts",
        "criticalFunctions": [
          {
            "name": "dispatchNavigateEvent",
            "complexity": 28,
            "lineCount": 213,
            "parameterCount": 1,
            "snippet": "function dispatchNavigateEvent({\n  cancelable,\n  canIntercept,\n  userInitiated,\n  hashChange,\n  navigationType,\n  signal,\n  destination,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 213 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "commit",
            "complexity": 12,
            "lineCount": 55,
            "parameterCount": 0,
            "snippet": "function commit() {\n    if (result.signal.aborted) {\n      return;\n    }\n    if (event.interceptionState !== 'none') {\n      event.interceptionState = 'committed';\n      if (!navigation.currentEntry) {\n        throw new Error('from history entry should not be null');\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "traverseTo",
            "complexity": 5,
            "lineCount": 61,
            "parameterCount": 2,
            "snippet": "traverseTo(key: string, options?: NavigationOptions): FakeNavigationResult {\n    const fromUrl = new URL(this.currentEntry.url!);\n    const entry = this.findEntry(key);\n    if (!entry) {\n      const domException = new DOMException('Invalid key', 'InvalidStateError');\n      const committed = Promise.reject(domException);\n      const finished = Promise.reject(domException);\n      committed.catch(() => {});\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/primitives/signals/src/graph.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/i18n/serializers/xliff.ts",
        "criticalFunctions": [
          {
            "name": "write",
            "complexity": 4,
            "lineCount": 73,
            "parameterCount": 2,
            "snippet": "override write(messages: i18n.Message[], locale: string | null): string {\n    const visitor = new _WriteVisitor();\n    const transUnits: xml.Node[] = [];\n    messages.forEach((message) => {\n      let contextTags: xml.Node[] = [];\n      message.sources.forEach((source: i18n.MessageSpan) => {\n        let contextGroupTag = new xml.Tag(_CONTEXT_GROUP_TAG, {purpose: 'location'});\n        contextGroupTag.children.push(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 73 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/i18n/serializers/xliff2.ts",
        "criticalFunctions": [
          {
            "name": "visitElement",
            "complexity": 11,
            "lineCount": 57,
            "parameterCount": 2,
            "snippet": "visitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _UNIT_TAG:\n        this._unitMlString = null;\n        const idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_UNIT_TAG}> misses the \"id\" attribute`);\n        } else {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "write",
            "complexity": 7,
            "lineCount": 71,
            "parameterCount": 2,
            "snippet": "override write(messages: i18n.Message[], locale: string | null): string {\n    const visitor = new _WriteVisitor();\n    const units: xml.Node[] = [];\n    messages.forEach((message) => {\n      const unit = new xml.Tag(_UNIT_TAG, {id: message.id});\n      const notes = new xml.Tag('notes');\n      if (message.description || message.meaning) {\n        if (message.description) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 71 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/i18n/serializers/xtb.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/render3/partial/component.ts",
        "criticalFunctions": [
          {
            "name": "createComponentDefinitionMap",
            "complexity": 12,
            "lineCount": 81,
            "parameterCount": 3,
            "snippet": "export function createComponentDefinitionMap(\n  meta: R3ComponentMetadata<R3TemplateDependencyMetadata>,\n  template: ParsedTemplate,\n  templateInfo: DeclareComponentTemplateInfo,\n): DefinitionMap<R3DeclareComponentMetadata> {\n  const definitionMap: DefinitionMap<R3DeclareComponentMetadata> =\n    createDirectiveDefinitionMap(meta);\n  const blockVisitor = new BlockPresenceVisitor();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 81 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/render3/partial/directive.ts",
        "criticalFunctions": [
          {
            "name": "createDirectiveDefinitionMap",
            "complexity": 11,
            "lineCount": 64,
            "parameterCount": 1,
            "snippet": "export function createDirectiveDefinitionMap(\n  meta: R3DirectiveMetadata,\n): DefinitionMap<R3DeclareDirectiveMetadata> {\n  const definitionMap = new DefinitionMap<R3DeclareDirectiveMetadata>();\n  const minVersion = getMinimumVersionForPartialOutput(meta);\n  definitionMap.set('minVersion', o.literal(minVersion));\n  definitionMap.set('version', o.literal('0.0.0-PLACEHOLDER'));\n  definitionMap.set('type', meta.type.value);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/cleanup-unused-imports/unused_imports_migration.ts",
        "criticalFunctions": [
          {
            "name": "analyzeUsages",
            "complexity": 15,
            "lineCount": 53,
            "parameterCount": 2,
            "snippet": "private analyzeUsages(sourceFile: ts.SourceFile, locations: RemovalLocations): UsageAnalysis {\n    const {partialRemovals, fullRemovals} = locations;\n    const result: UsageAnalysis = {\n      importedSymbols: new Map(),\n      identifierCounts: new Map(),\n    };\n    const walk = (node: ts.Node) => {\n      if (\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "resolveRemovalLocations",
            "complexity": 10,
            "lineCount": 51,
            "parameterCount": 2,
            "snippet": "private resolveRemovalLocations(\n    sourceFile: ts.SourceFile,\n    locations: Set<string>,\n  ): RemovalLocations {\n    const result: RemovalLocations = {\n      fullRemovals: new Set(),\n      partialRemovals: new Map(),\n      allRemovedIdentifiers: new Set(),\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "generateReplacements",
            "complexity": 3,
            "lineCount": 56,
            "parameterCount": 5,
            "snippet": "private generateReplacements(\n    sourceFile: ts.SourceFile,\n    removalLocations: RemovalLocations,\n    usages: UsageAnalysis,\n    info: ProgramInfo,\n    replacements: Replacement[],\n  ): void {\n    const {fullRemovals, partialRemovals, allRemovedIdentifiers} = removalLocations;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/action_resolver.ts",
        "criticalFunctions": [
          {
            "name": "populateAction",
            "complexity": 13,
            "lineCount": 66,
            "parameterCount": 2,
            "snippet": "private populateAction(eventInfo: eventInfoLib.EventInfo, currentTarget: Element) {\n    let actionElement: Element | null = currentTarget;\n    while (actionElement && actionElement !== eventInfoLib.getContainer(eventInfo)) {\n      if (actionElement.nodeType === Node.ELEMENT_NODE) {\n        this.populateActionOnElement(actionElement, eventInfo);\n      }\n      if (eventInfoLib.getAction(eventInfo)) {\n        break;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/event.ts",
        "criticalFunctions": [
          {
            "name": "isActionKeyEvent",
            "complexity": 20,
            "lineCount": 43,
            "parameterCount": 1,
            "snippet": "export function isActionKeyEvent(e: Event): boolean {\n  let key =\n    (e as any).which ||\n    (e as any).keyCode;\n  if (!key && (e as KeyboardEvent).key) {\n    key = ACTION_KEY_TO_KEYCODE[(e as KeyboardEvent).key];\n  }\n  if (isWebKit && key === KeyCode.MAC_ENTER) {\n  // ... more code ...",
            "issues": []
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/event_contract_defines.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/primitives/event-dispatch/src/eventcontract.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/render3/view/compiler.ts",
        "criticalFunctions": [
          {
            "name": "compileComponentFromMetadata",
            "complexity": 29,
            "lineCount": 165,
            "parameterCount": 3,
            "snippet": "export function compileComponentFromMetadata(\n  meta: R3ComponentMetadata<R3TemplateDependency>,\n  constantPool: ConstantPool,\n  bindingParser: BindingParser,\n): R3CompiledExpression {\n  const definitionMap = baseDirectiveFields(meta, constantPool, bindingParser);\n  addFeatures(definitionMap, meta);\n  const selector = meta.selector && CssSelector.parse(meta.selector);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 29 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 165 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "parseHostBindings",
            "complexity": 12,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "export function parseHostBindings(host: {\n  [key: string]: string | o.Expression;\n}): ParsedHostBindings {\n  const attributes: {[key: string]: o.Expression} = {};\n  const listeners: {[key: string]: string} = {};\n  const properties: {[key: string]: string} = {};\n  const specialAttributes: {styleAttr?: string; classAttr?: string} = {};\n  for (const key of Object.keys(host)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "baseDirectiveFields",
            "complexity": 8,
            "lineCount": 64,
            "parameterCount": 3,
            "snippet": "function baseDirectiveFields(\n  meta: R3DirectiveMetadata,\n  constantPool: ConstantPool,\n  bindingParser: BindingParser,\n): DefinitionMap {\n  const definitionMap = new DefinitionMap();\n  const selectors = core.parseSelectorToR3Selector(meta.selector);\n  definitionMap.set('type', meta.type.value);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              }
            ]
          },
          {
            "name": "createHostBindingsFunction",
            "complexity": 5,
            "lineCount": 57,
            "parameterCount": 7,
            "snippet": "function createHostBindingsFunction(\n  hostBindingsMetadata: R3HostMetadata,\n  typeSourceSpan: ParseSourceSpan,\n  bindingParser: BindingParser,\n  constantPool: ConstantPool,\n  selector: string,\n  name: string,\n  definitionMap: DefinitionMap,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/render3/view/query_generation.ts",
        "criticalFunctions": [
          {
            "name": "createContentQueriesFunction",
            "complexity": 5,
            "lineCount": 54,
            "parameterCount": 3,
            "snippet": "export function createContentQueriesFunction(\n  queries: R3QueryMetadata[],\n  constantPool: ConstantPool,\n  name?: string,\n): o.Expression {\n  const createStatements: o.Statement[] = [];\n  const updateStatements: (o.Statement | typeof queryAdvancePlaceholder)[] = [];\n  const tempAllocator = temporaryAllocator((st) => updateStatements.push(st), TEMPORARY_NAME);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/render3/view/t2_binder.ts",
        "criticalFunctions": [
          {
            "name": "getDeferredTriggerTarget",
            "complexity": 16,
            "lineCount": 64,
            "parameterCount": 2,
            "snippet": "getDeferredTriggerTarget(block: DeferredBlock, trigger: DeferredTrigger): Element | null {\n    if (\n      !(trigger instanceof InteractionDeferredTrigger) &&\n      !(trigger instanceof ViewportDeferredTrigger) &&\n      !(trigger instanceof HoverDeferredTrigger)\n    ) {\n      return null;\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "visitElementOrTemplate",
            "complexity": 11,
            "lineCount": 72,
            "parameterCount": 1,
            "snippet": "visitElementOrTemplate(node: Element | Template): void {\n    const cssSelector = createCssSelectorFromNode(node);\n    const directives: DirectiveT[] = [];\n    this.matcher.match(cssSelector, (_selector, results) => directives.push(...results));\n    if (directives.length > 0) {\n      this.directives.set(node, directives);\n      if (!this.isInDeferBlock) {\n        this.eagerDirectives.push(...directives);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "bind",
            "complexity": 3,
            "lineCount": 68,
            "parameterCount": 1,
            "snippet": "bind(target: Target): BoundTarget<DirectiveT> {\n    if (!target.template) {\n      throw new Error('Empty bound targets are not supported');\n    }\n    const directives: MatchedDirectives<DirectiveT> = new Map();\n    const eagerDirectives: DirectiveT[] = [];\n    const bindings: BindingsMap<DirectiveT> = new Map();\n    const references: ReferenceMap<DirectiveT> = new Map();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              }
            ]
          },
          {
            "name": "applyWithScope",
            "complexity": 2,
            "lineCount": 25,
            "parameterCount": 8,
            "snippet": "static applyWithScope(\n    nodes: Node[],\n    scope: Scope,\n    expressions: Map<AST, TemplateEntity>,\n    symbols: Map<TemplateEntity, Template>,\n    nestingLevel: Map<ScopedNode, number>,\n    usedPipes: Set<string>,\n    eagerPipes: Set<string>,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/render3/view/util.ts",
        "criticalFunctions": [
          {
            "name": "conditionallyCreateDirectiveBindingLiteral",
            "complexity": 12,
            "lineCount": 81,
            "parameterCount": 2,
            "snippet": "export function conditionallyCreateDirectiveBindingLiteral(\n  map: Record<\n    string,\n    | string\n    | {\n        classPropertyName: string;\n        bindingPropertyName: string;\n        transformFunction: o.Expression | null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 81 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 11,
            "lineCount": 59,
            "parameterCount": 1,
            "snippet": "(key) => {\n      const value = map[key];\n      let declaredName: string;\n      let publicName: string;\n      let minifiedName: string;\n      let expressionValue: o.Expression;\n      if (typeof value === 'string') {\n        declaredName = key;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/inject-migration/analysis.ts",
        "criticalFunctions": [
          {
            "name": "analyzeFile",
            "complexity": 35,
            "lineCount": 122,
            "parameterCount": 3,
            "snippet": "export function analyzeFile(\n  sourceFile: ts.SourceFile,\n  localTypeChecker: ts.TypeChecker,\n  options: MigrationOptions,\n) {\n  const coreSpecifiers = getNamedImports(sourceFile, '@angular/core');\n  if (coreSpecifiers === null || coreSpecifiers.elements.length === 0) {\n    return null;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 35 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 122 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "walk",
            "complexity": 31,
            "lineCount": 93,
            "parameterCount": 1,
            "snippet": "function walk(node) {\n    if (ts.isImportDeclaration(node)) {\n      return;\n    }\n    if (ts.isParameter(node)) {\n      const closestConstructor = closestNode(node, ts.isConstructorDeclaration);\n      if (node.initializer) {\n        walk(node.initializer);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 31 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 93 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getConstructorUnusedParameters",
            "complexity": 18,
            "lineCount": 67,
            "parameterCount": 3,
            "snippet": "export function getConstructorUnusedParameters(\n  declaration: ts.ConstructorDeclaration,\n  localTypeChecker: ts.TypeChecker,\n  removedStatements: Set<ts.Statement>,\n): Set<ts.Declaration> {\n  const accessedTopLevelParameters = new Set<ts.Declaration>();\n  const topLevelParameters = new Set<ts.Declaration>();\n  const topLevelParameterNames = new Set<string>();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/inject-migration/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/inject-migration/internal.ts",
        "criticalFunctions": [
          {
            "name": "getMemberInitializers",
            "complexity": 16,
            "lineCount": 40,
            "parameterCount": 1,
            "snippet": "function getMemberInitializers(constructor: ts.ConstructorDeclaration) {\n  let memberInitializers: Map<string, ts.Expression> | null = null;\n  if (!constructor.body) {\n    return memberInitializers;\n  }\n  for (const node of constructor.body.statements) {\n    if (\n      !ts.isExpressionStatement(node) ||\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "findUninitializedPropertiesToCombine",
            "complexity": 12,
            "lineCount": 66,
            "parameterCount": 4,
            "snippet": "export function findUninitializedPropertiesToCombine(\n  node: ts.ClassDeclaration,\n  constructor: ts.ConstructorDeclaration,\n  localTypeChecker: ts.TypeChecker,\n  options: MigrationOptions,\n): {\n  toCombine: CombineCandidate[];\n  toHoist: ts.PropertyDeclaration[];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "hasLocalReferences",
            "complexity": 10,
            "lineCount": 51,
            "parameterCount": 4,
            "snippet": "function hasLocalReferences(\n  root: ts.Expression,\n  constructor: ts.ConstructorDeclaration,\n  allowedParameters: Set<ts.Declaration>,\n  localTypeChecker: ts.TypeChecker,\n): boolean {\n  const sourceFile = root.getSourceFile();\n  let hasLocalRefs = false;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/inject-migration/migration.ts",
        "criticalFunctions": [
          {
            "name": "createInjectReplacementCall",
            "complexity": 28,
            "lineCount": 108,
            "parameterCount": 5,
            "snippet": "function createInjectReplacementCall(\n  param: ts.ParameterDeclaration,\n  options: MigrationOptions,\n  localTypeChecker: ts.TypeChecker,\n  printer: ts.Printer,\n  tracker: ChangeTracker,\n): string {\n  const moduleName = '@angular/core';\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 108 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "migrateClass",
            "complexity": 26,
            "lineCount": 163,
            "parameterCount": 12,
            "snippet": "function migrateClass(\n  node: ts.ClassDeclaration,\n  constructor: ts.ConstructorDeclaration,\n  superCall: ts.CallExpression | null,\n  options: MigrationOptions,\n  memberIndentation: string,\n  prependToClass: string[],\n  afterInjectCalls: string[],\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 163 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "12 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "migrateInjectDecorator",
            "complexity": 19,
            "lineCount": 51,
            "parameterCount": 3,
            "snippet": "function migrateInjectDecorator(\n  firstArg: ts.Expression,\n  type: ts.TypeNode | undefined,\n  localTypeChecker: ts.TypeChecker,\n) {\n  let injectedType = firstArg.getText();\n  let typeArguments: ts.TypeNode[] | null = null;\n  if (ts.isStringLiteralLike(firstArg)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "migrateParameter",
            "complexity": 16,
            "lineCount": 94,
            "parameterCount": 14,
            "snippet": "function migrateParameter(\n  node: ts.ParameterDeclaration,\n  options: MigrationOptions,\n  localTypeChecker: ts.TypeChecker,\n  printer: ts.Printer,\n  tracker: ChangeTracker,\n  superCall: ts.CallExpression | null,\n  usedInSuper: boolean,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 94 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "14 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "applyInternalOnlyChanges",
            "complexity": 8,
            "lineCount": 93,
            "parameterCount": 11,
            "snippet": "function applyInternalOnlyChanges(\n  node: ts.ClassDeclaration,\n  constructor: ts.ConstructorDeclaration,\n  localTypeChecker: ts.TypeChecker,\n  tracker: ChangeTracker,\n  printer: ts.Printer,\n  removedStatements: Set<ts.Statement>,\n  removedMembers: Set<ts.ClassElement>,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 93 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "11 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/control-flow-migration/cases.ts",
        "criticalFunctions": [
          {
            "name": "migrateCase",
            "complexity": 10,
            "lineCount": 52,
            "parameterCount": 1,
            "snippet": "export function migrateCase(template: string): {\n  migrated: string;\n  errors: MigrateError[];\n  changed: boolean;\n} {\n  let errors: MigrateError[] = [];\n  let parsed = parseTemplate(template);\n  if (parsed.tree === undefined) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/control-flow-migration/fors.ts",
        "criticalFunctions": [
          {
            "name": "migrateStandardNgFor",
            "complexity": 16,
            "lineCount": 97,
            "parameterCount": 3,
            "snippet": "function migrateStandardNgFor(etm: ElementToMigrate, tmpl: string, offset: number): Result {\n  const aliasWithEqualRegexp = /=\\s*(count|index|first|last|even|odd)/gm;\n  const aliasWithAsRegexp = /(count|index|first|last|even|odd)\\s+as/gm;\n  const aliases = [];\n  const lbString = etm.hasLineBreaks ? '\\n' : '';\n  const parts = getNgForParts(etm.attr.value);\n  const originals = getOriginals(etm, tmpl, offset);\n  const condition = parts[0].replace('let ', '');\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 97 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/control-flow-migration/ifs.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/control-flow-migration/index.ts",
        "criticalFunctions": [
          {
            "name": "runControlFlowMigration",
            "complexity": 10,
            "lineCount": 80,
            "parameterCount": 5,
            "snippet": "function runControlFlowMigration(\n  tree: Tree,\n  tsconfigPath: string,\n  basePath: string,\n  pathToMigrate: string,\n  schematicOptions: Options,\n): string[] {\n  if (schematicOptions.path.startsWith('..')) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/control-flow-migration/migration.ts",
        "criticalFunctions": [
          {
            "name": "migrateTemplate",
            "complexity": 16,
            "lineCount": 81,
            "parameterCount": 6,
            "snippet": "export function migrateTemplate(\n  template: string,\n  templateType: string,\n  node: ts.Node,\n  file: AnalyzedFile,\n  format: boolean = true,\n  analyzedFiles: Map<string, AnalyzedFile> | null,\n): {migrated: string; errors: MigrateError[]} {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 81 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/control-flow-migration/switches.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/control-flow-migration/types.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/control-flow-migration/util.ts",
        "criticalFunctions": [
          {
            "name": "formatTemplate",
            "complexity": 44,
            "lineCount": 178,
            "parameterCount": 2,
            "snippet": "export function formatTemplate(tmpl: string, templateType: string): string {\n  if (tmpl.indexOf('\\n') > -1) {\n    tmpl = generateI18nMarkers(tmpl);\n    let openSelfClosingEl = false;\n    const openBlockRegex = /^\\s*\\@(if|switch|case|default|for)|^\\s*\\}\\s\\@else/;\n    const openElRegex = /^\\s*<([a-z0-9]+)(?![^>]*\\/>)[^>]*>?/;\n    const openAttrDoubleRegex = /=\"([^\"]|\\\\\")*$/;\n    const openAttrSingleRegex = /='([^']|\\\\')*$/;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 44 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 178 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "analyzeDecorators",
            "complexity": 15,
            "lineCount": 74,
            "parameterCount": 3,
            "snippet": "function analyzeDecorators(\n  node: ts.ClassDeclaration,\n  sourceFile: ts.SourceFile,\n  analyzedFiles: Map<string, AnalyzedFile>,\n) {\n  const decorator = ts.getDecorators(node)?.find((dec) => {\n    return (\n      ts.isCallExpression(dec.expression) &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "processNgTemplates",
            "complexity": 15,
            "lineCount": 64,
            "parameterCount": 2,
            "snippet": "export function processNgTemplates(\n  template: string,\n  sourceFile: ts.SourceFile,\n): {migrated: string; err: Error | undefined} {\n  try {\n    const templates = getTemplates(template);\n    for (const [name, t] of templates) {\n      const replaceRegex = new RegExp(getPlaceholder(name.slice(1)), 'g');\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getMainBlock",
            "complexity": 6,
            "lineCount": 52,
            "parameterCount": 3,
            "snippet": "export function getMainBlock(\n  etm: ElementToMigrate,\n  tmpl: string,\n  offset: number,\n): {start: string; middle: string; end: string} {\n  const i18nAttr = etm.el.attrs.find((x) => x.name === 'i18n');\n  if (isRemovableContainer(etm)) {\n    let middle = '';\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/output-migration/index.ts",
        "criticalFunctions": [
          {
            "name": "migrate",
            "complexity": 4,
            "lineCount": 56,
            "parameterCount": 1,
            "snippet": "export function migrate(options: Options): Rule {\n  return async (tree, context) => {\n    await runMigrationInDevkit({\n      tree,\n      getMigration: (fs) =>\n        new OutputMigration({\n          shouldMigrate: (_, file) => {\n            return (\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 4,
            "lineCount": 54,
            "parameterCount": 2,
            "snippet": "async (tree, context) => {\n    await runMigrationInDevkit({\n      tree,\n      getMigration: (fs) =>\n        new OutputMigration({\n          shouldMigrate: (_, file) => {\n            return (\n              file.rootRelativePath.startsWith(fs.normalize(options.path)) &&\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/route-lazy-loading/to-lazy-routes.ts",
        "criticalFunctions": [
          {
            "name": "findRoutesArrayToMigrate",
            "complexity": 20,
            "lineCount": 72,
            "parameterCount": 2,
            "snippet": "function findRoutesArrayToMigrate(sourceFile: ts.SourceFile, typeChecker: ts.TypeChecker) {\n  const routesArrays: RouteData[] = [];\n  sourceFile.forEachChild(function walk(node) {\n    if (ts.isCallExpression(node)) {\n      if (\n        isRouterModuleCallExpression(node, typeChecker) ||\n        isRouterProviderCallExpression(node, typeChecker) ||\n        isRouterCallExpression(node, typeChecker) ||\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "walk",
            "complexity": 20,
            "lineCount": 66,
            "parameterCount": 1,
            "snippet": "function walk(node) {\n    if (ts.isCallExpression(node)) {\n      if (\n        isRouterModuleCallExpression(node, typeChecker) ||\n        isRouterProviderCallExpression(node, typeChecker) ||\n        isRouterCallExpression(node, typeChecker) ||\n        isProvideRoutesCallExpression(node, typeChecker)\n      ) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "migrateRoute",
            "complexity": 15,
            "lineCount": 103,
            "parameterCount": 5,
            "snippet": "function migrateRoute(\n  element: ts.ObjectLiteralExpression,\n  route: RouteData,\n  typeChecker: ts.TypeChecker,\n  reflector: ReflectionHost,\n  tracker: ChangeTracker,\n): {\n  migratedRoutes: RouteMigrationData[];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 103 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/route-lazy-loading/util.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/self-closing-tags-migration/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/signal-input-migration/index.ts",
        "criticalFunctions": [
          {
            "name": "migrate",
            "complexity": 7,
            "lineCount": 67,
            "parameterCount": 1,
            "snippet": "export function migrate(options: Options): Rule {\n  return async (tree, context) => {\n    await runMigrationInDevkit({\n      tree,\n      getMigration: (fs) =>\n        new SignalInputMigration({\n          bestEffortMode: options.bestEffortMode,\n          insertTodosForSkippedFields: options.insertTodos,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 7,
            "lineCount": 65,
            "parameterCount": 2,
            "snippet": "async (tree, context) => {\n    await runMigrationInDevkit({\n      tree,\n      getMigration: (fs) =>\n        new SignalInputMigration({\n          bestEffortMode: options.bestEffortMode,\n          insertTodosForSkippedFields: options.insertTodos,\n          shouldMigrateInput: (input) => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/signal-queries-migration/index.ts",
        "criticalFunctions": [
          {
            "name": "migrate",
            "complexity": 7,
            "lineCount": 70,
            "parameterCount": 1,
            "snippet": "export function migrate(options: Options): Rule {\n  return async (tree, context) => {\n    await runMigrationInDevkit({\n      tree,\n      getMigration: (fs) =>\n        new SignalQueriesMigration({\n          bestEffortMode: options.bestEffortMode,\n          insertTodosForSkippedFields: options.insertTodos,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 70 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 7,
            "lineCount": 68,
            "parameterCount": 2,
            "snippet": "async (tree, context) => {\n    await runMigrationInDevkit({\n      tree,\n      getMigration: (fs) =>\n        new SignalQueriesMigration({\n          bestEffortMode: options.bestEffortMode,\n          insertTodosForSkippedFields: options.insertTodos,\n          shouldMigrateQuery: (_query, file) => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/standalone-migration/index.ts",
        "criticalFunctions": [
          {
            "name": "standaloneMigration",
            "complexity": 14,
            "lineCount": 133,
            "parameterCount": 6,
            "snippet": "function standaloneMigration(\n  tree: Tree,\n  tsconfigPath: string,\n  basePath: string,\n  pathToMigrate: string,\n  schematicOptions: Options,\n  oldProgram?: NgtscProgram,\n): number {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 133 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/standalone-migration/prune-modules.ts",
        "criticalFunctions": [
          {
            "name": "canRemoveClass",
            "complexity": 21,
            "lineCount": 71,
            "parameterCount": 2,
            "snippet": "function canRemoveClass(node: ts.ClassDeclaration, typeChecker: ts.TypeChecker): boolean {\n  const decorator = findNgModuleDecorator(node, typeChecker)?.node;\n  if (!decorator || !ts.isCallExpression(decorator.expression)) {\n    return false;\n  }\n  if (\n    decorator.expression.arguments.length > 0 &&\n    !ts.isObjectLiteralExpression(decorator.expression.arguments[0])\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 71 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "pruneNgModules",
            "complexity": 16,
            "lineCount": 120,
            "parameterCount": 9,
            "snippet": "export function pruneNgModules(\n  program: NgtscProgram,\n  host: ts.CompilerHost,\n  basePath: string,\n  rootFileNames: string[],\n  sourceFiles: ts.SourceFile[],\n  printer: ts.Printer,\n  importRemapper?: ImportRemapper,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 120 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "9 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "collectChangeLocations",
            "complexity": 16,
            "lineCount": 77,
            "parameterCount": 7,
            "snippet": "function collectChangeLocations(\n  ngModule: ts.ClassDeclaration,\n  removalLocations: RemovalLocations,\n  componentImportArrays: UniqueItemTracker<ts.ArrayLiteralExpression, ts.Node>,\n  testImportArrays: UniqueItemTracker<ts.ArrayLiteralExpression, ts.Node>,\n  templateTypeChecker: TemplateTypeChecker,\n  referenceResolver: ReferenceResolver,\n  program: NgtscProgram,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 77 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "replaceModulesInImportsArray",
            "complexity": 10,
            "lineCount": 57,
            "parameterCount": 5,
            "snippet": "function replaceModulesInImportsArray(\n  array: ts.ArrayLiteralExpression,\n  replacements: UniqueItemTracker<ts.Node, Reference<NamedClassDeclaration>>,\n  tracker: ChangeTracker,\n  templateTypeChecker: TemplateTypeChecker,\n  importRemapper?: DeclarationImportsRemapper,\n): void {\n  if (replacements.isEmpty()) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "replaceInTestImportsArray",
            "complexity": 6,
            "lineCount": 43,
            "parameterCount": 7,
            "snippet": "function replaceInTestImportsArray(\n  testImportArrays: UniqueItemTracker<ts.ArrayLiteralExpression, ts.Node>,\n  removalLocations: RemovalLocations,\n  classesToRemove: Set<ts.ClassDeclaration>,\n  tracker: ChangeTracker,\n  typeChecker: ts.TypeChecker,\n  templateTypeChecker: TemplateTypeChecker,\n  importRemapper?: DeclarationImportsRemapper,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/standalone-migration/standalone-bootstrap.ts",
        "criticalFunctions": [
          {
            "name": "migrateImportsForBootstrapCall",
            "complexity": 24,
            "lineCount": 147,
            "parameterCount": 9,
            "snippet": "function migrateImportsForBootstrapCall(\n  sourceFile: ts.SourceFile,\n  imports: ts.PropertyAssignment,\n  nodeLookup: NodeLookup,\n  importsForNewCall: ts.Expression[],\n  providersInNewCall: ts.Expression[],\n  tracker: ChangeTracker,\n  nodesToCopy: Set<ts.Node>,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 147 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "9 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getRouterModuleForRootFeatures",
            "complexity": 23,
            "lineCount": 106,
            "parameterCount": 3,
            "snippet": "function getRouterModuleForRootFeatures(\n  sourceFile: ts.SourceFile,\n  options: ts.Expression,\n  tracker: ChangeTracker,\n): ts.CallExpression[] | null {\n  if (!ts.isObjectLiteralExpression(options)) {\n    return null;\n  }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 106 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "addNodesToCopy",
            "complexity": 17,
            "lineCount": 68,
            "parameterCount": 6,
            "snippet": "function addNodesToCopy(\n  targetFile: ts.SourceFile,\n  rootNode: ts.Node,\n  nodeLookup: NodeLookup,\n  tracker: ChangeTracker,\n  nodesToCopy: Set<ts.Node>,\n  referenceResolver: ReferenceResolver,\n): void {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "analyzeBootstrapCall",
            "complexity": 16,
            "lineCount": 54,
            "parameterCount": 3,
            "snippet": "function analyzeBootstrapCall(\n  call: ts.CallExpression,\n  typeChecker: ts.TypeChecker,\n  templateTypeChecker: TemplateTypeChecker,\n): BootstrapCallAnalysis | null {\n  if (call.arguments.length === 0 || !ts.isIdentifier(call.arguments[0])) {\n    return null;\n  }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              }
            ]
          },
          {
            "name": "migrateBootstrapCall",
            "complexity": 11,
            "lineCount": 84,
            "parameterCount": 6,
            "snippet": "function migrateBootstrapCall(\n  analysis: BootstrapCallAnalysis,\n  tracker: ChangeTracker,\n  additionalProviders: Map<string, string> | null,\n  referenceResolver: ReferenceResolver,\n  typeChecker: ts.TypeChecker,\n  printer: ts.Printer,\n) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 84 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/standalone-migration/to-standalone.ts",
        "criticalFunctions": [
          {
            "name": "moveDeclarationsToImports",
            "complexity": 23,
            "lineCount": 139,
            "parameterCount": 5,
            "snippet": "function moveDeclarationsToImports(\n  literal: ts.ObjectLiteralExpression,\n  allDeclarations: Set<ts.ClassDeclaration>,\n  typeChecker: ts.TypeChecker,\n  templateTypeChecker: TemplateTypeChecker,\n  tracker: ChangeTracker,\n): void {\n  const declarationsProp = findLiteralProperty(literal, 'declarations');\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 139 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "analyzeTestingModules",
            "complexity": 14,
            "lineCount": 64,
            "parameterCount": 2,
            "snippet": "function analyzeTestingModules(\n  testObjects: Set<ts.ObjectLiteralExpression>,\n  typeChecker: ts.TypeChecker,\n) {\n  const seenDeclarations = new Set<ts.Declaration>();\n  const decorators: NgDecorator[] = [];\n  const componentImports = new Map<ts.Decorator, Set<ts.Expression>>();\n  for (const obj of testObjects) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "migrateTestDeclarations",
            "complexity": 11,
            "lineCount": 51,
            "parameterCount": 5,
            "snippet": "export function migrateTestDeclarations(\n  testObjects: Set<ts.ObjectLiteralExpression>,\n  declarationsOutsideOfTestFiles: Set<ts.ClassDeclaration>,\n  tracker: ChangeTracker,\n  templateTypeChecker: TemplateTypeChecker,\n  typeChecker: ts.TypeChecker,\n) {\n  const {decorators, componentImports} = analyzeTestingModules(testObjects, typeChecker);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "toStandalone",
            "complexity": 6,
            "lineCount": 59,
            "parameterCount": 5,
            "snippet": "export function toStandalone(\n  sourceFiles: ts.SourceFile[],\n  program: NgtscProgram,\n  printer: ts.Printer,\n  fileImportRemapper?: ImportRemapper,\n  declarationImportRemapper?: DeclarationImportsRemapper,\n): ChangesByFile {\n  const templateTypeChecker = program.compiler.getTemplateTypeChecker();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/ng-generate/standalone-migration/util.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/migrations/explicit-standalone-flag/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/explicit-standalone-flag/migration.ts",
        "criticalFunctions": [
          {
            "name": "migrateFile",
            "complexity": 21,
            "lineCount": 98,
            "parameterCount": 2,
            "snippet": "export function migrateFile(sourceFile: ts.SourceFile, rewriteFn: RewriteFn) {\n  const changeTracker = new ChangeTracker(ts.createPrinter());\n  const coreImports = getNamedImports(sourceFile, CORE);\n  if (!coreImports) {\n    return;\n  }\n  const directive = getImportSpecifier(sourceFile, CORE, DIRECTIVE);\n  const component = getImportSpecifier(sourceFile, CORE, COMPONENT);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 98 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "visit",
            "complexity": 15,
            "lineCount": 74,
            "parameterCount": 1,
            "snippet": "function visit(node: ts.Node) {\n    ts.forEachChild(node, visit);\n    if (!ts.isClassDeclaration(node)) {\n      return;\n    }\n    ts.getDecorators(node)?.forEach((decorator) => {\n      if (!ts.isDecorator(decorator)) {\n        return;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 14,
            "lineCount": 64,
            "parameterCount": 1,
            "snippet": "(decorator) => {\n      if (!ts.isDecorator(decorator)) {\n        return;\n      }\n      const callExpression = decorator.expression;\n      if (!ts.isCallExpression(callExpression)) {\n        return;\n      }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/forms/src/directives/reactive_directives/form_control_name.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/forms/src/directives/reactive_directives/form_group_directive.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/migrations/output-migration/output-migration.ts",
        "criticalFunctions": [
          {
            "name": "analyze",
            "complexity": 32,
            "lineCount": 230,
            "parameterCount": 1,
            "snippet": "override async analyze(info: ProgramInfo): Promise<Serializable<CompilationUnitData>> {\n    const {sourceFiles, program} = info;\n    const outputFieldReplacements: Record<ClassFieldUniqueKey, OutputMigrationData> = {};\n    const problematicUsages: Record<ClassFieldUniqueKey, true> = {};\n    let problematicDeclarationCount = 0;\n    const filesWithOutputDeclarations = new Set<ts.SourceFile>();\n    const checker = program.getTypeChecker();\n    const reflector = new TypeScriptReflectionHost(checker);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 230 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "outputMigrationVisitor",
            "complexity": 21,
            "lineCount": 120,
            "parameterCount": 1,
            "snippet": "(node: ts.Node) => {\n      if (ts.isPropertyDeclaration(node)) {\n        const outputDecorator = getOutputDecorator(node, reflector);\n        if (outputDecorator !== null) {\n          if (isOutputDeclarationEligibleForMigration(node)) {\n            const outputDef = {\n              id: getUniqueIdForProperty(info, node),\n              aliasParam: outputDecorator.args?.at(0),\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 120 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/migrations/output-migration/output_helpers.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/migrations/pending-tasks/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/provide-initializer/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/provide-initializer/utils.ts",
        "criticalFunctions": [
          {
            "name": "tryParseProviderExpression",
            "complexity": 20,
            "lineCount": 86,
            "parameterCount": 1,
            "snippet": "function tryParseProviderExpression(node: ts.Node): ProviderInfo | undefined {\n  if (!ts.isObjectLiteralExpression(node)) {\n    return;\n  }\n  let deps: string[] = [];\n  let initializerToken: string | undefined;\n  let useExisting: ts.Expression | undefined;\n  let useFactoryCode: string | undefined;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 86 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/self-closing-tags-migration/util.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/language-service/src/refactorings/convert_to_signal_input/apply_input_refactoring.ts",
        "criticalFunctions": [
          {
            "name": "applySignalInputRefactoring",
            "complexity": 16,
            "lineCount": 135,
            "parameterCount": 7,
            "snippet": "export async function applySignalInputRefactoring(\n  compiler: NgCompiler,\n  compilerOptions: CompilerOptions,\n  config: MigrationConfig,\n  project: ts.server.Project,\n  reportProgress: ApplyRefactoringProgressFn,\n  shouldMigrateInput: (input: KnownInputInfo) => boolean,\n  multiMode: boolean,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 135 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/language-service/src/refactorings/convert_to_signal_input/decorators.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/language-service/src/refactorings/convert_to_signal_input/full_class_input_refactoring.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/language-service/src/refactorings/convert_to_signal_input/individual_input_refactoring.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/convert_query_property.ts",
        "criticalFunctions": [
          {
            "name": "computeReplacementsToMigrateQuery",
            "complexity": 32,
            "lineCount": 142,
            "parameterCount": 7,
            "snippet": "export function computeReplacementsToMigrateQuery(\n  node: ts.PropertyDeclaration,\n  metadata: ExtractedQuery,\n  importManager: ImportManager,\n  info: ProgramInfo,\n  printer: ts.Printer,\n  options: ts.CompilerOptions,\n  checker: ts.TypeChecker,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 142 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/fn_first_last_replacement.ts",
        "criticalFunctions": [
          {
            "name": "replaceQueryListFirstAndLastReferences",
            "complexity": 11,
            "lineCount": 59,
            "parameterCount": 5,
            "snippet": "export function replaceQueryListFirstAndLastReferences(\n  ref: Reference<ClassFieldDescriptor>,\n  info: ProgramInfo,\n  globalMetadata: GlobalUnitData,\n  knownQueries: KnownQueries,\n  replacements: Replacement[],\n): void {\n  if (!isHostBindingReference(ref) && !isTemplateReference(ref) && !isTsReference(ref)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/fn_get_replacement.ts",
        "criticalFunctions": [
          {
            "name": "replaceQueryListGetCall",
            "complexity": 11,
            "lineCount": 58,
            "parameterCount": 5,
            "snippet": "export function replaceQueryListGetCall(\n  ref: Reference<ClassFieldDescriptor>,\n  info: ProgramInfo,\n  globalMetadata: GlobalUnitData,\n  knownQueries: KnownQueries,\n  replacements: Replacement[],\n): void {\n  if (!isHostBindingReference(ref) && !isTemplateReference(ref) && !isTsReference(ref)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/fn_to_array_removal.ts",
        "criticalFunctions": [
          {
            "name": "removeQueryListToArrayCall",
            "complexity": 11,
            "lineCount": 61,
            "parameterCount": 5,
            "snippet": "export function removeQueryListToArrayCall(\n  ref: Reference<ClassFieldDescriptor>,\n  info: ProgramInfo,\n  globalMetadata: GlobalUnitData,\n  knownQueries: KnownQueries,\n  replacements: Replacement[],\n): void {\n  if (!isHostBindingReference(ref) && !isTemplateReference(ref) && !isTsReference(ref)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/known_queries.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/migration.ts",
        "criticalFunctions": [
          {
            "name": "analyze",
            "complexity": 27,
            "lineCount": 214,
            "parameterCount": 1,
            "snippet": "override async analyze(info: ProgramInfo): Promise<Serializable<CompilationUnitData>> {\n    const {templateTypeChecker} = info.ngCompiler?.['ensureAnalyzed']() ?? {\n      templateTypeChecker: null,\n    };\n    const resourceLoader = info.ngCompiler?.['resourceManager'] ?? null;\n    if (templateTypeChecker !== null) {\n      templateTypeChecker.generateAllTypeCheckBlocks();\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 214 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "migrate",
            "complexity": 24,
            "lineCount": 202,
            "parameterCount": 2,
            "snippet": "override async migrate(globalMetadata: GlobalUnitData, info: ProgramInfo) {\n    const {templateTypeChecker, metaReader} = info.ngCompiler?.['ensureAnalyzed']() ?? {\n      templateTypeChecker: null,\n      metaReader: null,\n    };\n    const resourceLoader = info.ngCompiler?.['resourceManager'] ?? null;\n    const {program, sourceFiles} = info;\n    const checker = program.getTypeChecker();\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 202 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "combine",
            "complexity": 11,
            "lineCount": 57,
            "parameterCount": 2,
            "snippet": "override async combine(\n    unitA: CompilationUnitData,\n    unitB: CompilationUnitData,\n  ): Promise<Serializable<CompilationUnitData>> {\n    const combined: CompilationUnitData = {\n      knownQueryFields: {},\n      potentialProblematicQueries: {},\n      potentialProblematicReferenceForMultiQueries: {},\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "findQueryDefinitionsVisitor",
            "complexity": 10,
            "lineCount": 68,
            "parameterCount": 1,
            "snippet": "(node: ts.Node) => {\n      const extractedQuery = extractSourceQueryDefinition(node, reflector, evaluator, info);\n      if (extractedQuery !== null) {\n        const queryNode = extractedQuery.node;\n        const descriptor = {\n          key: extractedQuery.id,\n          node: queryNode,\n        };\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "stats",
            "complexity": 10,
            "lineCount": 56,
            "parameterCount": 1,
            "snippet": "override async stats(globalMetadata: GlobalUnitData) {\n    let queriesCount = 0;\n    let multiQueries = 0;\n    let incompatibleQueries = 0;\n    const fieldIncompatibleCounts: Partial<Record<`incompat-field-${string}`, number>> = {};\n    const classIncompatibleCounts: Partial<Record<`incompat-class-${string}`, number>> = {};\n    for (const query of Object.values(globalMetadata.knownQueryFields)) {\n      queriesCount++;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-queries-migration/property_accesses.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/language-service/src/refactorings/convert_to_signal_queries/apply_query_refactoring.ts",
        "criticalFunctions": [
          {
            "name": "applySignalQueriesRefactoring",
            "complexity": 17,
            "lineCount": 125,
            "parameterCount": 7,
            "snippet": "export async function applySignalQueriesRefactoring(\n  compiler: NgCompiler,\n  compilerOptions: CompilerOptions,\n  config: MigrationConfig,\n  project: ts.server.Project,\n  reportProgress: ApplyRefactoringProgressFn,\n  shouldMigrateQuery: NonNullable<MigrationConfig['shouldMigrateQuery']>,\n  multiMode: boolean,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 125 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/language-service/src/refactorings/convert_to_signal_queries/decorators.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/language-service/src/refactorings/convert_to_signal_queries/full_class_query_refactoring.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/language-service/src/refactorings/convert_to_signal_queries/individual_query_refactoring.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/change_detection/differs/default_iterable_differ.ts",
        "criticalFunctions": [
          {
            "name": "forEachOperation",
            "complexity": 15,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "forEachOperation(\n    fn: (\n      item: IterableChangeRecord<V>,\n      previousIndex: number | null,\n      currentIndex: number | null,\n    ) => void,\n  ) {\n    let nextIt = this._itHead;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "check",
            "complexity": 11,
            "lineCount": 51,
            "parameterCount": 1,
            "snippet": "check(collection: NgIterable<V>): boolean {\n    this._reset();\n    let record: IterableChangeRecord_<V> | null = this._itHead;\n    let mayBeDirty: boolean = false;\n    let index: number;\n    let item: V;\n    let itemTrackBy: any;\n    if (Array.isArray(collection)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/change_detection/differs/default_keyvalue_differ.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/change_detection/scheduling/exhaustive_check_no_changes.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/change_detection/scheduling/ng_zone_scheduling.ts",
        "criticalFunctions": [
          {
            "name": "internalProvideZoneChangeDetection",
            "complexity": 5,
            "lineCount": 52,
            "parameterCount": 1,
            "snippet": "export function internalProvideZoneChangeDetection({\n  ngZoneFactory,\n  ignoreChangesOutsideZone,\n  scheduleInRootZone,\n}: {\n  ngZoneFactory?: () => NgZone;\n  ignoreChangesOutsideZone?: boolean;\n  scheduleInRootZone?: boolean;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/change_detection/scheduling/zoneless_scheduling_impl.ts",
        "criticalFunctions": [
          {
            "name": "notify",
            "complexity": 23,
            "lineCount": 105,
            "parameterCount": 1,
            "snippet": "notify(source: NotificationSource): void {\n    if (!this.zonelessEnabled && source === NotificationSource.Listener) {\n      return;\n    }\n    let force = false;\n    switch (source) {\n      case NotificationSource.MarkAncestorsForTraversal: {\n        this.appRef.dirtyFlags |= ApplicationRefDirtyFlags.ViewTreeTraversal;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 105 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "tick",
            "complexity": 7,
            "lineCount": 59,
            "parameterCount": 0,
            "snippet": "private tick(): void {\n    if (this.runningTick || this.appRef.destroyed) {\n      return;\n    }\n    if (this.appRef.dirtyFlags === ApplicationRefDirtyFlags.None) {\n      this.cleanup();\n      return;\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/di/jit/util.ts",
        "criticalFunctions": [
          {
            "name": "reflectDependency",
            "complexity": 20,
            "lineCount": 49,
            "parameterCount": 1,
            "snippet": "function reflectDependency(dep: any | any[]): R3DependencyMetadataFacade {\n  const meta: R3DependencyMetadataFacade = {\n    token: null,\n    attribute: null,\n    host: false,\n    optional: false,\n    self: false,\n    skipSelf: false,\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/render3/after_render/manager.ts",
        "criticalFunctions": [
          {
            "name": "execute",
            "complexity": 12,
            "lineCount": 53,
            "parameterCount": 0,
            "snippet": "execute(): void {\n    const hasSequencesToExecute = this.sequences.size > 0;\n    if (hasSequencesToExecute) {\n      profiler(ProfilerEvent.AfterRenderHooksStart);\n    }\n    this.executing = true;\n    for (const phase of AFTER_RENDER_PHASES) {\n      for (const sequence of this.sequences) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/debug/framework_injector_profiler.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/debug/injector_profiler.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/deps_tracker/deps_tracker.ts",
        "criticalFunctions": [
          {
            "name": "computeNgModuleScope",
            "complexity": 15,
            "lineCount": 82,
            "parameterCount": 1,
            "snippet": "private computeNgModuleScope(type: NgModuleType<any>): NgModuleScope {\n    const def = getNgModuleDef(type, true);\n    const scope: NgModuleScope = {\n      exported: {directives: new Set(), pipes: new Set()},\n      compilation: {directives: new Set(), pipes: new Set()},\n    };\n    for (const imported of maybeUnwrapFn(def.imports)) {\n      if (isNgModule(imported)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 82 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/i18n/i18n_apply.ts",
        "criticalFunctions": [
          {
            "name": "applyMutableOpCodes",
            "complexity": 32,
            "lineCount": 149,
            "parameterCount": 4,
            "snippet": "export function applyMutableOpCodes(\n  tView: TView,\n  mutableOpCodes: IcuCreateOpCodes,\n  lView: LView,\n  anchorRNode: RNode,\n): void {\n  ngDevMode && assertDomNode(anchorRNode);\n  const renderer = lView[RENDERER];\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 149 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "applyUpdateOpCodes",
            "complexity": 17,
            "lineCount": 89,
            "parameterCount": 5,
            "snippet": "export function applyUpdateOpCodes(\n  tView: TView,\n  lView: LView,\n  updateOpCodes: I18nUpdateOpCodes,\n  bindingsStartIndex: number,\n  changeMask: number,\n) {\n  for (let i = 0; i < updateOpCodes.length; i++) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 89 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/i18n/i18n_debug.ts",
        "criticalFunctions": [
          {
            "name": "i18nUpdateOpCodesToString",
            "complexity": 12,
            "lineCount": 52,
            "parameterCount": 2,
            "snippet": "export function i18nUpdateOpCodesToString(\n  this: I18nUpdateOpCodes | void,\n  opcodes?: I18nUpdateOpCodes,\n): string[] {\n  const parser = new OpCodeParser(opcodes || (Array.isArray(this) ? this : []));\n  let lines: string[] = [];\n  function consumeOpCode(value: number): string {\n    const ref = value >>> I18nUpdateOpCode.SHIFT_REF;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/render3/i18n/i18n_parse.ts",
        "criticalFunctions": [
          {
            "name": "walkIcuTree",
            "complexity": 17,
            "lineCount": 119,
            "parameterCount": 12,
            "snippet": "function walkIcuTree(\n  ast: I18nNode[],\n  tView: TView,\n  tIcu: TIcu,\n  lView: LView,\n  sharedUpdateOpCodes: I18nUpdateOpCodes,\n  create: IcuCreateOpCodes,\n  remove: I18nRemoveOpCodes,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 119 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "12 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "i18nStartFirstCreatePass",
            "complexity": 16,
            "lineCount": 118,
            "parameterCount": 6,
            "snippet": "export function i18nStartFirstCreatePass(\n  tView: TView,\n  parentTNodeIndex: number,\n  lView: LView,\n  index: number,\n  message: string,\n  subTemplateIndex: number,\n) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 118 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createTNodeAndAddOpCode",
            "complexity": 10,
            "lineCount": 50,
            "parameterCount": 7,
            "snippet": "function createTNodeAndAddOpCode(\n  tView: TView,\n  rootTNode: TNode | null,\n  existingTNodes: TNode[],\n  lView: LView,\n  createOpCodes: I18nCreateOpCodes,\n  text: string | null,\n  isICU: boolean,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "icuStart",
            "complexity": 6,
            "lineCount": 62,
            "parameterCount": 7,
            "snippet": "function icuStart(\n  ast: I18nNode[],\n  tView: TView,\n  lView: LView,\n  updateOpCodes: I18nUpdateOpCodes,\n  parentIdx: number,\n  icuExpression: IcuExpression,\n  anchorIdx: number,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "parseIcuCase",
            "complexity": 5,
            "lineCount": 47,
            "parameterCount": 9,
            "snippet": "function parseIcuCase(\n  ast: I18nNode[],\n  tView: TView,\n  tIcu: TIcu,\n  lView: LView,\n  updateOpCodes: I18nUpdateOpCodes,\n  parentIdx: number,\n  caseName: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "9 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/i18n/i18n_postprocess.ts",
        "criticalFunctions": [
          {
            "name": "i18nPostprocess",
            "complexity": 16,
            "lineCount": 93,
            "parameterCount": 2,
            "snippet": "export function i18nPostprocess(\n  message: string,\n  replacements: {[key: string]: string | string[]} = {},\n): string {\n  /**\n   * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n   *\n   * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 93 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/i18n/i18n_util.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/features/host_directives_feature.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/features/inherit_definition_feature.ts",
        "criticalFunctions": [
          {
            "name": "ɵɵInheritDefinitionFeature",
            "complexity": 19,
            "lineCount": 86,
            "parameterCount": 1,
            "snippet": "export function ɵɵInheritDefinitionFeature(\n  definition: DirectiveDef<any> | ComponentDef<any>,\n): void {\n  let superType = getSuperType(definition.type);\n  let shouldInheritFields = true;\n  const inheritanceChain: WritableDef[] = [definition];\n  while (superType) {\n    let superDef: DirectiveDef<any> | ComponentDef<any> | undefined = undefined;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 86 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/instructions/attribute_interpolation.ts",
        "criticalFunctions": [
          {
            "name": "ɵɵattributeInterpolate2",
            "complexity": 3,
            "lineCount": 28,
            "parameterCount": 8,
            "snippet": "export function ɵɵattributeInterpolate2(\n  attrName: string,\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  suffix: string,\n  sanitizer?: SanitizerFn,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵattributeInterpolate3",
            "complexity": 3,
            "lineCount": 31,
            "parameterCount": 10,
            "snippet": "export function ɵɵattributeInterpolate3(\n  attrName: string,\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "10 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵattributeInterpolate4",
            "complexity": 3,
            "lineCount": 34,
            "parameterCount": 12,
            "snippet": "export function ɵɵattributeInterpolate4(\n  attrName: string,\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "12 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵattributeInterpolate5",
            "complexity": 3,
            "lineCount": 50,
            "parameterCount": 14,
            "snippet": "export function ɵɵattributeInterpolate5(\n  attrName: string,\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "14 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵattributeInterpolate6",
            "complexity": 3,
            "lineCount": 55,
            "parameterCount": 16,
            "snippet": "export function ɵɵattributeInterpolate6(\n  attrName: string,\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "16 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/instructions/change_detection.ts",
        "criticalFunctions": [
          {
            "name": "refreshView",
            "complexity": 34,
            "lineCount": 191,
            "parameterCount": 4,
            "snippet": "export function refreshView<T>(\n  tView: TView,\n  lView: LView,\n  templateFn: ComponentTemplate<{}> | null,\n  context: T,\n) {\n  ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n  if (isDestroyed(lView)) return;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 34 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 191 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "detectChangesInView",
            "complexity": 13,
            "lineCount": 54,
            "parameterCount": 2,
            "snippet": "function detectChangesInView(lView: LView, mode: ChangeDetectionMode) {\n  const isInCheckNoChangesPass = ngDevMode && isInCheckNoChangesMode();\n  const tView = lView[TVIEW];\n  const flags = lView[FLAGS];\n  const consumer = lView[REACTIVE_TEMPLATE_CONSUMER];\n  let shouldRefreshView: boolean = !!(\n    mode === ChangeDetectionMode.Global && flags & LViewFlags.CheckAlways\n  );\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/instructions/class_map_interpolation.ts",
        "criticalFunctions": [
          {
            "name": "ɵɵclassMapInterpolate3",
            "complexity": 1,
            "lineCount": 13,
            "parameterCount": 7,
            "snippet": "export function ɵɵclassMapInterpolate3(\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  suffix: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵclassMapInterpolate4",
            "complexity": 1,
            "lineCount": 15,
            "parameterCount": 9,
            "snippet": "export function ɵɵclassMapInterpolate4(\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  i2: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "9 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵclassMapInterpolate5",
            "complexity": 1,
            "lineCount": 30,
            "parameterCount": 11,
            "snippet": "export function ɵɵclassMapInterpolate5(\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  i2: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "11 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵclassMapInterpolate6",
            "complexity": 1,
            "lineCount": 34,
            "parameterCount": 13,
            "snippet": "export function ɵɵclassMapInterpolate6(\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  i2: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "13 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵclassMapInterpolate7",
            "complexity": 1,
            "lineCount": 38,
            "parameterCount": 15,
            "snippet": "export function ɵɵclassMapInterpolate7(\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  i2: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "15 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/instructions/control_flow.ts",
        "criticalFunctions": [
          {
            "name": "ɵɵrepeater",
            "complexity": 9,
            "lineCount": 80,
            "parameterCount": 1,
            "snippet": "export function ɵɵrepeater(collection: Iterable<unknown> | undefined | null): void {\n  const prevConsumer = setActiveConsumer(null);\n  const metadataSlotIdx = getSelectedIndex();\n  try {\n    const hostLView = getLView();\n    const hostTView = hostLView[TVIEW];\n    const metadata = hostLView[metadataSlotIdx] as RepeaterMetadata;\n    const containerIndex = metadataSlotIdx + 1;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ɵɵconditional",
            "complexity": 8,
            "lineCount": 56,
            "parameterCount": 2,
            "snippet": "export function ɵɵconditional<T>(matchingTemplateIndex: number, contextValue?: T) {\n  performanceMarkFeature('NgControlFlow');\n  const hostLView = getLView();\n  const bindingIndex = nextBindingIndex();\n  const prevMatchingTemplateIndex: number =\n    hostLView[bindingIndex] !== NO_CHANGE ? hostLView[bindingIndex] : -1;\n  const prevContainer =\n    prevMatchingTemplateIndex !== -1\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ɵɵrepeaterCreate",
            "complexity": 6,
            "lineCount": 64,
            "parameterCount": 13,
            "snippet": "export function ɵɵrepeaterCreate(\n  index: number,\n  templateFn: ComponentTemplate<unknown>,\n  decls: number,\n  vars: number,\n  tagName: string | null,\n  attrsIndex: number | null,\n  trackByFn: TrackByFunction<unknown>,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "13 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/instructions/element.ts",
        "criticalFunctions": [
          {
            "name": "locateOrCreateElementNodeImpl",
            "complexity": 15,
            "lineCount": 62,
            "parameterCount": 6,
            "snippet": "function locateOrCreateElementNodeImpl(\n  tView: TView,\n  lView: LView,\n  tNode: TNode,\n  renderer: Renderer,\n  name: string,\n  index: number,\n): RElement {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ɵɵelementStart",
            "complexity": 12,
            "lineCount": 67,
            "parameterCount": 4,
            "snippet": "export function ɵɵelementStart(\n  index: number,\n  name: string,\n  attrsIndex?: number | null,\n  localRefsIndex?: number,\n): typeof ɵɵelementStart {\n  const lView = getLView();\n  const tView = getTView();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/instructions/element_container.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/instructions/element_validation.ts",
        "criticalFunctions": [
          {
            "name": "validateElementIsKnown",
            "complexity": 16,
            "lineCount": 52,
            "parameterCount": 5,
            "snippet": "export function validateElementIsKnown(\n  element: RElement,\n  lView: LView,\n  tagName: string | null,\n  schemas: SchemaMetadata[] | null,\n  hasDirectives: boolean,\n): void {\n  if (schemas === null) return;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "handleUnknownPropertyError",
            "complexity": 8,
            "lineCount": 55,
            "parameterCount": 4,
            "snippet": "export function handleUnknownPropertyError(\n  propName: string,\n  tagName: string | null,\n  nodeType: TNodeType,\n  lView: LView,\n): void {\n  if (!tagName && nodeType === TNodeType.Container) {\n    tagName = 'ng-template';\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/instructions/interpolation.ts",
        "criticalFunctions": [
          {
            "name": "interpolation5",
            "complexity": 3,
            "lineCount": 33,
            "parameterCount": 12,
            "snippet": "export function interpolation5(\n  lView: LView,\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "12 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "interpolation6",
            "complexity": 3,
            "lineCount": 37,
            "parameterCount": 14,
            "snippet": "export function interpolation6(\n  lView: LView,\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "14 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "interpolation7",
            "complexity": 3,
            "lineCount": 41,
            "parameterCount": 16,
            "snippet": "export function interpolation7(\n  lView: LView,\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "16 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "interpolation8",
            "complexity": 3,
            "lineCount": 45,
            "parameterCount": 18,
            "snippet": "export function interpolation8(\n  lView: LView,\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "18 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "interpolation3",
            "complexity": 2,
            "lineCount": 18,
            "parameterCount": 8,
            "snippet": "export function interpolation3(\n  lView: LView,\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/instructions/listener.ts",
        "criticalFunctions": [
          {
            "name": "listenerInternal",
            "complexity": 20,
            "lineCount": 100,
            "parameterCount": 7,
            "snippet": "export function listenerInternal(\n  tView: TView,\n  lView: LView<{} | null>,\n  renderer: Renderer,\n  tNode: TNode,\n  eventName: string,\n  listenerFn: (e?: any) => any,\n  eventTargetResolver?: GlobalTargetResolver,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 100 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/instructions/projection.ts",
        "criticalFunctions": [
          {
            "name": "ɵɵprojection",
            "complexity": 10,
            "lineCount": 57,
            "parameterCount": 6,
            "snippet": "export function ɵɵprojection(\n  nodeIndex: number,\n  selectorIndex: number = 0,\n  attrs?: TAttributes,\n  fallbackTemplateFn?: ComponentTemplate<unknown>,\n  fallbackDecls?: number,\n  fallbackVars?: number,\n): void {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/instructions/property_interpolation.ts",
        "criticalFunctions": [
          {
            "name": "ɵɵpropertyInterpolate2",
            "complexity": 3,
            "lineCount": 37,
            "parameterCount": 7,
            "snippet": "export function ɵɵpropertyInterpolate2(\n  propName: string,\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  suffix: string,\n  sanitizer?: SanitizerFn,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵpropertyInterpolate3",
            "complexity": 3,
            "lineCount": 40,
            "parameterCount": 9,
            "snippet": "export function ɵɵpropertyInterpolate3(\n  propName: string,\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "9 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵpropertyInterpolate4",
            "complexity": 3,
            "lineCount": 43,
            "parameterCount": 11,
            "snippet": "export function ɵɵpropertyInterpolate4(\n  propName: string,\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "11 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵpropertyInterpolate5",
            "complexity": 3,
            "lineCount": 59,
            "parameterCount": 13,
            "snippet": "export function ɵɵpropertyInterpolate5(\n  propName: string,\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "13 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵpropertyInterpolate6",
            "complexity": 3,
            "lineCount": 64,
            "parameterCount": 15,
            "snippet": "export function ɵɵpropertyInterpolate6(\n  propName: string,\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "15 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/instructions/render.ts",
        "criticalFunctions": [
          {
            "name": "renderView",
            "complexity": 11,
            "lineCount": 63,
            "parameterCount": 3,
            "snippet": "export function renderView<T>(tView: TView, lView: LView<T>, context: T): void {\n  ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n  ngDevMode && assertNotReactive(renderView.name);\n  enterView(lView);\n  try {\n    const viewQuery = tView.viewQuery;\n    if (viewQuery !== null) {\n      executeViewQueryFn<T>(RenderFlags.Create, viewQuery, context);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 63 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/instructions/shared.ts",
        "criticalFunctions": [
          {
            "name": "elementPropertyInternal",
            "complexity": 14,
            "lineCount": 46,
            "parameterCount": 8,
            "snippet": "export function elementPropertyInternal<T>(\n  tView: TView,\n  tNode: TNode,\n  lView: LView,\n  propName: string,\n  value: T,\n  renderer: Renderer,\n  sanitizer: SanitizerFn | null | undefined,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "setDirectiveInput",
            "complexity": 14,
            "lineCount": 56,
            "parameterCount": 6,
            "snippet": "export function setDirectiveInput(\n  tNode: TNode,\n  tView: TView,\n  lView: LView,\n  target: DirectiveDef<unknown>,\n  publicName: string,\n  value: string,\n): boolean {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "setElementAttribute",
            "complexity": 6,
            "lineCount": 20,
            "parameterCount": 7,
            "snippet": "export function setElementAttribute(\n  renderer: Renderer,\n  element: RElement,\n  namespace: string | null | undefined,\n  tagName: string | null,\n  name: string,\n  value: any,\n  sanitizer: SanitizerFn | null | undefined,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/instructions/style_map_interpolation.ts",
        "criticalFunctions": [
          {
            "name": "ɵɵstyleMapInterpolate3",
            "complexity": 1,
            "lineCount": 13,
            "parameterCount": 7,
            "snippet": "export function ɵɵstyleMapInterpolate3(\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  suffix: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵstyleMapInterpolate4",
            "complexity": 1,
            "lineCount": 15,
            "parameterCount": 9,
            "snippet": "export function ɵɵstyleMapInterpolate4(\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  i2: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "9 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵstyleMapInterpolate5",
            "complexity": 1,
            "lineCount": 30,
            "parameterCount": 11,
            "snippet": "export function ɵɵstyleMapInterpolate5(\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  i2: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "11 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵstyleMapInterpolate6",
            "complexity": 1,
            "lineCount": 34,
            "parameterCount": 13,
            "snippet": "export function ɵɵstyleMapInterpolate6(\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  i2: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "13 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵstyleMapInterpolate7",
            "complexity": 1,
            "lineCount": 38,
            "parameterCount": 15,
            "snippet": "export function ɵɵstyleMapInterpolate7(\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  i2: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "15 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/instructions/styling.ts",
        "criticalFunctions": [
          {
            "name": "updateStylingMap",
            "complexity": 19,
            "lineCount": 58,
            "parameterCount": 8,
            "snippet": "function updateStylingMap(\n  tView: TView,\n  tNode: TNode,\n  lView: LView,\n  renderer: Renderer,\n  oldKeyValueArray: KeyValueArray<any>,\n  newKeyValueArray: KeyValueArray<any>,\n  isClassBased: boolean,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "findStylingValue",
            "complexity": 15,
            "lineCount": 59,
            "parameterCount": 6,
            "snippet": "function findStylingValue(\n  tData: TData,\n  tNode: TNode | null,\n  lView: LView,\n  prop: string,\n  index: number,\n  isClassBased: boolean,\n): any {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "checkStylingMap",
            "complexity": 14,
            "lineCount": 60,
            "parameterCount": 4,
            "snippet": "export function checkStylingMap(\n  keyValueArraySet: (keyValueArray: KeyValueArray<any>, key: string, value: any) => void,\n  stringParser: (styleKeyValueArray: KeyValueArray<any>, text: string) => void,\n  value: any | NO_CHANGE,\n  isClassBased: boolean,\n): void {\n  const tView = getTView();\n  const bindingIndex = incrementBindingIndex(2);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 60 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "wrapInStaticStylingKey",
            "complexity": 12,
            "lineCount": 79,
            "parameterCount": 4,
            "snippet": "export function wrapInStaticStylingKey(\n  tData: TData,\n  tNode: TNode,\n  stylingKey: TStylingKey,\n  isClassBased: boolean,\n): TStylingKey {\n  const hostDirectiveDef = getCurrentDirectiveDef(tData);\n  let residual = isClassBased ? tNode.residualClasses : tNode.residualStyles;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "updateStyling",
            "complexity": 6,
            "lineCount": 33,
            "parameterCount": 8,
            "snippet": "function updateStyling(\n  tView: TView,\n  tNode: TNode,\n  lView: LView,\n  renderer: Renderer,\n  prop: string,\n  value: string | undefined | null | boolean,\n  isClassBased: boolean,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/instructions/template.ts",
        "criticalFunctions": [
          {
            "name": "locateOrCreateContainerAnchorImpl",
            "complexity": 11,
            "lineCount": 53,
            "parameterCount": 4,
            "snippet": "function locateOrCreateContainerAnchorImpl(\n  tView: TView,\n  lView: LView,\n  tNode: TNode,\n  index: number,\n): RComment {\n  const hydrationInfo = lView[HYDRATION];\n  const isNodeCreationMode =\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "templateFirstCreatePass",
            "complexity": 7,
            "lineCount": 54,
            "parameterCount": 9,
            "snippet": "function templateFirstCreatePass(\n  index: number,\n  tView: TView,\n  lView: LView,\n  templateFn: ComponentTemplate<any> | null,\n  decls: number,\n  vars: number,\n  tagName?: string | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "9 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "declareTemplate",
            "complexity": 5,
            "lineCount": 59,
            "parameterCount": 10,
            "snippet": "export function declareTemplate(\n  declarationLView: LView,\n  declarationTView: TView,\n  index: number,\n  templateFn: ComponentTemplate<any> | null,\n  decls: number,\n  vars: number,\n  tagName?: string | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "10 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵtemplate",
            "complexity": 1,
            "lineCount": 27,
            "parameterCount": 8,
            "snippet": "export function ɵɵtemplate(\n  index: number,\n  templateFn: ComponentTemplate<any> | null,\n  decls: number,\n  vars: number,\n  tagName?: string | null,\n  attrsIndex?: number | null,\n  localRefsIndex?: number | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/instructions/text_interpolation.ts",
        "criticalFunctions": [
          {
            "name": "ɵɵtextInterpolate3",
            "complexity": 2,
            "lineCount": 16,
            "parameterCount": 7,
            "snippet": "export function ɵɵtextInterpolate3(\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  suffix: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵtextInterpolate4",
            "complexity": 2,
            "lineCount": 18,
            "parameterCount": 9,
            "snippet": "export function ɵɵtextInterpolate4(\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  i2: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "9 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵtextInterpolate5",
            "complexity": 2,
            "lineCount": 20,
            "parameterCount": 11,
            "snippet": "export function ɵɵtextInterpolate5(\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  i2: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "11 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵtextInterpolate6",
            "complexity": 2,
            "lineCount": 37,
            "parameterCount": 13,
            "snippet": "export function ɵɵtextInterpolate6(\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  i2: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "13 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "ɵɵtextInterpolate7",
            "complexity": 2,
            "lineCount": 41,
            "parameterCount": 15,
            "snippet": "export function ɵɵtextInterpolate7(\n  prefix: string,\n  v0: any,\n  i0: string,\n  v1: any,\n  i1: string,\n  v2: any,\n  i2: string,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "15 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/interfaces/attribute_marker.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/interfaces/styling.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/jit/directive.ts",
        "criticalFunctions": [
          {
            "name": "getStandaloneDefFunctions",
            "complexity": 29,
            "lineCount": 116,
            "parameterCount": 2,
            "snippet": "function getStandaloneDefFunctions(\n  type: Type<any>,\n  imports: Type<any>[],\n): {\n  directiveDefs: () => DirectiveDefList;\n  pipeDefs: () => PipeDefList;\n} {\n  let cachedDirectiveDefs: DirectiveDefList | null = null;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 29 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 116 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "compileComponent",
            "complexity": 28,
            "lineCount": 151,
            "parameterCount": 2,
            "snippet": "export function compileComponent(type: Type<any>, metadata: Component): void {\n  (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n  let ngComponentDef: ComponentDef<unknown> | null = null;\n  maybeQueueResolutionOfComponentResources(type, metadata);\n  addDirectiveFactoryDef(type, metadata);\n  Object.defineProperty(type, NG_COMP_DEF, {\n    get: () => {\n      if (ngComponentDef === null) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 151 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "get",
            "complexity": 26,
            "lineCount": 128,
            "parameterCount": 0,
            "snippet": "() => {\n      if (ngComponentDef === null) {\n        const compiler = getCompilerFacade({\n          usage: JitCompilerUsage.Decorator,\n          kind: 'component',\n          type: type,\n        });\n        if (componentNeedsResolution(metadata)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 128 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "directiveDefs",
            "complexity": 17,
            "lineCount": 53,
            "parameterCount": 0,
            "snippet": "() => {\n    if (!USE_RUNTIME_DEPS_TRACKER_FOR_JIT) {\n      if (cachedDirectiveDefs === null) {\n        cachedDirectiveDefs = [getComponentDef(type)!];\n        const seen = new Set<Type<unknown>>([type]);\n        for (const rawDep of imports) {\n          ngDevMode && verifyStandaloneImport(rawDep, type);\n          const dep = resolveForwardRef(rawDep);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/jit/module.ts",
        "criticalFunctions": [
          {
            "name": "verifySemanticsOfNgModuleDef",
            "complexity": 38,
            "lineCount": 180,
            "parameterCount": 3,
            "snippet": "function verifySemanticsOfNgModuleDef(\n  moduleType: NgModuleType,\n  allowDuplicateDeclarationsInRoot: boolean,\n  importingModule?: NgModuleType,\n): void {\n  if (verifiedNgModule.get(moduleType)) return;\n  if (isStandalone(moduleType)) return;\n  verifiedNgModule.set(moduleType, true);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 38 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 180 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "compileNgModuleDefs",
            "complexity": 20,
            "lineCount": 102,
            "parameterCount": 3,
            "snippet": "export function compileNgModuleDefs(\n  moduleType: NgModuleType,\n  ngModule: NgModule,\n  allowDuplicateDeclarationsInRoot: boolean = false,\n): void {\n  ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n  ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n  const declarations: Type<any>[] = flatten(ngModule.declarations || EMPTY_ARRAY);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 102 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "transitiveScopesForNgModule",
            "complexity": 6,
            "lineCount": 75,
            "parameterCount": 1,
            "snippet": "export function transitiveScopesForNgModule<T>(moduleType: Type<T>): NgModuleTransitiveScopes {\n  const def = getNgModuleDef(moduleType, true);\n  if (def.transitiveCompileScopes !== null) {\n    return def.transitiveCompileScopes;\n  }\n  const scopes: NgModuleTransitiveScopes = {\n    schemas: def.schemas || null,\n    compilation: {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/queries/query.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/styling/style_binding_list.ts",
        "criticalFunctions": [
          {
            "name": "insertTStylingBinding",
            "complexity": 15,
            "lineCount": 99,
            "parameterCount": 6,
            "snippet": "export function insertTStylingBinding(\n  tData: TData,\n  tNode: TNode,\n  tStylingKeyWithStatic: TStylingKey,\n  index: number,\n  isHostBinding: boolean,\n  isClassBinding: boolean,\n): void {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 99 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/styling/styling_parser.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/render3/reactivity/after_render_effect.ts",
        "criticalFunctions": [
          {
            "name": "<anonymous>",
            "complexity": 11,
            "lineCount": 74,
            "parameterCount": 0,
            "snippet": "() => ({\n  ...SIGNAL_NODE,\n  consumerIsAlwaysLive: true,\n  consumerAllowSignalWrites: true,\n  value: NOT_SET,\n  cleanup: null,\n  /** Called when the effect becomes dirty */\n  consumerMarkedDirty(this: AfterRenderPhaseEffectNode): void {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/reactivity/effect.ts",
        "criticalFunctions": [
          {
            "name": "effect",
            "complexity": 15,
            "lineCount": 67,
            "parameterCount": 2,
            "snippet": "export function effect(\n  effectFn: (onCleanup: EffectCleanupRegisterFn) => void,\n  options?: CreateEffectOptions,\n): EffectRef {\n  if (useMicrotaskEffectsByDefault) {\n    if (ngDevMode && options?.forceRoot) {\n      throw new Error(`Cannot use 'forceRoot' option with microtask effects on`);\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 7,
            "lineCount": 55,
            "parameterCount": 0,
            "snippet": "() => ({\n    ...REACTIVE_NODE,\n    consumerIsAlwaysLive: true,\n    consumerAllowSignalWrites: true,\n    dirty: true,\n    hasRun: false,\n    cleanupFns: undefined,\n    zone: null,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/reactivity/patch.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/render3/util/attrs_utils.ts",
        "criticalFunctions": [
          {
            "name": "mergeHostAttribute",
            "complexity": 17,
            "lineCount": 67,
            "parameterCount": 5,
            "snippet": "export function mergeHostAttribute(\n  dst: TAttributes,\n  marker: AttributeMarker,\n  key1: string,\n  key2: string | null,\n  value: string | null,\n): void {\n  let i = 0;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/util/defer.ts",
        "criticalFunctions": [
          {
            "name": "findDeferBlocks",
            "complexity": 6,
            "lineCount": 53,
            "parameterCount": 3,
            "snippet": "function findDeferBlocks(node: Node, lView: LView, results: DeferBlockData[]) {\n  const registry = lView[INJECTOR].get(DEHYDRATED_BLOCK_REGISTRY, null, {optional: true});\n  const blocks: DeferBlockDetails[] = [];\n  getDeferBlocksInternal(lView, blocks);\n  for (const details of blocks) {\n    const native = getNativeByTNode(details.tNode, details.lView);\n    const lDetails = getLDeferBlockDetails(details.lView, details.tNode);\n    if (!node.contains(native as Node)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/util/discovery_utils.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/util/injector_discovery_utils.ts",
        "criticalFunctions": [
          {
            "name": "getDependenciesFromInjectable",
            "complexity": 13,
            "lineCount": 86,
            "parameterCount": 2,
            "snippet": "export function getDependenciesFromInjectable<T>(\n  injector: Injector,\n  token: Type<T> | InjectionToken<T>,\n): {instance: T; dependencies: Omit<InjectedService, 'injectedIn'>[]} | undefined {\n  const instance = injector.get(token, null, {self: true, optional: true});\n  if (instance === null) {\n    throw new Error(`Unable to determine instance of ${token} in given injector`);\n  }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 86 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 12,
            "lineCount": 67,
            "parameterCount": 1,
            "snippet": "(dep) => {\n    const formattedDependency: Omit<InjectedService, 'injectedIn'> = {\n      value: dep.value,\n    };\n    const flags = dep.flags as InternalInjectFlags;\n    formattedDependency.flags = {\n      optional: (InternalInjectFlags.Optional & flags) === InternalInjectFlags.Optional,\n      host: (InternalInjectFlags.Host & flags) === InternalInjectFlags.Host,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "walkProviderTreeToDiscoverImportPaths",
            "complexity": 9,
            "lineCount": 55,
            "parameterCount": 2,
            "snippet": "function walkProviderTreeToDiscoverImportPaths(\n  providerToPath: Map<SingleProvider, (Type<unknown> | InjectorType<unknown>)[]>,\n  visitedContainers: Set<Type<unknown>>,\n): (provider: SingleProvider, container: Type<unknown> | InjectorType<unknown>) => void {\n  return (provider: SingleProvider, container: Type<unknown> | InjectorType<unknown>) => {\n    if (!providerToPath.has(provider)) {\n      providerToPath.set(provider, [container]);\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getInjectorParent",
            "complexity": 7,
            "lineCount": 52,
            "parameterCount": 1,
            "snippet": "function getInjectorParent(injector: Injector): Injector | null {\n  if (injector instanceof R3Injector) {\n    return injector.parent;\n  }\n  let tNode: TElementNode | TContainerNode | TElementContainerNode | null;\n  let lView: LView<unknown>;\n  if (injector instanceof NodeInjector) {\n    tNode = getNodeInjectorTNode(injector);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/util/view_utils.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/util/security/trusted_type_defs.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/util/security/trusted_types.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/util/security/trusted_types_bypass.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/view/construction.ts",
        "criticalFunctions": [
          {
            "name": "createLView",
            "complexity": 19,
            "lineCount": 52,
            "parameterCount": 11,
            "snippet": "export function createLView<T>(\n  parentLView: LView | null,\n  tView: TView,\n  context: T | null,\n  flags: LViewFlags,\n  host: RElement | null,\n  tHostNode: TNode | null,\n  environment: LViewEnvironment | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "11 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "createTView",
            "complexity": 6,
            "lineCount": 62,
            "parameterCount": 11,
            "snippet": "export function createTView(\n  type: TViewType,\n  declTNode: TNode | null,\n  templateFn: ComponentTemplate<any> | null,\n  decls: number,\n  vars: number,\n  directives: DirectiveDefListOrFactory | null,\n  pipes: PipeDefListOrFactory | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "11 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "high-complexity"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/view/container.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/src/render3/view/directive_outputs.ts",
        "criticalFunctions": [
          {
            "name": "listenToDirectiveOutput",
            "complexity": 14,
            "lineCount": 59,
            "parameterCount": 5,
            "snippet": "function listenToDirectiveOutput(\n  tNode: TNode,\n  lView: LView,\n  target: DirectiveDef<unknown>,\n  eventName: string,\n  listenerFn: (e?: any) => any,\n): boolean {\n  let hostIndex: number | null = null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/src/render3/view/directives.ts",
        "criticalFunctions": [
          {
            "name": "initializeDirectives",
            "complexity": 25,
            "lineCount": 103,
            "parameterCount": 7,
            "snippet": "function initializeDirectives(\n  tView: TView,\n  lView: LView<unknown>,\n  tNode: TElementNode | TContainerNode | TElementContainerNode,\n  directives: DirectiveDef<unknown>[],\n  exportsMap: {[key: string]: number} | null,\n  hostDirectiveDefs: HostDirectiveDefs | null,\n  hostDirectiveRanges: HostDirectiveRanges | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 103 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "setupInitialInputs",
            "complexity": 19,
            "lineCount": 64,
            "parameterCount": 3,
            "snippet": "function setupInitialInputs(tNode: TNode, directiveIndex: number, isHostDirective: boolean): void {\n  const {attrs, inputs, hostDirectiveInputs} = tNode;\n  if (\n    attrs === null ||\n    (!isHostDirective && inputs === null) ||\n    (isHostDirective && hostDirectiveInputs === null) ||\n    isInlineTemplate(tNode)\n  ) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "resolveHostDirectives",
            "complexity": 12,
            "lineCount": 58,
            "parameterCount": 1,
            "snippet": "function resolveHostDirectives(matches: DirectiveDef<unknown>[]): HostDirectiveResolution | null {\n  let componentDef: ComponentDef<unknown> | null = null;\n  let hasHostDirectives = false;\n  for (let i = 0; i < matches.length; i++) {\n    const def = matches[i];\n    if (i === 0 && isComponentDef(def)) {\n      componentDef = def;\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-browser/animations/async/src/async-animations.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/platform-browser/animations/async/src/async_animation_renderer.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/localize/src/localize/src/localize.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-browser/src/dom/events/hammer_gestures.ts",
        "criticalFunctions": [
          {
            "name": "addEventListener",
            "complexity": 11,
            "lineCount": 72,
            "parameterCount": 3,
            "snippet": "override addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n    if (!(window as any).Hammer && this.loader) {\n      this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader!());\n      let cancelRegistration = false;\n      let deregister: Function = () => {\n        cancelRegistration = true;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/platform-browser/src/dom/events/key_events.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/upgrade/src/dynamic/src/upgrade_adapter.ts",
        "criticalFunctions": [
          {
            "name": "declareNg1Module",
            "complexity": 9,
            "lineCount": 139,
            "parameterCount": 1,
            "snippet": "private declareNg1Module(modules: string[] = []): {\n    ng1Module: IModule;\n    ng2BootstrapDeferred: Deferred<IInjectorService>;\n    ngZone: NgZone;\n  } {\n    const delayApplyExps: Function[] = [];\n    let original$applyFn: Function;\n    let rootScopePrototype: any;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 139 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 6,
            "lineCount": 62,
            "parameterCount": 2,
            "snippet": "(ng1Injector: IInjectorService, rootScope: IRootScopeService) => {\n        UpgradeNg1ComponentAdapterBuilder.resolve(this.ng1ComponentsToBeUpgraded, ng1Injector)\n          .then(() => {\n            @NgModule({\n              jit: true,\n              providers: [\n                {provide: $INJECTOR, useFactory: () => ng1Injector},\n                {provide: $COMPILE, useFactory: () => ng1Injector.get($COMPILE)},\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 6,
            "lineCount": 58,
            "parameterCount": 0,
            "snippet": "() => {\n            @NgModule({\n              jit: true,\n              providers: [\n                {provide: $INJECTOR, useFactory: () => ng1Injector},\n                {provide: $COMPILE, useFactory: () => ng1Injector.get($COMPILE)},\n                this.upgradedProviders,\n              ],\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file",
            "mock-heavy"
          ]
        }
      },
      {
        "file": "packages/upgrade/src/dynamic/src/upgrade_ng1_adapter.ts",
        "criticalFunctions": [
          {
            "name": "extractBindings",
            "complexity": 11,
            "lineCount": 58,
            "parameterCount": 0,
            "snippet": "extractBindings() {\n    const btcIsObject = typeof this.directive!.bindToController === 'object';\n    if (btcIsObject && Object.keys(this.directive!.scope!).length) {\n      throw new Error(\n        `Binding definitions on scope and controller at the same time are not supported.`,\n      );\n    }\n    const context = btcIsObject ? this.directive!.bindToController : this.directive!.scope;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/upgrade/static/testing/src/create_angular_testing_module.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/upgrade/static/testing/src/create_angularjs_testing_module.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/upgrade/src/common/src/downgrade_component_adapter.ts",
        "criticalFunctions": [
          {
            "name": "setupInputs",
            "complexity": 17,
            "lineCount": 95,
            "parameterCount": 3,
            "snippet": "private setupInputs(\n    manuallyAttachView: boolean,\n    propagateDigest = true,\n    {componentRef, changeDetector, viewChangeDetector}: ComponentInfo,\n  ): void {\n    const attrs = this.attrs;\n    const inputs = this.componentFactory.inputs || [];\n    for (const input of inputs) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 95 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/upgrade/src/common/src/upgrade_helper.ts",
        "criticalFunctions": [
          {
            "name": "prepareTransclusion",
            "complexity": 10,
            "lineCount": 84,
            "parameterCount": 0,
            "snippet": "prepareTransclusion(): ILinkFn | undefined {\n    const transclude = this.directive.transclude;\n    const contentChildNodes = this.extractChildNodes();\n    const attachChildrenFn: ILinkFn = (scope, cloneAttachFn) => {\n      scope = scope || {$destroy: () => undefined};\n      return cloneAttachFn!($template, scope);\n    };\n    let $template = contentChildNodes;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 84 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/upgrade/src/common/src/util.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/upgrade/src/common/src/version.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/common/src/directives/ng_optimized_image/image_loaders/constants.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/animations/browser/src/render/web_animations/animatable_props_set.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/animations/browser/src/render/web_animations/web_animations_player.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/linker/babel/src/ast/babel_ast_factory.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/linker/babel/src/ast/babel_ast_host.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/src/injectable.ts",
        "criticalFunctions": [
          {
            "name": "getDep",
            "complexity": 16,
            "lineCount": 56,
            "parameterCount": 2,
            "snippet": "function getDep(dep: ts.Expression, reflector: ReflectionHost): R3DependencyMetadata {\n  const meta: R3DependencyMetadata = {\n    token: new WrappedNodeExpr(dep),\n    attributeNameType: null,\n    host: false,\n    optional: false,\n    self: false,\n    skipSelf: false,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "extractInjectableMetadata",
            "complexity": 15,
            "lineCount": 76,
            "parameterCount": 3,
            "snippet": "function extractInjectableMetadata(\n  clazz: ClassDeclaration,\n  decorator: Decorator,\n  reflector: ReflectionHost,\n): R3InjectableMetadata {\n  const name = clazz.name.text;\n  const type = wrapTypeReference(reflector, clazz);\n  const typeArgumentCount = reflector.getGenericArityOfClass(clazz) || 0;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 76 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/src/pipe.ts",
        "criticalFunctions": [
          {
            "name": "analyze",
            "complexity": 14,
            "lineCount": 93,
            "parameterCount": 2,
            "snippet": "analyze(\n    clazz: ClassDeclaration,\n    decorator: Readonly<Decorator>,\n  ): AnalysisOutput<PipeHandlerData> {\n    this.perf.eventCount(PerfEvent.AnalyzePipe);\n    const name = clazz.name.text;\n    const type = wrapTypeReference(this.reflector, clazz);\n    if (decorator.args === null) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 93 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/linker/src/ast/typescript/typescript_ast_host.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/partial_linkers/partial_component_linker_1.ts",
        "criticalFunctions": [
          {
            "name": "toR3ComponentMeta",
            "complexity": 24,
            "lineCount": 150,
            "parameterCount": 2,
            "snippet": "private toR3ComponentMeta(\n    metaObj: AstObject<R3DeclareComponentMetadata, TExpression>,\n    version: string,\n  ): R3ComponentMetadata<R3TemplateDependencyMetadata> {\n    const interpolation = parseInterpolationConfig(metaObj);\n    const templateSource = metaObj.getValue('template');\n    const isInline = metaObj.has('isInline') ? metaObj.getBoolean('isInline') : false;\n    const templateInfo = this.getTemplateInfo(templateSource, isInline);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 150 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/linker/src/file_linker/partial_linkers/partial_directive_linker_1.ts",
        "criticalFunctions": [
          {
            "name": "toR3DirectiveMeta",
            "complexity": 14,
            "lineCount": 51,
            "parameterCount": 4,
            "snippet": "export function toR3DirectiveMeta<TExpression>(\n  metaObj: AstObject<R3DeclareDirectiveMetadata, TExpression>,\n  code: string,\n  sourceUrl: AbsoluteFsPath,\n  version: string,\n): R3DirectiveMetadata {\n  const typeExpr = metaObj.getValue('type');\n  const typeName = typeExpr.getSymbolName();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/core/api/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/core/src/compiler.ts",
        "criticalFunctions": [
          {
            "name": "makeCompilation",
            "complexity": 29,
            "lineCount": 399,
            "parameterCount": 0,
            "snippet": "private makeCompilation(): LazyCompilationState {\n    const isCore =\n      this.options._isAngularCoreCompilation ?? isAngularCorePackage(this.inputProgram);\n    let compilationMode: CompilationMode = CompilationMode.FULL;\n    if (!isCore) {\n      switch (this.options.compilationMode) {\n        case 'full':\n          compilationMode = CompilationMode.FULL;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 29 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 399 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getTypeCheckingConfig",
            "complexity": 20,
            "lineCount": 149,
            "parameterCount": 0,
            "snippet": "private getTypeCheckingConfig(): TypeCheckingConfig {\n    const strictTemplates = !!this.options.strictTemplates;\n    const useInlineTypeConstructors = this.programDriver.supportsInlineOperations;\n    const checkTwoWayBoundEvents = this.options['_checkTwoWayBoundEvents'] ?? false;\n    let allowSignalsInTwoWayBindings =\n      coreHasSymbol(this.inputProgram, R3Identifiers.unwrapWritableSignal) ??\n      (this.angularCoreVersion === null ||\n        coreVersionSupportsFeature(this.angularCoreVersion, '>= 17.2.0'));\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 149 lines, consider splitting"
              }
            ]
          },
          {
            "name": "prepareEmit",
            "complexity": 11,
            "lineCount": 92,
            "parameterCount": 0,
            "snippet": "prepareEmit(): {\n    transformers: ts.CustomTransformers;\n  } {\n    const compilation = this.ensureAnalyzed();\n    untagAllTsFiles(this.inputProgram);\n    const coreImportsFrom = compilation.isCore ? getR3SymbolsFile(this.inputProgram) : null;\n    let importRewriter: ImportRewriter;\n    if (coreImportsFrom !== null) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 92 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "verifyCompatibleTypeCheckOptions",
            "complexity": 10,
            "lineCount": 82,
            "parameterCount": 1,
            "snippet": "function* verifyCompatibleTypeCheckOptions(\n  options: NgCompilerOptions,\n): Generator<ts.Diagnostic, void, void> {\n  if (options.fullTemplateTypeCheck === false && options.strictTemplates === true) {\n    yield makeConfigDiagnostic({\n      category: ts.DiagnosticCategory.Error,\n      code: ErrorCode.CONFIG_STRICT_TEMPLATES_IMPLIES_FULL_TEMPLATE_TYPECHECK,\n      messageText: `\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 82 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "incrementalFromStateTicket",
            "complexity": 2,
            "lineCount": 35,
            "parameterCount": 10,
            "snippet": "export function incrementalFromStateTicket(\n  oldProgram: ts.Program,\n  oldState: IncrementalState,\n  newProgram: ts.Program,\n  options: NgCompilerOptions,\n  incrementalBuildStrategy: IncrementalBuildStrategy,\n  programDriver: ProgramDriver,\n  modifiedResourceFiles: Set<AbsoluteFsPath>,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "10 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/core/src/host.ts",
        "criticalFunctions": [
          {
            "name": "wrap",
            "complexity": 7,
            "lineCount": 76,
            "parameterCount": 4,
            "snippet": "static wrap(\n    delegate: ts.CompilerHost,\n    inputFiles: ReadonlyArray<string>,\n    options: NgCompilerOptions,\n    oldProgram: ts.Program | null,\n  ): NgCompilerHost {\n    const topLevelShimGenerators: TopLevelShimGenerator[] = [];\n    const perFileShimGenerators: PerFileShimGenerator[] = [];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 76 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/cycles/src/imports.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/entry_point/src/private_export_checker.ts",
        "criticalFunctions": [
          {
            "name": "checkForPrivateExports",
            "complexity": 7,
            "lineCount": 76,
            "parameterCount": 3,
            "snippet": "export function checkForPrivateExports(\n  entryPoint: ts.SourceFile,\n  checker: ts.TypeChecker,\n  refGraph: ReferenceGraph,\n): ts.Diagnostic[] {\n  const diagnostics: ts.Diagnostic[] = [];\n  const topLevelExports = new Set<DeclarationNode>();\n  const moduleSymbol = checker.getSymbolAtLocation(entryPoint);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 76 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/diagnostics/src/error_details_base_url.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/hmr/src/extract_dependencies.ts",
        "criticalFunctions": [
          {
            "name": "isTopLevelIdentifierReference",
            "complexity": 52,
            "lineCount": 120,
            "parameterCount": 1,
            "snippet": "private isTopLevelIdentifierReference(identifier: ts.Identifier): boolean {\n    let node = identifier as ts.Expression;\n    let parent = node.parent;\n    if (!parent) {\n      return false;\n    }\n    if (ts.isParenthesizedExpression(parent) && parent.expression === node) {\n      while (parent && ts.isParenthesizedExpression(parent)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 52 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 120 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getTopLevelDeclarationNames",
            "complexity": 15,
            "lineCount": 61,
            "parameterCount": 1,
            "snippet": "function getTopLevelDeclarationNames(sourceFile: ts.SourceFile): Set<string> {\n  const results = new Set<string>();\n  for (const node of sourceFile.statements) {\n    if (\n      ts.isClassDeclaration(node) ||\n      ts.isFunctionDeclaration(node) ||\n      ts.isEnumDeclaration(node)\n    ) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "extractHmrDependencies",
            "complexity": 10,
            "lineCount": 62,
            "parameterCount": 8,
            "snippet": "export function extractHmrDependencies(\n  node: DeclarationNode,\n  definition: R3CompiledExpression,\n  factory: CompileResult,\n  deferBlockMetadata: R3ComponentDeferMetadata,\n  classMetadata: o.Statement | null,\n  debugInfo: o.Statement | null,\n  reflection: ReflectionHost,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/imports/src/deferred_symbol_tracker.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/imports/src/emitter.ts",
        "criticalFunctions": [
          {
            "name": "emit",
            "complexity": 7,
            "lineCount": 60,
            "parameterCount": 3,
            "snippet": "emit(\n    ref: Reference,\n    context: ts.SourceFile,\n    importFlags: ImportFlags,\n  ): ReferenceEmitResult | null {\n    const destSf = getSourceFile(ref.node);\n    const destPath = this.logicalFs.logicalPathOfSf(destSf);\n    if (destPath === null) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 60 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/imports/src/imported_symbols_tracker.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/indexer/src/template.ts",
        "criticalFunctions": [
          {
            "name": "targetToIdentifier",
            "complexity": 9,
            "lineCount": 62,
            "parameterCount": 1,
            "snippet": "private targetToIdentifier(node: TmplTarget): TargetIdentifier | null {\n    if (this.targetIdentifierCache.has(node)) {\n      return this.targetIdentifierCache.get(node)!;\n    }\n    const {name, sourceSpan} = node;\n    const start = this.getStartLocation(name, sourceSpan);\n    if (start === null) {\n      return null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "elementOrTemplateToIdentifier",
            "complexity": 6,
            "lineCount": 64,
            "parameterCount": 1,
            "snippet": "private elementOrTemplateToIdentifier(\n    node: TmplAstElement | TmplAstTemplate,\n  ): ElementIdentifier | TemplateNodeIdentifier | null {\n    if (this.elementAndTemplateIdentifierCache.has(node)) {\n      return this.elementAndTemplateIdentifierCache.get(node)!;\n    }\n    let name: string;\n    let kind: IdentifierKind.Element | IdentifierKind.Template;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/metadata/src/dts.ts",
        "criticalFunctions": [
          {
            "name": "getDirectiveMetadata",
            "complexity": 18,
            "lineCount": 101,
            "parameterCount": 1,
            "snippet": "getDirectiveMetadata(ref: Reference<ClassDeclaration>): DirectiveMeta | null {\n    const clazz = ref.node;\n    const def = this.reflector\n      .getMembersOfClass(clazz)\n      .find((field) => field.isStatic && (field.name === 'ɵcmp' || field.name === 'ɵdir'));\n    if (def === undefined) {\n      return null;\n    } else if (\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 101 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "readInputsType",
            "complexity": 9,
            "lineCount": 52,
            "parameterCount": 1,
            "snippet": "function readInputsType(type: ts.TypeNode): Record<string, InputMapping> {\n  const inputsMap = {} as Record<string, InputMapping>;\n  if (ts.isTypeLiteralNode(type)) {\n    for (const member of type.members) {\n      if (\n        !ts.isPropertySignature(member) ||\n        member.type === undefined ||\n        member.name === undefined ||\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getNgModuleMetadata",
            "complexity": 7,
            "lineCount": 62,
            "parameterCount": 1,
            "snippet": "getNgModuleMetadata(ref: Reference<ClassDeclaration>): NgModuleMeta | null {\n    const clazz = ref.node;\n    const ngModuleDef = this.reflector\n      .getMembersOfClass(clazz)\n      .find((member) => member.name === 'ɵmod' && member.isStatic);\n    if (ngModuleDef === undefined) {\n      return null;\n    } else if (\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/metadata/src/ng_module_index.ts",
        "criticalFunctions": [
          {
            "name": "indexTrait",
            "complexity": 14,
            "lineCount": 57,
            "parameterCount": 2,
            "snippet": "private indexTrait(\n    ref: Reference<ClassDeclaration>,\n    seenTypesWithReexports: Map<ClassDeclaration, Set<ClassDeclaration>>,\n  ): void {\n    if (seenTypesWithReexports.has(ref.node)) {\n      return;\n    }\n    seenTypesWithReexports.set(ref.node, new Set());\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/metadata/src/util.ts",
        "criticalFunctions": [
          {
            "name": "extractDirectiveTypeCheckMeta",
            "complexity": 12,
            "lineCount": 58,
            "parameterCount": 3,
            "snippet": "export function extractDirectiveTypeCheckMeta(\n  node: ClassDeclaration,\n  inputs: ClassPropertyMapping<InputMapping>,\n  reflector: ReflectionHost,\n): DirectiveTypeCheckMeta {\n  const members = reflector.getMembersOfClass(node);\n  const staticMembers = members.filter((member) => member.isStatic);\n  const ngTemplateGuards = staticMembers\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/incremental/src/incremental.ts",
        "criticalFunctions": [
          {
            "name": "incremental",
            "complexity": 16,
            "lineCount": 122,
            "parameterCount": 6,
            "snippet": "static incremental(\n    program: ts.Program,\n    newVersions: Map<AbsoluteFsPath, string> | null,\n    oldProgram: ts.Program,\n    oldState: IncrementalState,\n    modifiedResourceFiles: Set<AbsoluteFsPath> | null,\n    perf: PerfRecorder,\n  ): IncrementalCompilation {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 122 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 16,
            "lineCount": 113,
            "parameterCount": 0,
            "snippet": "() => {\n      const physicallyChangedTsFiles = new Set<AbsoluteFsPath>();\n      const changedResourceFiles = new Set<AbsoluteFsPath>(modifiedResourceFiles ?? []);\n      let priorAnalysis: AnalyzedIncrementalState;\n      switch (oldState.kind) {\n        case IncrementalStateKind.Fresh:\n          return IncrementalCompilation.fresh(program, newVersions);\n        case IncrementalStateKind.Analyzed:\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 113 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "recordSuccessfulAnalysis",
            "complexity": 5,
            "lineCount": 51,
            "parameterCount": 1,
            "snippet": "recordSuccessfulAnalysis(traitCompiler: TraitCompiler): void {\n    if (this.phase.kind !== PhaseKind.Analysis) {\n      throw new Error(\n        `AssertionError: Incremental compilation in phase ${\n          PhaseKind[this.phase.kind]\n        }, expected Analysis`,\n      );\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/partial_evaluator/src/diagnostics.ts",
        "criticalFunctions": [
          {
            "name": "getContainerNode",
            "complexity": 17,
            "lineCount": 26,
            "parameterCount": 1,
            "snippet": "function getContainerNode(node: ts.Node): ts.Node {\n  let currentNode: ts.Node | undefined = node;\n  while (currentNode !== undefined) {\n    switch (currentNode.kind) {\n      case ts.SyntaxKind.ExpressionStatement:\n      case ts.SyntaxKind.VariableStatement:\n      case ts.SyntaxKind.ReturnStatement:\n      case ts.SyntaxKind.IfStatement:\n  // ... more code ...",
            "issues": []
          },
          {
            "name": "describeResolvedType",
            "complexity": 16,
            "lineCount": 34,
            "parameterCount": 2,
            "snippet": "export function describeResolvedType(value: ResolvedValue, maxDepth: number = 1): string {\n  if (value === null) {\n    return 'null';\n  } else if (value === undefined) {\n    return 'undefined';\n  } else if (typeof value === 'number' || typeof value === 'boolean' || typeof value === 'string') {\n    return typeof value;\n  } else if (value instanceof Map) {\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/partial_evaluator/src/interpreter.ts",
        "criticalFunctions": [
          {
            "name": "visitExpression",
            "complexity": 23,
            "lineCount": 50,
            "parameterCount": 2,
            "snippet": "private visitExpression(node: ts.Expression, context: Context): ResolvedValue {\n    let result: ResolvedValue;\n    if (node.kind === ts.SyntaxKind.TrueKeyword) {\n      return true;\n    } else if (node.kind === ts.SyntaxKind.FalseKeyword) {\n      return false;\n    } else if (node.kind === ts.SyntaxKind.NullKeyword) {\n      return null;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "accessHelper",
            "complexity": 22,
            "lineCount": 61,
            "parameterCount": 4,
            "snippet": "private accessHelper(\n    node: ts.Node,\n    lhs: ResolvedValue,\n    rhs: string | number,\n    context: Context,\n  ): ResolvedValue {\n    const strIndex = `${rhs}`;\n    if (lhs instanceof Map) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "visitCallExpression",
            "complexity": 13,
            "lineCount": 69,
            "parameterCount": 2,
            "snippet": "private visitCallExpression(node: ts.CallExpression, context: Context): ResolvedValue {\n    const lhs = this.visitExpression(node.expression, context);\n    if (lhs instanceof DynamicValue) {\n      return DynamicValue.fromDynamicInput(node, lhs);\n    }\n    if (lhs instanceof KnownFn) {\n      return lhs.evaluate(node, this.evaluateFunctionArguments(node, context));\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 69 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/reflection/src/type_to_value.ts",
        "criticalFunctions": [
          {
            "name": "typeToValue",
            "complexity": 27,
            "lineCount": 155,
            "parameterCount": 3,
            "snippet": "export function typeToValue(\n  typeNode: ts.TypeNode | null,\n  checker: ts.TypeChecker,\n  isLocalCompilation: boolean,\n): TypeValueReference {\n  if (typeNode === null) {\n    return missingType();\n  }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 155 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "resolveTypeSymbols",
            "complexity": 6,
            "lineCount": 51,
            "parameterCount": 2,
            "snippet": "function resolveTypeSymbols(\n  typeRef: ts.TypeReferenceNode,\n  checker: ts.TypeChecker,\n): {local: ts.Symbol; decl: ts.Symbol; symbolNames: string[]} | null {\n  const typeName = typeRef.typeName;\n  const typeRefSymbol: ts.Symbol | undefined = checker.getSymbolAtLocation(typeName);\n  if (typeRefSymbol === undefined) {\n    return null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/reflection/src/typescript.ts",
        "criticalFunctions": [
          {
            "name": "getDeclarationOfSymbol",
            "complexity": 17,
            "lineCount": 51,
            "parameterCount": 2,
            "snippet": "protected getDeclarationOfSymbol(\n    symbol: ts.Symbol,\n    originalId: ts.Identifier | null,\n  ): Declaration | null {\n    let valueDeclaration: ts.Declaration | undefined = undefined;\n    if (symbol.valueDeclaration !== undefined) {\n      valueDeclaration = symbol.valueDeclaration;\n    } else if (symbol.declarations !== undefined && symbol.declarations.length > 0) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "reflectTypeEntityToDeclaration",
            "complexity": 14,
            "lineCount": 54,
            "parameterCount": 2,
            "snippet": "export function reflectTypeEntityToDeclaration(\n  type: ts.EntityName,\n  checker: ts.TypeChecker,\n): {node: ts.Declaration; from: string | null} {\n  let realSymbol = checker.getSymbolAtLocation(type);\n  if (realSymbol === undefined) {\n    throw new TypeEntityToDeclarationError(\n      `Cannot resolve type entity ${type.getText()} to symbol`,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getConstructorParameters",
            "complexity": 9,
            "lineCount": 57,
            "parameterCount": 1,
            "snippet": "getConstructorParameters(clazz: ClassDeclaration): CtorParameter[] | null {\n    const tsClazz = castDeclarationToClassOrDie(clazz);\n    const isDeclaration = tsClazz.getSourceFile().isDeclarationFile;\n    const ctor = tsClazz.members.find(\n      (member): member is ts.ConstructorDeclaration =>\n        ts.isConstructorDeclaration(member) && (isDeclaration || member.body !== undefined),\n    );\n    if (ctor === undefined) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/resource/src/loader.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/scope/src/local.ts",
        "criticalFunctions": [
          {
            "name": "getScopeOfModuleReference",
            "complexity": 46,
            "lineCount": 286,
            "parameterCount": 1,
            "snippet": "private getScopeOfModuleReference(ref: Reference<ClassDeclaration>): LocalModuleScope | null {\n    if (this.cache.has(ref.node)) {\n      const cachedValue = this.cache.get(ref.node);\n      if (cachedValue !== IN_PROGRESS_RESOLUTION) {\n        return cachedValue as LocalModuleScope | null;\n      }\n    }\n    this.cache.set(ref.node, IN_PROGRESS_RESOLUTION);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 46 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 286 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getReexports",
            "complexity": 11,
            "lineCount": 68,
            "parameterCount": 5,
            "snippet": "private getReexports(\n    ngModule: NgModuleMeta,\n    ref: Reference<ClassDeclaration>,\n    declared: Set<DeclarationNode>,\n    exported: Array<DirectiveMeta | PipeMeta>,\n    diagnostics: ts.Diagnostic[],\n  ): Reexport[] | null {\n    let reexports: Reexport[] | null = null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/scope/src/standalone.ts",
        "criticalFunctions": [
          {
            "name": "getScopeForComponent",
            "complexity": 26,
            "lineCount": 101,
            "parameterCount": 1,
            "snippet": "getScopeForComponent(clazz: ClassDeclaration): StandaloneScope | null {\n    if (!this.cache.has(clazz)) {\n      const clazzRef = new Reference(clazz);\n      const clazzMeta = this.metaReader.getDirectiveMetadata(clazzRef);\n      if (clazzMeta === null || !clazzMeta.isComponent || !clazzMeta.isStandalone) {\n        this.cache.set(clazz, null);\n        return null;\n      }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 101 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/scope/src/typecheck.ts",
        "criticalFunctions": [
          {
            "name": "getTypeCheckScope",
            "complexity": 16,
            "lineCount": 72,
            "parameterCount": 1,
            "snippet": "getTypeCheckScope(node: ClassDeclaration): TypeCheckScope {\n    const matcher = new SelectorMatcher<DirectiveMeta[]>();\n    const directives: DirectiveMeta[] = [];\n    const pipes = new Map<string, PipeMeta>();\n    const scope = this.scopeReader.getScopeForComponent(node);\n    if (scope === null) {\n      return {\n        matcher,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 72 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/sourcemaps/src/source_file.ts",
        "criticalFunctions": [
          {
            "name": "flattenMappings",
            "complexity": 7,
            "lineCount": 90,
            "parameterCount": 0,
            "snippet": "private flattenMappings(): Mapping[] {\n    const mappings = parseMappings(\n      this.rawMap && this.rawMap.map,\n      this.sources,\n      this.startOfLinePositions,\n    );\n    ensureOriginalSegmentLinks(mappings);\n    const flattenedMappings: Mapping[] = [];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 90 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "mergeMappings",
            "complexity": 3,
            "lineCount": 68,
            "parameterCount": 3,
            "snippet": "export function mergeMappings(generatedSource: SourceFile, ab: Mapping, bc: Mapping): Mapping {\n  const name = bc.name || ab.name;\n  const diff = compareSegments(bc.generatedSegment, ab.originalSegment);\n  if (diff > 0) {\n    return {\n      name,\n      generatedSegment: offsetSegment(\n        generatedSource.startOfLinePositions,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/sourcemaps/src/source_file_loader.ts",
        "criticalFunctions": [
          {
            "name": "loadSourceMap",
            "complexity": 7,
            "lineCount": 54,
            "parameterCount": 3,
            "snippet": "private loadSourceMap(\n    sourcePath: AbsoluteFsPath,\n    sourceContents: string,\n    sourceOrigin: ContentOrigin,\n  ): SourceMapInfo | null {\n    const lastLine = this.getLastNonEmptyLine(sourceContents);\n    const inline = mapHelpers.commentRegex.exec(lastLine);\n    if (inline !== null) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/shims/src/adapter.ts",
        "criticalFunctions": [
          {
            "name": "maybeGenerate",
            "complexity": 9,
            "lineCount": 58,
            "parameterCount": 1,
            "snippet": "maybeGenerate(fileName: AbsoluteFsPath): ts.SourceFile | null | undefined {\n    if (this.notShims.has(fileName)) {\n      return null;\n    } else if (this.shims.has(fileName)) {\n      return this.shims.get(fileName)!;\n    }\n    if (isDtsPath(fileName)) {\n      this.notShims.add(fileName);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/testing/src/utils.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/src/compilation.ts",
        "criticalFunctions": [
          {
            "name": "detectTraits",
            "complexity": 20,
            "lineCount": 114,
            "parameterCount": 2,
            "snippet": "protected detectTraits(\n    clazz: ClassDeclaration,\n    decorators: Decorator[] | null,\n  ): PendingTrait<unknown, unknown, SemanticSymbol | null, unknown>[] | null {\n    let record: ClassRecord | null = this.recordFor(clazz);\n    let foundTraits: PendingTrait<unknown, unknown, SemanticSymbol | null, unknown>[] = [];\n    const nonNgDecoratorsInLocalMode =\n      this.compilationMode === CompilationMode.LOCAL ? new Set(decorators) : null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 114 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "compile",
            "complexity": 16,
            "lineCount": 76,
            "parameterCount": 2,
            "snippet": "compile(clazz: DeclarationNode, constantPool: ConstantPool): CompileResult[] | null {\n    const original = ts.getOriginalNode(clazz) as typeof clazz;\n    if (\n      !this.reflector.isClass(clazz) ||\n      !this.reflector.isClass(original) ||\n      !this.classes.has(original)\n    ) {\n      return null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 76 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "analyze",
            "complexity": 13,
            "lineCount": 58,
            "parameterCount": 2,
            "snippet": "private analyze(sf: ts.SourceFile, preanalyze: boolean): Promise<void> | undefined {\n    if (\n      sf.isDeclarationFile ||\n      this.sourceFileTypeIdentifier.isShim(sf) ||\n      this.sourceFileTypeIdentifier.isResource(sf)\n    ) {\n      return undefined;\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "resolve",
            "complexity": 13,
            "lineCount": 55,
            "parameterCount": 0,
            "snippet": "resolve(): void {\n    const classes = this.classes.keys();\n    for (const clazz of classes) {\n      const record = this.classes.get(clazz)!;\n      for (let trait of record.traits) {\n        const handler = trait.handler;\n        switch (trait.state) {\n          case TraitState.Skipped:\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/src/declaration.ts",
        "criticalFunctions": [
          {
            "name": "transformClassDeclaration",
            "complexity": 11,
            "lineCount": 56,
            "parameterCount": 3,
            "snippet": "private transformClassDeclaration(\n    clazz: ts.ClassDeclaration,\n    transforms: DtsTransform[],\n    imports: ImportManager,\n  ): ts.ClassDeclaration {\n    let elements: ts.ClassElement[] | ReadonlyArray<ts.ClassElement> = clazz.members;\n    let elementsChanged = false;\n    for (const transform of transforms) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/src/transform.ts",
        "criticalFunctions": [
          {
            "name": "_stripAngularDecorators",
            "complexity": 11,
            "lineCount": 68,
            "parameterCount": 1,
            "snippet": "private _stripAngularDecorators<T extends ts.Node>(node: T): T {\n    const modifiers = ts.canHaveModifiers(node) ? ts.getModifiers(node) : undefined;\n    const nonCoreDecorators = ts.canHaveDecorators(node)\n      ? this._nonCoreDecoratorsOnly(node)\n      : undefined;\n    const combinedModifiers = [...(nonCoreDecorators || []), ...(modifiers || [])];\n    if (ts.isParameter(node)) {\n      node = ts.factory.updateParameterDeclaration(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 68 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "visitClassDeclaration",
            "complexity": 10,
            "lineCount": 88,
            "parameterCount": 1,
            "snippet": "override visitClassDeclaration(\n    node: ts.ClassDeclaration,\n  ): VisitListEntryResult<ts.Statement, ts.ClassDeclaration> {\n    if (!this.classCompilationMap.has(node)) {\n      return {node};\n    }\n    const translateOptions: TranslatorOptions<ts.Expression> = {\n      recordWrappedNode: this.recordWrappedNodeExpr,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 88 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "transformIvySourceFile",
            "complexity": 5,
            "lineCount": 77,
            "parameterCount": 9,
            "snippet": "function transformIvySourceFile(\n  compilation: TraitCompiler,\n  context: ts.TransformationContext,\n  reflector: ReflectionHost,\n  importRewriter: ImportRewriter,\n  localCompilationExtraImportsTracker: LocalCompilationExtraImportsTracker | null,\n  file: ts.SourceFile,\n  isCore: boolean,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 77 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "9 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ivyTransformFactory",
            "complexity": 1,
            "lineCount": 29,
            "parameterCount": 8,
            "snippet": "export function ivyTransformFactory(\n  compilation: TraitCompiler,\n  reflector: ReflectionHost,\n  importRewriter: ImportRewriter,\n  defaultImportTracker: DefaultImportTracker,\n  localCompilationExtraImportsTracker: LocalCompilationExtraImportsTracker | null,\n  perf: PerfRecorder,\n  isCore: boolean,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/translator.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/ts_util.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/type_emitter.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/type_translator.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/typescript_ast_factory.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/api/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/diagnostics/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/testing/index.ts",
        "criticalFunctions": [
          {
            "name": "setup",
            "complexity": 18,
            "lineCount": 218,
            "parameterCount": 2,
            "snippet": "export function setup(\n  targets: TypeCheckingTarget[],\n  overrides: {\n    config?: Partial<TypeCheckingConfig>;\n    options?: ts.CompilerOptions;\n    inlining?: boolean;\n    parseOptions?: ParseTemplateOptions;\n  } = {},\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 218 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getDirectiveMetaFromDeclaration",
            "complexity": 17,
            "lineCount": 43,
            "parameterCount": 2,
            "snippet": "function getDirectiveMetaFromDeclaration(\n  decl: TestDirective,\n  resolveDeclaration: DeclarationResolver,\n) {\n  return {\n    name: decl.name,\n    ref: new Reference(resolveDeclaration(decl)),\n    exportAs: decl.exportAs || null,\n  // ... more code ...",
            "issues": []
          },
          {
            "name": "makeScope",
            "complexity": 12,
            "lineCount": 81,
            "parameterCount": 3,
            "snippet": "function makeScope(program: ts.Program, sf: ts.SourceFile, decls: TestDeclaration[]): ScopeData {\n  const scope: ScopeData = {dependencies: [], isPoisoned: false};\n  for (const decl of decls) {\n    let declSf = sf;\n    if (decl.file !== undefined) {\n      declSf = getSourceFileOrError(program, decl.file);\n    }\n    const declClass = getClass(declSf, decl.name);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 81 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 7,
            "lineCount": 53,
            "parameterCount": 2,
            "snippet": "(sf, ctx) => {\n    for (const target of targets) {\n      if (getSourceFileOrError(program, target.fileName) !== sf) {\n        continue;\n      }\n      const declarations = target.declarations ?? [];\n      for (const className of Object.keys(target.templates)) {\n        const classDecl = getClass(sf, className);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "tcb",
            "complexity": 6,
            "lineCount": 104,
            "parameterCount": 5,
            "snippet": "export function tcb(\n  template: string,\n  declarations: TestDeclaration[] = [],\n  config?: Partial<TypeCheckingConfig>,\n  options?: {emitSpans?: boolean},\n  templateParserOptions?: ParseTemplateOptions,\n): string {\n  const codeLines = [`export class Test<T extends string> {}`];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 104 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/checker.ts",
        "criticalFunctions": [
          {
            "name": "getLatestComponentState",
            "complexity": 9,
            "lineCount": 58,
            "parameterCount": 2,
            "snippet": "private getLatestComponentState(\n    component: ts.ClassDeclaration,\n    optimizeFor: OptimizeFor = OptimizeFor.SingleFile,\n  ): {\n    data: TypeCheckData | null;\n    tcb: ts.Node | null;\n    tcbPath: AbsoluteFsPath;\n    tcbIsShim: boolean;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/comments.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/completion.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/context.ts",
        "criticalFunctions": [
          {
            "name": "addDirective",
            "complexity": 20,
            "lineCount": 146,
            "parameterCount": 5,
            "snippet": "addDirective(\n    ref: Reference<ClassDeclaration<ts.ClassDeclaration>>,\n    binder: R3TargetBinder<TypeCheckableDirectiveMeta>,\n    schemas: SchemaMetadata[],\n    templateContext: TemplateContext | null,\n    isStandalone: boolean,\n  ): void {\n    if (!this.host.shouldCheckClass(ref.node)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 146 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "transform",
            "complexity": 7,
            "lineCount": 64,
            "parameterCount": 1,
            "snippet": "transform(sf: ts.SourceFile): string | null {\n    if (!this.opMap.has(sf)) {\n      return null;\n    }\n    const printer = ts.createPrinter({omitTrailingSemicolon: true});\n    const importManager = new ImportManager({\n      forceGenerateNamespacesForNewImports: true,\n      shouldUseSingleQuotes: () => true,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/expression.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/oob.ts",
        "criticalFunctions": [
          {
            "name": "splitTwoWayBinding",
            "complexity": 3,
            "lineCount": 53,
            "parameterCount": 5,
            "snippet": "splitTwoWayBinding(\n    id: TypeCheckId,\n    input: TmplAstBoundAttribute,\n    output: TmplAstBoundEvent,\n    inputConsumer: ClassDeclaration,\n    outputConsumer: ClassDeclaration | TmplAstElement,\n  ): void {\n    const mapping = this.resolver.getTemplateSourceMapping(id);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "controlFlowPreventingContentProjection",
            "complexity": 2,
            "lineCount": 45,
            "parameterCount": 7,
            "snippet": "controlFlowPreventingContentProjection(\n    id: TypeCheckId,\n    category: ts.DiagnosticCategory,\n    projectionNode: TmplAstElement | TmplAstTemplate,\n    componentName: string,\n    slotSelector: string,\n    controlFlowNode:\n      | TmplAstIfBlockBranch\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/tcb_util.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/template_symbol_builder.ts",
        "criticalFunctions": [
          {
            "name": "getSymbolOfBoundEvent",
            "complexity": 19,
            "lineCount": 108,
            "parameterCount": 1,
            "snippet": "private getSymbolOfBoundEvent(eventBinding: TmplAstBoundEvent): OutputBindingSymbol | null {\n    const consumer = this.typeCheckData.boundTarget.getConsumerOfBinding(eventBinding);\n    if (consumer === null) {\n      return null;\n    }\n    let expectedAccess: string;\n    if (consumer instanceof TmplAstTemplate || consumer instanceof TmplAstElement) {\n      expectedAccess = 'addEventListener';\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 108 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getSymbolOfInputBinding",
            "complexity": 15,
            "lineCount": 79,
            "parameterCount": 1,
            "snippet": "private getSymbolOfInputBinding(\n    binding: TmplAstBoundAttribute | TmplAstTextAttribute,\n  ): InputBindingSymbol | DomBindingSymbol | null {\n    const consumer = this.typeCheckData.boundTarget.getConsumerOfBinding(binding);\n    if (consumer === null) {\n      return null;\n    }\n    if (consumer instanceof TmplAstElement || consumer instanceof TmplAstTemplate) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getSymbolOfTemplateExpression",
            "complexity": 14,
            "lineCount": 71,
            "parameterCount": 1,
            "snippet": "private getSymbolOfTemplateExpression(\n    expression: AST,\n  ): VariableSymbol | ReferenceSymbol | ExpressionSymbol | LetDeclarationSymbol | null {\n    if (expression instanceof ASTWithSource) {\n      expression = expression.ast;\n    }\n    const expressionTarget = this.typeCheckData.boundTarget.getExpressionTarget(expression);\n    if (expressionTarget !== null) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 71 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getSymbolOfReference",
            "complexity": 13,
            "lineCount": 59,
            "parameterCount": 1,
            "snippet": "private getSymbolOfReference(ref: TmplAstReference): ReferenceSymbol | null {\n    const target = this.typeCheckData.boundTarget.getReferenceTarget(ref);\n    let node = findFirstMatchingNode(this.typeCheckBlock, {\n      withSpan: ref.sourceSpan,\n      filter: ts.isVariableDeclaration,\n    });\n    if (node === null || target === null || node.initializer === undefined) {\n      return null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getDirectivesOfNode",
            "complexity": 11,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "private getDirectivesOfNode(element: TmplAstElement | TmplAstTemplate): DirectiveSymbol[] {\n    const elementSourceSpan = element.startSourceSpan ?? element.sourceSpan;\n    const tcbSourceFile = this.typeCheckBlock.getSourceFile();\n    const isDirectiveDeclaration = (node: ts.Node): node is ts.TypeNode | ts.Identifier =>\n      (ts.isTypeNode(node) || ts.isIdentifier(node)) &&\n      ts.isVariableDeclaration(node.parent) &&\n      hasExpressionIdentifier(tcbSourceFile, node, ExpressionIdentifier.DIRECTIVE);\n    const nodes = findAllMatchingNodes(this.typeCheckBlock, {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/type_check_block.ts",
        "criticalFunctions": [
          {
            "name": "resolve",
            "complexity": 27,
            "lineCount": 153,
            "parameterCount": 1,
            "snippet": "protected resolve(ast: AST): ts.Expression | null {\n    if (\n      ast instanceof PropertyRead &&\n      ast.receiver instanceof ImplicitReceiver &&\n      !(ast.receiver instanceof ThisReceiver)\n    ) {\n      const target = this.tcb.boundTarget.getExpressionTarget(ast);\n      const targetExpression = target === null ? null : this.getTargetNodeExpression(target, ast);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 27 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 153 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "execute",
            "complexity": 22,
            "lineCount": 157,
            "parameterCount": 0,
            "snippet": "override execute(): null {\n    let dirId: ts.Expression | null = null;\n    const boundAttrs = getBoundAttributes(this.dir, this.node);\n    const seenRequiredInputs = new Set<ClassPropertyName>();\n    for (const attr of boundAttrs) {\n      const expr = widenBinding(translateInput(attr.attribute, this.tcb, this.scope), this.tcb);\n      let assignment: ts.Expression = wrapForDiagnostics(expr);\n      for (const {fieldName, required, transformType, isSignal, isTwoWayBinding} of attr.inputs) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 157 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "resolveLocal",
            "complexity": 18,
            "lineCount": 40,
            "parameterCount": 2,
            "snippet": "private resolveLocal(\n    ref: LocalSymbol,\n    directive?: TypeCheckableDirectiveMeta,\n  ): ts.Expression | null {\n    if (ref instanceof TmplAstReference && this.referenceOpMap.has(ref)) {\n      return this.resolveOp(this.referenceOpMap.get(ref)!);\n    } else if (ref instanceof TmplAstLetDeclaration && this.letDeclOpMap.has(ref.name)) {\n      return this.resolveOp(this.letDeclOpMap.get(ref.name)!.opIndex);\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "appendNode",
            "complexity": 17,
            "lineCount": 47,
            "parameterCount": 1,
            "snippet": "private appendNode(node: TmplAstNode): void {\n    if (node instanceof TmplAstElement) {\n      const opIndex = this.opQueue.push(new TcbElementOp(this.tcb, this, node)) - 1;\n      this.elementOpMap.set(node, opIndex);\n      if (this.tcb.env.config.controlFlowPreventingContentProjection !== 'suppress') {\n        this.appendContentProjectionCheckOp(node);\n      }\n      this.appendDirectivesAndInputsOfNode(node);\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "forNodes",
            "complexity": 15,
            "lineCount": 79,
            "parameterCount": 5,
            "snippet": "static forNodes(\n    tcb: Context,\n    parentScope: Scope | null,\n    scopedNode: TmplAstTemplate | TmplAstIfBlockBranch | TmplAstForLoopBlock | null,\n    children: TmplAstNode[],\n    guard: ts.Expression | null,\n  ): Scope {\n    const scope = new Scope(tcb, parentScope, guard);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/type_constructor.ts",
        "criticalFunctions": [
          {
            "name": "constructTypeCtorParameter",
            "complexity": 11,
            "lineCount": 95,
            "parameterCount": 3,
            "snippet": "function constructTypeCtorParameter(\n  env: ReferenceEmitEnvironment,\n  meta: TypeCtorMetadata,\n  rawType: ts.TypeReferenceNode,\n): ts.ParameterDeclaration {\n  let initType: ts.TypeNode | null = null;\n  const plainKeys: ts.LiteralTypeNode[] = [];\n  const coercedKeys: ts.PropertySignature[] = [];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 95 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/src/type_parameter_emitter.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/util/src/typescript.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/ir/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/render3/view/i18n/icu_serializer.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/render3/view/i18n/meta.ts",
        "criticalFunctions": [
          {
            "name": "visitElement",
            "complexity": 15,
            "lineCount": 75,
            "parameterCount": 1,
            "snippet": "visitElement(element: html.Element): any {\n    let message: i18n.Message | undefined = undefined;\n    if (hasI18nAttrs(element)) {\n      this.hasI18nMeta = true;\n      const attrs: html.Attribute[] = [];\n      const attrsMeta: {[key: string]: string} = {};\n      for (const attr of element.attrs) {\n        if (attr.name === I18N_ATTR) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/emit.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/ingest.ts",
        "criticalFunctions": [
          {
            "name": "convertAst",
            "complexity": 31,
            "lineCount": 174,
            "parameterCount": 3,
            "snippet": "function convertAst(\n  ast: e.AST,\n  job: CompilationJob,\n  baseSourceSpan: ParseSourceSpan | null,\n): o.Expression {\n  if (ast instanceof e.ASTWithSource) {\n    return convertAst(ast.ast, job, baseSourceSpan);\n  } else if (ast instanceof e.PropertyRead) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 31 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 174 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createTemplateBinding",
            "complexity": 15,
            "lineCount": 101,
            "parameterCount": 11,
            "snippet": "function createTemplateBinding(\n  view: ViewCompilationUnit,\n  xref: ir.XrefId,\n  type: e.BindingType,\n  name: string,\n  value: e.AST | string,\n  unit: string | null,\n  securityContext: SecurityContext,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 101 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "11 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ingestControlFlowInsertionPoint",
            "complexity": 15,
            "lineCount": 79,
            "parameterCount": 3,
            "snippet": "function ingestControlFlowInsertionPoint(\n  unit: ViewCompilationUnit,\n  xref: ir.XrefId,\n  node: t.IfBlockBranch | t.SwitchBlockCase | t.ForLoopBlock | t.ForLoopBlockEmpty,\n): string | null {\n  let root: t.Element | t.Template | null = null;\n  for (const child of node.children) {\n    if (child instanceof t.Comment || child instanceof t.LetDeclaration) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ingestTemplateBindings",
            "complexity": 13,
            "lineCount": 150,
            "parameterCount": 4,
            "snippet": "function ingestTemplateBindings(\n  unit: ViewCompilationUnit,\n  op: ir.ElementOpBase,\n  template: t.Template,\n  templateKind: ir.TemplateKind | null,\n): void {\n  let bindings = new Array<ir.BindingOp | ir.ExtractedAttributeOp | null>();\n  for (const attr of template.templateAttrs) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 150 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "ingestTemplate",
            "complexity": 12,
            "lineCount": 58,
            "parameterCount": 2,
            "snippet": "function ingestTemplate(unit: ViewCompilationUnit, tmpl: t.Template): void {\n  if (\n    tmpl.i18n !== undefined &&\n    !(tmpl.i18n instanceof i18n.Message || tmpl.i18n instanceof i18n.TagPlaceholder)\n  ) {\n    throw Error(`Unhandled i18n metadata type for template: ${tmpl.i18n.constructor.name}`);\n  }\n  const childView = unit.job.allocateView(unit.xref);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/instruction.ts",
        "criticalFunctions": [
          {
            "name": "projection",
            "complexity": 7,
            "lineCount": 24,
            "parameterCount": 7,
            "snippet": "export function projection(\n  slot: number,\n  projectionSlotIndex: number,\n  attributes: o.LiteralArrayExpr | null,\n  fallbackFnName: string | null,\n  fallbackDecls: number | null,\n  fallbackVars: number | null,\n  sourceSpan: ParseSourceSpan,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "repeaterCreate",
            "complexity": 7,
            "lineCount": 39,
            "parameterCount": 14,
            "snippet": "export function repeaterCreate(\n  slot: number,\n  viewFnName: string,\n  decls: number,\n  vars: number,\n  tag: string | null,\n  constIndex: number | null,\n  trackByFn: o.Expression,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "14 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "defer",
            "complexity": 5,
            "lineCount": 37,
            "parameterCount": 11,
            "snippet": "export function defer(\n  selfSlot: number,\n  primarySlot: number,\n  dependencyResolverFn: o.Expression | null,\n  loadingSlot: number | null,\n  placeholderSlot: number | null,\n  errorSlot: number | null,\n  loadingConfig: o.Expression | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "11 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "template",
            "complexity": 3,
            "lineCount": 27,
            "parameterCount": 8,
            "snippet": "export function template(\n  slot: number,\n  templateFnRef: o.Expression,\n  decls: number,\n  vars: number,\n  tag: string | null,\n  constIndex: number | null,\n  localRefs: number | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/migration.ts",
        "criticalFunctions": [
          {
            "name": "stats",
            "complexity": 9,
            "lineCount": 55,
            "parameterCount": 1,
            "snippet": "override async stats(globalMetadata: CompilationUnitData) {\n    let fullCompilationInputs = 0;\n    let sourceInputs = 0;\n    let incompatibleInputs = 0;\n    const fieldIncompatibleCounts: Partial<\n      Record<`input-field-incompatibility-${string}`, number>\n    > = {};\n    const classIncompatibleCounts: Partial<\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 55 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/di.ts",
        "criticalFunctions": [
          {
            "name": "getConstructorDependencies",
            "complexity": 21,
            "lineCount": 93,
            "parameterCount": 3,
            "snippet": "export function getConstructorDependencies(\n  clazz: ClassDeclaration,\n  reflector: ReflectionHost,\n  isCore: boolean,\n): ConstructorDeps | null {\n  const deps: R3DependencyMetadata[] = [];\n  const errors: ConstructorDepError[] = [];\n  let ctorParams = reflector.getConstructorParameters(clazz);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 93 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 18,
            "lineCount": 71,
            "parameterCount": 2,
            "snippet": "(param, idx) => {\n    let token = valueReferenceToExpression(param.typeValueReference);\n    let attributeNameType: Expression | null = null;\n    let optional = false,\n      self = false,\n      skipSelf = false,\n      host = false;\n    (param.decorators || [])\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 71 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createUnsuitableInjectionTokenError",
            "complexity": 9,
            "lineCount": 74,
            "parameterCount": 2,
            "snippet": "function createUnsuitableInjectionTokenError(\n  clazz: ClassDeclaration,\n  error: ConstructorDepError,\n): FatalDiagnosticError {\n  const {param, index, reason} = error;\n  let chainMessage: string | undefined = undefined;\n  let hints: ts.DiagnosticRelatedInformation[] | undefined = undefined;\n  switch (reason.kind) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/diagnostics.ts",
        "criticalFunctions": [
          {
            "name": "validateHostDirectiveMappings",
            "complexity": 19,
            "lineCount": 81,
            "parameterCount": 6,
            "snippet": "function validateHostDirectiveMappings(\n  bindingType: 'input' | 'output',\n  hostDirectiveMeta: HostDirectiveMeta,\n  meta: DirectiveMeta,\n  origin: ts.Expression,\n  diagnostics: ts.DiagnosticWithLocation[],\n  requiredBindings: Set<ClassPropertyName> | null,\n) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 81 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "findInheritedCtor",
            "complexity": 8,
            "lineCount": 51,
            "parameterCount": 4,
            "snippet": "export function findInheritedCtor(\n  node: ClassDeclaration,\n  injectableRegistry: InjectableClassRegistry,\n  reflector: ReflectionHost,\n  evaluator: PartialEvaluator,\n): ClassWithCtor | null {\n  if (!reflector.isClass(node) || reflector.getConstructorParameters(node) !== null) {\n    return null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "validateHostDirectives",
            "complexity": 7,
            "lineCount": 62,
            "parameterCount": 3,
            "snippet": "export function validateHostDirectives(\n  origin: ts.Expression,\n  hostDirectives: HostDirectiveMeta[],\n  metaReader: MetadataReader,\n) {\n  const diagnostics: ts.DiagnosticWithLocation[] = [];\n  for (const current of hostDirectives) {\n    if (!isHostDirectiveMetaForGlobalMode(current)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getDirectiveDiagnostics",
            "complexity": 6,
            "lineCount": 41,
            "parameterCount": 7,
            "snippet": "export function getDirectiveDiagnostics(\n  node: ClassDeclaration,\n  injectableRegistry: InjectableClassRegistry,\n  evaluator: PartialEvaluator,\n  reflector: ReflectionHost,\n  scopeRegistry: LocalModuleScopeRegistry,\n  strictInjectionParameters: boolean,\n  kind: 'Directive' | 'Component',\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/evaluation.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/metadata.ts",
        "criticalFunctions": [
          {
            "name": "extractClassMetadata",
            "complexity": 10,
            "lineCount": 86,
            "parameterCount": 5,
            "snippet": "export function extractClassMetadata(\n  clazz: DeclarationNode,\n  reflection: ReflectionHost,\n  isCore: boolean,\n  annotateForClosureCompiler?: boolean,\n  angularDecoratorTransform: (dec: Decorator) => Decorator = (dec) => dec,\n): R3ClassMetadata | null {\n  if (!reflection.isClass(clazz)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 86 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/common/src/util.ts",
        "criticalFunctions": [
          {
            "name": "compileResults",
            "complexity": 5,
            "lineCount": 41,
            "parameterCount": 8,
            "snippet": "export function compileResults(\n  fac: CompileResult,\n  def: R3CompiledExpression,\n  metadataStmt: Statement | null,\n  propName: string,\n  additionalFields: CompileResult[] | null,\n  deferrableImports: Set<ts.ImportDeclaration> | null,\n  debugInfo: Statement | null = null,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/component/src/handler.ts",
        "criticalFunctions": [
          {
            "name": "resolve",
            "complexity": 83,
            "lineCount": 501,
            "parameterCount": 3,
            "snippet": "resolve(\n    node: ClassDeclaration,\n    analysis: Readonly<ComponentAnalysisData>,\n    symbol: ComponentSymbol,\n  ): ResolveResult<ComponentResolutionData> {\n    const metadata = analysis.meta as Readonly<R3ComponentMetadata<R3TemplateDependencyMetadata>>;\n    const diagnostics: ts.Diagnostic[] = [];\n    const context = getSourceFile(node);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 83 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 501 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "analyze",
            "complexity": 60,
            "lineCount": 487,
            "parameterCount": 2,
            "snippet": "analyze(\n    node: ClassDeclaration,\n    decorator: Readonly<Decorator>,\n  ): AnalysisOutput<ComponentAnalysisData> {\n    this.perf.eventCount(PerfEvent.AnalyzeComponent);\n    const containingFile = node.getSourceFile().fileName;\n    this.literalCache.delete(decorator);\n    let diagnostics: ts.Diagnostic[] | undefined;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 60 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 487 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "registerDeferrableCandidates",
            "complexity": 16,
            "lineCount": 77,
            "parameterCount": 6,
            "snippet": "private registerDeferrableCandidates(\n    componentClassDecl: ClassDeclaration,\n    importsExpr: ts.Expression,\n    isDeferredImport: boolean,\n    allDeferredDecls: Set<ClassDeclaration>,\n    eagerlyUsedDecls: Set<ClassDeclaration>,\n    resolutionData: ComponentResolutionData,\n  ) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 77 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "resolveDeferBlocks",
            "complexity": 12,
            "lineCount": 79,
            "parameterCount": 6,
            "snippet": "private resolveDeferBlocks(\n    componentClassDecl: ClassDeclaration,\n    deferBlocks: Map<TmplAstDeferredBlock, BoundTarget<DirectiveMeta>>,\n    deferrableDecls: Map<ClassDeclaration, AnyUsedType>,\n    resolutionData: ComponentResolutionData,\n    analysisData: Readonly<ComponentAnalysisData>,\n    eagerlyUsedDecls: Set<ClassDeclaration>,\n  ) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 79 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "compileFull",
            "complexity": 10,
            "lineCount": 64,
            "parameterCount": 4,
            "snippet": "compileFull(\n    node: ClassDeclaration,\n    analysis: Readonly<ComponentAnalysisData>,\n    resolution: Readonly<ComponentResolutionData>,\n    pool: ConstantPool,\n  ): CompileResult[] {\n    if (analysis.template.errors !== null && analysis.template.errors.length > 0) {\n      return [];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "async-heavy",
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/component/src/resources.ts",
        "criticalFunctions": [
          {
            "name": "transformDecoratorResources",
            "complexity": 14,
            "lineCount": 57,
            "parameterCount": 4,
            "snippet": "export function transformDecoratorResources(\n  dec: Decorator,\n  component: Map<string, ts.Expression>,\n  styles: string[],\n  template: ParsedTemplateWithSource,\n): Decorator {\n  if (dec.name !== 'Component') {\n    return dec;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "parseTemplateDeclaration",
            "complexity": 12,
            "lineCount": 88,
            "parameterCount": 8,
            "snippet": "export function parseTemplateDeclaration(\n  node: ClassDeclaration,\n  decorator: Decorator,\n  component: Map<string, ts.Expression>,\n  containingFile: string,\n  evaluator: PartialEvaluator,\n  depTracker: DependencyTracker | null,\n  resourceLoader: ResourceLoader,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 88 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "extractTemplate",
            "complexity": 6,
            "lineCount": 115,
            "parameterCount": 7,
            "snippet": "export function extractTemplate(\n  node: ClassDeclaration,\n  template: TemplateDeclaration,\n  evaluator: PartialEvaluator,\n  depTracker: DependencyTracker | null,\n  resourceLoader: ResourceLoader,\n  options: ExtractTemplateOptions,\n  compilationMode: CompilationMode,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 115 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "preloadAndParseTemplate",
            "complexity": 6,
            "lineCount": 98,
            "parameterCount": 11,
            "snippet": "export function preloadAndParseTemplate(\n  evaluator: PartialEvaluator,\n  resourceLoader: ResourceLoader,\n  depTracker: DependencyTracker | null,\n  preanalyzeTemplateCache: Map<DeclarationNode, ParsedTemplateWithSource>,\n  node: ClassDeclaration,\n  decorator: Decorator,\n  component: Map<string, ts.Expression>,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 98 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "11 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "parseExtractedTemplate",
            "complexity": 2,
            "lineCount": 56,
            "parameterCount": 6,
            "snippet": "function parseExtractedTemplate(\n  template: TemplateDeclaration,\n  sourceStr: string,\n  sourceParseRange: LexerRange | null,\n  escapedString: boolean,\n  sourceMapUrl: string | null,\n  options: ExtractTemplateOptions,\n): ParsedComponentTemplate {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/component/src/util.ts",
        "criticalFunctions": [
          {
            "name": "validateAndFlattenComponentImports",
            "complexity": 14,
            "lineCount": 90,
            "parameterCount": 3,
            "snippet": "export function validateAndFlattenComponentImports(\n  imports: ResolvedValue,\n  expr: ts.Expression,\n  isDeferred: boolean,\n): {\n  imports: Reference<ClassDeclaration>[];\n  diagnostics: ts.Diagnostic[];\n} {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 90 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/directive/src/handler.ts",
        "criticalFunctions": [
          {
            "name": "resolve",
            "complexity": 11,
            "lineCount": 53,
            "parameterCount": 3,
            "snippet": "resolve(\n    node: ClassDeclaration,\n    analysis: DirectiveHandlerData,\n    symbol: DirectiveSymbol,\n  ): ResolveResult<unknown> {\n    if (this.compilationMode === CompilationMode.LOCAL) {\n      return {};\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              }
            ]
          },
          {
            "name": "analyze",
            "complexity": 7,
            "lineCount": 73,
            "parameterCount": 2,
            "snippet": "analyze(\n    node: ClassDeclaration,\n    decorator: Readonly<Decorator | null>,\n  ): AnalysisOutput<DirectiveHandlerData> {\n    if (decorator === null) {\n      if (this.isCore) {\n        return {};\n      }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 73 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/directive/src/initializer_functions.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/directive/src/query_functions.ts",
        "criticalFunctions": [
          {
            "name": "tryParseSignalQueryFromInitializer",
            "complexity": 10,
            "lineCount": 61,
            "parameterCount": 3,
            "snippet": "export function tryParseSignalQueryFromInitializer(\n  member: Pick<ClassMember, 'name' | 'value' | 'accessLevel'>,\n  reflector: ReflectionHost,\n  importTracker: ImportedSymbolsTracker,\n): {name: QueryFunctionName; metadata: R3QueryMetadata; call: ts.CallExpression} | null {\n  if (member.value === null) {\n    return null;\n  }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/directive/src/shared.ts",
        "criticalFunctions": [
          {
            "name": "extractDirectiveMetadata",
            "complexity": 38,
            "lineCount": 335,
            "parameterCount": 13,
            "snippet": "export function extractDirectiveMetadata(\n  clazz: ClassDeclaration,\n  decorator: Readonly<Decorator>,\n  reflector: ReflectionHost,\n  importTracker: ImportedSymbolsTracker,\n  evaluator: PartialEvaluator,\n  refEmitter: ReferenceEmitter,\n  referencesRegistry: ReferencesRegistry,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 38 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 335 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "13 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "tryParseInputFieldMapping",
            "complexity": 24,
            "lineCount": 108,
            "parameterCount": 8,
            "snippet": "function tryParseInputFieldMapping(\n  clazz: ClassDeclaration,\n  member: ClassMember,\n  evaluator: PartialEvaluator,\n  reflector: ReflectionHost,\n  importTracker: ImportedSymbolsTracker,\n  isCore: boolean,\n  refEmitter: ReferenceEmitter,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 24 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 108 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "extractDecoratorQueryMetadata",
            "complexity": 18,
            "lineCount": 116,
            "parameterCount": 6,
            "snippet": "export function extractDecoratorQueryMetadata(\n  exprNode: ts.Node,\n  name: string,\n  args: ReadonlyArray<ts.Expression>,\n  propertyName: string,\n  reflector: ReflectionHost,\n  evaluator: PartialEvaluator,\n): R3QueryMetadata {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 116 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "parseDecoratorInputTransformFunction",
            "complexity": 18,
            "lineCount": 116,
            "parameterCount": 6,
            "snippet": "export function parseDecoratorInputTransformFunction(\n  clazz: ClassDeclaration,\n  classPropertyName: string,\n  value: DynamicValue | Reference,\n  reflector: ReflectionHost,\n  refEmitter: ReferenceEmitter,\n  compilationMode: CompilationMode,\n): DecoratorInputTransform {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 116 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "parseQueriesOfClassFields",
            "complexity": 16,
            "lineCount": 76,
            "parameterCount": 5,
            "snippet": "function parseQueriesOfClassFields(\n  members: ClassMember[],\n  reflector: ReflectionHost,\n  importTracker: ImportedSymbolsTracker,\n  evaluator: PartialEvaluator,\n  isCore: boolean,\n): {\n  viewQueries: R3QueryMetadata[];\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 76 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/directive/src/symbol.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/ng_module/src/handler.ts",
        "criticalFunctions": [
          {
            "name": "analyze",
            "complexity": 55,
            "lineCount": 403,
            "parameterCount": 2,
            "snippet": "analyze(\n    node: ClassDeclaration,\n    decorator: Readonly<Decorator>,\n  ): AnalysisOutput<NgModuleAnalysis> {\n    this.perf.eventCount(PerfEvent.AnalyzeNgModule);\n    const name = node.name.text;\n    if (decorator.args === null || decorator.args.length > 1) {\n      throw new FatalDiagnosticError(\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 55 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 403 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "resolve",
            "complexity": 31,
            "lineCount": 147,
            "parameterCount": 2,
            "snippet": "resolve(\n    node: ClassDeclaration,\n    analysis: Readonly<NgModuleAnalysis>,\n  ): ResolveResult<NgModuleResolution> {\n    if (this.compilationMode === CompilationMode.LOCAL) {\n      return {};\n    }\n    const scope = this.scopeRegistry.getScopeOfModule(node);\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 31 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 147 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "resolveTypeList",
            "complexity": 15,
            "lineCount": 91,
            "parameterCount": 6,
            "snippet": "private resolveTypeList(\n    expr: ts.Node,\n    resolvedList: ResolvedValue,\n    className: string,\n    arrayName: string,\n    absoluteIndex: number,\n    allowUnresolvedReferences: boolean,\n  ): {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 91 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "isEmitAffected",
            "complexity": 11,
            "lineCount": 58,
            "parameterCount": 1,
            "snippet": "override isEmitAffected(previousSymbol: SemanticSymbol): boolean {\n    if (!(previousSymbol instanceof NgModuleSymbol)) {\n      return true;\n    }\n    if (previousSymbol.remotelyScopedComponents.length !== this.remotelyScopedComponents.length) {\n      return true;\n    }\n    for (const currEntry of this.remotelyScopedComponents) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 58 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/annotations/ng_module/src/module_with_providers.ts",
        "criticalFunctions": [
          {
            "name": "createModuleWithProvidersResolver",
            "complexity": 35,
            "lineCount": 122,
            "parameterCount": 2,
            "snippet": "export function createModuleWithProvidersResolver(\n  reflector: ReflectionHost,\n  isCore: boolean,\n): ForeignFunctionResolver {\n  /**\n   * Retrieve an `NgModule` identifier (T) from the specified `type`, if it is of the form:\n   * `ModuleWithProviders<T>`\n   * @param type The type to reflect on.\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 35 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 122 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_reflectModuleFromTypeParam",
            "complexity": 19,
            "lineCount": 51,
            "parameterCount": 2,
            "snippet": "function _reflectModuleFromTypeParam(\n    type: ts.TypeNode,\n    node: ts.FunctionDeclaration | ts.MethodDeclaration | ts.FunctionExpression,\n  ): ts.Expression | null {\n    if (!ts.isTypeReferenceNode(type)) {\n      return null;\n    }\n    const typeName =\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 51 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/file_system/testing/src/mock_file_system.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/incremental/semantic_graph/src/graph.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/incremental/semantic_graph/src/util.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/jit/src/downlevel_decorators_transform.ts",
        "criticalFunctions": [
          {
            "name": "getDownlevelDecoratorsTransform",
            "complexity": 45,
            "lineCount": 345,
            "parameterCount": 6,
            "snippet": "export function getDownlevelDecoratorsTransform(\n  typeChecker: ts.TypeChecker,\n  host: ReflectionHost,\n  diagnostics: ts.Diagnostic[],\n  isCore: boolean,\n  isClosureCompilerEnabled: boolean,\n  shouldTransformClass?: (node: ts.ClassDeclaration) => boolean,\n): ts.TransformerFactory<ts.SourceFile> {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 45 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 345 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 43,
            "lineCount": 281,
            "parameterCount": 1,
            "snippet": "(context: ts.TransformationContext) => {\n    const referencedParameterTypes = loadIsReferencedAliasDeclarationPatch(context);\n    /**\n     * Converts an EntityName (from a type annotation) to an expression (accessing a value).\n     *\n     * For a given qualified name, this walks depth first to find the leftmost identifier,\n     * and then converts the path into a property access that can be used as expression.\n     */\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 43 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 281 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "typeReferenceToExpression",
            "complexity": 19,
            "lineCount": 44,
            "parameterCount": 2,
            "snippet": "function typeReferenceToExpression(\n  entityNameToExpression: (n: ts.EntityName) => ts.Expression | undefined,\n  node: ts.TypeNode,\n): ts.Expression | undefined {\n  let kind = node.kind;\n  if (ts.isLiteralTypeNode(node)) {\n    kind = node.literal.kind;\n  }\n  // ... more code ...",
            "issues": []
          },
          {
            "name": "transformClassDeclaration",
            "complexity": 14,
            "lineCount": 74,
            "parameterCount": 1,
            "snippet": "function transformClassDeclaration(classDecl: ts.ClassDeclaration): ts.ClassDeclaration {\n      const newMembers: ts.ClassElement[] = [];\n      const decoratedProperties = new Map<string, ts.Decorator[]>();\n      let classParameters: ParameterDecorationInfo[] | null = null;\n      for (const member of classDecl.members) {\n        switch (member.kind) {\n          case ts.SyntaxKind.PropertyDeclaration:\n          case ts.SyntaxKind.GetAccessor:\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "createCtorParametersClassProperty",
            "complexity": 9,
            "lineCount": 75,
            "parameterCount": 4,
            "snippet": "function createCtorParametersClassProperty(\n  diagnostics: ts.Diagnostic[],\n  entityNameToExpression: (n: ts.EntityName) => ts.Expression | undefined,\n  ctorParameters: ParameterDecorationInfo[],\n  isClosureCompilerEnabled: boolean,\n): ts.PropertyDeclaration {\n  const params: ts.Expression[] = [];\n  for (const ctorParam of ctorParameters) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 75 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/import_manager/import_manager.ts",
        "criticalFunctions": [
          {
            "name": "finalize",
            "complexity": 14,
            "lineCount": 155,
            "parameterCount": 0,
            "snippet": "finalize(): {\n    affectedFiles: Set<string>;\n    updatedImports: Map<ts.NamedImports, ts.NamedImports>;\n    newImports: Map<string, ts.ImportDeclaration[]>;\n    reusedOriginalAliasDeclarations: Set<AliasImportDeclaration>;\n    deletedImports: Set<ts.ImportDeclaration>;\n  } {\n    const affectedFiles = new Set<string>();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 155 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "_generateNewImport",
            "complexity": 12,
            "lineCount": 92,
            "parameterCount": 1,
            "snippet": "private _generateNewImport(\n    request: ImportRequest<ts.SourceFile>,\n  ): ts.Identifier | [ts.Identifier, ts.Identifier] {\n    const {requestedFile: sourceFile} = request;\n    const disableOriginalSourceFileReuse = this.config.disableOriginalSourceFileReuse;\n    const forceGenerateNamespacesForNewImports = this.config.forceGenerateNamespacesForNewImports;\n    if (!disableOriginalSourceFileReuse) {\n      const reuseResult = attemptToReuseExistingSourceFileImports(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 92 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 2,
            "lineCount": 53,
            "parameterCount": 2,
            "snippet": "({namedImports, namespaceImports, sideEffectImports}, sourceFile) => {\n      const useSingleQuotes = this.config.shouldUseSingleQuotes(sourceFile);\n      const fileName = sourceFile.fileName;\n      sideEffectImports.forEach((moduleName) => {\n        addNewImport(\n          fileName,\n          ts.factory.createImportDeclaration(\n            undefined,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 53 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/import_manager/import_typescript_transform.ts",
        "criticalFunctions": [
          {
            "name": "createTsTransformForImportManager",
            "complexity": 16,
            "lineCount": 119,
            "parameterCount": 2,
            "snippet": "export function createTsTransformForImportManager(\n  manager: ImportManager,\n  extraStatementsForFiles?: Map<string, ts.Statement[]>,\n): ts.TransformerFactory<ts.SourceFile> {\n  return (ctx) => {\n    const {\n      affectedFiles,\n      newImports,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 119 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "<anonymous>",
            "complexity": 16,
            "lineCount": 114,
            "parameterCount": 1,
            "snippet": "(ctx) => {\n    const {\n      affectedFiles,\n      newImports,\n      updatedImports,\n      reusedOriginalAliasDeclarations,\n      deletedImports,\n    } = manager.finalize();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 114 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/translator/src/import_manager/reuse_source_file_imports.ts",
        "criticalFunctions": [
          {
            "name": "attemptToReuseExistingSourceFileImports",
            "complexity": 21,
            "lineCount": 105,
            "parameterCount": 3,
            "snippet": "export function attemptToReuseExistingSourceFileImports(\n  tracker: ReuseExistingSourceFileImportsTracker,\n  sourceFile: ts.SourceFile,\n  request: ImportRequest<ts.SourceFile>,\n): ts.Identifier | [ts.Identifier, ts.Identifier] | null {\n  let candidateImportToBeUpdated: ts.ImportDeclaration | null = null;\n  for (let i = sourceFile.statements.length - 1; i >= 0; i--) {\n    const statement = sourceFile.statements[i];\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 105 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/api/extended_template_checker.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/api/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/template_semantics/api/api.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/template_semantics/src/template_semantics_checker.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/validation/src/rules/initializer_api_usage_rule.ts",
        "criticalFunctions": [
          {
            "name": "checkNode",
            "complexity": 19,
            "lineCount": 67,
            "parameterCount": 1,
            "snippet": "checkNode(node: ts.Node): ts.Diagnostic | null {\n    if (!ts.isCallExpression(node)) {\n      return null;\n    }\n    while (\n      node.parent &&\n      (ts.isParenthesizedExpression(node.parent) || ts.isAsExpression(node.parent))\n    ) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/validation/src/rules/unused_standalone_imports_rule.ts",
        "criticalFunctions": [
          {
            "name": "checkNode",
            "complexity": 15,
            "lineCount": 66,
            "parameterCount": 1,
            "snippet": "checkNode(node: ts.Node): ts.Diagnostic | ts.Diagnostic[] | null {\n    if (!ts.isClassDeclaration(node)) {\n      return null;\n    }\n    const metadata = this.templateTypeChecker.getDirectiveMetadata(node);\n    if (\n      !metadata ||\n      !metadata.isStandalone ||\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/ir/src/expression.ts",
        "criticalFunctions": [
          {
            "name": "transformExpressionsInOp",
            "complexity": 70,
            "lineCount": 152,
            "parameterCount": 3,
            "snippet": "export function transformExpressionsInOp(\n  op: CreateOp | UpdateOp,\n  transform: ExpressionTransform,\n  flags: VisitorContextFlag,\n): void {\n  switch (op.kind) {\n    case OpKind.StyleProp:\n    case OpKind.StyleMap:\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 70 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 152 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "transformExpressionsInExpression",
            "complexity": 31,
            "lineCount": 87,
            "parameterCount": 3,
            "snippet": "export function transformExpressionsInExpression(\n  expr: o.Expression,\n  transform: ExpressionTransform,\n  flags: VisitorContextFlag,\n): o.Expression {\n  if (expr instanceof ExpressionBase) {\n    expr.transformInternalExpressions(transform, flags);\n  } else if (expr instanceof o.BinaryOperatorExpr) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 31 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 87 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/ir/src/operations.ts",
        "criticalFunctions": [
          {
            "name": "replaceWithMany",
            "complexity": 6,
            "lineCount": 54,
            "parameterCount": 2,
            "snippet": "static replaceWithMany<OpT extends Op<OpT>>(oldOp: OpT, newOps: OpT[]): void {\n    if (newOps.length === 0) {\n      OpList.remove(oldOp);\n      return;\n    }\n    OpList.assertIsNotEnd(oldOp);\n    OpList.assertIsOwned(oldOp);\n    const listId = oldOp.debugListId;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/assign_i18n_slot_dependencies.ts",
        "criticalFunctions": [
          {
            "name": "assignI18nSlotDependencies",
            "complexity": 16,
            "lineCount": 59,
            "parameterCount": 1,
            "snippet": "export function assignI18nSlotDependencies(job: CompilationJob) {\n  for (const unit of job.units) {\n    let updateOp = unit.update.head;\n    let i18nExpressionsInProgress: ir.I18nExpressionOp[] = [];\n    let state: BlockState | null = null;\n    for (const createOp of unit.create) {\n      if (createOp.kind === ir.OpKind.I18nStart) {\n        state = {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/attribute_extraction.ts",
        "criticalFunctions": [
          {
            "name": "extractAttributes",
            "complexity": 20,
            "lineCount": 130,
            "parameterCount": 1,
            "snippet": "export function extractAttributes(job: CompilationJob): void {\n  for (const unit of job.units) {\n    const elements = createOpXrefMap(unit);\n    for (const op of unit.ops()) {\n      switch (op.kind) {\n        case ir.OpKind.Attribute:\n          extractAttributeOp(unit, op, elements);\n          break;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 130 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/binding_specialization.ts",
        "criticalFunctions": [
          {
            "name": "specializeBindings",
            "complexity": 17,
            "lineCount": 107,
            "parameterCount": 1,
            "snippet": "export function specializeBindings(job: CompilationJob): void {\n  const elements = new Map<ir.XrefId, ir.ElementOrContainerOps>();\n  for (const unit of job.units) {\n    for (const op of unit.create) {\n      if (!ir.isElementOrContainerOp(op)) {\n        continue;\n      }\n      elements.set(op.xref, op);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 107 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/const_collection.ts",
        "criticalFunctions": [
          {
            "name": "collectElementConsts",
            "complexity": 18,
            "lineCount": 57,
            "parameterCount": 1,
            "snippet": "export function collectElementConsts(job: CompilationJob): void {\n  const allElementAttributes = new Map<ir.XrefId, ElementAttributes>();\n  for (const unit of job.units) {\n    for (const op of unit.create) {\n      if (op.kind === ir.OpKind.ExtractedAttribute) {\n        const attributes =\n          allElementAttributes.get(op.target) || new ElementAttributes(job.compatibility);\n        allElementAttributes.set(op.target, attributes);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "add",
            "complexity": 16,
            "lineCount": 57,
            "parameterCount": 5,
            "snippet": "add(\n    kind: ir.BindingKind,\n    name: string,\n    value: o.Expression | null,\n    namespace: string | null,\n    trustedValueFn: o.Expression | null,\n  ): void {\n    const allowDuplicates =\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 57 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/create_i18n_contexts.ts",
        "criticalFunctions": [
          {
            "name": "createI18nContexts",
            "complexity": 25,
            "lineCount": 106,
            "parameterCount": 1,
            "snippet": "export function createI18nContexts(job: CompilationJob) {\n  const attrContextByMessage = new Map<i18n.Message, ir.XrefId>();\n  for (const unit of job.units) {\n    for (const op of unit.ops()) {\n      switch (op.kind) {\n        case ir.OpKind.Binding:\n        case ir.OpKind.Property:\n        case ir.OpKind.Attribute:\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 106 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/defer_resolve_targets.ts",
        "criticalFunctions": [
          {
            "name": "resolveDeferTargetNames",
            "complexity": 32,
            "lineCount": 118,
            "parameterCount": 1,
            "snippet": "export function resolveDeferTargetNames(job: ComponentCompilationJob): void {\n  const scopes = new Map<ir.XrefId, Scope>();\n  function getScopeForView(view: ViewCompilationUnit): Scope {\n    if (scopes.has(view.xref)) {\n      return scopes.get(view.xref)!;\n    }\n    const scope = new Scope();\n    for (const op of view.create) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 118 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "resolveTrigger",
            "complexity": 20,
            "lineCount": 63,
            "parameterCount": 3,
            "snippet": "function resolveTrigger(\n    deferOwnerView: ViewCompilationUnit,\n    op: ir.DeferOnOp,\n    placeholderView: ir.XrefId | null,\n  ): void {\n    switch (op.trigger.kind) {\n      case ir.DeferTriggerKind.Idle:\n      case ir.DeferTriggerKind.Never:\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 63 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/expand_safe_reads.ts",
        "criticalFunctions": [
          {
            "name": "needsTemporaryInSafeAccess",
            "complexity": 17,
            "lineCount": 29,
            "parameterCount": 1,
            "snippet": "function needsTemporaryInSafeAccess(e: o.Expression): boolean {\n  if (e instanceof o.UnaryOperatorExpr) {\n    return needsTemporaryInSafeAccess(e.expr);\n  } else if (e instanceof o.BinaryOperatorExpr) {\n    return needsTemporaryInSafeAccess(e.lhs) || needsTemporaryInSafeAccess(e.rhs);\n  } else if (e instanceof o.ConditionalExpr) {\n    if (e.falseCase && needsTemporaryInSafeAccess(e.falseCase)) return true;\n    return needsTemporaryInSafeAccess(e.condition) || needsTemporaryInSafeAccess(e.trueCase);\n  // ... more code ...",
            "issues": [
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/extract_i18n_messages.ts",
        "criticalFunctions": [
          {
            "name": "extractI18nMessages",
            "complexity": 15,
            "lineCount": 69,
            "parameterCount": 1,
            "snippet": "export function extractI18nMessages(job: CompilationJob): void {\n  const i18nMessagesByContext = new Map<ir.XrefId, ir.I18nMessageOp>();\n  const i18nBlocks = new Map<ir.XrefId, ir.I18nStartOp>();\n  const i18nContexts = new Map<ir.XrefId, ir.I18nContextOp>();\n  for (const unit of job.units) {\n    for (const op of unit.create) {\n      switch (op.kind) {\n        case ir.OpKind.I18nContext:\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 69 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "formatValue",
            "complexity": 15,
            "lineCount": 69,
            "parameterCount": 1,
            "snippet": "function formatValue(value: ir.I18nParamValue): string {\n  if (\n    value.flags & ir.I18nParamValueFlags.ElementTag &&\n    value.flags & ir.I18nParamValueFlags.TemplateTag\n  ) {\n    if (typeof value.value !== 'object') {\n      throw Error('AssertionError: Expected i18n param value to have an element and template slot');\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 69 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/generate_variables.ts",
        "criticalFunctions": [
          {
            "name": "generateVariablesInScopeForView",
            "complexity": 10,
            "lineCount": 80,
            "parameterCount": 3,
            "snippet": "function generateVariablesInScopeForView(\n  view: ViewCompilationUnit,\n  scope: Scope,\n  isListener: boolean,\n): ir.VariableOp<ir.UpdateOp>[] {\n  const newOps: ir.VariableOp<ir.UpdateOp>[] = [];\n  if (scope.view !== view.xref) {\n    newOps.push(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 80 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "getScopeForView",
            "complexity": 8,
            "lineCount": 66,
            "parameterCount": 2,
            "snippet": "function getScopeForView(view: ViewCompilationUnit, parent: Scope | null): Scope {\n  const scope: Scope = {\n    view: view.xref,\n    viewContextVariable: {\n      kind: ir.SemanticVariableKind.Context,\n      name: null,\n      view: view.xref,\n    },\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 66 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/i18n_const_collection.ts",
        "criticalFunctions": [
          {
            "name": "collectI18nConsts",
            "complexity": 26,
            "lineCount": 142,
            "parameterCount": 1,
            "snippet": "export function collectI18nConsts(job: ComponentCompilationJob): void {\n  const fileBasedI18nSuffix =\n    job.relativeContextFilePath.replace(/[^A-Za-z0-9]/g, '_').toUpperCase() + '_';\n  const extractedAttributesByI18nContext = new Map<ir.XrefId, ir.ExtractedAttributeOp[]>();\n  const i18nAttributesByElement = new Map<ir.XrefId, ir.I18nAttributesOp>();\n  const i18nExpressionsByElement = new Map<ir.XrefId, ir.I18nExpressionOp[]>();\n  const messages = new Map<ir.XrefId, ir.I18nMessageOp>();\n  for (const unit of job.units) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 142 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "collectMessage",
            "complexity": 5,
            "lineCount": 74,
            "parameterCount": 4,
            "snippet": "function collectMessage(\n  job: ComponentCompilationJob,\n  fileBasedI18nSuffix: string,\n  messages: Map<ir.XrefId, ir.I18nMessageOp>,\n  messageOp: ir.I18nMessageOp,\n): {mainVar: o.ReadVarExpr; statements: o.Statement[]} {\n  const statements: o.Statement[] = [];\n  const subMessagePlaceholders = new Map<string, o.Expression[]>();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/i18n_text_extraction.ts",
        "criticalFunctions": [
          {
            "name": "convertI18nText",
            "complexity": 19,
            "lineCount": 102,
            "parameterCount": 1,
            "snippet": "export function convertI18nText(job: CompilationJob): void {\n  for (const unit of job.units) {\n    let currentI18n: ir.I18nStartOp | null = null;\n    let currentIcu: ir.IcuStartOp | null = null;\n    const textNodeI18nBlocks = new Map<ir.XrefId, ir.I18nStartOp>();\n    const textNodeIcus = new Map<ir.XrefId, ir.IcuStartOp | null>();\n    const icuPlaceholderByText = new Map<ir.XrefId, ir.IcuPlaceholderOp>();\n    for (const op of unit.create) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 102 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/namespace.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/naming.ts",
        "criticalFunctions": [
          {
            "name": "addNamesToView",
            "complexity": 36,
            "lineCount": 144,
            "parameterCount": 4,
            "snippet": "function addNamesToView(\n  unit: CompilationUnit,\n  baseName: string,\n  state: {index: number},\n  compatibility: boolean,\n): void {\n  if (unit.fnName === null) {\n    unit.fnName = unit.job.pool.uniqueName(\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 36 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 144 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/next_context_merging.ts",
        "criticalFunctions": [
          {
            "name": "mergeNextContextsInOps",
            "complexity": 14,
            "lineCount": 54,
            "parameterCount": 1,
            "snippet": "function mergeNextContextsInOps(ops: ir.OpList<ir.UpdateOp>): void {\n  for (const op of ops) {\n    if (\n      op.kind !== ir.OpKind.Statement ||\n      !(op.statement instanceof o.ExpressionStatement) ||\n      !(op.statement.expr instanceof ir.NextContextExpr)\n    ) {\n      continue;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/nonbindable.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/ordering.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/parse_extracted_styles.ts",
        "criticalFunctions": [
          {
            "name": "parse",
            "complexity": 23,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "export function parse(value: string): string[] {\n  const styles: string[] = [];\n  let i = 0;\n  let parenDepth = 0;\n  let quote: Char = Char.QuoteNone;\n  let valueStart = 0;\n  let propStart = 0;\n  let currentProp: string | null = null;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 23 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "parseExtractedStyles",
            "complexity": 16,
            "lineCount": 74,
            "parameterCount": 1,
            "snippet": "export function parseExtractedStyles(job: CompilationJob) {\n  const elements = new Map<ir.XrefId, ir.CreateOp>();\n  for (const unit of job.units) {\n    for (const op of unit.create) {\n      if (ir.isElementOrContainerOp(op)) {\n        elements.set(op.xref, op);\n      }\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation",
            "auth-check"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/phase_remove_content_selectors.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/reify.ts",
        "criticalFunctions": [
          {
            "name": "reifyCreateOperations",
            "complexity": 68,
            "lineCount": 359,
            "parameterCount": 2,
            "snippet": "function reifyCreateOperations(unit: CompilationUnit, ops: ir.OpList<ir.CreateOp>): void {\n  for (const op of ops) {\n    ir.transformExpressionsInOp(op, reifyIrExpression, ir.VisitorContextFlag.None);\n    switch (op.kind) {\n      case ir.OpKind.Text:\n        ir.OpList.replace(op, ng.text(op.handle.slot!, op.initialValue, op.sourceSpan));\n        break;\n      case ir.OpKind.ElementStart:\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 68 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 359 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "reifyUpdateOperations",
            "complexity": 29,
            "lineCount": 146,
            "parameterCount": 2,
            "snippet": "function reifyUpdateOperations(_unit: CompilationUnit, ops: ir.OpList<ir.UpdateOp>): void {\n  for (const op of ops) {\n    ir.transformExpressionsInOp(op, reifyIrExpression, ir.VisitorContextFlag.None);\n    switch (op.kind) {\n      case ir.OpKind.Advance:\n        ir.OpList.replace(op, ng.advance(op.delta, op.sourceSpan));\n        break;\n      case ir.OpKind.Property:\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 29 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 146 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "reifyIrExpression",
            "complexity": 25,
            "lineCount": 65,
            "parameterCount": 1,
            "snippet": "function reifyIrExpression(expr: o.Expression): o.Expression {\n  if (!ir.isIrExpression(expr)) {\n    return expr;\n  }\n  switch (expr.kind) {\n    case ir.ExpressionKind.NextContext:\n      return ng.nextContext(expr.steps);\n    case ir.ExpressionKind.Reference:\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 65 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/remove_empty_bindings.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/remove_i18n_contexts.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/resolve_contexts.ts",
        "criticalFunctions": [
          {
            "name": "processLexicalScope",
            "complexity": 12,
            "lineCount": 56,
            "parameterCount": 2,
            "snippet": "function processLexicalScope(\n  view: CompilationUnit,\n  ops: ir.OpList<ir.CreateOp | ir.UpdateOp>,\n): void {\n  const scope = new Map<ir.XrefId, o.Expression>();\n  scope.set(view.xref, o.variable('ctx'));\n  for (const op of ops) {\n    switch (op.kind) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 56 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/resolve_i18n_element_placeholders.ts",
        "criticalFunctions": [
          {
            "name": "resolvePlaceholdersForView",
            "complexity": 28,
            "lineCount": 207,
            "parameterCount": 5,
            "snippet": "function resolvePlaceholdersForView(\n  job: ComponentCompilationJob,\n  unit: ViewCompilationUnit,\n  i18nContexts: Map<ir.XrefId, ir.I18nContextOp>,\n  elements: Map<ir.XrefId, ir.ElementStartOp>,\n  pendingStructuralDirective?: ir.TemplateOp,\n) {\n  let currentOps: {i18nBlock: ir.I18nStartOp; i18nContext: ir.I18nContextOp} | null = null;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 28 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 207 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "recordTemplateStart",
            "complexity": 3,
            "lineCount": 38,
            "parameterCount": 7,
            "snippet": "function recordTemplateStart(\n  job: ComponentCompilationJob,\n  view: ViewCompilationUnit,\n  slot: number,\n  i18nPlaceholder: i18n.TagPlaceholder | i18n.BlockPlaceholder,\n  i18nContext: ir.I18nContextOp,\n  i18nBlock: ir.I18nStartOp,\n  structuralDirective?: ir.TemplateOp,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "recordTemplateClose",
            "complexity": 3,
            "lineCount": 37,
            "parameterCount": 7,
            "snippet": "function recordTemplateClose(\n  job: ComponentCompilationJob,\n  view: ViewCompilationUnit,\n  slot: number,\n  i18nPlaceholder: i18n.TagPlaceholder | i18n.BlockPlaceholder,\n  i18nContext: ir.I18nContextOp,\n  i18nBlock: ir.I18nStartOp,\n  structuralDirective?: ir.TemplateOp,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/resolve_i18n_expression_placeholders.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/resolve_names.ts",
        "criticalFunctions": [
          {
            "name": "processLexicalScope",
            "complexity": 26,
            "lineCount": 115,
            "parameterCount": 3,
            "snippet": "function processLexicalScope(\n  unit: CompilationUnit,\n  ops: ir.OpList<ir.CreateOp> | ir.OpList<ir.UpdateOp>,\n  savedView: SavedView | null,\n): void {\n  const scope = new Map<string, ir.XrefId>();\n  const localDefinitions = new Map<string, ir.XrefId>();\n  for (const op of ops) {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 26 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 115 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/resolve_sanitizers.ts",
        "criticalFunctions": [
          {
            "name": "resolveSanitizers",
            "complexity": 22,
            "lineCount": 70,
            "parameterCount": 1,
            "snippet": "export function resolveSanitizers(job: CompilationJob): void {\n  for (const unit of job.units) {\n    const elements = createOpXrefMap(unit);\n    if (job.kind !== CompilationJobKind.Host) {\n      for (const op of unit.create) {\n        if (op.kind === ir.OpKind.ExtractedAttribute) {\n          const trustedValueFn =\n            trustedValueFns.get(getOnlySecurityContext(op.securityContext)) ?? null;\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 70 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/temporary_variables.ts",
        "criticalFunctions": [
          {
            "name": "generateTemporaries",
            "complexity": 13,
            "lineCount": 64,
            "parameterCount": 1,
            "snippet": "function generateTemporaries(\n  ops: ir.OpList<ir.CreateOp | ir.UpdateOp>,\n): Array<ir.StatementOp<ir.CreateOp | ir.UpdateOp>> {\n  let opCount = 0;\n  let generatedStatements: Array<ir.StatementOp<ir.UpdateOp>> = [];\n  for (const op of ops) {\n    const finalReads = new Map<ir.XrefId, ir.ReadTemporaryExpr>();\n    ir.visitExpressionsInOp(op, (expr, flag) => {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 64 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/track_fn_optimization.ts",
        "criticalFunctions": [
          {
            "name": "optimizeTrackFns",
            "complexity": 13,
            "lineCount": 62,
            "parameterCount": 1,
            "snippet": "export function optimizeTrackFns(job: CompilationJob): void {\n  for (const unit of job.units) {\n    for (const op of unit.create) {\n      if (op.kind !== ir.OpKind.RepeaterCreate) {\n        continue;\n      }\n      if (op.track instanceof o.ReadVarExpr && op.track.name === '$index') {\n        op.trackByFn = o.importExpr(Identifiers.repeaterTrackByIndex);\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 62 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/var_counting.ts",
        "criticalFunctions": [
          {
            "name": "countVariables",
            "complexity": 21,
            "lineCount": 83,
            "parameterCount": 1,
            "snippet": "export function countVariables(job: CompilationJob): void {\n  for (const unit of job.units) {\n    let varCount = 0;\n    for (const op of unit.ops()) {\n      if (ir.hasConsumesVarsTrait(op)) {\n        varCount += varsUsedByOp(op);\n      }\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 21 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 83 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "varsUsedByOp",
            "complexity": 19,
            "lineCount": 45,
            "parameterCount": 1,
            "snippet": "function varsUsedByOp(op: (ir.CreateOp | ir.UpdateOp) & ir.ConsumesVarsTrait): number {\n  let slots: number;\n  switch (op.kind) {\n    case ir.OpKind.Property:\n    case ir.OpKind.HostProperty:\n    case ir.OpKind.Attribute:\n      slots = 1;\n      if (op.expression instanceof ir.Interpolation && !isSingletonInterpolation(op.expression)) {\n  // ... more code ...",
            "issues": []
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/src/phases/variable_optimization.ts",
        "criticalFunctions": [
          {
            "name": "optimizeVariablesInOpList",
            "complexity": 25,
            "lineCount": 172,
            "parameterCount": 2,
            "snippet": "function optimizeVariablesInOpList(\n  ops: ir.OpList<ir.CreateOp | ir.UpdateOp>,\n  compatibility: ir.CompatibilityMode,\n): void {\n  const varDecls = new Map<ir.XrefId, ir.VariableOp<ir.CreateOp | ir.UpdateOp>>();\n  const varUsages = new Map<ir.XrefId, number>();\n  const varRemoteUsages = new Set<ir.XrefId>();\n  const opMap = new Map<ir.CreateOp | ir.UpdateOp, OpInfo>();\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 25 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 172 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "tryInlineVariableInitializer",
            "complexity": 9,
            "lineCount": 54,
            "parameterCount": 4,
            "snippet": "function tryInlineVariableInitializer(\n  id: ir.XrefId,\n  initializer: o.Expression,\n  target: ir.CreateOp | ir.UpdateOp,\n  declFences: Fence,\n): boolean {\n  let inlined = false;\n  let inliningAllowed = true;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 54 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/convert-input/convert_to_signal.ts",
        "criticalFunctions": [
          {
            "name": "convertToSignalInput",
            "complexity": 19,
            "lineCount": 149,
            "parameterCount": 6,
            "snippet": "export function convertToSignalInput(\n  node: ts.PropertyDeclaration,\n  {\n    resolvedMetadata: metadata,\n    resolvedType,\n    preferShorthandIfPossible,\n    originalInputDecorator,\n    initialValue,\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 149 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/convert-input/prepare_and_check.ts",
        "criticalFunctions": [
          {
            "name": "prepareAndCheckForConversion",
            "complexity": 32,
            "lineCount": 136,
            "parameterCount": 4,
            "snippet": "export function prepareAndCheckForConversion(\n  node: InputNode,\n  metadata: ExtractedInput,\n  checker: ts.TypeChecker,\n  options: NgCompilerOptions,\n): FieldIncompatibility | ConvertInputPreparation {\n  if (ts.isAccessor(node)) {\n    return {\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 32 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 136 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/batch/merge_unit_data.ts",
        "criticalFunctions": [
          {
            "name": "convertToGlobalMeta",
            "complexity": 13,
            "lineCount": 77,
            "parameterCount": 1,
            "snippet": "export function convertToGlobalMeta(combinedData: CompilationUnitData): CompilationUnitData {\n  const globalMeta: CompilationUnitData = {\n    knownInputs: {},\n  };\n  const idToGraphNode = new Map<string, GraphNode<InputData>>();\n  const inheritanceGraph: GraphNode<InputData>[] = [];\n  const isNodeIncompatible = (node: InputData) =>\n    node.info.memberIncompatibility !== null || node.info.owningClassIncompatibility !== null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 77 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "combineCompilationUnitData",
            "complexity": 12,
            "lineCount": 52,
            "parameterCount": 2,
            "snippet": "export function combineCompilationUnitData(\n  unitA: CompilationUnitData,\n  unitB: CompilationUnitData,\n): CompilationUnitData {\n  const result: CompilationUnitData = {\n    knownInputs: {},\n  };\n  for (const file of [unitA, unitB]) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 52 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/flow_analysis/flow_node_traversal.ts",
        "criticalFunctions": [
          {
            "name": "traverseFlowForInterestingNodes",
            "complexity": 17,
            "lineCount": 89,
            "parameterCount": 1,
            "snippet": "export function traverseFlowForInterestingNodes(flow: FlowNode): ts.Node[] | null {\n  let flowDepth = 0;\n  let interestingNodes: ts.Node[] = [];\n  const queue = new Set<FlowNode>([flow]);\n  for (const flow of queue) {\n    if (++flowDepth === 2000) {\n      return interestingNodes;\n    }\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 89 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/flow_analysis/index.ts",
        "criticalFunctions": [
          {
            "name": "connectSharedReferences",
            "complexity": 13,
            "lineCount": 74,
            "parameterCount": 3,
            "snippet": "function connectSharedReferences(\n  result: ControlFlowAnalysisNode[],\n  flowPartners: number[],\n  refId: number,\n) {\n  const refFlowContainer = result[refId].flowContainer;\n  let earliestPartner: ts.Node | null = null;\n  let earliestPartnerId: number | null = null;\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 74 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/input_detection/input_decorator.ts",
        "criticalFunctions": [
          {
            "name": "extractSourceCodeInput",
            "complexity": 15,
            "lineCount": 59,
            "parameterCount": 4,
            "snippet": "function extractSourceCodeInput(\n  node: ts.Node,\n  host: MigrationHost,\n  reflector: ReflectionHost,\n  evaluator: PartialEvaluator,\n): ExtractedInput | null {\n  if (\n    !isInputContainerNode(node) ||\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/transform/jit/src/initializer_api_transforms/output_function.ts",
        "criticalFunctions": [
          {
            "name": "initializerApiOutputTransform",
            "complexity": 3,
            "lineCount": 47,
            "parameterCount": 8,
            "snippet": "(\n  member,\n  sourceFile,\n  host,\n  factory,\n  importTracker,\n  importManager,\n  classDecorator,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/checks/interpolated_signal_not_invoked/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/2_find_source_file_references.ts",
        "criticalFunctions": [
          {
            "name": "pass2_IdentifySourceFileReferences",
            "complexity": 1,
            "lineCount": 26,
            "parameterCount": 10,
            "snippet": "export function pass2_IdentifySourceFileReferences(\n  programInfo: ProgramInfo,\n  checker: ts.TypeChecker,\n  reflector: ReflectionHost,\n  resourceLoader: ResourceLoader | null,\n  evaluator: PartialEvaluator,\n  templateTypeChecker: TemplateTypeChecker | null,\n  groupedTsAstVisitor: GroupedTsAstVisitor,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "10 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/4_check_inheritance.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/7_migrate_template_references.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/8_migrate_host_bindings.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/9_migrate_ts_type_references.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/pattern_advisors/debug_element_component_instance.ts",
        "criticalFunctions": [
          {
            "name": "detect",
            "complexity": 16,
            "lineCount": 59,
            "parameterCount": 1,
            "snippet": "detect(node: ts.Node): ts.Type | null {\n    if (this.cache.has(node)) {\n      return this.cache.get(node)!;\n    }\n    if (!ts.isPropertyAccessExpression(node)) {\n      return null;\n    }\n    if (!ts.isIdentifier(node.name) || node.name.text !== 'componentInstance') {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy",
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/checks/nullish_coalescing_not_nullable/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/checks/optional_chain_not_nullable/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler-cli/src/ngtsc/typecheck/extended/checks/uninvoked_function_in_event_binding/index.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/ir/src/ops/create.ts",
        "criticalFunctions": [
          {
            "name": "createRepeaterCreateOp",
            "complexity": 2,
            "lineCount": 42,
            "parameterCount": 10,
            "snippet": "export function createRepeaterCreateOp(\n  primaryView: XrefId,\n  emptyView: XrefId | null,\n  tag: string | null,\n  track: o.Expression,\n  varNames: RepeaterVarNames,\n  emptyTag: string | null,\n  i18nPlaceholder: i18n.BlockPlaceholder | undefined,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "10 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "createTemplateOp",
            "complexity": 1,
            "lineCount": 30,
            "parameterCount": 8,
            "snippet": "export function createTemplateOp(\n  xref: XrefId,\n  templateKind: TemplateKind,\n  tag: string | null,\n  functionNameSuffix: string,\n  namespace: Namespace,\n  i18nPlaceholder: i18n.TagPlaceholder | i18n.BlockPlaceholder | undefined,\n  startSourceSpan: ParseSourceSpan,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "createListenerOp",
            "complexity": 1,
            "lineCount": 30,
            "parameterCount": 9,
            "snippet": "export function createListenerOp(\n  target: XrefId,\n  targetSlot: SlotHandle,\n  name: string,\n  tag: string | null,\n  handlerOps: Array<UpdateOp>,\n  animationPhase: string | null,\n  eventTarget: string | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "9 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "createExtractedAttributeOp",
            "complexity": 1,
            "lineCount": 24,
            "parameterCount": 8,
            "snippet": "export function createExtractedAttributeOp(\n  target: XrefId,\n  bindingKind: BindingKind,\n  namespace: string | null,\n  name: string,\n  expression: o.Expression | null,\n  i18nContext: XrefId | null,\n  i18nMessage: i18n.Message | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "createI18nMessageOp",
            "complexity": 1,
            "lineCount": 24,
            "parameterCount": 8,
            "snippet": "export function createI18nMessageOp(\n  xref: XrefId,\n  i18nContext: XrefId,\n  i18nBlock: XrefId | null,\n  message: i18n.Message,\n  messagePlaceholder: string | null,\n  params: Map<string, o.Expression>,\n  postprocessingParams: Map<string, o.Expression>,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "8 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/compiler/src/template/pipeline/ir/src/ops/update.ts",
        "criticalFunctions": [
          {
            "name": "createBindingOp",
            "complexity": 1,
            "lineCount": 30,
            "parameterCount": 11,
            "snippet": "export function createBindingOp(\n  target: XrefId,\n  kind: BindingKind,\n  name: string,\n  expression: o.Expression | Interpolation,\n  unit: string | null,\n  securityContext: SecurityContext | SecurityContext[],\n  isTextAttribute: boolean,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "11 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "createPropertyOp",
            "complexity": 1,
            "lineCount": 30,
            "parameterCount": 10,
            "snippet": "export function createPropertyOp(\n  target: XrefId,\n  name: string,\n  expression: o.Expression | Interpolation,\n  isAnimationTrigger: boolean,\n  securityContext: SecurityContext | SecurityContext[],\n  isStructuralTemplateAttribute: boolean,\n  templateKind: TemplateKind | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "10 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "createTwoWayPropertyOp",
            "complexity": 1,
            "lineCount": 28,
            "parameterCount": 9,
            "snippet": "export function createTwoWayPropertyOp(\n  target: XrefId,\n  name: string,\n  expression: o.Expression,\n  securityContext: SecurityContext | SecurityContext[],\n  isStructuralTemplateAttribute: boolean,\n  templateKind: TemplateKind | null,\n  i18nContext: XrefId | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "9 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "createAttributeOp",
            "complexity": 1,
            "lineCount": 31,
            "parameterCount": 10,
            "snippet": "export function createAttributeOp(\n  target: XrefId,\n  namespace: string | null,\n  name: string,\n  expression: o.Expression | Interpolation,\n  securityContext: SecurityContext | SecurityContext[],\n  isTextAttribute: boolean,\n  isStructuralTemplateAttribute: boolean,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "10 parameters, consider using object parameter"
              }
            ]
          },
          {
            "name": "createI18nExpressionOp",
            "complexity": 1,
            "lineCount": 31,
            "parameterCount": 11,
            "snippet": "export function createI18nExpressionOp(\n  context: XrefId,\n  target: XrefId,\n  i18nOwner: XrefId,\n  handle: SlotHandle,\n  expression: o.Expression,\n  icuPlaceholder: XrefId | null,\n  i18nPlaceholder: string | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "11 parameters, consider using object parameter"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "too-many-params"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/problematic_patterns/check_inheritance.ts",
        "criticalFunctions": [
          {
            "name": "checkInheritanceOfKnownFields",
            "complexity": 18,
            "lineCount": 89,
            "parameterCount": 4,
            "snippet": "export function checkInheritanceOfKnownFields<D extends ClassFieldDescriptor>(\n  inheritanceGraph: InheritanceGraph,\n  metaRegistry: MetadataReader | null,\n  fields: KnownFields<D> & InheritanceTracker<D>,\n  opts: {\n    getFieldsForClass: (node: ts.ClassDeclaration) => D[];\n    isClassWithKnownFields: (node: ts.ClassDeclaration) => boolean;\n  },\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 89 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "input-validation"
          ],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/problematic_patterns/common_incompatible_patterns.ts",
        "criticalFunctions": [
          {
            "name": "checkIncompatiblePatterns",
            "complexity": 18,
            "lineCount": 93,
            "parameterCount": 5,
            "snippet": "export function checkIncompatiblePatterns<D extends ClassFieldDescriptor>(\n  inheritanceGraph: InheritanceGraph,\n  checker: ts.TypeChecker,\n  groupedTsAstVisitor: GroupedTsAstVisitor,\n  fields: KnownFields<D> & ProblematicFieldRegistry<D>,\n  getAllClassesWithKnownFields: () => ts.ClassDeclaration[],\n) {\n  const inputClassSymbolsToClass = new Map<ts.Symbol, ts.ClassDeclaration>();\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 93 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "visitor",
            "complexity": 17,
            "lineCount": 59,
            "parameterCount": 1,
            "snippet": "(node: ts.Node) => {\n    if (ts.isNewExpression(node) && ts.isIdentifier(unwrapExpression(node.expression))) {\n      let newTarget = checker.getSymbolAtLocation(unwrapExpression(node.expression));\n      if (newTarget !== undefined && newTarget.flags & ts.SymbolFlags.Alias) {\n        newTarget = checker.getAliasedSymbol(newTarget);\n      }\n      if (newTarget && inputClassSymbolsToClass.has(newTarget)) {\n        fields.markClassIncompatible(\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 59 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/problematic_patterns/incompatibility_human.ts",
        "criticalFunctions": [
          {
            "name": "getMessageForFieldIncompatibility",
            "complexity": 17,
            "lineCount": 108,
            "parameterCount": 2,
            "snippet": "export function getMessageForFieldIncompatibility(\n  reason: FieldIncompatibilityReason,\n  fieldName: {single: string; plural: string},\n): {\n  short: string;\n  extra: string;\n} {\n  switch (reason) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 108 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "io-heavy"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_migration/migrate_host_bindings.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_migration/migrate_template_references.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_resolution/identify_host_references.ts",
        "criticalFunctions": [
          {
            "name": "identifyHostBindingReferences",
            "complexity": 22,
            "lineCount": 143,
            "parameterCount": 7,
            "snippet": "export function identifyHostBindingReferences<D extends ClassFieldDescriptor>(\n  node: ts.ClassDeclaration,\n  programInfo: ProgramInfo,\n  checker: ts.TypeChecker,\n  reflector: ReflectionHost,\n  result: ReferenceResult<D>,\n  knownFields: KnownFields<D>,\n  fieldNamesToConsiderForReferenceLookup: Set<string> | null,\n  // ... more code ...",
            "issues": [
              {
                "type": "high-complexity",
                "severity": "high",
                "description": "Complexity 22 exceeds recommended threshold of 15"
              },
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 143 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_resolution/identify_ts_references.ts",
        "criticalFunctions": [
          {
            "name": "identifyPotentialTypeScriptReference",
            "complexity": 18,
            "lineCount": 98,
            "parameterCount": 7,
            "snippet": "export function identifyPotentialTypeScriptReference<D extends ClassFieldDescriptor>(\n  node: ts.Identifier,\n  programInfo: ProgramInfo,\n  checker: ts.TypeChecker,\n  knownFields: KnownFields<D>,\n  result: ReferenceResult<D>,\n  fieldNamesToConsiderForReferenceLookup: Set<string> | null,\n  advisors: {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 98 lines, consider splitting"
              },
              {
                "type": "too-many-params",
                "severity": "medium",
                "description": "7 parameters, consider using object parameter"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function",
            "high-complexity",
            "too-many-params",
            "deep-nesting"
          ],
          "architecture": [
            "error-handling",
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [
            "auth-check"
          ],
          "testing": []
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_resolution/template_reference_visitor.ts",
        "criticalFunctions": [],
        "patterns": {
          "quality": [],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": [
            "test-file"
          ]
        }
      },
      {
        "file": "packages/core/schematics/migrations/signal-migration/src/passes/reference_migration/helpers/object_expansion_refs.ts",
        "criticalFunctions": [
          {
            "name": "migrateBindingElementInputReference",
            "complexity": 7,
            "lineCount": 67,
            "parameterCount": 4,
            "snippet": "export function migrateBindingElementInputReference(\n  tsReferencesInBindingElements: Set<IdentifierOfBindingElement>,\n  info: ProgramInfo,\n  replacements: Replacement[],\n  printer: ts.Printer,\n) {\n  const nameGenerator = new UniqueNamesGenerator(['Input', 'Signal', 'Ref']);\n  for (const reference of tsReferencesInBindingElements) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 67 lines, consider splitting"
              },
              {
                "type": "deep-nesting",
                "severity": "medium",
                "description": "Deep nesting detected, consider extracting sub-functions"
              }
            ]
          },
          {
            "name": "insertTemporaryVariableForBindingElement",
            "complexity": 7,
            "lineCount": 61,
            "parameterCount": 3,
            "snippet": "function insertTemporaryVariableForBindingElement(\n  expansionDecl: ts.VariableDeclaration | ts.ParameterDeclaration,\n  file: ProjectFile,\n  toInsert: string,\n): Replacement[] | null {\n  const sf = expansionDecl.getSourceFile();\n  const parent = expansionDecl.parent;\n  if (ts.isVariableDeclaration(expansionDecl) && ts.isVariableDeclarationList(parent)) {\n  // ... more code ...",
            "issues": [
              {
                "type": "long-function",
                "severity": "medium",
                "description": "Function has 61 lines, consider splitting"
              }
            ]
          }
        ],
        "patterns": {
          "quality": [
            "long-function"
          ],
          "architecture": [
            "type-safe"
          ],
          "performance": [
            "caching"
          ],
          "security": [],
          "testing": []
        }
      }
    ]
  },
  "durationMs": 26182
}